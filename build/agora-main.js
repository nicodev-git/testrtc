(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
        const { RtcTokenBuilder, RtcRole } = require("agora-access-token");

        exports.getAgoraToken = async (channelName, account) => {
            console.log(`getAgoraToken account:${account} channel:${channelName}`);

            // Rtc Examples
            const appID = "b798315d974c40e380ae6b8550f40e08";
            const appCertificate = "d24f4d265b5f4075b97a941023700466";
            // const channelName = "agora-playground";
            const uid = 0;
            // const account = "2882341273";
            const role = RtcRole.PUBLISHER;

            const expirationTimeInSeconds = 3600;

            const currentTimestamp = Math.floor(Date.now() / 1000);

            const privilegeExpiredTs = currentTimestamp + expirationTimeInSeconds;

            // IMPORTANT! Build token with either the uid or with the user account. Comment out the option you do not want to use below.


            // Build token with uid
            const tokenA = RtcTokenBuilder.buildTokenWithUid(
                appID,
                appCertificate,
                channelName,
                uid,
                role,
                privilegeExpiredTs
            );
            console.log("Token With Integer Number Uid: " + tokenA);
            return tokenA;


            // // Build token with user account
            // const tokenB = await RtcTokenBuilder.buildTokenWithAccount(
            //   appID,
            //   appCertificate,
            //   channelName,
            //   account,
            //   role,
            //   privilegeExpiredTs
            // );
            // console.log("Token With UserAccount: " + tokenB);
            // return tokenB;
        };

    },{"agora-access-token":2}],2:[function(require,module,exports){
        module.exports = {
            RtcTokenBuilder: require('./src/RtcTokenBuilder').RtcTokenBuilder,
            RtcRole: require('./src/RtcTokenBuilder').Role,
            RtmTokenBuilder: require('./src/RtmTokenBuilder').RtmTokenBuilder,
            RtmRole: require('./src/RtmTokenBuilder').Role
        }
    },{"./src/RtcTokenBuilder":4,"./src/RtmTokenBuilder":5}],3:[function(require,module,exports){
        (function (Buffer){
            var crypto = require('crypto');
            var crc32 = require('crc-32');
            var UINT32 = require('cuint').UINT32;
            var version = "006";
            var randomInt = Math.floor(Math.random() * 0xFFFFFFFF);
            const VERSION_LENGTH = 3;
            const APP_ID_LENGTH = 32;

            var AccessToken = function (appID, appCertificate, channelName, uid) {
                let token = this;
                this.appID = appID;
                this.appCertificate = appCertificate;
                this.channelName = channelName;
                this.messages = {};
                this.salt = randomInt;
                this.ts = Math.floor(new Date() / 1000) + (24 * 3600);
                if (uid === 0) {
                    this.uid = "";
                } else {
                    this.uid = `${uid}`;
                }

                this.build = function () {
                    var m = Message({
                        salt: token.salt
                        , ts: token.ts
                        , messages: token.messages
                    }).pack();

                    var toSign = Buffer.concat(
                        [Buffer.from(token.appID, 'utf8'),
                            Buffer.from(token.channelName, 'utf8'),
                            Buffer.from(token.uid, 'utf8'),
                            m]);

                    var signature = encodeHMac(token.appCertificate, toSign);
                    var crc_channel = UINT32(crc32.str(token.channelName)).and(UINT32(0xffffffff)).toNumber();
                    var crc_uid = UINT32(crc32.str(token.uid)).and(UINT32(0xffffffff)).toNumber();
                    var content = AccessTokenContent({
                        signature: signature,
                        crc_channel: crc_channel,
                        crc_uid: crc_uid,
                        m: m
                    }).pack();
                    return (version + token.appID + content.toString('base64'));
                }

                this.addPriviledge = function (priviledge, expireTimestamp) {
                    token.messages[priviledge] = expireTimestamp;
                };

                this.fromString = function (originToken) {
                    try {
                        originVersion = originToken.substr(0, VERSION_LENGTH);
                        if(originVersion != version) {
                            return false;
                        }
                        var originAppID = originToken.substr(VERSION_LENGTH, (VERSION_LENGTH + APP_ID_LENGTH));
                        var originContent = originToken.substr((VERSION_LENGTH + APP_ID_LENGTH));
                        var originContentDecodedBuf = Buffer.from(originContent, 'base64');

                        var content = unPackContent(originContentDecodedBuf);
                        this.signature = content.signature;
                        this.crc_channel_name = content.crc_channel_name;
                        this.crc_uid = content.crc_uid;
                        this.m = content.m;

                        var msgs = unPackMessages(this.m);
                        this.salt = msgs.salt;
                        this.ts = msgs.ts;
                        this.messages = msgs.messages;

                    } catch (err) {
                        console.log(err);
                        return false;
                    }

                    return true;
                };
            };

            module.exports.version = version;
            module.exports.AccessToken = AccessToken;
            module.exports.priviledges = {
                kJoinChannel: 1,
                kPublishAudioStream: 2,
                kPublishVideoStream: 3,
                kPublishDataStream: 4,
                kPublishAudiocdn: 5,
                kPublishVideoCdn: 6,
                kRequestPublishAudioStream: 7,
                kRequestPublishVideoStream: 8,
                kRequestPublishDataStream: 9,
                kInvitePublishAudioStream: 10,
                kInvitePublishVideoStream: 11,
                kInvitePublishDataStream: 12,
                kAdministrateChannel: 101,
                kRtmLogin: 1000
            };

            var encodeHMac = function (key, message) {
                return crypto.createHmac('sha256', key).update(message).digest();
            };

            var ByteBuf = function () {
                var that = {
                    buffer: Buffer.alloc(1024)
                    , position: 0
                };

                that.buffer.fill(0);

                that.pack = function () {
                    var out = Buffer.alloc(that.position);
                    that.buffer.copy(out, 0, 0, out.length);
                    return out;
                };

                that.putUint16 = function (v) {
                    that.buffer.writeUInt16LE(v, that.position);
                    that.position += 2;
                    return that;
                };

                that.putUint32 = function (v) {
                    that.buffer.writeUInt32LE(v, that.position);
                    that.position += 4;
                    return that;
                };

                that.putBytes = function (bytes) {
                    that.putUint16(bytes.length);
                    bytes.copy(that.buffer, that.position);
                    that.position += bytes.length;
                    return that;
                };

                that.putString = function (str) {
                    return that.putBytes(Buffer.from(str));
                };

                that.putTreeMap = function (map) {
                    if (!map) {
                        that.putUint16(0);
                        return that;
                    }

                    that.putUint16(Object.keys(map).length);
                    for (var key in map) {
                        that.putUint16(key);
                        that.putString(map[key]);
                    }

                    return that;
                };

                that.putTreeMapUInt32 = function (map) {
                    if (!map) {
                        that.putUint16(0);
                        return that;
                    }

                    that.putUint16(Object.keys(map).length);
                    for (var key in map) {
                        that.putUint16(key);
                        that.putUint32(map[key]);
                    }

                    return that;
                };

                return that;
            }


            var ReadByteBuf = function(bytes) {
                var that = {
                    buffer: bytes
                    , position: 0
                };

                that.getUint16 = function () {
                    var ret = that.buffer.readUInt16LE(that.position);
                    that.position += 2;
                    return ret;
                };

                that.getUint32 = function () {
                    var ret = that.buffer.readUInt32LE(that.position);
                    that.position += 4;
                    return ret;
                };

                that.getString = function () {
                    var len = that.getUint16();

                    var out = Buffer.alloc(len);
                    that.buffer.copy(out, 0, that.position, (that.position + len));
                    that.position += len;
                    return out;
                };

                that.getTreeMapUInt32 = function () {
                    var map = {};
                    var len = that.getUint16();
                    for( var i = 0; i < len; i++) {
                        var key = that.getUint16();
                        var value = that.getUint32();
                        map[key] = value;
                    }
                    return map;
                };

                return that;
            }
            var AccessTokenContent = function (options) {
                options.pack = function () {
                    var out = new ByteBuf();
                    return out.putString(options.signature)
                        .putUint32(options.crc_channel)
                        .putUint32(options.crc_uid)
                        .putString(options.m).pack();
                }

                return options;
            }

            var Message = function (options) {
                options.pack = function () {
                    var out = new ByteBuf();
                    var val = out
                        .putUint32(options.salt)
                        .putUint32(options.ts)
                        .putTreeMapUInt32(options.messages).pack();
                    return val;
                }

                return options;
            }

            var unPackContent = function(bytes) {
                var readbuf = new ReadByteBuf(bytes);
                return AccessTokenContent({
                    signature: readbuf.getString(),
                    crc_channel_name: readbuf.getUint32(),
                    crc_uid: readbuf.getUint32(),
                    m: readbuf.getString()
                });
            }

            var unPackMessages = function(bytes) {
                var readbuf = new ReadByteBuf(bytes);
                return Message({
                    salt: readbuf.getUint32(),
                    ts: readbuf.getUint32(),
                    messages: readbuf.getTreeMapUInt32()
                });
            }

        }).call(this,require("buffer").Buffer)
    },{"buffer":68,"crc-32":72,"crypto":78,"cuint":79}],4:[function(require,module,exports){
        const AccessToken = require('../src/AccessToken').AccessToken
        const Priviledges = require('../src/AccessToken').priviledges

        const Role = {
            // DEPRECATED. Role::ATTENDEE has the same privileges as Role.PUBLISHER.
            ATTENDEE: 0,

            // RECOMMENDED. Use this role for a voice/video call or a live broadcast, if your scenario does not require authentication for [Hosting-in](https://docs.agora.io/en/Agora%20Platform/terms?platform=All%20Platforms#hosting-in).
            PUBLISHER: 1,

            /* Only use this role if your scenario require authentication for [Hosting-in](https://docs.agora.io/en/Agora%20Platform/terms?platform=All%20Platforms#hosting-in).
     * @note In order for this role to take effect, please contact our support team to enable authentication for Hosting-in for you. Otherwise, Role.SUBSCRIBER still has the same privileges as Role.PUBLISHER.
     */
            SUBSCRIBER: 2,

            // DEPRECATED. Role.ADMIN has the same privileges as Role.PUBLISHER.
            ADMIN: 101
        }

        class RtcTokenBuilder {

            /**
             * Builds an RTC token using an Integer uid.
             * @param {*} appID  The App ID issued to you by Agora.
             * @param {*} appCertificate Certificate of the application that you registered in the Agora Dashboard.
             * @param {*} channelName The unique channel name for the AgoraRTC session in the string format. The string length must be less than 64 bytes. Supported character scopes are:
             * - The 26 lowercase English letters: a to z.
             * - The 26 uppercase English letters: A to Z.
             * - The 10 digits: 0 to 9.
             * - The space.
             * - "!", "#", "$", "%", "&", "(", ")", "+", "-", ":", ";", "<", "=", ".", ">", "?", "@", "[", "]", "^", "_", " {", "}", "|", "~", ",".
             * @param {*} uid User ID. A 32-bit unsigned integer with a value ranging from 1 to (2^32-1).
             * @param {*} role See #userRole.
             * - Role.PUBLISHER; RECOMMENDED. Use this role for a voice/video call or a live broadcast.
             * - Role.SUBSCRIBER: ONLY use this role if your live-broadcast scenario requires authentication for [Hosting-in](https://docs.agora.io/en/Agora%20Platform/terms?platform=All%20Platforms#hosting-in). In order for this role to take effect, please contact our support team to enable authentication for Hosting-in for you. Otherwise, Role_Subscriber still has the same privileges as Role_Publisher.
             * @param {*} privilegeExpiredTs  represented by the number of seconds elapsed since 1/1/1970. If, for example, you want to access the Agora Service within 10 minutes after the token is generated, set expireTimestamp as the current timestamp + 600 (seconds).
             * @return The new Token.
             */
            static buildTokenWithUid(appID, appCertificate, channelName, uid, role, privilegeExpiredTs) {
                return this.buildTokenWithAccount(appID, appCertificate, channelName, uid, role, privilegeExpiredTs)
            }

            /**
             * Builds an RTC token using an Integer uid.
             * @param {*} appID  The App ID issued to you by Agora.
             * @param {*} appCertificate Certificate of the application that you registered in the Agora Dashboard.
             * @param {*} channelName The unique channel name for the AgoraRTC session in the string format. The string length must be less than 64 bytes. Supported character scopes are:
             * - The 26 lowercase English letters: a to z.
             * - The 26 uppercase English letters: A to Z.
             * - The 10 digits: 0 to 9.
             * - The space.
             * - "!", "#", "$", "%", "&", "(", ")", "+", "-", ":", ";", "<", "=", ".", ">", "?", "@", "[", "]", "^", "_", " {", "}", "|", "~", ",".
             * @param {*} account The user account.
             * @param {*} role See #userRole.
             * - Role.PUBLISHER; RECOMMENDED. Use this role for a voice/video call or a live broadcast.
             * - Role.SUBSCRIBER: ONLY use this role if your live-broadcast scenario requires authentication for [Hosting-in](https://docs.agora.io/en/Agora%20Platform/terms?platform=All%20Platforms#hosting-in). In order for this role to take effect, please contact our support team to enable authentication for Hosting-in for you. Otherwise, Role_Subscriber still has the same privileges as Role_Publisher.
             * @param {*} privilegeExpiredTs  represented by the number of seconds elapsed since 1/1/1970. If, for example, you want to access the Agora Service within 10 minutes after the token is generated, set expireTimestamp as the current timestamp + 600 (seconds).
             * @return The new Token.
             */
            static buildTokenWithAccount(appID, appCertificate, channelName, account, role, privilegeExpiredTs) {
                this.key = new AccessToken(appID, appCertificate, channelName, account)
                this.key.addPriviledge(Priviledges.kJoinChannel, privilegeExpiredTs)
                if (role == Role.ATTENDEE ||
                    role == Role.PUBLISHER ||
                    role == Role.ADMIN) {
                    this.key.addPriviledge(Priviledges.kPublishAudioStream, privilegeExpiredTs)
                    this.key.addPriviledge(Priviledges.kPublishVideoStream, privilegeExpiredTs)
                    this.key.addPriviledge(Priviledges.kPublishDataStream, privilegeExpiredTs)
                }
                return this.key.build();
            }
        }

        module.exports.RtcTokenBuilder = RtcTokenBuilder;
        module.exports.Role = Role;

    },{"../src/AccessToken":3}],5:[function(require,module,exports){
        const AccessToken = require("../src/AccessToken").AccessToken
        const Priviledges = require('../src/AccessToken').priviledges

        const Role = {
            Rtm_User: 1
        }
        class RtmTokenBuilder {

            /**
             * @param {*} appID: The App ID issued to you by Agora. Apply for a new App ID from
             *       Agora Dashboard if it is missing from your kit. See Get an App ID.
             * @param {*} appCertificate:	Certificate of the application that you registered in
             *                 the Agora Dashboard. See Get an App Certificate.
             * @param {*} account: The user account.
             * @param {*} role : Role_Publisher = 1: A broadcaster (host) in a live-broadcast profile.
             *      Role_Subscriber = 2: (Default) A audience in a live-broadcast profile.
             * @param {*} privilegeExpiredTs : represented by the number of seconds elapsed since
             *                   1/1/1970. If, for example, you want to access the
             *                   Agora Service within 10 minutes after the token is
             *                   generated, set expireTimestamp as the current
             * @return token
             */
            static buildToken (appID, appCertificate, account, role, privilegeExpiredTs) {
                const key = new AccessToken(appID, appCertificate, account, "")
                key.addPriviledge(Priviledges.kRtmLogin, privilegeExpiredTs)
                return key.build()
            }
        }

        module.exports.RtmTokenBuilder = RtmTokenBuilder
        module.exports.Role = Role
    },{"../src/AccessToken":3}],6:[function(require,module,exports){
        (function (process,global){
            /**
             * AgoraWebSDK_N-v4.2.1-0-gf505b57 Copyright AgoraInc.
             */

            /*
 Determine if an object is a Buffer

 @author   Feross Aboukhadijeh <https://feross.org>
 @license  MIT
 *****************************************************************************
 Copyright (c) Microsoft Corporation. All rights reserved.
 Licensed under the Apache License, Version 2.0 (the "License"); you may not use
 this file except in compliance with the License. You may obtain a copy of the
 License at http://www.apache.org/licenses/LICENSE-2.0

 THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
 WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
 MERCHANTABLITY OR NON-INFRINGEMENT.

 See the Apache Version 2.0 License for specific language governing permissions
 and limitations under the License.
*****************************************************************************/
            'use strict';!function(Oa,Kb){"object"==typeof exports&&"undefined"!=typeof module?module.exports=Kb():"function"==typeof define&&define.amd?define(Kb):(Oa="undefined"!=typeof globalThis?globalThis:Oa||self).AgoraRTC=Kb()}(this,function(){function Oa(c,a,b){return c(b={path:a,exports:{},require:function(a,b){throw Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");}},b.exports),b.exports}function Kb(c,a,b){return(c=c.match(a))&&c.length>=b&&R(c[b],10)}function tc(c,a,
b){if(c.RTCPeerConnection){c=c.RTCPeerConnection.prototype;var d=c.addEventListener;c.addEventListener=function(c,e){if(c!==a)return d.apply(this,arguments);let f=a=>{(a=b(a))&&e(a)};return this._eventMap=this._eventMap||{},this._eventMap[e]=f,d.apply(this,[c,f])};var e=c.removeEventListener;c.removeEventListener=function(b,d){if(b!==a||!this._eventMap||!this._eventMap[d])return e.apply(this,arguments);let c=this._eventMap[d];return delete this._eventMap[d],e.apply(this,[b,c])};ba(c,"on"+a,{get(){return this["_on"+
                a]},set(b){this["_on"+a]&&(this.removeEventListener(a,this["_on"+a]),delete this["_on"+a]);b&&this.addEventListener(a,this["_on"+a]=b)},enumerable:!0,configurable:!0})}}function ql(c){return"boolean"!=typeof c?Error("Argument type: "+typeof c+". Please use a boolean."):(yg=c,c?"adapter.js logging disabled":"adapter.js logging enabled")}function rl(c){return"boolean"!=typeof c?Error("Argument type: "+typeof c+". Please use a boolean."):(zg=!c,"adapter.js deprecation warnings "+(c?"disabled":"enabled"))}
                function pb(){"object"!=typeof window||yg||"undefined"!=typeof console&&"function"==typeof console.log&&console.log.apply(console,arguments)}function Bd(c,a){zg&&console.warn(c+" is deprecated, please use "+a+" instead.")}function Lb(c){let {navigator:a}=c,b={browser:null,version:null};if(void 0===c||!c.navigator)return b.browser="Not a browser.",b;if(a.mozGetUserMedia)b.browser="firefox",b.version=Kb(a.userAgent,/Firefox\/(\d+)\./,1);else if(a.webkitGetUserMedia||!1===c.isSecureContext&&c.webkitRTCPeerConnection&&
                    !c.RTCIceGatherer)b.browser="chrome",b.version=Kb(a.userAgent,/Chrom(e|ium)\/(\d+)\./,2);else if(a.mediaDevices&&a.userAgent.match(/Edge\/(\d+).(\d+)$/))b.browser="edge",b.version=Kb(a.userAgent,/Edge\/(\d+).(\d+)$/,2);else{if(!c.RTCPeerConnection||!a.userAgent.match(/AppleWebKit\/(\d+)\./))return b.browser="Not a supported browser.",b;b.browser="safari";b.version=Kb(a.userAgent,/AppleWebKit\/(\d+)\./,1);b.supportsUnifiedPlan=c.RTCRtpTransceiver&&"currentDirection"in c.RTCRtpTransceiver.prototype}return b}
                function Ag(c){var a;return"[object Object]"===Object.prototype.toString.call(c)?Ae(a=S(c)).call(a,function(a,d){var b="[object Object]"===Object.prototype.toString.call(c[d]);let f=b?Ag(c[d]):c[d];b=b&&!S(f).length;return void 0===f||b?a:ab(a,{[d]:f})},{}):c}function Be(c,a,b){var d;a&&!b.has(a.id)&&(b.set(a.id,a),r(d=S(a)).call(d,d=>{if(Bg(d).call(d,"Id"))Be(c,c.get(a[d]),b);else if(Bg(d).call(d,"Ids")){var e;r(e=a[d]).call(e,a=>{Be(c,c.get(a),b)})}}))}function Cg(c,a,b){let d=b?"outbound-rtp":
                    "inbound-rtp",e=new Z;if(null===a)return e;let f=[];return r(c).call(c,b=>{"track"===b.type&&b.trackIdentifier===a.id&&f.push(b)}),r(f).call(f,a=>{r(c).call(c,b=>{b.type===d&&b.trackId===a.id&&Be(c,b,e)})}),e}function Dg(c){let a=c&&c.navigator;if(a.mediaDevices){var b=Lb(c),d=function(a){var b;if("object"!=typeof a||a.mandatory||a.optional)return a;const d={};var c;(r(b=S(a)).call(b,b=>{if("require"!==b&&"advanced"!==b&&"mediaSource"!==b){var c="object"==typeof a[b]?a[b]:{ideal:a[b]};void 0!==c.exact&&
                "number"==typeof c.exact&&(c.min=c.max=c.exact);var e=function(a,b){return a?a+b.charAt(0).toUpperCase()+zb(b).call(b,1):"deviceId"===b?"sourceId":b};if(void 0!==c.ideal){d.optional=d.optional||[];let a={};"number"==typeof c.ideal?(a[e("min",b)]=c.ideal,d.optional.push(a),a={},a[e("max",b)]=c.ideal,d.optional.push(a)):(a[e("",b)]=c.ideal,d.optional.push(a))}var f;void 0!==c.exact&&"number"!=typeof c.exact?(d.mandatory=d.mandatory||{},d.mandatory[e("",b)]=c.exact):r(f=["min","max"]).call(f,a=>{void 0!==
                c[a]&&(d.mandatory=d.mandatory||{},d.mandatory[e(a,b)]=c[a])})}}),a.advanced)&&(d.optional=n(c=d.optional||[]).call(c,a.advanced));return d},e=function(c,e){if(61<=b.version)return e(c);if((c=JSON.parse(z(c)))&&"object"==typeof c.audio){var f=function(a,b,c){b in a&&!(c in a)&&(a[c]=a[b],delete a[b])};f((c=JSON.parse(z(c))).audio,"autoGainControl","googAutoGainControl");f(c.audio,"noiseSuppression","googNoiseSuppression");c.audio=d(c.audio)}if(c&&"object"==typeof c.video){let g=c.video.facingMode;
                    g=g&&("object"==typeof g?g:{ideal:g});f=66>b.version;if(!(!g||"user"!==g.exact&&"environment"!==g.exact&&"user"!==g.ideal&&"environment"!==g.ideal||a.mediaDevices.getSupportedConstraints&&a.mediaDevices.getSupportedConstraints().facingMode&&!f)){let b;if(delete c.video.facingMode,"environment"===g.exact||"environment"===g.ideal?b=["back","rear"]:"user"!==g.exact&&"user"!==g.ideal||(b=["front"]),b)return a.mediaDevices.enumerateDevices().then(a=>{a=O(a).call(a,a=>"videoinput"===a.kind);let f=U(a).call(a,
                        a=>Fg(b).call(b,b=>{var c;return Aa(c=a.label.toLowerCase()).call(c,b)}));return!f&&a.length&&Aa(b).call(b,"back")&&(f=a[a.length-1]),f&&(c.video.deviceId=g.exact?{exact:f.deviceId}:{ideal:f.deviceId}),c.video=d(c.video),Gg("chrome: "+z(c)),e(c)})}c.video=d(c.video)}return Gg("chrome: "+z(c)),e(c)},f=function(a){return 64<=b.version?a:{name:{PermissionDeniedError:"NotAllowedError",PermissionDismissedError:"NotAllowedError",InvalidStateError:"NotAllowedError",DevicesNotFoundError:"NotFoundError",ConstraintNotSatisfiedError:"OverconstrainedError",
                        TrackStartError:"NotReadableError",MediaDeviceFailedDueToShutdown:"NotAllowedError",MediaDeviceKillSwitchOn:"NotAllowedError",TabCaptureError:"AbortError",ScreenCaptureError:"AbortError",DeviceCaptureError:"AbortError"}[a.name]||a.name,message:a.message,constraint:a.constraint||a.constraintName,toString(){return this.name+(this.message&&": ")+this.message}}};c=function(b,c,d){e(b,b=>{a.webkitGetUserMedia(b,c,a=>{d&&d(f(a))})})};if(a.getUserMedia=Ba(c).call(c,a),a.mediaDevices.getUserMedia){var g;
                    let b=Ba(g=a.mediaDevices.getUserMedia).call(g,a.mediaDevices);a.mediaDevices.getUserMedia=function(a){return e(a,a=>b(a).then(b=>{var c;if(a.audio&&!b.getAudioTracks().length||a.video&&!b.getVideoTracks().length)throw r(c=b.getTracks()).call(c,a=>{a.stop()}),new DOMException("","NotFoundError");return b},a=>u.reject(f(a))))}}}}function Hg(c){c.MediaStream=c.MediaStream||c.webkitMediaStream}function Ig(c){if("object"!=typeof c||!c.RTCPeerConnection||"ontrack"in c.RTCPeerConnection.prototype)tc(c,
                    "track",a=>(a.transceiver||ba(a,"transceiver",{value:{receiver:a.receiver}}),a));else{ba(c.RTCPeerConnection.prototype,"ontrack",{get(){return this._ontrack},set(a){this._ontrack&&this.removeEventListener("track",this._ontrack);this.addEventListener("track",this._ontrack=a)},enumerable:!0,configurable:!0});let a=c.RTCPeerConnection.prototype.setRemoteDescription;c.RTCPeerConnection.prototype.setRemoteDescription=function(){return this._ontrackpoly||(this._ontrackpoly=a=>{var b;a.stream.addEventListener("addtrack",
                    b=>{let d;var e;c.RTCPeerConnection.prototype.getReceivers?d=U(e=this.getReceivers()).call(e,a=>a.track&&a.track.id===b.track.id):d={track:b.track};e=new Event("track");e.track=b.track;e.receiver=d;e.transceiver={receiver:d};e.streams=[a.stream];this.dispatchEvent(e)});r(b=a.stream.getTracks()).call(b,b=>{let d;var e;c.RTCPeerConnection.prototype.getReceivers?d=U(e=this.getReceivers()).call(e,a=>a.track&&a.track.id===b.id):d={track:b};e=new Event("track");e.track=b;e.receiver=d;e.transceiver={receiver:d};
                    e.streams=[a.stream];this.dispatchEvent(e)})},this.addEventListener("addstream",this._ontrackpoly)),a.apply(this,arguments)}}}function Jg(c){if("object"==typeof c&&c.RTCPeerConnection&&!("getSenders"in c.RTCPeerConnection.prototype)&&"createDTMFSender"in c.RTCPeerConnection.prototype){let a=function(a,b){return{track:b,get dtmf(){return void 0===this._dtmf&&("audio"===b.kind?this._dtmf=a.createDTMFSender(b):this._dtmf=null),this._dtmf},_pc:a}};if(!c.RTCPeerConnection.prototype.getSenders){c.RTCPeerConnection.prototype.getSenders=
                    function(){var a;return this._senders=this._senders||[],zb(a=this._senders).call(a)};let b=c.RTCPeerConnection.prototype.addTrack;c.RTCPeerConnection.prototype.addTrack=function(c,d){let e=b.apply(this,arguments);return e||(e=a(this,c),this._senders.push(e)),e};let d=c.RTCPeerConnection.prototype.removeTrack;c.RTCPeerConnection.prototype.removeTrack=function(a){var b;d.apply(this,arguments);let c=E(b=this._senders).call(b,a);var e;-1!==c&&Ja(e=this._senders).call(e,c,1)}}let b=c.RTCPeerConnection.prototype.addStream;
                    c.RTCPeerConnection.prototype.addStream=function(c){var d;this._senders=this._senders||[];b.apply(this,[c]);r(d=c.getTracks()).call(d,b=>{this._senders.push(a(this,b))})};let d=c.RTCPeerConnection.prototype.removeStream;c.RTCPeerConnection.prototype.removeStream=function(a){var b;this._senders=this._senders||[];d.apply(this,[a]);r(b=a.getTracks()).call(b,a=>{var b;let c=U(b=this._senders).call(b,b=>b.track===a);var d,e;c&&Ja(d=this._senders).call(d,E(e=this._senders).call(e,c),1)})}}else if("object"==
                    typeof c&&c.RTCPeerConnection&&"getSenders"in c.RTCPeerConnection.prototype&&"createDTMFSender"in c.RTCPeerConnection.prototype&&c.RTCRtpSender&&!("dtmf"in c.RTCRtpSender.prototype)){let a=c.RTCPeerConnection.prototype.getSenders;c.RTCPeerConnection.prototype.getSenders=function(){let b=a.apply(this,[]);return r(b).call(b,a=>a._pc=this),b};ba(c.RTCRtpSender.prototype,"dtmf",{get(){return void 0===this._dtmf&&("audio"===this.track.kind?this._dtmf=this._pc.createDTMFSender(this.track):this._dtmf=null),
                        this._dtmf}})}}function Kg(c){if(c.RTCPeerConnection){var a=c.RTCPeerConnection.prototype.getStats;c.RTCPeerConnection.prototype.getStats=function(){let [b,c,e]=arguments;if(0<arguments.length&&"function"==typeof b)return a.apply(this,arguments);if(0===a.length&&(0===arguments.length||"function"!=typeof b))return a.apply(this,[]);let f=function(a){const b={};a=a.result();return r(a).call(a,a=>{var c;const d={id:a.id,timestamp:a.timestamp,type:{localcandidate:"local-candidate",remotecandidate:"remote-candidate"}[a.type]||
                        a.type};r(c=a.names()).call(c,b=>{d[b]=a.stat(b)});b[d.id]=d}),b},g=function(a){var b;return new Z(A(b=S(a)).call(b,b=>[b,a[b]]))};return 2<=arguments.length?a.apply(this,[function(a){c(g(f(a)))},b]):(new u((b,c)=>{a.apply(this,[function(a){b(g(f(a)))},c])})).then(c,e)}}}function Lg(c){if("object"==typeof c&&c.RTCPeerConnection&&c.RTCRtpSender&&c.RTCRtpReceiver){if(!("getStats"in c.RTCRtpSender.prototype)){let a=c.RTCPeerConnection.prototype.getSenders;a&&(c.RTCPeerConnection.prototype.getSenders=
                    function(){let b=a.apply(this,[]);return r(b).call(b,a=>a._pc=this),b});let d=c.RTCPeerConnection.prototype.addTrack;d&&(c.RTCPeerConnection.prototype.addTrack=function(){let a=d.apply(this,arguments);return a._pc=this,a});c.RTCRtpSender.prototype.getStats=function(){let a=this;return this._pc.getStats().then(b=>Cg(b,a.track,!0))}}if(!("getStats"in c.RTCRtpReceiver.prototype)){let a=c.RTCPeerConnection.prototype.getReceivers;a&&(c.RTCPeerConnection.prototype.getReceivers=function(){let b=a.apply(this,
                    []);return r(b).call(b,a=>a._pc=this),b});tc(c,"track",a=>(a.receiver._pc=a.srcElement,a));c.RTCRtpReceiver.prototype.getStats=function(){let a=this;return this._pc.getStats().then(b=>Cg(b,a.track,!1))}}if("getStats"in c.RTCRtpSender.prototype&&"getStats"in c.RTCRtpReceiver.prototype){var a=c.RTCPeerConnection.prototype.getStats;c.RTCPeerConnection.prototype.getStats=function(){if(0<arguments.length&&arguments[0]instanceof c.MediaStreamTrack){var b,d;let a=arguments[0],c,g,k;return r(b=this.getSenders()).call(b,
                    b=>{b.track===a&&(c?k=!0:c=b)}),r(d=this.getReceivers()).call(d,b=>(b.track===a&&(g?k=!0:g=b),b.track===a)),k||c&&g?u.reject(new DOMException("There are more than one sender or receiver for the track.","InvalidAccessError")):c?c.getStats():g?g.getStats():u.reject(new DOMException("There is no sender or receiver for the track.","InvalidAccessError"))}return a.apply(this,arguments)}}}}function Mg(c){c.RTCPeerConnection.prototype.getLocalStreams=function(){var a;return this._shimmedLocalStreams=this._shimmedLocalStreams||
                    {},A(a=S(this._shimmedLocalStreams)).call(a,a=>this._shimmedLocalStreams[a][0])};let a=c.RTCPeerConnection.prototype.addTrack;c.RTCPeerConnection.prototype.addTrack=function(b,c){var d;if(!c)return a.apply(this,arguments);this._shimmedLocalStreams=this._shimmedLocalStreams||{};let e=a.apply(this,arguments);return this._shimmedLocalStreams[c.id]?-1===E(d=this._shimmedLocalStreams[c.id]).call(d,e)&&this._shimmedLocalStreams[c.id].push(e):this._shimmedLocalStreams[c.id]=[c,e],e};let b=c.RTCPeerConnection.prototype.addStream;
                    c.RTCPeerConnection.prototype.addStream=function(a){var c,d,e;this._shimmedLocalStreams=this._shimmedLocalStreams||{};r(c=a.getTracks()).call(c,a=>{var b;if(U(b=this.getSenders()).call(b,b=>b.track===a))throw new DOMException("Track already exists.","InvalidAccessError");});let f=this.getSenders();b.apply(this,arguments);c=O(d=this.getSenders()).call(d,a=>-1===E(f).call(f,a));this._shimmedLocalStreams[a.id]=n(e=[a]).call(e,c)};let d=c.RTCPeerConnection.prototype.removeStream;c.RTCPeerConnection.prototype.removeStream=
                        function(a){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},delete this._shimmedLocalStreams[a.id],d.apply(this,arguments)};let e=c.RTCPeerConnection.prototype.removeTrack;c.RTCPeerConnection.prototype.removeTrack=function(a){var b;(this._shimmedLocalStreams=this._shimmedLocalStreams||{},a)&&r(b=S(this._shimmedLocalStreams)).call(b,b=>{var c;let d=E(c=this._shimmedLocalStreams[b]).call(c,a);var e;-1!==d&&Ja(e=this._shimmedLocalStreams[b]).call(e,d,1);1===this._shimmedLocalStreams[b].length&&
                    delete this._shimmedLocalStreams[b]});return e.apply(this,arguments)}}function Ng(c){function a(a,b){var c;let d=b.sdp;return r(c=S(a._reverseStreams||[])).call(c,b=>{b=a._reverseStreams[b];d=d.replace(new RegExp(a._streams[b.id].id,"g"),b.id)}),new RTCSessionDescription({type:b.type,sdp:d})}function b(a,b){var c;let d=b.sdp;return r(c=S(a._reverseStreams||[])).call(c,b=>{b=a._reverseStreams[b];d=d.replace(new RegExp(b.id,"g"),a._streams[b.id].id)}),new RTCSessionDescription({type:b.type,sdp:d})}
                    var d;if(c.RTCPeerConnection){var e=Lb(c);if(c.RTCPeerConnection.prototype.addTrack&&65<=e.version)return Mg(c);var f=c.RTCPeerConnection.prototype.getLocalStreams;c.RTCPeerConnection.prototype.getLocalStreams=function(){let a=f.apply(this);return this._reverseStreams=this._reverseStreams||{},A(a).call(a,a=>this._reverseStreams[a.id])};var g=c.RTCPeerConnection.prototype.addStream;c.RTCPeerConnection.prototype.addStream=function(a){var b;(this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||
                        {},r(b=a.getTracks()).call(b,a=>{var b;if(U(b=this.getSenders()).call(b,b=>b.track===a))throw new DOMException("Track already exists.","InvalidAccessError");}),this._reverseStreams[a.id])||(b=new c.MediaStream(a.getTracks()),this._streams[a.id]=b,this._reverseStreams[b.id]=a,a=b);g.apply(this,[a])};var k=c.RTCPeerConnection.prototype.removeStream;c.RTCPeerConnection.prototype.removeStream=function(a){this._streams=this._streams||{};this._reverseStreams=this._reverseStreams||{};k.apply(this,[this._streams[a.id]||
                    a]);delete this._reverseStreams[this._streams[a.id]?this._streams[a.id].id:a.id];delete this._streams[a.id]};c.RTCPeerConnection.prototype.addTrack=function(a,b){var d,e,f;if("closed"===this.signalingState)throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.","InvalidStateError");let g=zb([]).call(arguments,1);if(1!==g.length||!U(d=g[0].getTracks()).call(d,b=>b===a))throw new DOMException("The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.",
                        "NotSupportedError");if(U(e=this.getSenders()).call(e,b=>b.track===a))throw new DOMException("Track already exists.","InvalidAccessError");this._streams=this._streams||{};this._reverseStreams=this._reverseStreams||{};(d=this._streams[b.id])?(d.addTrack(a),u.resolve().then(()=>{this.dispatchEvent(new Event("negotiationneeded"))})):(d=new c.MediaStream([a]),this._streams[b.id]=d,this._reverseStreams[d.id]=b,this.addStream(d));return U(f=this.getSenders()).call(f,b=>b.track===a)};r(d=["createOffer",
                        "createAnswer"]).call(d,function(b){let d=c.RTCPeerConnection.prototype[b];c.RTCPeerConnection.prototype[b]={[b](){const b=arguments;return arguments.length&&"function"==typeof arguments[0]?d.apply(this,[c=>{c=a(this,c);b[0].apply(null,[c])},a=>{b[1]&&b[1].apply(null,a)},arguments[2]]):d.apply(this,arguments).then(b=>a(this,b))}}[b]});var q=c.RTCPeerConnection.prototype.setLocalDescription;c.RTCPeerConnection.prototype.setLocalDescription=function(){return arguments.length&&arguments[0].type?(arguments[0]=
                        b(this,arguments[0]),q.apply(this,arguments)):q.apply(this,arguments)};var B=da(c.RTCPeerConnection.prototype,"localDescription");ba(c.RTCPeerConnection.prototype,"localDescription",{get(){let b=B.get.apply(this);return""===b.type?b:a(this,b)}});c.RTCPeerConnection.prototype.removeTrack=function(a){var b;if("closed"===this.signalingState)throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.","InvalidStateError");if(!a._pc)throw new DOMException("Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.",
                        "TypeError");if(a._pc!==this)throw new DOMException("Sender was not created by this connection.","InvalidAccessError");let c;this._streams=this._streams||{};r(b=S(this._streams)).call(b,b=>{var d;U(d=this._streams[b].getTracks()).call(d,b=>a.track===b)&&(c=this._streams[b])});c&&(1===c.getTracks().length?this.removeStream(this._reverseStreams[c.id]):c.removeTrack(a.track),this.dispatchEvent(new Event("negotiationneeded")))}}}function Ce(c){let a=Lb(c);if(!c.RTCPeerConnection&&c.webkitRTCPeerConnection&&
                (c.RTCPeerConnection=c.webkitRTCPeerConnection),c.RTCPeerConnection){var b;53>a.version&&r(b=["setLocalDescription","setRemoteDescription","addIceCandidate"]).call(b,function(a){let b=c.RTCPeerConnection.prototype[a];c.RTCPeerConnection.prototype[a]={[a](){return arguments[0]=new ("addIceCandidate"===a?c.RTCIceCandidate:c.RTCSessionDescription)(arguments[0]),b.apply(this,arguments)}}[a]});var d=c.RTCPeerConnection.prototype.addIceCandidate;c.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?
                    78>a.version&&arguments[0]&&""===arguments[0].candidate?u.resolve():d.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),u.resolve())}}}function Og(c){tc(c,"negotiationneeded",a=>{if("stable"===a.target.signalingState)return a})}function sl(c,a){let b=!1;return c=JSON.parse(z(c)),O(c).call(c,a=>{if(a&&(a.urls||a.url)){var c=a.urls||a.url;a.url&&!a.urls&&Bd("RTCIceServer.url","RTCIceServer.urls");let d="string"==typeof c;return d&&(c=[c]),c=O(c).call(c,a=>0===E(a).call(a,"stun:")?!1:(a=
                    Cd(a).call(a,"turn")&&!Cd(a).call(a,"turn:[")&&Aa(a).call(a,"transport=udp"))&&!b?(b=!0,!0):a&&!b),delete a.url,a.urls=d?c[0]:c,!!c.length}})}function Pg(c,a,b,d,e){a=F.writeRtpDescription(c.kind,a);if(a+=F.writeIceParameters(c.iceGatherer.getLocalParameters()),a+=F.writeDtlsParameters(c.dtlsTransport.getLocalParameters(),"offer"===b?"actpass":e||"active"),a+="a=mid:"+c.mid+"\r\n",c.rtpSender&&c.rtpReceiver?a+="a=sendrecv\r\n":c.rtpSender?a+="a=sendonly\r\n":c.rtpReceiver?a+="a=recvonly\r\n":a+="a=inactive\r\n",
                    c.rtpSender)b=c.rtpSender._initialTrackId||c.rtpSender.track.id,c.rtpSender._initialTrackId=b,d="msid:"+(d?d.id:"-")+" "+b+"\r\n",a=a+("a="+d)+("a=ssrc:"+c.sendEncodingParameters[0].ssrc+" "+d),c.sendEncodingParameters[0].rtx&&(a+="a=ssrc:"+c.sendEncodingParameters[0].rtx.ssrc+" "+d,a+="a=ssrc-group:FID "+c.sendEncodingParameters[0].ssrc+" "+c.sendEncodingParameters[0].rtx.ssrc+"\r\n");return a+="a=ssrc:"+c.sendEncodingParameters[0].ssrc+" cname:"+F.localCName+"\r\n",c.rtpSender&&c.sendEncodingParameters[0].rtx&&
                (a+="a=ssrc:"+c.sendEncodingParameters[0].rtx.ssrc+" cname:"+F.localCName+"\r\n"),a}function tl(c,a){var b=!1;return(c=JSON.parse(JSON.stringify(c))).filter(function(c){if(c&&(c.urls||c.url)){var d=c.urls||c.url;c.url&&!c.urls&&console.warn("RTCIceServer.url is deprecated! Use urls instead.");var f="string"==typeof d;return f&&(d=[d]),d=d.filter(function(c){return 0!==c.indexOf("turn:")||-1===c.indexOf("transport=udp")||-1!==c.indexOf("turn:[")||b?0===c.indexOf("stun:")&&14393<=a&&-1===c.indexOf("?transport=udp"):
                    (b=!0,!0)}),delete c.url,c.urls=f?d[0]:d,!!d.length}})}function Dd(c,a){var b={codecs:[],headerExtensions:[],fecMechanisms:[]},d=function(a,b){a=parseInt(a,10);for(var c=0;c<b.length;c++)if(b[c].payloadType===a||b[c].preferredPayloadType===a)return b[c]},e=function(a,b,c,e){a=d(a.parameters.apt,c);b=d(b.parameters.apt,e);return a&&b&&a.name.toLowerCase()===b.name.toLowerCase()};return c.codecs.forEach(function(d){for(var f=0;f<a.codecs.length;f++){var k=a.codecs[f];if(d.name.toLowerCase()===k.name.toLowerCase()&&
                    d.clockRate===k.clockRate&&("rtx"!==d.name.toLowerCase()||!d.parameters||!k.parameters.apt||e(d,k,c.codecs,a.codecs))){(k=JSON.parse(JSON.stringify(k))).numChannels=Math.min(d.numChannels,k.numChannels);b.codecs.push(k);k.rtcpFeedback=k.rtcpFeedback.filter(function(a){for(var b=0;b<d.rtcpFeedback.length;b++)if(d.rtcpFeedback[b].type===a.type&&d.rtcpFeedback[b].parameter===a.parameter)return!0;return!1});break}}}),c.headerExtensions.forEach(function(c){for(var d=0;d<a.headerExtensions.length;d++){var e=
                    a.headerExtensions[d];if(c.uri===e.uri){b.headerExtensions.push(e);break}}}),b}function Qg(c,a,b){return-1!=={offer:{setLocalDescription:["stable","have-local-offer"],setRemoteDescription:["stable","have-remote-offer"]},answer:{setLocalDescription:["have-remote-offer","have-local-pranswer"],setRemoteDescription:["have-local-offer","have-remote-pranswer"]}}[a][c].indexOf(b)}function De(c,a){var b=c.getRemoteCandidates().find(function(b){return a.foundation===b.foundation&&a.ip===b.ip&&a.port===b.port&&
                    a.priority===b.priority&&a.protocol===b.protocol&&a.type===b.type});return b||c.addRemoteCandidate(a),!b}function Ka(c,a){a=Error(a);return a.name=c,a.code={NotSupportedError:9,InvalidStateError:11,InvalidAccessError:15,TypeError:void 0,OperationError:void 0}[c],a}function Rg(c){var a;c=c&&c.navigator;let b=Ba(a=c.mediaDevices.getUserMedia).call(a,c.mediaDevices);c.mediaDevices.getUserMedia=function(a){return b(a).catch(a=>u.reject(function(a){return{name:{PermissionDeniedError:"NotAllowedError"}[a.name]||
                        a.name,message:a.message,constraint:a.constraint,toString(){return this.name}}}(a)))}}function Sg(c){var a;"getDisplayMedia"in c.navigator&&c.navigator.mediaDevices&&(c.navigator.mediaDevices&&"getDisplayMedia"in c.navigator.mediaDevices||(c.navigator.mediaDevices.getDisplayMedia=Ba(a=c.navigator.getDisplayMedia).call(a,c.navigator)))}function Ee(c){let a=Lb(c);if(c.RTCIceGatherer&&(c.RTCIceCandidate||(c.RTCIceCandidate=function(a){return a}),c.RTCSessionDescription||(c.RTCSessionDescription=function(a){return a}),
                15025>a.version)){let a=da(c.MediaStreamTrack.prototype,"enabled");ba(c.MediaStreamTrack.prototype,"enabled",{set(b){a.set.call(this,b);let c=new Event("enabled");c.enabled=b;this.dispatchEvent(c)}})}!c.RTCRtpSender||"dtmf"in c.RTCRtpSender.prototype||ba(c.RTCRtpSender.prototype,"dtmf",{get(){return void 0===this._dtmf&&("audio"===this.track.kind?this._dtmf=new c.RTCDtmfSender(this):"video"===this.track.kind&&(this._dtmf=null)),this._dtmf}});c.RTCDtmfSender&&!c.RTCDTMFSender&&(c.RTCDTMFSender=c.RTCDtmfSender);
                    let b=ul(c,a.version);c.RTCPeerConnection=function(c){return c&&c.iceServers&&(c.iceServers=sl(c.iceServers,a.version),pb("ICE servers after filtering:",c.iceServers)),new b(c)};c.RTCPeerConnection.prototype=b.prototype}function Tg(c){!c.RTCRtpSender||"replaceTrack"in c.RTCRtpSender.prototype||(c.RTCRtpSender.prototype.replaceTrack=c.RTCRtpSender.prototype.setTrack)}function Ug(c){let a=Lb(c),b=c&&c.navigator;c=c&&c.MediaStreamTrack;if(b.getUserMedia=function(a,c,d){Bd("navigator.getUserMedia","navigator.mediaDevices.getUserMedia");
                    b.mediaDevices.getUserMedia(a).then(c,d)},!(55<a.version&&"autoGainControl"in b.mediaDevices.getSupportedConstraints())){var d;let a=function(a,b,c){b in a&&!(c in a)&&(a[c]=a[b],delete a[b])},f=Ba(d=b.mediaDevices.getUserMedia).call(d,b.mediaDevices);if(b.mediaDevices.getUserMedia=function(b){return"object"==typeof b&&"object"==typeof b.audio&&(b=JSON.parse(z(b)),a(b.audio,"autoGainControl","mozAutoGainControl"),a(b.audio,"noiseSuppression","mozNoiseSuppression")),f(b)},c&&c.prototype.getSettings){let b=
                    c.prototype.getSettings;c.prototype.getSettings=function(){let c=b.apply(this,arguments);return a(c,"mozAutoGainControl","autoGainControl"),a(c,"mozNoiseSuppression","noiseSuppression"),c}}if(c&&c.prototype.applyConstraints){let b=c.prototype.applyConstraints;c.prototype.applyConstraints=function(c){return"audio"===this.kind&&"object"==typeof c&&(c=JSON.parse(z(c)),a(c,"autoGainControl","mozAutoGainControl"),a(c,"noiseSuppression","mozNoiseSuppression")),b.apply(this,[c])}}}}function Vg(c){"object"==
                typeof c&&c.RTCTrackEvent&&"receiver"in c.RTCTrackEvent.prototype&&!("transceiver"in c.RTCTrackEvent.prototype)&&ba(c.RTCTrackEvent.prototype,"transceiver",{get(){return{receiver:this.receiver}}})}function Fe(c){let a=Lb(c);if("object"==typeof c&&(c.RTCPeerConnection||c.mozRTCPeerConnection)){var b;(!c.RTCPeerConnection&&c.mozRTCPeerConnection&&(c.RTCPeerConnection=c.mozRTCPeerConnection),53>a.version)&&r(b=["setLocalDescription","setRemoteDescription","addIceCandidate"]).call(b,function(a){let b=
                    c.RTCPeerConnection.prototype[a];c.RTCPeerConnection.prototype[a]={[a](){return arguments[0]=new ("addIceCandidate"===a?c.RTCIceCandidate:c.RTCSessionDescription)(arguments[0]),b.apply(this,arguments)}}[a]});var d=c.RTCPeerConnection.prototype.addIceCandidate;c.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?68>a.version&&arguments[0]&&""===arguments[0].candidate?u.resolve():d.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),u.resolve())};var e={inboundrtp:"inbound-rtp",
                    outboundrtp:"outbound-rtp",candidatepair:"candidate-pair",localcandidate:"local-candidate",remotecandidate:"remote-candidate"},f=c.RTCPeerConnection.prototype.getStats;c.RTCPeerConnection.prototype.getStats=function(){let [b,c,d]=arguments;return f.apply(this,[b||null]).then(b=>{if(53>a.version&&!c)try{r(b).call(b,a=>{a.type=e[a.type]||a.type})}catch(L){if("TypeError"!==L.name)throw L;r(b).call(b,(a,c)=>{b.set(c,ab({},a,{type:e[a.type]||a.type}))})}return b}).then(c,d)}}}function Wg(c){if("object"==
                    typeof c&&c.RTCPeerConnection&&c.RTCRtpSender&&!(c.RTCRtpSender&&"getStats"in c.RTCRtpSender.prototype)){var a=c.RTCPeerConnection.prototype.getSenders;a&&(c.RTCPeerConnection.prototype.getSenders=function(){let b=a.apply(this,[]);return r(b).call(b,a=>a._pc=this),b});var b=c.RTCPeerConnection.prototype.addTrack;b&&(c.RTCPeerConnection.prototype.addTrack=function(){let a=b.apply(this,arguments);return a._pc=this,a});c.RTCRtpSender.prototype.getStats=function(){return this.track?this._pc.getStats(this.track):
                    u.resolve(new Z)}}}function Xg(c){if("object"==typeof c&&c.RTCPeerConnection&&c.RTCRtpSender&&!(c.RTCRtpSender&&"getStats"in c.RTCRtpReceiver.prototype)){var a=c.RTCPeerConnection.prototype.getReceivers;a&&(c.RTCPeerConnection.prototype.getReceivers=function(){let b=a.apply(this,[]);return r(b).call(b,a=>a._pc=this),b});tc(c,"track",a=>(a.receiver._pc=a.srcElement,a));c.RTCRtpReceiver.prototype.getStats=function(){return this._pc.getStats(this.track)}}}function Yg(c){!c.RTCPeerConnection||"removeStream"in
                c.RTCPeerConnection.prototype||(c.RTCPeerConnection.prototype.removeStream=function(a){var b;Bd("removeStream","removeTrack");r(b=this.getSenders()).call(b,b=>{var c;b.track&&Aa(c=a.getTracks()).call(c,b.track)&&this.removeTrack(b)})})}function Zg(c){c.DataChannel&&!c.RTCDataChannel&&(c.RTCDataChannel=c.DataChannel)}function $g(c){if("object"==typeof c&&c.RTCPeerConnection){if("getLocalStreams"in c.RTCPeerConnection.prototype||(c.RTCPeerConnection.prototype.getLocalStreams=function(){return this._localStreams||
                (this._localStreams=[]),this._localStreams}),!("addStream"in c.RTCPeerConnection.prototype)){let a=c.RTCPeerConnection.prototype.addTrack;c.RTCPeerConnection.prototype.addStream=function(b){var c,e,f;this._localStreams||(this._localStreams=[]);Aa(c=this._localStreams).call(c,b)||this._localStreams.push(b);r(e=b.getAudioTracks()).call(e,c=>a.call(this,c,b));r(f=b.getVideoTracks()).call(f,c=>a.call(this,c,b))};c.RTCPeerConnection.prototype.addTrack=function(b,c){var d;c&&(this._localStreams?Aa(d=this._localStreams).call(d,
                    c)||this._localStreams.push(c):this._localStreams=[c]);return a.call(this,b,c)}}"removeStream"in c.RTCPeerConnection.prototype||(c.RTCPeerConnection.prototype.removeStream=function(a){var b,c,e;this._localStreams||(this._localStreams=[]);let f=E(b=this._localStreams).call(b,a);if(-1!==f){Ja(c=this._localStreams).call(c,f,1);var g=a.getTracks();r(e=this.getSenders()).call(e,a=>{Aa(g).call(g,a.track)&&this.removeTrack(a)})}})}}function ah(c){if("object"==typeof c&&c.RTCPeerConnection&&("getRemoteStreams"in
                c.RTCPeerConnection.prototype||(c.RTCPeerConnection.prototype.getRemoteStreams=function(){return this._remoteStreams?this._remoteStreams:[]}),!("onaddstream"in c.RTCPeerConnection.prototype))){ba(c.RTCPeerConnection.prototype,"onaddstream",{get(){return this._onaddstream},set(a){this._onaddstream&&(this.removeEventListener("addstream",this._onaddstream),this.removeEventListener("track",this._onaddstreampoly));this.addEventListener("addstream",this._onaddstream=a);this.addEventListener("track",this._onaddstreampoly=
                        a=>{var b;r(b=a.streams).call(b,a=>{var b;(this._remoteStreams||(this._remoteStreams=[]),Aa(b=this._remoteStreams).call(b,a))||(this._remoteStreams.push(a),b=new Event("addstream"),b.stream=a,this.dispatchEvent(b))})})}});let a=c.RTCPeerConnection.prototype.setRemoteDescription;c.RTCPeerConnection.prototype.setRemoteDescription=function(){let b=this;return this._onaddstreampoly||this.addEventListener("track",this._onaddstreampoly=function(a){var c;r(c=a.streams).call(c,a=>{var c;(b._remoteStreams||
                (b._remoteStreams=[]),0<=E(c=b._remoteStreams).call(c,a))||(b._remoteStreams.push(a),c=new Event("addstream"),c.stream=a,b.dispatchEvent(c))})}),a.apply(b,arguments)}}}function bh(c){if("object"==typeof c&&c.RTCPeerConnection){c=c.RTCPeerConnection.prototype;var a=c.createOffer,b=c.createAnswer,d=c.setLocalDescription,e=c.setRemoteDescription,f=c.addIceCandidate;c.createOffer=function(b,c){let d=a.apply(this,[2<=arguments.length?arguments[2]:arguments[0]]);return c?(d.then(b,c),u.resolve()):d};c.createAnswer=
                    function(a,c){let d=b.apply(this,[2<=arguments.length?arguments[2]:arguments[0]]);return c?(d.then(a,c),u.resolve()):d};var g=function(a,b,c){a=d.apply(this,[a]);return c?(a.then(b,c),u.resolve()):a};c.setLocalDescription=g;g=function(a,b,c){a=e.apply(this,[a]);return c?(a.then(b,c),u.resolve()):a};c.setRemoteDescription=g;g=function(a,b,c){a=f.apply(this,[a]);return c?(a.then(b,c),u.resolve()):a};c.addIceCandidate=g}}function ch(c){let a=c&&c.navigator;if(a.mediaDevices&&a.mediaDevices.getUserMedia){var b;
                    c=a.mediaDevices;let d=Ba(b=c.getUserMedia).call(b,c);a.mediaDevices.getUserMedia=a=>d(dh(a))}var d;!a.getUserMedia&&a.mediaDevices&&a.mediaDevices.getUserMedia&&(a.getUserMedia=Ba(d=function(b,c,d){a.mediaDevices.getUserMedia(b).then(c,d)}).call(d,a))}function dh(c){return c&&void 0!==c.video?ab({},c,{video:Ag(c.video)}):c}function eh(c){let a=c.RTCPeerConnection;c.RTCPeerConnection=function(b,c){if(b&&b.iceServers){let a=[];for(let c=0;c<b.iceServers.length;c++){let d=b.iceServers[c];!d.hasOwnProperty("urls")&&
                d.hasOwnProperty("url")?(Bd("RTCIceServer.url","RTCIceServer.urls"),d=JSON.parse(z(d)),d.urls=d.url,delete d.url,a.push(d)):a.push(b.iceServers[c])}b.iceServers=a}return new a(b,c)};c.RTCPeerConnection.prototype=a.prototype;"generateCertificate"in c.RTCPeerConnection&&ba(c.RTCPeerConnection,"generateCertificate",{get:()=>a.generateCertificate})}function fh(c){"object"==typeof c&&c.RTCPeerConnection&&"receiver"in c.RTCTrackEvent.prototype&&!c.RTCTransceiver&&ba(c.RTCTrackEvent.prototype,"transceiver",
                    {get(){return{receiver:this.receiver}}})}function gh(c){let a=c.RTCPeerConnection.prototype.createOffer;c.RTCPeerConnection.prototype.createOffer=function(b){if(b){var c,e;void 0!==b.offerToReceiveAudio&&(b.offerToReceiveAudio=!!b.offerToReceiveAudio);let a=U(c=this.getTransceivers()).call(c,a=>"audio"===a.receiver.track.kind);!1===b.offerToReceiveAudio&&a?"sendrecv"===a.direction?a.setDirection?a.setDirection("sendonly"):a.direction="sendonly":"recvonly"===a.direction&&(a.setDirection?a.setDirection("inactive"):
                    a.direction="inactive"):!0!==b.offerToReceiveAudio||a||this.addTransceiver("audio");void 0!==b.offerToReceiveVideo&&(b.offerToReceiveVideo=!!b.offerToReceiveVideo);c=U(e=this.getTransceivers()).call(e,a=>"video"===a.receiver.track.kind);!1===b.offerToReceiveVideo&&c?"sendrecv"===c.direction?c.setDirection?c.setDirection("sendonly"):c.direction="sendonly":"recvonly"===c.direction&&(c.setDirection?c.setDirection("inactive"):c.direction="inactive"):!0!==b.offerToReceiveVideo||c||this.addTransceiver("video")}return a.apply(this,
                    arguments)}}function Ed(c){if(c.RTCIceCandidate&&!(c.RTCIceCandidate&&"foundation"in c.RTCIceCandidate.prototype)){var a=c.RTCIceCandidate;c.RTCIceCandidate=function(b){var c;if("object"==typeof b&&b.candidate&&0===E(c=b.candidate).call(c,"a=")&&((b=JSON.parse(z(b))).candidate=b.candidate.substr(2)),b.candidate&&b.candidate.length){c=new a(b);b=F.parseCandidate(b.candidate);let d=ab(c,b);return d.toJSON=function(){return{candidate:d.candidate,sdpMid:d.sdpMid,sdpMLineIndex:d.sdpMLineIndex,usernameFragment:d.usernameFragment}},
                    d}return new a(b)};c.RTCIceCandidate.prototype=a.prototype;tc(c,"icecandidate",a=>(a.candidate&&ba(a,"candidate",{value:new c.RTCIceCandidate(a.candidate),writable:"false"}),a))}}function Tc(c){if(c.RTCPeerConnection){var a=Lb(c);"sctp"in c.RTCPeerConnection.prototype||ba(c.RTCPeerConnection.prototype,"sctp",{get(){return void 0===this._sctp?null:this._sctp}});var b=function(a){if(!a||!a.sdp)return!1;a=F.splitSections(a.sdp);return a.shift(),Fg(a).call(a,a=>{var b;return(a=F.parseMLine(a))&&"application"===
                    a.kind&&-1!==E(b=a.protocol).call(b,"SCTP")})},d=function(a){a=a.sdp.match(/mozilla...THIS_IS_SDPARTA-(\d+)/);if(null===a||2>a.length)return-1;a=R(a[1],10);return a!=a?-1:a},e=function(b){let c=65536;return"firefox"===a.browser&&(c=57>a.version?-1===b?16384:2147483637:60>a.version?57===a.version?65535:65536:2147483637),c},f=function(b,c){let d=65536;"firefox"===a.browser&&57===a.version&&(d=65535);b=F.matchPrefix(b.sdp,"a=max-message-size:");return 0<b.length?d=R(b[0].substr(19),10):"firefox"===a.browser&&
                    -1!==c&&(d=2147483637),d},g=c.RTCPeerConnection.prototype.setRemoteDescription;c.RTCPeerConnection.prototype.setRemoteDescription=function(){if(this._sctp=null,"chrome"===a.browser&&76<=a.version){var {sdpSemantics:c}=this.getConfiguration();"plan-b"===c&&ba(this,"sctp",{get(){return void 0===this._sctp?null:this._sctp},enumerable:!0,configurable:!0})}if(b(arguments[0])){var q=d(arguments[0]);c=e(q);q=f(arguments[0],q);let a;a=0===c&&0===q?Number.POSITIVE_INFINITY:0===c||0===q?Math.max(c,q):Math.min(c,
                    q);c={};ba(c,"maxMessageSize",{get:()=>a});this._sctp=c}return g.apply(this,arguments)}}}function Uc(c){function a(a,b){let c=a.send;a.send=function(){var d=arguments[0];d=d.length||d.size||d.byteLength;if("open"===a.readyState&&b.sctp&&d>b.sctp.maxMessageSize)throw new TypeError("Message too large (can send a maximum of "+b.sctp.maxMessageSize+" bytes)");return c.apply(a,arguments)}}if(c.RTCPeerConnection&&"createDataChannel"in c.RTCPeerConnection.prototype){var b=c.RTCPeerConnection.prototype.createDataChannel;
                    c.RTCPeerConnection.prototype.createDataChannel=function(){let c=b.apply(this,arguments);return a(c,this),c};tc(c,"datachannel",b=>(a(b.channel,b.target),b))}}function Ge(c){var a;if(c.RTCPeerConnection&&!("connectionState"in c.RTCPeerConnection.prototype)){var b=c.RTCPeerConnection.prototype;ba(b,"connectionState",{get(){return{completed:"connected",checking:"connecting"}[this.iceConnectionState]||this.iceConnectionState},enumerable:!0,configurable:!0});ba(b,"onconnectionstatechange",{get(){return this._onconnectionstatechange||
                        null},set(a){this._onconnectionstatechange&&(this.removeEventListener("connectionstatechange",this._onconnectionstatechange),delete this._onconnectionstatechange);a&&this.addEventListener("connectionstatechange",this._onconnectionstatechange=a)},enumerable:!0,configurable:!0});r(a=["setLocalDescription","setRemoteDescription"]).call(a,a=>{let c=b[a];b[a]=function(){return this._connectionstatechangepoly||(this._connectionstatechangepoly=a=>{let b=a.target;if(b._lastConnectionState!==b.connectionState){b._lastConnectionState=
                    b.connectionState;let c=new Event("connectionstatechange",a);b.dispatchEvent(c)}return a},this.addEventListener("iceconnectionstatechange",this._connectionstatechangepoly)),c.apply(this,arguments)}})}}function He(c){if(c.RTCPeerConnection){var a=Lb(c);if(!("chrome"===a.browser&&71<=a.version)){var b=c.RTCPeerConnection.prototype.setRemoteDescription;c.RTCPeerConnection.prototype.setRemoteDescription=function(a){var c,d;a&&a.sdp&&-1!==E(c=a.sdp).call(c,"\na=extmap-allow-mixed")&&(a.sdp=O(d=a.sdp.split("\n")).call(d,
                    a=>"a=extmap-allow-mixed"!==uc(a).call(a)).join("\n"));return b.apply(this,arguments)}}}}function vc(c){return"string"==typeof c?ab({},vl[c]):c}function Ie(c){return"string"==typeof c?ab({},wl[c]):c}function Fd(c){return"string"==typeof c?ab({},xl[c]):c}function Xb(c,a){var b;Aa(b=S(w)).call(b,c)&&(w[c]=a)}function wc(c,a,b){return{sampleRate:c,stereo:a,bitrate:b}}function H(c,a,b,d,e){return{width:c,height:a,frameRate:b,bitrateMin:d,bitrateMax:e}}function Mb(c,a,b,d,e){return{width:{max:c},height:{max:a},
                    frameRate:b,bitrateMin:d,bitrateMax:e}}function hh(c){return"[object Array]"===xc.call(c)}function ih(c){return null!==c&&"object"==typeof c}function jh(c){return"[object Function]"===xc.call(c)}function Gd(c,a){if(null!=c)if("object"!=typeof c&&(c=[c]),hh(c))for(var b=0,d=c.length;b<d;b++)a.call(null,c[b],b,c);else for(b in c)Object.prototype.hasOwnProperty.call(c,b)&&a.call(null,c[b],b,c)}function kh(){function c(b,c){"object"==typeof a[c]&&"object"==typeof b?a[c]=kh(a[c],b):a[c]=b}for(var a={},
b=0,d=arguments.length;b<d;b++)Gd(arguments[b],c);return a}function Je(){function c(b,c){"object"==typeof a[c]&&"object"==typeof b?a[c]=Je(a[c],b):a[c]="object"==typeof b?Je({},b):b}for(var a={},b=0,d=arguments.length;b<d;b++)Gd(arguments[b],c);return a}function lh(c){return encodeURIComponent(c).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function Hd(){this.handlers=[]}function mh(c,a){!I.isUndefined(c)&&
                I.isUndefined(c["Content-Type"])&&(c["Content-Type"]=a)}function Vc(c){this.defaults=c;this.interceptors={request:new nh,response:new nh}}function Ke(c){this.message=c}function Id(c){if("function"!=typeof c)throw new TypeError("executor must be a function.");var a;this.promise=new Promise(function(b){a=b});var b=this;c(function(c){b.reason||(b.reason=new oh(c),a(b.reason))})}function ph(c){c=new Jd(c);var a=qh(Jd.prototype.request,c);return I.extend(a,Jd.prototype,c),I.extend(a,c),a}function rh(){let c=
                    new Date;return c.toTimeString().split(" ")[0]+":"+c.getMilliseconds()}function sh(c,a){if("boolean"!=typeof c)throw new m(l.INVALID_PARAMS,"Invalid ".concat(a,": The value is of the boolean type."));}function bb(c,a,b){var d;if(!Aa(b).call(b,c))throw new m(l.INVALID_PARAMS,n(d="".concat(a," can only be set as ")).call(d,z(b)));}function W(c,a,b=1,d=1E4,e=!0){if(c<b||c>d||e&&("number"!=typeof c||0!=c%1)){var f,g;throw new m(l.INVALID_PARAMS,n(f=n(g="invalid ".concat(a,": the value range is [")).call(g,
                    b,", ")).call(f,d,"]. integer only"));}}function La(c,a,b=1,d=255,e=!0){if(null==c)throw new m(l.INVALID_PARAMS,"".concat(a||"param"," cannot be empty"));var f,g,k;if(!th(c,b,d,e))throw new m(l.INVALID_PARAMS,n(f=n(g=n(k="Invalid ".concat(a||"string param",": Length of the string: [")).call(k,b,",")).call(g,d,"].")).call(f,e?" ASCII characters only.":""));}function uh(c,a){if(!ec(c))throw new m(l.INVALID_PARAMS,"".concat(a," should be an array"));}function Le(c){if("string"!=typeof c||!/^[a-zA-Z0-9 !#\$%&\(\)\+\-:;<=\.>\?@\[\]\^_\{\}\|~,]{1,64}$/.test(c))throw h.error("Invalid Channel Name ".concat(c)),
                    new m(l.INVALID_PARAMS,"The length must be within 64 bytes. The supported characters: a-z,A-Z,0-9,space,!, #, $, %, &, (, ), +, -, :, ;, <, =, ., >, ?, @, [, ], ^, _,  {, }, |, ~, ,");}function Me(c){var a;if(!("number"==typeof c&&0<=c&&4294967295>=c||th(c,1,255)))throw h.error(n(a="Invalid UID ".concat(c," ")).call(a,typeof c)),new m(l.INVALID_PARAMS,"[String uid] Length of the string: [1,255]. ASCII characters only. [Number uid] The value range is [0,10000]");}function th(c,a=1,b=255,d=!0){if(a=
                    "string"==typeof c&&c.length<=b&&c.length>=a){if(!(d=!d))a:if("string"!=typeof c)d=!1;else{for(d=0;d<c.length;d+=1)if(a=c.charCodeAt(d),0>a||255<a){d=!1;break a}d=!0}a=d}return a}function Kd(){this._listeners={}}function vh(c){return"undefined"!=typeof Float32Array?function(){function a(a,b,c){f[0]=a;b[c]=g[0];b[c+1]=g[1];b[c+2]=g[2];b[c+3]=g[3]}function b(a,b,c){f[0]=a;b[c]=g[3];b[c+1]=g[2];b[c+2]=g[1];b[c+3]=g[0]}function d(a,b){return g[0]=a[b],g[1]=a[b+1],g[2]=a[b+2],g[3]=a[b+3],f[0]}function e(a,
b){return g[3]=a[b],g[2]=a[b+1],g[1]=a[b+2],g[0]=a[b+3],f[0]}var f=new Float32Array([-0]),g=new Uint8Array(f.buffer),k=128===g[3];c.writeFloatLE=k?a:b;c.writeFloatBE=k?b:a;c.readFloatLE=k?d:e;c.readFloatBE=k?e:d}():function(){function a(a,b,c,g){var d=0>b?1:0;if(d&&(b=-b),0===b)a(0<1/b?0:2147483648,c,g);else if(isNaN(b))a(2143289344,c,g);else if(3.4028234663852886E38<b)a((d<<31|2139095040)>>>0,c,g);else if(1.1754943508222875E-38>b)a((d<<31|Math.round(b/1.401298464324817E-45))>>>0,c,g);else{var e=
                    Math.floor(Math.log(b)/Math.LN2);a((d<<31|e+127<<23|8388607&Math.round(b*Math.pow(2,-e)*8388608))>>>0,c,g)}}function b(a,b,c){c=a(b,c);a=2*(c>>31)+1;b=c>>>23&255;c&=8388607;return 255===b?c?NaN:1/0*a:0===b?1.401298464324817E-45*a*c:a*Math.pow(2,b-150)*(c+8388608)}c.writeFloatLE=a.bind(null,wh);c.writeFloatBE=a.bind(null,xh);c.readFloatLE=b.bind(null,yh);c.readFloatBE=b.bind(null,zh)}(),"undefined"!=typeof Float64Array?function(){function a(a,b,c){f[0]=a;b[c]=g[0];b[c+1]=g[1];b[c+2]=g[2];b[c+3]=g[3];
                    b[c+4]=g[4];b[c+5]=g[5];b[c+6]=g[6];b[c+7]=g[7]}function b(a,b,c){f[0]=a;b[c]=g[7];b[c+1]=g[6];b[c+2]=g[5];b[c+3]=g[4];b[c+4]=g[3];b[c+5]=g[2];b[c+6]=g[1];b[c+7]=g[0]}function d(a,b){return g[0]=a[b],g[1]=a[b+1],g[2]=a[b+2],g[3]=a[b+3],g[4]=a[b+4],g[5]=a[b+5],g[6]=a[b+6],g[7]=a[b+7],f[0]}function e(a,b){return g[7]=a[b],g[6]=a[b+1],g[5]=a[b+2],g[4]=a[b+3],g[3]=a[b+4],g[2]=a[b+5],g[1]=a[b+6],g[0]=a[b+7],f[0]}var f=new Float64Array([-0]),g=new Uint8Array(f.buffer),k=128===g[7];c.writeDoubleLE=k?a:b;
                    c.writeDoubleBE=k?b:a;c.readDoubleLE=k?d:e;c.readDoubleBE=k?e:d}():function(){function a(a,b,c,g,k,q){var d=0>g?1:0;if(d&&(g=-g),0===g)a(0,k,q+b),a(0<1/g?0:2147483648,k,q+c);else if(isNaN(g))a(0,k,q+b),a(2146959360,k,q+c);else if(1.7976931348623157E308<g)a(0,k,q+b),a((d<<31|2146435072)>>>0,k,q+c);else if(2.2250738585072014E-308>g)a((g/=4.9E-324)>>>0,k,q+b),a((d<<31|g/4294967296)>>>0,k,q+c);else{var e=Math.floor(Math.log(g)/Math.LN2);1024===e&&(e=1023);a(4503599627370496*(g*=Math.pow(2,-e))>>>0,k,
                    q+b);a((d<<31|e+1023<<20|1048576*g&1048575)>>>0,k,q+c)}}function b(a,b,c,g,k){b=a(g,k+b);g=a(g,k+c);a=2*(g>>31)+1;c=g>>>20&2047;b=4294967296*(1048575&g)+b;return 2047===c?b?NaN:1/0*a:0===c?4.9E-324*a*b:a*Math.pow(2,c-1075)*(b+4503599627370496)}c.writeDoubleLE=a.bind(null,wh,0,4);c.writeDoubleBE=a.bind(null,xh,4,0);c.readDoubleLE=b.bind(null,yh,0,4);c.readDoubleBE=b.bind(null,zh,4,0)}(),c}function wh(c,a,b){a[b]=255&c;a[b+1]=c>>>8&255;a[b+2]=c>>>16&255;a[b+3]=c>>>24}function xh(c,a,b){a[b]=c>>>24;
                    a[b+1]=c>>>16&255;a[b+2]=c>>>8&255;a[b+3]=255&c}function yh(c,a){return(c[a]|c[a+1]<<8|c[a+2]<<16|c[a+3]<<24)>>>0}function zh(c,a){return(c[a]<<24|c[a+1]<<16|c[a+2]<<8|c[a+3])>>>0}function Ca(c,a){this.lo=c>>>0;this.hi=a>>>0}function Wc(c,a,b){this.fn=c;this.len=a;this.next=void 0;this.val=b}function Ne(){}function yl(c){this.head=c.head;this.tail=c.tail;this.len=c.len;this.next=c.states}function aa(){this.len=0;this.tail=this.head=new Wc(Ne,0,0);this.states=null}function Oe(c,a,b){a[b]=255&c}function Pe(c,
a){this.len=c;this.next=void 0;this.val=a}function Qe(c,a,b){for(;c.hi;)a[b++]=127&c.lo|128,c.lo=(c.lo>>>7|c.hi<<25)>>>0,c.hi>>>=7;for(;127<c.lo;)a[b++]=127&c.lo|128,c.lo>>>=7;a[b++]=c.lo}function Re(c,a,b){a[b]=255&c;a[b+1]=c>>>8&255;a[b+2]=c>>>16&255;a[b+3]=c>>>24}function Ab(){Se.call(this)}function zl(c,a,b){40>c.length?Q.utf8.write(c,a,b):a.utf8Write?a.utf8Write(c,b):a.write(c,b)}function qb(c,a){return RangeError("index out of range: "+c.pos+" + "+(a||1)+" > "+c.len)}function ua(c){this.buf=
                    c;this.pos=0;this.len=c.length}function Te(){var c=new Ah(0,0),a=0;if(!(4<this.len-this.pos)){for(;3>a;++a){if(this.pos>=this.len)throw qb(this);if(c.lo=(c.lo|(127&this.buf[this.pos])<<7*a)>>>0,128>this.buf[this.pos++])return c}return c.lo=(c.lo|(127&this.buf[this.pos++])<<7*a)>>>0,c}for(;4>a;++a)if(c.lo=(c.lo|(127&this.buf[this.pos])<<7*a)>>>0,128>this.buf[this.pos++])return c;if(c.lo=(c.lo|(127&this.buf[this.pos])<<28)>>>0,c.hi=(c.hi|(127&this.buf[this.pos])>>4)>>>0,128>this.buf[this.pos++])return c;
                    if(a=0,4<this.len-this.pos)for(;5>a;++a){if(c.hi=(c.hi|(127&this.buf[this.pos])<<7*a+3)>>>0,128>this.buf[this.pos++])return c}else for(;5>a;++a){if(this.pos>=this.len)throw qb(this);if(c.hi=(c.hi|(127&this.buf[this.pos])<<7*a+3)>>>0,128>this.buf[this.pos++])return c}throw Error("invalid varint encoding");}function Ld(c,a){return(c[a-4]|c[a-3]<<8|c[a-2]<<16|c[a-1]<<24)>>>0}function Bh(){if(this.pos+8>this.len)throw qb(this,8);return new Ah(Ld(this.buf,this.pos+=4),Ld(this.buf,this.pos+=4))}function fc(c){Ue.call(this,
                    c)}function Xc(c,a,b){if("function"!=typeof c)throw TypeError("rpcImpl must be a function");Q.EventEmitter.call(this);this.rpcImpl=c;this.requestDelimited=!!a;this.responseDelimited=!!b}function Al(c){return La(c.reportId,"params.reportId",0,100,!1),La(c.category,"params.category",0,100,!1),La(c.event,"params.event",0,100,!1),La(c.label,"params.label",0,100,!1),W(c.value,"params.value",-9007199254740991,9007199254740991,!1),!0}function Ch(c){return W(c.timeout,"config.timeout",0,1E5),W(c.timeoutFactor,
                    "config.timeoutFactor",0,100,!1),W(c.maxRetryCount,"config.maxRetryConfig",0,1/0),W(c.maxRetryTimeout,"config.maxRetryTimeout",0,1/0),!0}function Dh(c){return La(c.turnServerURL,"turnServerURL"),La(c.username,"username"),La(c.password,"password"),W(c.udpport,"udpport",1,99999,!0),c.forceturn&&sh(c.forceturn,"forceturn"),c.tcpport&&W(c.tcpport,"tcpport",1,99999,!0),!0}function Ve(c,a){La(c.url,"".concat(a,".url"),1,1E3,!1);null==c.x||W(c.x,"".concat(a,".x"),0,1E4);null==c.y||W(c.y,"".concat(a,".y"),
                    0,1E4);null==c.width||W(c.width,"".concat(a,".width"),0,1E4);null==c.height||W(c.height,"".concat(a,".height"),0,1E4);null==c.zOrder||W(c.zOrder,"".concat(a,".zOrder"),0,255);null==c.alpha||W(c.alpha,"".concat(a,".alpha"),0,1,!1)}function Bl(c){var a,b;(null==c.width||W(c.width,"config.width",0,1E4),null==c.height||W(c.height,"config.height",0,1E4),null==c.videoBitrate||W(c.videoBitrate,"config.videoBitrate",1,1E6),null==c.videoFrameRate||W(c.videoFrameRate,"config.videoFrameRate"),null==c.lowLatency||
                sh(c.lowLatency,"config.lowLatency"),null==c.audioSampleRate||bb(c.audioSampleRate,"config.audioSampleRate",[32E3,44100,48E3]),null==c.audioBitrate||W(c.audioBitrate,"config.audioBitrate",1,128),null==c.audioChannels||bb(c.audioChannels,"config.audioChannels",[1,2,3,4,5]),null==c.videoGop||W(c.videoGop,"config.videoGop"),null==c.videoCodecProfile||bb(c.videoCodecProfile,"config.videoCodecProfile",[66,77,100]),null==c.userCount||W(c.userCount,"config.userCount",0,17),null==c.backgroundColor||W(c.backgroundColor,
                    "config.backgroundColor",0,16777215),null==c.userConfigExtraInfo||La(c.userConfigExtraInfo,"config.userConfigExtraInfo",0,4096,!1),c.transcodingUsers&&null!=c.transcodingUsers)&&(uh(c.transcodingUsers,"config.transcodingUsers"),r(a=c.transcodingUsers).call(a,(a,b)=>{Me(a.uid);null==a.x||W(a.x,"transcodingUser[".concat(b,"].x"),0,1E4);null==a.y||W(a.y,"transcodingUser[".concat(b,"].y"),0,1E4);null==a.width||W(a.width,"transcodingUser[".concat(b,"].width"),0,1E4);null==a.height||W(a.height,"transcodingUser[".concat(b,
                    "].height"),0,1E4);null==a.zOrder||W(a.zOrder-1,"transcodingUser[".concat(b,"].zOrder"),0,100);null==a.alpha||W(a.alpha,"transcodingUser[".concat(b,"].alpha"),0,1,!1)}));(null==c.watermark||Ve(c.watermark,"watermark"),null==c.backgroundImage||Ve(c.backgroundImage,"backgroundImage"),c.images&&null!=c.images)&&(uh(c.images,"config.images"),r(b=c.images).call(b,(a,b)=>{Ve(a,"images[".concat(b,"]"))}));return!0}function Eh(c){if(!c.channelName)throw new m(l.INVALID_PARAMS,"invalid channelName in info");
                    if(!c.uid||"number"!=typeof c.uid)throw new m(l.INVALID_PARAMS,"invalid uid in info, uid must be a number");return c.token&&La(c.token,"info.token",1,2047),Me(c.uid),Le(c.channelName),!0}function Fh(c){return bb(c,"mediaSource",["screen","window","application"]),!0}function qa(c){var a,b,d,e;c=c||navigator.userAgent;let f=c.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];if("Chrome"===f[1]){var g=c.match(/(OPR(?=\/))\/?(\d+)/i);null!==g&&(f=g)}"Safari"===f[1]&&(g=c.match(/version\/(\d+)/i),
                null!==g&&(f[2]=g[1]));-1!==E(a=c.toLowerCase()).call(a,"qqbrowser")&&(a=c.match(/(qqbrowser(?=\/))\/?(\d+)/i),null!==a&&(f=a));-1!==E(b=c.toLowerCase()).call(b,"micromessenger")&&(b=c.match(/(micromessenger(?=\/))\/?(\d+)/i),null!==b&&(f=b));-1!==E(d=c.toLowerCase()).call(d,"edge")&&(d=c.match(/(edge(?=\/))\/?(\d+)/i),null!==d&&(f=d));-1!==E(e=c.toLowerCase()).call(e,"trident")&&(e=/\brv[ :]+(\d+)/g.exec(c)||[],null!==e&&(f=["","IE",e[1]]));e=null;d=[{s:X.WIN_10,r:/(Windows 10.0|Windows NT 10.0)/},
                    {s:X.WIN_81,r:/(Windows 8.1|Windows NT 6.3)/},{s:X.WIN_8,r:/(Windows 8|Windows NT 6.2)/},{s:X.WIN_7,r:/(Windows 7|Windows NT 6.1)/},{s:X.WIN_VISTA,r:/Windows NT 6.0/},{s:X.WIN_SERVER_2003,r:/Windows NT 5.2/},{s:X.WIN_XP,r:/(Windows NT 5.1|Windows XP)/},{s:X.WIN_2000,r:/(Windows NT 5.0|Windows 2000)/},{s:X.ANDROID,r:/Android/},{s:X.OPEN_BSD,r:/OpenBSD/},{s:X.SUN_OS,r:/SunOS/},{s:X.LINUX,r:/(Linux|X11)/},{s:X.IOS,r:/(iPhone|iPad|iPod)/},{s:X.MAC_OS_X,r:/Mac OS X/},{s:X.MAC_OS,r:/(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/},
                    {s:X.QNX,r:/QNX/},{s:X.UNIX,r:/UNIX/},{s:X.BEOS,r:/BeOS/},{s:X.OS_2,r:/OS\/2/},{s:X.SEARCH_BOT,r:/(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\/Teoma|ia_archiver)/}];for(let a in d)if(b=d[a],b.r.test(c)){e=b.s;break}return{name:f[1],version:f[2],os:e}}function Yc(){return qa().name===ea.CHROME}function Gh(){return window.navigator.appVersion&&null!==window.navigator.appVersion.match(/Chrome\/([\w\W]*?)\./)&&35>=window.navigator.appVersion.match(/Chrome\/([\w\W]*?)\./)[1]}function We(){let c=
                    qa();return c.name===ea.EDGE||c.name===ea.SAFARI?!1:!!navigator.userAgent.toLocaleLowerCase().match(/chrome\/[\d]./i)}function Hh(c,a){var b=S(c);if(ia){var d=ia(c);a&&(d=O(d).call(d,function(a){return da(c,a).enumerable}));b.push.apply(b,d)}return b}function Bb(c){for(var a=1;a<arguments.length;a++){var b,d=null!=arguments[a]?arguments[a]:{};if(a%2)r(b=Hh(Object(d),!0)).call(b,function(a){Ra(c,a,d[a])});else if(ja)Sa(c,ja(d));else{var e;r(e=Hh(Object(d))).call(e,function(a){ba(c,a,da(d,a))})}}return c}
                function Cl(c){if(!c.address||!c.tcp)throw new m(l.UNEXPECTED_RESPONSE,"Invalid address format ".concat(c));return c.address.match(/^[\.:\d]+$/)?"".concat(c.address.replace(/[^\d]/g,"-"),".edge.agora.io"):(h.info("Cannot recognized as IP address ".concat(c.address,". Used As Host instead")),n(a="".concat(c.address,":")).call(a,c.tcp));var a}function Dl(c,a){var b;let d=yc?[".agora.io",".agoraio.cn"]:[".agora.io"],e=d[1]&&-1!==E(a).call(a,d[1])?1:0;c.addresses=c.addresses||[];return{gatewayAddrs:A(b=
                        c.addresses).call(b,a=>{var b,c,f;return a.ip.match(/^[\.:\d]+$/)?n(b=n(c="".concat(a.ip.replace(/[^\d]/g,"-"),".edge")).call(c,d[e++%d.length],":")).call(b,a.port):(h.info("Cannot recognized as IP address ".concat(a.ip,". Used As Host instead")),n(f="".concat(a.ip,":")).call(f,a.port))}),uid:c.uid,cid:c.cid,vid:c.detail&&c.detail[8],uni_lbs_ip:c.detail&&c.detail[1],res:c}}function El(c,a){var b;return{addressList:A(b=c.servers).call(b,(b,c)=>{var d,e,k,q,B;return yc?n(d=n(e=n(k="wss://".concat(b.address.replace(/\./g,
                        "-"),".edge.")).call(k,0==c%2?"agora.io":"agoraio.cn",":")).call(e,b.wss,"?serviceName=")).call(d,encodeURIComponent(a)):n(q=n(B="wss://".concat(b.address.replace(/\./g,"-"),".edge.agora.io:")).call(B,b.wss,"?serviceName=")).call(q,encodeURIComponent(a))}),workerToken:c.workerToken,vid:c.vid}}function Cb(c){return"number"==typeof c?c:c.exact||c.ideal||c.max||c.min||0}function Fl(c){var a;c=c._encoderConfig;if(!c)return{};let b={resolution:c.width&&c.height?n(a="".concat(Cb(c.width),"x")).call(a,Cb(c.height)):
                        void 0,maxVideoBW:c.bitrateMax,minVideoBW:c.bitrateMin};return"number"==typeof c.frameRate?(b.maxFrameRate=c.frameRate,b.minFrameRate=c.frameRate):c.frameRate&&(b.maxFrameRate=c.frameRate.max||c.frameRate.ideal||c.frameRate.exact||c.frameRate.min,b.minFrameRate=c.frameRate.min||c.frameRate.ideal||c.frameRate.exact||c.frameRate.max),b}function Gl(c){let a={id:"bweforvideo",timestamp:(new Date(c.timestamp)).toISOString(),type:"VideoBwe"};return c.bitrate.retransmit&&(a.A_rb=c.bitrate.retransmit.toString()),
                c.bitrate.targetEncoded&&(a.A_teb=c.bitrate.targetEncoded.toString()),a.A_aeb=c.bitrate.actualEncoded.toString(),a.A_tb=c.bitrate.transmit.toString(),void 0!==c.sendBandwidth&&(a.A_asb=c.sendBandwidth.toString()),a}function Ih(c,a){let b=c.videoSend[0];if(!b)return null;a=a&&a.videoSend[0]?a.videoSend[0].inputFrame:void 0;c={id:pa(10,""),timestamp:(new Date(c.timestamp)).toISOString(),mediaType:"video",type:"ssrc",ssrc:b.ssrc.toString()};return b.inputFrame&&(a&&b.inputFrame.height===a.height||(c.A_fhi=
                    b.inputFrame.height?b.inputFrame.height.toString():"0"),a&&b.inputFrame.width===a.width||(c.A_fwi=b.inputFrame.width?b.inputFrame.width.toString():"0"),a&&b.inputFrame.frameRate===a.frameRate||(c.A_fri=b.inputFrame.frameRate?b.inputFrame.frameRate.toString():"0")),c}function Hl(c,a){let b=c.videoSend[0];if(!b)return null;c={id:pa(10,""),timestamp:(new Date(c.timestamp)).toISOString(),mediaType:"video",type:"ssrc",ssrc:b.ssrc.toString()};switch(c.A_vstd=a._originMediaStreamTrack&&!a._originMediaStreamTrack.enabled||
                !a._mediaStreamTrack.enabled?"1":"0",b.sentFrame&&(c.A_fhs=b.sentFrame.height.toString(),c.A_frs=b.sentFrame.frameRate.toString(),c.A_fws=b.sentFrame.width.toString()),b.adaptionChangeReason){case "none":c.A_ac="0";break;case "cpu":c.A_ac="1";break;case "bandwidth":c.A_ac="2";break;case "other":c.A_ac="3"}return c.A_nr=b.nacksCount.toString(),b.avgEncodeMs&&(c.A_aem=b.avgEncodeMs.toFixed(0).toString()),c}function Il(c,a){let b=c.audioSend[0];if(!b)return null;c={id:pa(10,""),timestamp:(new Date(c.timestamp)).toISOString(),
                    mediaType:"audio",type:"ssrc",ssrc:b.ssrc.toString()};return c.A_astd=a._originMediaStreamTrack.enabled&&a._mediaStreamTrack.enabled?"0":"1",b.inputLevel?c.A_ail=Math.round(100*b.inputLevel).toString():c.A_ail=Math.round(100*a._source.getAudioAvgLevel()).toString(),c.A_apil=Math.round(100*a._source.getAudioAvgLevel()).toString(),c}function Jl(c,a){let b=c.videoRecv[0];if(!b)return null;c={id:pa(10,""),timestamp:(new Date(c.timestamp)).toISOString(),mediaType:"video",type:"ssrc",ssrc:b.ssrc.toString()};
                    var d;(c.bytesReceived=b.bytes.toString(),c.packetsLost=b.packetsLost.toString(),c.packetsReceived=b.packets.toString(),b.framesRateFirefox&&(c.A_frr=b.framesRateFirefox.toString()),b.receivedFrame&&(c.A_frr=b.receivedFrame.frameRate.toString()),c.A_frd=b.decodeFrameRate.toString(),b.outputFrame&&(c.A_fro=b.outputFrame.frameRate.toString()),void 0!==b.jitterBufferMs&&(c.A_jbm=b.jitterBufferMs.toString()),void 0!==b.currentDelayMs&&(c.A_cdm=b.currentDelayMs.toString()),c.A_fs=b.firsCount.toString(),
                        c.A_ns=b.nacksCount.toString(),c.A_ps=b.plisCount.toString(),a&&(c.A_vrtd=a._originMediaStreamTrack.enabled&&a._mediaStreamTrack.enabled?"0":"1"),a._player&&0<a._player.freezeTimeCounterList.length)&&(c.A_vrft=Ja(d=a._player.freezeTimeCounterList).call(d,0,1)[0].toString());return c}function Kl(c,a){let b=c.audioRecv[0];if(!b)return null;c={id:pa(10,""),timestamp:(new Date(c.timestamp)).toISOString(),mediaType:"audio",type:"ssrc",ssrc:b.ssrc.toString()};return c.bytesReceived=b.bytes.toString(),c.packetsLost=
                    b.packetsLost.toString(),c.packetsReceived=b.packets.toString(),b.outputLevel?c.A_aol=Math.round(100*b.outputLevel).toString():c.A_aol=Math.round(100*a._source.getAudioAvgLevel()).toString(),c.A_apol=Math.round(100*a._source.getAudioAvgLevel()).toString(),a&&(c.A_artd=a._originMediaStreamTrack.enabled&&a._mediaStreamTrack.enabled?"0":"1"),c.A_jr=b.jitterMs.toString(),c.A_jbm=b.jitterBufferMs.toString(),c.A_cdm=b.jitterBufferMs.toString(),c}function Ll(c){return(c=c.videoSend[0])?{mediaType:"video",
                    isVideoMute:!1,frameRateInput:c.inputFrame&&c.inputFrame.frameRate.toString(),frameRateSent:c.sentFrame&&c.sentFrame.frameRate.toString(),googRtt:c.rttMs.toString()}:null}function Ml(c,a,b,d,e){a=a.videoRecv[0];if(!a)return null;c=Zc.isRemoteVideoFreeze(e,a,d?d.videoRecv[0]:void 0)&&c;b={mediaType:"video",isVideoMute:!1,peerId:b,frameRateReceived:a.receivedFrame&&a.receivedFrame.frameRate.toString(),frameRateDecoded:a.decodedFrame&&a.decodedFrame.frameRate.toString(),isFreeze:c,bytesReceived:a.bytes.toString(),
                    packetsReceived:a.packets.toString(),packetsLost:a.packetsLost.toString()};return a.framesRateFirefox&&(b.frameRateDecoded=a.framesRateFirefox.toString(),b.frameRateReceived=a.framesRateFirefox.toString()),b}function Nl(c,a,b){c=c.audioRecv[0];if(!c)return null;b=Zc.isRemoteAudioFreeze(b);return{mediaType:"audio",isAudioMute:!1,peerId:a,googJitterReceived:c.jitterBufferMs.toString(),isFreeze:b,bytesReceived:c.bytes.toString(),packetsReceived:c.packets.toString(),packetsLost:c.packetsLost.toString(),
                    frameReceived:c.receivedFrames.toString(),frameDropped:c.droppedFrames.toString()}}function Jh(c){return 0<=c&&.17>c?1:.17<=c&&.36>c?2:.36<=c&&.59>c?3:.59<=c&&1>=c?4:1<c?5:0}function Kh(c,a){var b=S(c);if(ia){var d=ia(c);a&&(d=O(d).call(d,function(a){return da(c,a).enumerable}));b.push.apply(b,d)}return b}function Xe(c){for(var a=1;a<arguments.length;a++){var b,d=null!=arguments[a]?arguments[a]:{};if(a%2)r(b=Kh(Object(d),!0)).call(b,function(a){Ra(c,a,d[a])});else if(ja)Sa(c,ja(d));else{var e;r(e=
                    Kh(Object(d))).call(e,function(a){ba(c,a,da(d,a))})}}return c}function Md(c){return window.TextEncoder?(new TextEncoder).encode(c).length:c.length}function Ol(c,a,b){let d=c[a];if(!d||"string"!=typeof d)return[c];c[a]="";let e=Md(z(c)),f=0,g=[],k=0;for(let q=0;q<d.length;q++)k+=127>=d.charCodeAt(q)?1:3,k<=b-e||(g[g.length]=Xe({},c,{[a]:d.substring(f,q)}),f=q,k=127>=d.charCodeAt(q)?1:3);return f!==d.length-1&&(g[g.length]=Xe({},c,{[a]:d.substring(f)})),g}function Pl(){return new u(c=>{document.body?
                    c():window.addEventListener("load",()=>c())})}function Db(c){return new u(a=>{window.setTimeout(a,c)})}function Ql(c){let a=new m(l.TIMEOUT,"timeout");return new u((b,d)=>{window.setTimeout(()=>d(a),c)})}function pa(c=7,a){var b,d;let e=Math.random().toString(16).substr(2,c).toLowerCase();return e.length===c?n(b="".concat(a)).call(b,e):n(d="".concat(a)).call(d,e)+pa(c-e.length,"")}function $c(c){return new u((a,b)=>{let d=document.createElement("video");d.setAttribute("autoplay","");d.setAttribute("muted",
                    "");d.muted=!0;d.autoplay=!0;d.setAttribute("playsinline","");d.setAttribute("style","position: absolute; top: 0; left: 0; width: 1px; height: 1px");document.body.appendChild(d);d.addEventListener("playing",()=>{!d.videoWidth&&qa().name===ea.FIREFOX||(document.body.removeChild(d),a([d.videoWidth,d.videoHeight]))});d.srcObject=new MediaStream([c])})}function zc(c){return u.all(A(c).call(c,a=>a.then(a=>{throw a;},a=>a))).then(a=>{throw a;},a=>a)}function Ma(c,a,...b){return 0===c.getListeners(a).length?
                    u.reject(new m(l.UNEXPECTED_ERROR,"can not emit promise")):new u((d,e)=>{c.emit(a,...b,d,e)})}function Ta(c,a,...b){return 0===c.getListeners(a).length?u.resolve():Ma(c,a,...b)}function gc(c,a,...b){return 0===c.getListeners(a).length?null:ad(c,a,...b)}function ad(c,a,...b){let d=null,e=null;if(c.emit(a,...b,a=>{d=a},a=>{e=a}),null!==e)throw e;if(null===d)throw new m(l.UNEXPECTED_ERROR,"handler is not sync");return d}function bd(c,a){a=E(c).call(c,a);-1!==a&&Ja(c).call(c,a,1)}function Lh(c){let a=
                    [];return r(c).call(c,b=>{-1===E(a).call(a,b)&&a.push(b)}),a}function cb(c){u.resolve().then(c)}function Rl(c,a){if(c.length!==a.length)return!1;for(let b=0;b<c.length;b+=1){let d=c[b];if(O(c).call(c,a=>a===d).length!==O(a).call(a,a=>a===d).length)return!1}return!0}function cd(c,a){Mh[a]||(Mh[a]=!0,c())}function Nh(c){c=window.atob(c);let a=new Uint8Array(new ArrayBuffer(c.length));for(let b=0;b<c.length;b+=1)a[b]=c.charCodeAt(b);return a}function Ye(c){let a="";for(let b=0;b<c.length;b+=1)a+=String.fromCharCode(c[b]);
                    return window.btoa(a)}function Sl(c,a){var b,d,e,f,g;if("motion"===c)return h.debug(n(f=n(g="adjust bitrate for motion, (".concat(a.bitrateMax,", ")).call(g,a.bitrateMin,"}) -> (")).call(f,a.bitrateMax,", undefined)")),{max:a.bitrateMax};if(!a.width||!a.height)return{max:a.bitrateMax,min:a.bitrateMin};c=Cb(a.width)*Cb(a.height);f=Math.max(.25,.1+.03*Cb(a.frameRate||20));if(19200>c)return{};if(76800>c)g=dd[0];else if(307200>c)g=dd[1];else if(921600>c)g=dd[2];else if(2073600>c)g=dd[3];else{if(!(8294400>
                    c))return{min:a.bitrateMin,max:a.bitrateMax};g=dd[4]}c=[Math.round((g[0][0]+g[0][1]*c)*f),Math.round((g[1][0]+g[1][1]*c)*f),Math.round((g[2][0]+g[2][1]*c)*f)];c={min:Math.max(c[2],a.bitrateMin||0),max:Math.max(c[2],a.bitrateMax||c[0])};return h.debug(n(b=n(d=n(e="adjust bitrate for detail, (".concat(a.bitrateMax,", ")).call(e,a.bitrateMin,"}) -> (")).call(d,c.max,", ")).call(b,c.min,")")),c}async function Oh(c,a){let b=(a,b)=>a?"number"!=typeof a?a.max||a.exact||a.ideal||a.min||b:a:b;c={audio:!1,
                    video:{mandatory:{chromeMediaSource:"desktop",chromeMediaSourceId:c,maxHeight:b(a.height,1080),maxWidth:b(a.width,1920)}}};return a.frameRate&&"number"!=typeof a.frameRate?(c.video.mandatory.maxFrameRate=a.frameRate.max,c.video.mandatory.minFrameRate=a.frameRate.min):"number"==typeof a.frameRate&&(c.video.mandatory.maxFrameRate=a.frameRate),await navigator.mediaDevices.getUserMedia(c)}async function Tl(c){var a=await Ph(c.mediaSource);a=await Ul(a);return await Oh(a,c)}async function Ph(c){let a=
                    ["window","screen"];"application"!==c&&"window"!==c||(a=["window"]);"screen"===c&&(a=["screen"]);let b=Qh();if(!b)throw new m(l.ELECTRON_IS_NULL);c=null;try{c=b.desktopCapturer.getSources({types:a})}catch(d){c=null}c&&c.then||(c=new u((c,e)=>{b.desktopCapturer.getSources({types:a},(a,b)=>{a?e(a):c(b)})}));try{return await c}catch(d){throw new m(l.ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR,d.toString());}}function Ul(c){return new u((a,b)=>{let d=document.createElement("div");d.innerText="share screen";
                    d.setAttribute("style","text-align: center; height: 25px; line-height: 25px; border-radius: 4px 4px 0 0; background: #D4D2D4; border-bottom:  solid 1px #B9B8B9;");let e=document.createElement("div");e.setAttribute("style","width: 100%; height: 500px; padding: 15px 25px ; box-sizing: border-box;");let f=document.createElement("div");f.innerText="Agora Web Screensharing wants to share the contents of your screen with webdemo.agorabeckon.com. Choose what you'd like to share.";f.setAttribute("style",
                        "height: 12%;");let g=document.createElement("div");g.setAttribute("style","width: 100%; height: 80%; background: #FFF; border:  solid 1px #CBCBCB; display: flex; flex-wrap: wrap; justify-content: space-around; overflow-y: scroll; padding: 0 15px; box-sizing: border-box;");let k=document.createElement("div");k.setAttribute("style","text-align: right; padding: 16px 0;");let q=document.createElement("button");q.innerHTML="cancel";q.setAttribute("style","width: 85px;");q.onclick=()=>{document.body.removeChild(B);
                        let a=Error("NotAllowedError");a.name="NotAllowedError";b(a)};k.appendChild(q);e.appendChild(f);e.appendChild(g);e.appendChild(k);let B=document.createElement("div");B.setAttribute("style","position: fixed; z-index: 99999999; top: 50%; left: 50%; width: 620px; height: 525px; background: #ECECEC; border-radius: 4px; -webkit-transform: translate(-50%,-50%); transform: translate(-50%,-50%);");B.appendChild(d);B.appendChild(e);document.body.appendChild(B);A(c).call(c,b=>{if(b.id){let c=document.createElement("div");
                        c.setAttribute("style","width: 30%; height: 160px; padding: 20px 0; text-align: center;box-sizing: content-box;");c.innerHTML='<div style="height: 120px; display: table-cell; vertical-align: middle;"><img style="width: 100%; background: #333333; box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2);" src='+b.thumbnail.toDataURL()+' /></div><span style="\theight: 40px; line-height: 40px; display: inline-block; width: 70%; word-break: keep-all; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">'+
                            b.name+"</span>";c.onclick=()=>{document.body.removeChild(B);a(b.id)};g.appendChild(c)}})})}function Qh(){if(Nd)return Nd;try{return Nd=window.require("electron"),Nd}catch(c){return null}}async function Eb(c,a){let b=0,d=null;for(;2>b;)try{d=await Vl(c,a,0<b);break}catch(g){var e,f;if(g instanceof m)throw h.error(n(f="[".concat(a,"] ")).call(f,g.toString())),g;let c=Od(g.name||g.code||g,g.message);if(c.code===l.MEDIA_OPTION_INVALID)h.debug("[".concat(a,"] detect media option invalid, retry")),b+=
                    1,await Db(500);else throw h.error(n(e="[".concat(a,"] ")).call(e,c.toString())),c;}if(!d)throw new m(l.UNEXPECTED_ERROR,"can not find stream after getUserMedia");return d}async function Vl(c,a,b){if(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)throw new m(l.NOT_SUPPORTED,"can not find getUserMedia");b&&(c.video&&(delete c.video.width,delete c.video.height),c.screen&&(delete c.screen.width,delete c.screen.height));var d=fa;b=new MediaStream;if(c.audioSource&&b.addTrack(c.audioSource),
                c.videoSource&&b.addTrack(c.videoSource),!c.audio&&!c.video&&!c.screen)return h.debug("Using Video Source/ Audio Source"),b;if(c.screen)if(Qh())c.screen.sourceId?Ac(b,await Oh(c.screen.sourceId,c.screen)):Ac(b,await Tl(c.screen));else if(Yc()&&c.screen.extensionId&&c.screen.mandatory){if(!d.getStreamFromExtension)throw new m(l.NOT_SUPPORTED,"This browser does not support screen sharing");h.debug("[".concat(a,'] Screen access on chrome stable, looking for extension"'));var e=await Wl(c.screen.extensionId,
                    a);c.screen.mandatory.chromeMediaSourceId=e;Ac(b,await navigator.mediaDevices.getUserMedia({video:{mandatory:c.screen.mandatory}}))}else if(d.getDisplayMedia)c.screen.mediaSource&&Fh(c.screen.mediaSource),e={width:c.screen.width,height:c.screen.height,frameRate:c.screen.frameRate,displaySurface:"screen"===c.screen.mediaSource?"monitor":c.screen.mediaSource},h.debug("[".concat(a,"] getDisplayMedia:"),z({video:e,audio:!!c.screenAudio})),Ac(b,await navigator.mediaDevices.getDisplayMedia({video:e,audio:!!c.screenAudio}));
                else{if(qa().name!==ea.FIREFOX)throw h.error("[".concat(a,"] This browser does not support screenSharing")),new m(l.NOT_SUPPORTED,"This browser does not support screen sharing");c.screen.mediaSource&&Fh(c.screen.mediaSource);d={video:{mediaSource:c.screen.mediaSource,width:c.screen.width,height:c.screen.height,frameRate:c.screen.frameRate}};h.debug(n(e="[".concat(a,"] getUserMedia: ")).call(e,z(d)));Ac(b,await navigator.mediaDevices.getUserMedia(d))}if(!c.video&&!c.audio)return b;c={video:c.video,
                    audio:c.audio};h.debug("[".concat(a,"] GetUserMedia"),z(c));a=qa();let f;e=null;a.name!==ea.SAFARI&&a.os!==X.IOS||(e=await Ze.lock());try{f=await navigator.mediaDevices.getUserMedia(c)}catch(g){throw e&&e(),g;}return c.audio&&(Rh=!0),c.video&&(Sh=!0),Ac(b,f),e&&e(),b}function Od(c,a){switch(c){case "Starting video failed":case "OverconstrainedError":case "TrackStartError":var b;return new m(l.MEDIA_OPTION_INVALID,n(b="".concat(c,": ")).call(b,a));case "NotFoundError":case "DevicesNotFoundError":var d;
                    return new m(l.DEVICE_NOT_FOUND,n(d="".concat(c,": ")).call(d,a));case "NotSupportedError":var e;return new m(l.NOT_SUPPORTED,n(e="".concat(c,": ")).call(e,a));case "InvalidStateError":case "NotAllowedError":case "PERMISSION_DENIED":case "PermissionDeniedError":var f;return new m(l.PERMISSION_DENIED,n(f="".concat(c,": ")).call(f,a));case "ConstraintNotSatisfiedError":var g;return new m(l.CONSTRAINT_NOT_SATISFIED,n(g="".concat(c,": ")).call(g,a));default:var k;return h.error("getUserMedia unexpected error",
                    c),new m(l.UNEXPECTED_ERROR,n(k="".concat(c,": ")).call(k,a))}}function Ac(c,a){let b=c.getVideoTracks()[0],d=c.getAudioTracks()[0],e=a.getVideoTracks()[0];(a=a.getAudioTracks()[0])&&(d&&c.removeTrack(d),c.addTrack(a));e&&(b&&c.removeTrack(b),c.addTrack(e))}function Wl(c,a){return new u((b,d)=>{try{chrome.runtime.sendMessage(c,{getStream:!0},c=>{if(!c||!c.streamId)return h.error("[".concat(a,"] No response from Chrome Plugin. Plugin not installed properly"),c),void d(new m(l.CHROME_PLUGIN_NO_RESPONSE,
                    "No response from Chrome Plugin. Plugin not installed properly"));b(c.streamId)})}catch(f){var e;h.error(n(e="[".concat(a,"] AgoraRTC screensharing plugin is not accessible(")).call(e,c,")"),f.toString());d(new m(l.CHROME_PLUGIN_NOT_INSTALL))}})}function Th(c,a){var b=S(c);if(ia){var d=ia(c);a&&(d=O(d).call(d,function(a){return da(c,a).enumerable}));b.push.apply(b,d)}return b}function Xl(c){for(var a=1;a<arguments.length;a++){var b,d=null!=arguments[a]?arguments[a]:{};if(a%2)r(b=Th(Object(d),!0)).call(b,
                    function(a){Ra(c,a,d[a])});else if(ja)Sa(c,ja(d));else{var e;r(e=Th(Object(d))).call(e,function(a){ba(c,a,da(d,a))})}}return c}function Nb(c,a,b){return new u((d,e)=>{a.timeout=a.timeout||w.HTTP_CONNECT_TIMEOUT;a.responseType=a.responseType||"json";a.data&&!b?(a.data=z(a.data),Uh+=Md(a.data)):b&&(Uh+=a.data.size);a.headers=a.headers||{};a.headers["Content-Type"]=a.headers["Content-Type"]||"application/json";a.method="POST";a.url=c;Fb.request(a).then(a=>{"string"==typeof a.data?$e+=Md(a.data):a.data instanceof
                ArrayBuffer||a.data instanceof Uint8Array?$e+=a.data.byteLength:$e+=Md(z(a.data));d(a.data)}).catch(a=>{Fb.isCancel(a)?e(new m(l.OPERATION_ABORTED,"cancel token canceled")):"ECONNABORTED"===a.code?e(new m(l.NETWORK_TIMEOUT,a.message)):a.response?e(new m(l.NETWORK_RESPONSE_ERROR,a.response.status)):e(new m(l.NETWORK_ERROR,a.message))})})}async function Yl(c,a){let b=new Blob([a.data],{type:"buffer"}),d;try{d=await Nb(c,Xl({},a,{data:b,headers:{"Content-Type":"application/octet-stream"}}),!0)}catch(e){throw e;
                }return d}function Vh(c,a){var b=S(c);if(ia){var d=ia(c);a&&(d=O(d).call(d,function(a){return da(c,a).enumerable}));b.push.apply(b,d)}return b}function wa(c){for(var a=1;a<arguments.length;a++){var b,d=null!=arguments[a]?arguments[a]:{};if(a%2)r(b=Vh(Object(d),!0)).call(b,function(a){Ra(c,a,d[a])});else if(ja)Sa(c,ja(d));else{var e;r(e=Vh(Object(d))).call(e,function(a){ba(c,a,da(d,a))})}}return c}function Pd(c){var a=Zl[Math.floor(c/1E4)];if(!a)return{desc:"unkonw error",retry:!1};a=a[c%1E4];if(!a){if(Math.floor(c/
                    1E4)===Bc.ACCESS_POINT){c%=1E4;if("1"===c.toString()[0])return{desc:c.toString(),retry:!1};if("2"===c.toString()[0])return{desc:c.toString(),retry:!0}}return{desc:"unkonw error",retry:!1}}return a}function Wh(c){return $l[c]||{desc:"UNKNOW_ERROR_".concat(c),action:"failed"}}function am(c,a){return Math.min(a.maxRetryTimeout,a.timeout*Math.pow(a.timeoutFactor,c))}function Yb(c,a,b,d){let e=ab({},Pa,d),f=e.timeout,g=async()=>{await Db(f);f*=e.timeoutFactor;f=Math.min(e.maxRetryTimeout,f)},k=!1;d=new u(async(d,
f)=>{a=a||(()=>!1);b=b||(()=>!0);for(let q=0;q<e.maxRetryCount;q+=1){if(k)return f(new m(l.OPERATION_ABORTED));try{const b=await c();if(!a(b,q)||q+1===e.maxRetryCount)return d(b);await g()}catch(Ia){if(!b(Ia,q)||q+1===e.maxRetryCount)return f(Ia);await g()}}});return d.cancel=()=>k=!0,d}function bm(){Xh?(h.info("create audio context"),Cc=new Xh,Cc.onstatechange=()=>{ed.emit("state-change")},cm(Cc)):h.error("your browser is not support web audio")}function fd(){if(!Cc&&(bm(),!Cc))throw new m(l.NOT_SUPPORTED,
                    "can not create audio context");return Cc}function gd(c){if(!dm()){h.debug("polyfill audio node");var a=c.connect,b=c.disconnect;c.connect=(b,e,f)=>{var d;return c._inputNodes||(c._inputNodes=[]),Aa(d=c._inputNodes).call(d,b)||(b instanceof AudioNode?(c._inputNodes.push(b),a.call(c,b,e,f)):a.call(c,b,e)),c};c.disconnect=(d,e,f)=>{b.call(c);d?bd(c._inputNodes,d):c._inputNodes=[];for(let b of c._inputNodes)a.call(c,b)}}}function em(c){let a=fd();return new u((b,d)=>{a.decodeAudioData(c,a=>{b(a)},a=>
                {d(new m(l.DECODE_AUDIO_FILE_FAILED,a.toString()))})})}function dm(){if(null!==af)return af;var c=fd();let a=c.createBufferSource(),b=c.createGain();c=c.createGain();a.connect(b);a.connect(c);a.disconnect(b);c=!1;try{a.disconnect(b)}catch(d){c=!0}return a.disconnect(),af=c,c}function bf(c,a){let b=1/a,d=fd(),e=d.createGain();e.gain.value=0;e.connect(d.destination);let f=!1,g=()=>{if(f)return void(e=null);const a=d.createOscillator();a.onended=g;a.connect(e);a.start(0);a.stop(d.currentTime+b);c(d.currentTime)};
                    return g(),()=>{f=!0}}function fm(c){for(let a=0;a<c.outputBuffer.numberOfChannels;a+=1){let b=c.outputBuffer.getChannelData(a);for(let a=0;a<b.length;a+=1)b[a]=0}return c.inputBuffer}function cm(c){function a(a){"running"===c.state?(b(!1),t&&c.suspend().then(d,d)):"closed"!==c.state&&(t?b(!1):(b(!0),a&&c.resume().then(d,d)))}function b(a){if(w!==a){w=a;for(let b=0,c=v;b<c.length;b+=1){let d=c[b];a?window.addEventListener(d,e,{capture:!0,passive:!0}):window.removeEventListener(d,e,{capture:!0,passive:!0})}}}
                    function d(){a(!1)}function e(){a(!0)}function f(a){if(!y)if(u.paused)if(t)g(!1);else if(a){g(!1);y=!0;a=void 0;try{(a=u.play())?a.then(k,k):(u.addEventListener("playing",k),u.addEventListener("abort",k),u.addEventListener("error",k))}catch(lq){k()}}else g(!0);else g(!1),t&&u.pause()}function g(a){if(z!==a){z=a;for(let b=0,c=v;b<c.length;b++){let d=c[b];a?window.addEventListener(d,q,{capture:!0,passive:!0}):window.removeEventListener(d,q,{capture:!0,passive:!0})}}}function k(){u.removeEventListener("playing",
                        k);u.removeEventListener("abort",k);u.removeEventListener("error",k);y=!1;f(!1)}function q(){f(!0)}function B(){p&&r?m||(m=!0,t=!1,u&&f(!0),a(!0)):m&&(m=!1)}function L(){l&&document[l.hidden]===m&&(p=!document[l.hidden],B())}function h(a){if(!a||a.target===window){if(document.hasFocus()){if(r)return;r=!0}else{if(!r)return;r=!1}B()}}function x(a,b){let c;for(c=b;1<a;a--)c+=b;return c}let l;void 0!==document.hidden?l={hidden:"hidden",visibilitychange:"visibilitychange"}:void 0!==document.webkitHidden?
                        l={hidden:"webkitHidden",visibilitychange:"webkitvisibilitychange"}:void 0!==document.mozHidden?l={hidden:"mozHidden",visibilitychange:"mozvisibilitychange"}:void 0!==document.msHidden&&(l={hidden:"msHidden",visibilitychange:"msvisibilitychange"});var n=navigator.userAgent.toLowerCase();n=0<=E(n).call(n,"iphone")&&0>E(n).call(n,"like iphone")||0<=E(n).call(n,"ipad")&&0>E(n).call(n,"like ipad")||0<=E(n).call(n,"ipod")&&0>E(n).call(n,"like ipod");let m=!0,p=!0,r=!0,t=!1,v="click contextmenu auxclick dblclick mousedown mouseup touchend keydown keyup".split(" "),
                        u,w=!1,z=!1,y=!1;if(n){let a=document.createElement("div");a.innerHTML="<audio x-webkit-airplay='deny'></audio>";u=a.children.item(0);u.controls=!1;u.disableRemotePlayback=!0;u.preload="auto";u.src="data:audio/mpeg;base64,//uQx"+x(23,"A")+"WGluZwAAAA8AAAACAAACcQCA"+x(16,"gICA")+x(66,"/")+"8AAABhTEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAnGMHkkI"+x(320,"A")+"//sQxAADgnABGiAAQBCqgCRMAAgEAH"+x(15,"/")+"7+n/9FTuQsQH//////2NG0jWUGlio5gLQTOtIoeR2WX////X4s9Atb/JRVCbBUpeRUq"+x(18,"/")+"9RUi0f2jn/+xDECgPCjAEQAABN4AAANIAAAAQVTEFNRTMuMTAw"+
                        x(97,"V")+"Q==";u.loop=!0;u.load();f(!0)}c.onstatechange=function(){a(!0)};a(!1);l&&document.addEventListener(l.visibilitychange,L,!0);n&&(window.addEventListener("focus",h,!0),window.addEventListener("blur",h,!0));L();h()}function Yh(c,a){var b=S(c);if(ia){var d=ia(c);a&&(d=O(d).call(d,function(a){return da(c,a).enumerable}));b.push.apply(b,d)}return b}function cf(c){for(var a=1;a<arguments.length;a++){var b,d=null!=arguments[a]?arguments[a]:{};if(a%2)r(b=Yh(Object(d),!0)).call(b,function(a){Ra(c,
                    a,d[a])});else if(ja)Sa(c,ja(d));else{var e;r(e=Yh(Object(d))).call(e,function(a){ba(c,a,da(d,a))})}}return c}function Zh(c,a){var b=S(c);if(ia){var d=ia(c);a&&(d=O(d).call(d,function(a){return da(c,a).enumerable}));b.push.apply(b,d)}return b}function df(c){for(var a=1;a<arguments.length;a++){var b,d=null!=arguments[a]?arguments[a]:{};if(a%2)r(b=Zh(Object(d),!0)).call(b,function(a){Ra(c,a,d[a])});else if(ja)Sa(c,ja(d));else{var e;r(e=Zh(Object(d))).call(e,function(a){ba(c,a,da(d,a))})}}return c}function $h(c,
a){var b=S(c);if(ia){var d=ia(c);a&&(d=O(d).call(d,function(a){return da(c,a).enumerable}));b.push.apply(b,d)}return b}function gm(c){for(var a=1;a<arguments.length;a++){var b,d=null!=arguments[a]?arguments[a]:{};if(a%2)r(b=$h(Object(d),!0)).call(b,function(a){Ra(c,a,d[a])});else if(ja)Sa(c,ja(d));else{var e;r(e=$h(Object(d))).call(e,function(a){ba(c,a,da(d,a))})}}return c}async function hm(c,a,b,d,e){let f=v(),g={sid:b.sid,opid:10,appid:b.appId,string_uid:a},k=c[0];b=await Yb(()=>Nb(k+"".concat(-1===
                E(k).call(k,"?")?"?":"&","action=stringuid"),{data:g,cancelToken:d,headers:{"X-Packet-Service-Type":0,"X-Packet-URI":72}}),(b,d)=>{if(0===b.code){var e;if(0>=b.uid||b.uid>=Math.pow(2,32))throw h.error(n(e="Invalid Uint Uid ".concat(a," => ")).call(e,b.uid),b),t.reqUserAccount(g.sid,{lts:f,success:!1,serverAddr:k,stringUid:g.string_uid,uid:b.uid,errorCode:l.INVALID_UINT_UID_FROM_STRING_UID,extend:g}),new m(l.INVALID_UINT_UID_FROM_STRING_UID);return t.reqUserAccount(g.sid,{lts:f,success:!0,serverAddr:k,
                    stringUid:g.string_uid,uid:b.uid,errorCode:null,extend:g}),!1}e=Pd(b.code);return e.retry&&(k=c[(d+1)%c.length]),t.reqUserAccount(g.sid,{lts:f,success:!1,serverAddr:k,stringUid:g.string_uid,uid:b.uid,errorCode:e.desc,extend:g}),e.retry},(a,b)=>a.code!==l.OPERATION_ABORTED&&(t.reqUserAccount(g.sid,{lts:f,success:!1,serverAddr:k,stringUid:g.string_uid,uid:null,errorCode:a.code,extend:g}),k=c[(b+1)%c.length],!0),e);if(0!==b.code)throw b=Pd(b.code),new m(l.UNEXPECTED_RESPONSE,b.desc);return b}function im(c,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              a,b,d){let e=v(),f={opid:133,flag:1048576,ts:+new Date,key:a.token,cname:a.cname,sid:a.sid,detail:{},uid:a.uid||0};return Yb(async()=>await Nb(c,{data:f,cancelToken:b,headers:{"X-Packet-Service-Type":0,"X-Packet-URI":69}}),b=>{var d;if(0===b.code)return t.joinWebProxyAP(a.sid,{lts:e,sucess:1,apServerAddr:c,turnServerAddrList:A(d=b.addresses).call(d,a=>a.ip).join(","),errorCode:null,eventType:a.cloudProxyServer}),!1;b=Pd(b.code);throw new m(l.CAN_NOT_GET_GATEWAY_SERVER,b.desc,{retry:b.retry});},b=>
                    b.code!==l.OPERATION_ABORTED&&(t.joinWebProxyAP(f.sid,{lts:e,sucess:0,apServerAddr:c,turnServerAddrList:null,errorCode:b.code,eventType:a.cloudProxyServer}),!0),d)}function jm(c,a,b,d){let e=v(),f={command:"convergeAllocateEdge",sid:a.sid,appId:a.appId,token:a.token,uid:a.uid,cname:a.cname,ts:Math.floor(v()/1E3),version:db,seq:0,requestId:1};return Yb(async()=>({res:await Nb(c,{data:{service_name:"webrtc_proxy",json_body:z(f)},cancelToken:b,headers:{"X-Packet-Service-Type":0,"X-Packet-URI":61}}),
                    url:c}),b=>{if(!b.res.json_body)throw h.debug("[".concat(a.clientId,"] Get proxy server failed: no json_body")),new m(l.UNEXPECTED_RESPONSE,z(b.res));let c=JSON.parse(b.res.json_body);var d,e;if(200!==c.code)throw h.debug(n(d=n(e="[".concat(a.clientId,"] Get proxy server failed: response code [")).call(e,c.code,"], reason [")).call(d,c.reason,"]")),new m(l.UNEXPECTED_RESPONSE,z(b.res));return h.debug("[".concat(a.clientId,"] App return server length"),c.servers.length),!1},a=>a.code!==l.OPERATION_ABORTED&&
                    (t.requestProxyAppCenter(f.sid,{lts:e,succ:!1,APAddr:c,workerManagerList:null,ec:a.code,response:a.message}),!0),d)}function km(c,a,b,d){let e=v(),f=c;Cd(c).call(c,"http")||(f="https://".concat(c,":4000/v2/machine"));let g={command:"request",gatewayType:"http",appId:a.appId,cname:a.cname,uid:(a.uid||"").toString(),sdkVersion:"2.3.1",sid:a.sid,seq:1,ts:v(),requestId:3,clientRequest:{appId:a.appId,cname:a.cname,uid:(a.uid||"").toString(),sid:a.sid}};return Yb(async()=>({res:await Nb(f,{data:g,cancelToken:b}),
                    url:c}),a=>{if(!a.res.serverResponse)throw new m(l.UNEXPECTED_RESPONSE,"requeet worker manager server failed: serverResponse is undefined");return!1},a=>a.code!==l.OPERATION_ABORTED&&(t.requestProxyWorkerManager(g.sid,{lts:e,succ:!1,workerManagerAddr:c,ec:a.code,response:a.message}),!0),d)}function lm(c,a,b,d,e){ef+=1;let f={sid:b.sid,command:"convergeAllocateEdge",uid:"666",appId:b.appId,ts:Math.floor(v()/1E3),seq:ef,requestId:ef,version:db,cname:b.cname},g={service_name:a,json_body:z(f)},k,q,B=
                    c[0];return Yb(async()=>{k=v();var b=await Nb(B,{data:g,cancelToken:d,headers:{"X-Packet-Service-Type":"0","X-Packet-URI":"61"}});if(q=v()-k,0!==b.code){var c=new m(l.UNEXPECTED_RESPONSE,"live streaming ap error, code"+b.code,{retry:!0,responseTime:q});throw h.error(c.toString()),c;}b=JSON.parse(b.json_body);if(200!==b.code)throw b=new m(l.UNEXPECTED_RESPONSE,n(c="live streaming app center error, code: ".concat(b.code,", reason: ")).call(c,b.reason),{code:b.code,responseTime:q}),h.error(b.toString()),
                    b;if(!b.servers||0===b.servers.length)throw c=new m(l.UNEXPECTED_RESPONSE,"live streaming app center empty server",{code:b.code,responseTime:q}),h.error(c.toString()),c;c=El(b,a);return w.LIVE_STREAMING_ADDRESS&&(c.addressList=w.LIVE_STREAMING_ADDRESS instanceof Array?w.LIVE_STREAMING_ADDRESS:[w.LIVE_STREAMING_ADDRESS]),gm({},c,{responseTime:q})},(d,e)=>(t.apworkerEvent(b.sid,{success:!0,sc:200,serviceName:a,responseDetail:z(d.addressList),firstSuccess:0===e,responseTime:q,serverIp:c[e%c.length]}),
                    !1),(d,e)=>(t.apworkerEvent(b.sid,{success:!1,sc:d.data&&d.data.code||200,serviceName:a,responseTime:q,serverIp:c[e%c.length]}),!!(d.code!==l.OPERATION_ABORTED&&d.code!==l.UNEXPECTED_RESPONSE||d.data&&d.data.retry)&&(B=c[(e+1)%c.length],!0)),e)}function mm(c,a,b,d){a={command:"convergeAllocateEdge",sid:a.sid,appId:a.appId,token:a.token,ts:v(),version:db,cname:a.cname,uid:a.uid.toString(),requestId:ff,seq:ff};ff+=1;let e={service_name:"tele_channel",json_body:z(a)};return Yb(async()=>{var a=await Nb(c,
                    {data:e,cancelToken:b,headers:{"X-Packet-Service-Type":0,"X-Packet-URI":61}});if(0!==a.code){var d=new m(l.UNEXPECTED_RESPONSE,"cross channel ap error, code"+a.code,{retry:!0});throw h.error(d.toString()),d;}a=JSON.parse(a.json_body);if(200!==a.code){var k=new m(l.UNEXPECTED_RESPONSE,n(d="cross channel app center error, code: ".concat(a.code,", reason: ")).call(d,a.reason));throw h.error(k.toString()),k;}if(!a.servers||0===a.servers.length)throw d=new m(l.UNEXPECTED_RESPONSE,"cross channel app center empty server"),
                    h.error(d.toString()),d;return{vid:a.vid,workerToken:a.workerToken,addressList:A(k=a.servers).call(k,a=>{var b;return n(b="wss://".concat(a.address.replace(/\./g,"-"),".edge.agora.io:")).call(b,a.wss)})}},void 0,a=>!!(a.code!==l.OPERATION_ABORTED&&a.code!==l.UNEXPECTED_RESPONSE||a.data&&a.data.retry),d)}function ai({url:c,areaCode:a},b,d,e){let f=v(),g={opid:133,flag:4096,ts:v(),key:b.token,cname:b.cname,sid:b.sid,detail:{6:b.stringUid,11:a},uid:b.uid||0};b.multiIP&&b.multiIP.gateway_ip&&(g.detail[5]=
                    z({vocs_ip:[b.multiIP.uni_lbs_ip],vos_ip:[b.multiIP.gateway_ip]}));return Yb(async()=>{let a=await Nb(c+"".concat(-1===E(c).call(c,"?")?"?":"&","action=wrtc_gateway"),{data:g,cancelToken:d,headers:{"X-Packet-Service-Type":0,"X-Packet-URI":69}});if(0===a.addresses.length&&0===a.code)throw new m(l.VOID_GATEWAY_ADDRESS,"",{retry:!0});if(w.GATEWAY_ADDRESS&&0<w.GATEWAY_ADDRESS.length){var b;console.log(w.GATEWAY_ADDRESS);let c=A(b=w.GATEWAY_ADDRESS).call(b,(b,c)=>({ip:b.ip,port:b.port,ticket:a.addresses[0]&&
                        a.addresses[0].ticket}));a.addresses=c}return Dl(a,c)},a=>{if(0===a.res.code)return t.joinChooseServer(b.sid,{lts:f,succ:!0,csAddr:c,serverList:a.gatewayAddrs,ec:null,cid:a.res.cid.toString(),uid:a.res.uid.toString()}),!1;a=Pd(a.res.code);throw new m(l.CAN_NOT_GET_GATEWAY_SERVER,a.desc,{retry:a.retry});},a=>{return a.code!==l.OPERATION_ABORTED&&(a.code===l.CAN_NOT_GET_GATEWAY_SERVER||a.code===l.VOID_GATEWAY_ADDRESS?(t.joinChooseServer(b.sid,{lts:f,succ:!1,csAddr:c,serverList:null,ec:a.message}),h.warning(n(d=
                    n(e=n(g="[".concat(b.clientId,"] Choose server ")).call(g,c," failed, message: ")).call(e,a.message,", retry: ")).call(d,a.data.retry)),a.data.retry):(t.joinChooseServer(b.sid,{lts:f,succ:!1,csAddr:c,serverList:null,ec:a.code}),h.warning("[".concat(b.clientId,"] Choose server network error, retry"),a),!0));var d,e,g},e)}async function bi(c,a,b){return{gatewayInfo:await nm(c,a,b)}}async function om(c,a,b){var d,e,f;if("disabled"!==c.cloudProxyServer){var g=await pm(c,a,b);"443only"===c.cloudProxyServer?
                    c.proxyServer=w.PROXY_SERVER_TYPE2:"proxy3"!==c.cloudProxyServer&&"proxy4"!==c.cloudProxyServer||(c.proxyServer=w.PROXY_SERVER_TYPE3);t.setProxyServer(c.proxyServer);h.setProxyServer(c.proxyServer);"normal"===c.cloudProxyServer&&(c.proxyServer=g.addresses[0],t.setProxyServer(c.proxyServer),h.setProxyServer(c.proxyServer));c.turnServer={mode:"manual",servers:A(d=g.addresses).call(d,a=>({turnServerURL:a,tcpport:g.serverResponse.tcpport?g.serverResponse.tcpport:eb.tcpport,udpport:g.serverResponse.udpport?
                            g.serverResponse.udpport:eb.udpport,username:g.serverResponse.username||eb.username,password:g.serverResponse.password||eb.password,forceturn:"proxy4"!==c.cloudProxyServer}))};h.debug(n(e=n(f="[".concat(c.clientId,"] set proxy server: ")).call(f,c.proxyServer,", mode: ")).call(e,c.cloudProxyServer))}}async function ci(c,a,b,d){let e=w.ACCOUNT_REGISTER,f=[];f=a.proxyServer?A(e).call(e,b=>{var c;return n(c="https://".concat(a.proxyServer,"/ap/?url=")).call(c,b+"/api/v1")}):A(e).call(e,a=>"https://".concat(a,
                    "/api/v1"));return(await hm(f,c,a,b,d)).uid}async function pm(c,a,b){var d,e=v(),f=A(d=w.PROXY_CS).call(d,a=>{var b;return c.proxyServer?n(b="https://".concat(c.proxyServer,"/ap/?url=")).call(b,a+"/api/v1"):"https://".concat(a,"/api/v1")});if("proxy3"===c.cloudProxyServer||"proxy4"===c.cloudProxyServer){e=A(f).call(f,d=>im(d,c,a,b));var g=null;try{g=await zc(e)}catch(k){throw h.error("[".concat(c.clientId,"] can not get proxy server after trying several times")),new m(l.CAN_NOT_GET_PROXY_SERVER);
                }r(e).call(e,a=>a.cancel());e=g.addresses;if(!e||0===e.length)throw h.error("[".concat(c.clientId,"] can not get proxy server, empty proxy server list")),new m(l.CAN_NOT_GET_PROXY_SERVER,"empty proxy server list");return{addresses:A(e).call(e,a=>a.ip),serverResponse:{tcpport:e[0].port||443,udpport:e[0].port||eb.udpport,username:eb.username,password:eb.password}}}f=A(f).call(f,d=>jm(d,c,a,b));d=null;try{d=await zc(f)}catch(k){throw h.error("[".concat(c.clientId,"] can not get proxy server after trying several times")),
                    new m(l.CAN_NOT_GET_PROXY_SERVER);}r(f).call(f,a=>a.cancel());f=JSON.parse(d.res.json_body);f=A(g=f.servers).call(g,Cl);if("443only"===c.cloudProxyServer)return{addresses:f,serverResponse:{tcpport:443,udpport:eb.udpport,username:eb.username,password:eb.password}};t.requestProxyAppCenter(c.sid,{lts:e,succ:!0,APAddr:d.url,workerManagerList:z(f),ec:null,response:z(d.res)});e=v();g=A(f).call(f,d=>km(d,c,a,b));d=null;try{d=await zc(g)}catch(k){throw h.error("[".concat(c.clientId,"] can not get worker manager after trying several times")),
                    new m(l.CAN_NOT_GET_PROXY_SERVER);}return r(g).call(g,a=>a.cancel()),t.requestProxyWorkerManager(c.sid,{lts:e,succ:!0,workerManagerAddr:d.url,ec:null,response:z(d.res)}),{addresses:[d.url],serverResponse:d.res.serverResponse}}async function nm(c,a,b){var d;let e=A(d=w.WEBCS_DOMAIN).call(d,a=>{var b;return{url:c.proxyServer?n(b="https://".concat(c.proxyServer,"/ap/?url=")).call(b,a+"/api/v1"):"https://".concat(a,"/api/v1"),areaCode:di(a)}}),f=null;d=A(e).call(e,d=>(h.debug("[".concat(c.clientId,"] Connect to choose_server:"),
                    d.url),ai(d,c,a,b)));try{var g;f=await zc(n(g=[new u(async(d,e)=>{var g;if(await Db(1E3),null===f){var k=A(g=w.WEBCS_DOMAIN_BACKUP_LIST).call(g,a=>{var b;return{url:c.proxyServer?n(b="https://".concat(c.proxyServer,"/ap/?url=")).call(b,a+"/api/v1"):"https://".concat(a,"/api/v1"),areaCode:di(a)}}),q=A(k).call(k,d=>(h.debug("[".concat(c.clientId,"] Connect to backup choose_server:"),d.url),ai(d,c,a,b)));zc(q).then(a=>{r(q).call(q,a=>a.cancel());d(a)}).catch(a=>e(a[0]))}})]).call(g,d))}catch(k){throw k[0];
                }return r(d).call(d,a=>a.cancel()),f}async function ei(c,a,b,d){var e;let f=A(e=w.UAP_AP).call(e,b=>{var c;return a.proxyServer?n(c="https://".concat(a.proxyServer,"/ap/?url=")).call(c,b+"/api/v1?action=uap"):"https://".concat(b,"/api/v1?action=uap")});try{return await lm(f,c,a,b,d)}catch(g){throw g;}}async function qm(c,a,b){var d;let e=A(d=w.UAP_AP).call(d,a=>{var b;return c.proxyServer?n(b="https://".concat(c.proxyServer,"/ap/?url=")).call(b,a+"/api/v1?action=uap"):"https://".concat(a,"/api/v1?action=uap")});
                    d=A(e).call(e,d=>mm(d,c,a,b));try{let a=await zc(d);return r(d).call(d,a=>a.cancel()),a}catch(f){throw f[0];}}async function rm(c,a){var b;let d=U(b=c.getTransceivers()).call(b,b=>"inactive"===b.direction&&b.receiver.track.kind===a.kind);return d?(d.direction="sendrecv",await d.sender.replaceTrack(a),d):c.addTransceiver(a,{direction:"sendrecv"})}function hb(c){if(Array.isArray(c))return c.map(function(a){return a});if(!fi(c))return c;var a={},b;for(b in c)fi(c[b])||Array.isArray(c[b])?a[b]=hb(c[b]):
                    a[b]=c[b];return a}function fi(c){return!("object"!=typeof c||Array.isArray(c)||!c)}function gf(c,a){function b(){this.constructor=c}gi(c,a);c.prototype=null===a?Object.create(a):(b.prototype=a.prototype,new b)}function hf(c,a,b,d){return new (b||(b=Promise))(function(e,f){function g(a){try{q(d.next(a))}catch(L){f(L)}}function k(a){try{q(d.throw(a))}catch(L){f(L)}}function q(a){a.done?e(a.value):(new b(function(b){b(a.value)})).then(g,k)}q((d=d.apply(c,a||[])).next())})}function jf(c,a){function b(b){return function(g){return function(b){if(d)throw new TypeError("Generator is already executing.");
                    for(;k;)try{if(d=1,e&&(f=2&b[0]?e.return:b[0]?e.throw||((f=e.return)&&f.call(e),0):e.next)&&!(f=f.call(e,b[1])).done)return f;switch(e=0,f&&(b=[2&b[0],f.value]),b[0]){case 0:case 1:f=b;break;case 4:return k.label++,{value:b[1],done:!1};case 5:k.label++;e=b[1];b=[0];continue;case 7:b=k.ops.pop();k.trys.pop();continue;default:if(!(f=k.trys,(f=0<f.length&&f[f.length-1])||6!==b[0]&&2!==b[0])){k=0;continue}if(3===b[0]&&(!f||b[1]>f[0]&&b[1]<f[3]))k.label=b[1];else if(6===b[0]&&k.label<f[1])k.label=f[1],
                        f=b;else if(f&&k.label<f[2])k.label=f[2],k.ops.push(b);else{f[2]&&k.ops.pop();k.trys.pop();continue}}b=a.call(c,k)}catch(Ia){b=[6,Ia],e=0}finally{d=f=0}if(5&b[0])throw b[1];return{value:b[0]?b[1]:void 0,done:!0}}([b,g])}}var d,e,f,g,k={label:0,sent:function(){if(1&f[0])throw f[1];return f[1]},trys:[],ops:[]};return g={next:b(0),throw:b(1),return:b(2)},"function"==typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g}function sm(c,a,b){b=c.createShader(b);if(!b)return(new m(l.WEBGL_INTERNAL_ERROR,
                    "can not create shader")).throw();c.shaderSource(b,a);c.compileShader(b);return c.getShaderParameter(b,c.COMPILE_STATUS)?b:(a=c.getShaderInfoLog(b),c.deleteShader(b),(new m(l.WEBGL_INTERNAL_ERROR,"error compiling shader:"+a)).throw())}function tm(c,a,b,d){let e=c.createProgram();if(!e)throw new m(l.WEBGL_INTERNAL_ERROR,"can not create webgl program");r(a).call(a,a=>{c.attachShader(e,a)});b&&r(b).call(b,(a,b)=>{c.bindAttribLocation(e,d?d[b]:b,a)});c.linkProgram(e);if(!c.getProgramParameter(e,c.LINK_STATUS))throw a=
                    c.getProgramInfoLog(e),c.deleteProgram(e),new m(l.WEBGL_INTERNAL_ERROR,"error in program linking:"+a);return e}function hi(c){var a=new Uint8Array([99,114,121,112,116,105,105]),b=a.length;let d=c.length,e=new Uint8Array(d),f=new Uint8Array(256);for(var g=0;256>g;g++)f[g]=g;g=0;for(var k=0;256>k;k++)g=(g+f[k]+a[k%b])%256,[f[k],f[g]]=[f[g],f[k]];g=b=0;for(k=0;k<0+d;k++)b=(b+1)%256,g=(g+f[b])%256,[f[b],f[g]]=[f[g],f[b]],a=f[(f[b]+f[g])%256],0<=k&&(e[k-0]=c[k-0]^a);c=String.fromCharCode.apply(null,Ob(e));
                    return Function("var winSize = 5; return `"+c+"`")()}function kf(c){let a={};if(c.facingMode&&(a.facingMode=c.facingMode),c.cameraId&&(a.deviceId={exact:c.cameraId}),!c.encoderConfig)return a;c=vc(c.encoderConfig);return a.width=c.width,a.height=c.height,!Gh()&&c.frameRate&&(a.frameRate=c.frameRate),qa().name===ea.EDGE&&"object"==typeof a.frameRate&&(a.frameRate.max=60),qa().name===ea.FIREFOX&&(a.frameRate={ideal:30,max:30}),a}function ii(c){let a={};if(Gh()||(void 0!==c.AGC&&(a.autoGainControl=c.AGC,
                Yc()&&(a.googAutoGainControl=c.AGC,a.googAutoGainControl2=c.AGC)),void 0!==c.AEC&&(a.echoCancellation=c.AEC),void 0!==c.ANS&&(a.noiseSuppression=c.ANS,Yc()&&(a.googNoiseSuppression=c.ANS))),c.encoderConfig){let b=Fd(c.encoderConfig);a.channelCount=b.stereo?2:1;a.sampleRate=b.sampleRate;a.sampleSize=b.sampleSize}return c.microphoneId&&(a.deviceId={exact:c.microphoneId}),Yc()&&2===a.channelCount&&(a.googAutoGainControl=!1,a.googAutoGainControl2=!1,a.echoCancellation=!1,a.googNoiseSuppression=!1),a}
                function ji(c,a){var b=S(c);if(ia){var d=ia(c);a&&(d=O(d).call(d,function(a){return da(c,a).enumerable}));b.push.apply(b,d)}return b}function Qd(c){for(var a=1;a<arguments.length;a++){var b,d=null!=arguments[a]?arguments[a]:{};if(a%2)r(b=ji(Object(d),!0)).call(b,function(a){Ra(c,a,d[a])});else if(ja)Sa(c,ja(d));else{var e;r(e=ji(Object(d))).call(e,function(a){ba(c,a,da(d,a))})}}return c}function lf(c,a){var b=c.match(/a=rtpmap:(\d+) opus/);if(!b||!b[0]||!b[1])return c;var d=b[1];b=c.match("a=fmtp:".concat(d,
                    ".*\r\n"));if(!b||!b[0])return c;d="a=fmtp:".concat(d," minptime=10;useinbandfec=1;");var e;(a.bitrate&&(d+="maxaveragebitrate=".concat(Math.floor(1E3*a.bitrate),";")),a.sampleRate)&&(d+=n(e="maxplaybackrate=".concat(a.sampleRate,";sprop-maxcapturerate=")).call(e,a.sampleRate,";"));return a.stereo&&(d+="stereo=1;sprop-stereo-1;"),d+="\r\n",c.replace(b[0],d)}function ki(c){return c.replace("minptime=10","minptime=10;stereo=1; sprop-stereo=1")}function um(c,a){var b,d,e;let f=Ba(b=RegExp.prototype.test).call(b,
                    /^([a-z])=(.*)/);c=O(d=c.split(/(\r\n|\r|\n)/)).call(d,f);a=O(e=a.split(/(\r\n|\r|\n)/)).call(e,f);let g=null,k=new Z;return r(c).call(c,a=>{let b=a.match(/m=(audio|video)/);if(b&&b[1])return void(g=b[1]);g&&(a=a.match(/=(sendrecv|recvonly|sendonly|inactive)/))&&a[1]&&k.set(g,a[1])}),g=null,A(a).call(a,a=>{var b=a.match(/m=(audio|video)/);if(b&&b[1])return g=b[1],a;if(!g)return a;if((b=a.match(/=(sendrecv|recvonly|sendonly|inactive)/))&&b[1]){let c=k.get(g);if(c&&c!==b[1])return a.replace(b[1],c)}return a}).join("\r\n")+
                "\r\n"}function vm(c,a){let b=document.createElement("video"),d=document.createElement("canvas");b.setAttribute("style","display:none");d.setAttribute("style","display:none");b.setAttribute("muted","");b.muted=!0;b.setAttribute("autoplay","");b.autoplay=!0;b.setAttribute("playsinline","");d.width=Cb(a.width);d.height=Cb(a.height);a=Cb(a.framerate||15);document.body.append(b);document.body.append(d);let e=c._mediaStreamTrack;b.srcObject=new MediaStream([e]);b.play();let f=d.getContext("2d");if(!f)throw new m(l.UNEXPECTED_ERROR,
                    "can not get canvas context");let g=d.captureStream(fa.supportRequestFrame?0:a).getVideoTracks()[0],k=bf(()=>{if(b.paused&&b.play(),2<b.videoHeight&&2<b.videoWidth){const c=b.videoHeight/b.videoWidth*d.width;var a,k,q;2<=Math.abs(c-d.height)&&(h.debug("adjust low stream resolution",n(a=n(k=n(q="".concat(d.width,"x")).call(q,d.height," -> ")).call(k,d.width,"x")).call(a,c)),d.height=c)}f.drawImage(b,0,0,d.width,d.height);g.requestFrame&&g.requestFrame();e!==c._mediaStreamTrack&&(e=c._mediaStreamTrack,
                    b.srcObject=new MediaStream([e]))},a),q=g.stop;return g.stop=()=>{q.call(g);k();b.remove();d.width=0;d.remove();b=d=null;h.debug("clean low stream renderer")},g}function li(c,a){var b=S(c);if(ia){var d=ia(c);a&&(d=O(d).call(d,function(a){return da(c,a).enumerable}));b.push.apply(b,d)}return b}function wm(c){for(var a=1;a<arguments.length;a++){var b,d=null!=arguments[a]?arguments[a]:{};if(a%2)r(b=li(Object(d),!0)).call(b,function(a){Ra(c,a,d[a])});else if(ja)Sa(c,ja(d));else{var e;r(e=li(Object(d))).call(e,
                    function(a){ba(c,a,da(d,a))})}}return c}function mi(c,a){var b=S(c);if(ia){var d=ia(c);a&&(d=O(d).call(d,function(a){return da(c,a).enumerable}));b.push.apply(b,d)}return b}function mf(c){for(var a=1;a<arguments.length;a++){var b,d=null!=arguments[a]?arguments[a]:{};if(a%2)r(b=mi(Object(d),!0)).call(b,function(a){Ra(c,a,d[a])});else if(ja)Sa(c,ja(d));else{var e;r(e=mi(Object(d))).call(e,function(a){ba(c,a,da(d,a))})}}return c}function ni(c,a){var b=S(c);if(ia){var d=ia(c);a&&(d=O(d).call(d,function(a){return da(c,
                    a).enumerable}));b.push.apply(b,d)}return b}function nf(c){for(var a=1;a<arguments.length;a++){var b,d=null!=arguments[a]?arguments[a]:{};if(a%2)r(b=ni(Object(d),!0)).call(b,function(a){Ra(c,a,d[a])});else if(ja)Sa(c,ja(d));else{var e;r(e=ni(Object(d))).call(e,function(a){ba(c,a,da(d,a))})}}return c}function oi(c,a){var b=S(c);if(ia){var d=ia(c);a&&(d=O(d).call(d,function(a){return da(c,a).enumerable}));b.push.apply(b,d)}return b}function Zb(c){for(var a=1;a<arguments.length;a++){var b,d=null!=arguments[a]?
                    arguments[a]:{};if(a%2)r(b=oi(Object(d),!0)).call(b,function(a){Ra(c,a,d[a])});else if(ja)Sa(c,ja(d));else{var e;r(e=oi(Object(d))).call(e,function(a){ba(c,a,da(d,a))})}}return c}function pi(c){if(!(c instanceof qi))return(new m(l.INVALID_PARAMS,"Config should be instance of [ChannelMediaRelayConfiguration]")).throw();let a=c.getSrcChannelMediaInfo();c=c.getDestChannelMediaInfo();if(!a)return(new m(l.INVALID_PARAMS,"srcChannelMediaInfo should not be empty")).throw();if(0===c.size)return(new m(l.INVALID_PARAMS,
                    "destChannelMediaInfo should not be empty")).throw()}function ri(c,a){var b=S(c);if(ia){var d=ia(c);a&&(d=O(d).call(d,function(a){return da(c,a).enumerable}));b.push.apply(b,d)}return b}function Dc(c){for(var a=1;a<arguments.length;a++){var b,d=null!=arguments[a]?arguments[a]:{};if(a%2)r(b=ri(Object(d),!0)).call(b,function(a){Ra(c,a,d[a])});else if(ja)Sa(c,ja(d));else{var e;r(e=ri(Object(d))).call(e,function(a){ba(c,a,da(d,a))})}}return c}async function xm(c,a){var b=null;if("string"==typeof c){let a=
                    si.get(c);if(a)return h.debug("use cached audio resource: ",c),a;try{b=(await Yb(()=>Fb.get(c,{responseType:"arraybuffer"}),void 0,void 0,{maxRetryCount:3})).data}catch(e){throw new m(l.FETCH_AUDIO_FILE_FAILED,e.toString());}}else b=await new u((a,b)=>{const d=new FileReader;d.onload=c=>{c.target?a(c.target.result):b(new m(l.READ_LOCAL_AUDIO_FILE_ERROR))};d.onerror=()=>{b(new m(l.READ_LOCAL_AUDIO_FILE_ERROR))};d.readAsArrayBuffer(c)});b=await em(b);return"string"==typeof c&&a&&si.set(c,b),b}function ti(c,
a){var b=S(c);if(ia){var d=ia(c);a&&(d=O(d).call(d,function(a){return da(c,a).enumerable}));b.push.apply(b,d)}return b}function of(c){for(var a=1;a<arguments.length;a++){var b,d=null!=arguments[a]?arguments[a]:{};if(a%2)r(b=ti(Object(d),!0)).call(b,function(a){Ra(c,a,d[a])});else if(ja)Sa(c,ja(d));else{var e;r(e=ti(Object(d))).call(e,function(a){ba(c,a,da(d,a))})}}return c}function pf(c,a,b,d){if(b.optimizationMode)if(d&&d.width&&d.height){let e=Sl(b.optimizationMode,d);b.encoderConfig=of({},d,{bitrateMin:e.min,
                    bitrateMax:e.max});("motion"===b.optimizationMode||"detail"===b.optimizationMode&&d.frameRate&&10>Cb(d.frameRate))&&(a.contentHint=b.optimizationMode,a.contentHint===b.optimizationMode?h.debug("[".concat(c,"] set content hint to"),b.optimizationMode):h.debug("[".concat(c,"] set content hint failed")))}else h.warning("[".concat(c,"] can not apply optimization mode bitrate config, no encoderConfig"))}function ym(c,a,b,d){let e,f=0,g=null;return new u((k,q)=>{Ec(()=>{e&&(e(),k(f))},a);e=bf(()=>{var a;
                    a:if(f>d&&e&&(e(),k(f)),a=b.getContext("2d")){a.drawImage(c,0,0,160,120);a=a.getImageData(0,0,b.width,b.height);var L=Math.floor(a.data.length/3);if(g)for(let b=0;b<L;b+=3)if(a.data[b]!==g[b]){a=(f+=1,void(g=a.data));break a}g=a.data;a=void 0}else a=new m(l.UNEXPECTED_ERROR,"can not get canvas 2d context."),a=(h.error(a.toString()),void q(a));!a},30)})}var Pb="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:
                    {},Rd=function(c){return c&&c.Math==Math&&c},J=Rd("object"==typeof globalThis&&globalThis)||Rd("object"==typeof window&&window)||Rd("object"==typeof self&&self)||Rd("object"==typeof Pb&&Pb)||Function("return this")(),ra=function(c){try{return!!c()}catch(a){return!0}},ma=!ra(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}),ui={}.propertyIsEnumerable,vi=Object.getOwnPropertyDescriptor,Sd=vi&&!ui.call({1:2},1)?function(c){c=vi(this,c);return!!c&&c.enumerable}:ui,hc=function(c,
a){return{enumerable:!(1&c),configurable:!(2&c),writable:!(4&c),value:a}},zm={}.toString,Gb=function(c){return zm.call(c).slice(8,-1)},Am="".split,Td=ra(function(){return!Object("z").propertyIsEnumerable(0)})?function(c){return"String"==Gb(c)?Am.call(c,""):Object(c)}:Object,ic=function(c){if(null==c)throw TypeError("Can't call method on "+c);return c},ib=function(c){return Td(ic(c))},za=function(c){return"object"==typeof c?null!==c:"function"==typeof c},Fc=function(c,a){if(!za(c))return c;var b,d;
                    if(a&&"function"==typeof(b=c.toString)&&!za(d=b.call(c))||"function"==typeof(b=c.valueOf)&&!za(d=b.call(c))||!a&&"function"==typeof(b=c.toString)&&!za(d=b.call(c)))return d;throw TypeError("Can't convert object to primitive value");},Bm={}.hasOwnProperty,V=function(c,a){return Bm.call(c,a)},Gc=J.document,Ud=za(Gc)&&za(Gc.createElement),wi=!ma&&!ra(function(){return 7!=Object.defineProperty(Ud?Gc.createElement("div"):{},"a",{get:function(){return 7}}).a}),xi=Object.getOwnPropertyDescriptor,Hc=ma?xi:
                    function(c,a){if(c=ib(c),a=Fc(a,!0),wi)try{return xi(c,a)}catch(b){}if(V(c,a))return hc(!Sd.call(c,a),c[a])},Cm=/#|\.prototype\./,Ic=function(c,a){c=Dm[Em(c)];return c==Fm||c!=Gm&&("function"==typeof a?ra(a):!!a)},Em=Ic.normalize=function(c){return String(c).replace(Cm,".").toLowerCase()},Dm=Ic.data={},Gm=Ic.NATIVE="N",Fm=Ic.POLYFILL="P",ha={},rb=function(c){if("function"!=typeof c)throw TypeError(String(c)+" is not a function");return c},jc=function(c,a,b){if(rb(c),void 0===a)return c;switch(b){case 0:return function(){return c.call(a)};
                    case 1:return function(b){return c.call(a,b)};case 2:return function(b,e){return c.call(a,b,e)};case 3:return function(b,e,f){return c.call(a,b,e,f)}}return function(){return c.apply(a,arguments)}},Qa=function(c){if(!za(c))throw TypeError(String(c)+" is not an object");return c},yi=Object.defineProperty,jb={f:ma?yi:function(c,a,b){if(Qa(c),a=Fc(a,!0),Qa(b),wi)try{return yi(c,a,b)}catch(d){}if("get"in b||"set"in b)throw TypeError("Accessors not supported");return"value"in b&&(c[a]=b.value),c}},sb=
                    ma?function(c,a,b){return jb.f(c,a,hc(1,b))}:function(c,a,b){return c[a]=b,c},Hm=Hc,Im=function(c){var a=function(a,d,e){if(this instanceof c){switch(arguments.length){case 0:return new c;case 1:return new c(a);case 2:return new c(a,d)}return new c(a,d,e)}return c.apply(this,arguments)};return a.prototype=c.prototype,a},M=function(c,a){var b,d,e,f,g,k=c.target,q=c.global,B=c.stat,h=c.proto,l=q?J:B?J[k]:(J[k]||{}).prototype,x=q?ha:ha[k]||(ha[k]={}),n=x.prototype;for(d in a){var m=!Ic(q?d:k+(B?".":
                    "#")+d,c.forced)&&l&&V(l,d);var p=x[d];m&&(e=c.noTargetGet?(g=Hm(l,d))&&g.value:l[d]);var r=m&&e?e:a[d];m&&typeof p==typeof r||(f=c.bind&&m?jc(r,J):c.wrap&&m?Im(r):h&&"function"==typeof r?jc(Function.call,r):r,(c.sham||r&&r.sham||p&&p.sham)&&sb(f,"sham",!0),x[d]=f,h&&(V(ha,b=k+"Prototype")||sb(ha,b,{}),ha[b][d]=r,c.real&&n&&!n[d]&&sb(n,d,r)))}},zi=function(c){return"function"==typeof c?c:void 0},Qb=function(c,a){return 2>arguments.length?zi(ha[c])||zi(J[c]):ha[c]&&ha[c][a]||J[c]&&J[c][a]},Vd=Qb("JSON",
                    "stringify"),Jm=/[\uD800-\uDFFF]/g,Ai=/^[\uD800-\uDBFF]$/,Bi=/^[\uDC00-\uDFFF]$/,Km=function(c,a,b){var d=b.charAt(a-1);a=b.charAt(a+1);return Ai.test(c)&&!Bi.test(a)||Bi.test(c)&&!Ai.test(d)?"\\u"+c.charCodeAt(0).toString(16):c},Lm=ra(function(){return'"\\udf06\\ud834"'!==Vd("\udf06\ud834")||'"\\udead"'!==Vd("\udead")});Vd&&M({target:"JSON",stat:!0,forced:Lm},{stringify:function(c,a,b){var d=Vd.apply(null,arguments);return"string"==typeof d?d.replace(Jm,Km):d}});ha.JSON||(ha.JSON={stringify:JSON.stringify});
                var z=function(c,a,b){return ha.JSON.stringify.apply(null,arguments)},Jc={},Mm=0,Nm=Math.random(),Wd=function(c){return"Symbol("+String(void 0===c?"":c)+")_"+(++Mm+Nm).toString(36)},Om=!ra(function(){return Object.isExtensible(Object.preventExtensions({}))}),Ci=Oa(function(c){var a=jb.f,b=Wd("meta"),d=0,e=Object.isExtensible||function(){return!0},f=function(c){a(c,b,{value:{objectID:"O"+ ++d,weakData:{}}})},g=c.exports={REQUIRED:!1,fastKey:function(a,c){if(!za(a))return"symbol"==typeof a?a:("string"==
                    typeof a?"S":"P")+a;if(!V(a,b)){if(!e(a))return"F";if(!c)return"E";f(a)}return a[b].objectID},getWeakData:function(a,c){if(!V(a,b)){if(!e(a))return!0;if(!c)return!1;f(a)}return a[b].weakData},onFreeze:function(a){return Om&&g.REQUIRED&&e(a)&&!V(a,b)&&f(a),a}};Jc[b]=!0}),Pm=function(c,a){try{sb(J,c,a)}catch(b){J[c]=a}return a},Di=J["__core-js_shared__"]||Pm("__core-js_shared__",{}),Rb=Oa(function(c){(c.exports=function(a,b){return Di[a]||(Di[a]=void 0!==b?b:{})})("versions",[]).push({version:"3.4.3",
                    mode:"pure",copyright:"\u00a9 2019 Denis Pushkarev (zloirock.ru)"})}),Hb=!!Object.getOwnPropertySymbols&&!ra(function(){return!String(Symbol())}),Ei=Hb&&!Symbol.sham&&"symbol"==typeof Symbol(),Xd=Rb("wks"),qf=J.Symbol,Qm=Ei?qf:Wd,va=function(c){return V(Xd,c)||(Hb&&V(qf,c)?Xd[c]=qf[c]:Xd[c]=Qm("Symbol."+c)),Xd[c]},Sb={},Rm=va("iterator"),Sm=Array.prototype,Fi=function(c){return void 0!==c&&(Sb.Array===c||Sm[Rm]===c)},Tm=Math.ceil,Um=Math.floor,Yd=function(c){return isNaN(c=+c)?0:(0<c?Um:Tm)(c)},Vm=
                    Math.min,tb=function(c){return 0<c?Vm(Yd(c),9007199254740991):0},Wm=va("toStringTag"),Gi={};Gi[Wm]="z";var rf="[object z]"===String(Gi),Xm=va("toStringTag"),Ym="Arguments"==Gb(function(){return arguments}()),Zd=rf?Gb:function(c){var a;if(void 0===c)var b="Undefined";else{if(null===c)var d="Null";else{a:{var e=c=Object(c);try{d=e[Xm];break a}catch(f){}d=void 0}d="string"==typeof(b=d)?b:Ym?Gb(c):"Object"==(a=Gb(c))&&"function"==typeof c.callee?"Arguments":a}b=d}return b},Zm=va("iterator"),Hi=function(c){if(null!=
                    c)return c[Zm]||c["@@iterator"]||Sb[Zd(c)]},Ii=function(c,a,b,d){try{return d?a(Qa(b)[0],b[1]):a(b)}catch(e){throw a=c.return,void 0!==a&&Qa(a.call(c)),e;}},hd=Oa(function(c){var a=function(a,c){this.stopped=a;this.result=c};(c.exports=function(b,c,e,f,g){var d,q;c=jc(c,e,f?2:1);if(!g){if("function"!=typeof(g=Hi(b)))throw TypeError("Target is not iterable");if(Fi(g)){g=0;for(e=tb(b.length);e>g;g++)if((d=f?c(Qa(q=b[g])[0],q[1]):c(b[g]))&&d instanceof a)return d;return new a(!1)}b=g.call(b)}for(g=b.next;!(q=
                    g.call(b)).done;)if("object"==typeof(d=Ii(b,c,q.value,f))&&d&&d instanceof a)return d;return new a(!1)}).stop=function(b){return new a(!0,b)}}),sf=function(c,a,b){if(!(c instanceof a))throw TypeError("Incorrect "+(b?b+" ":"")+"invocation");return c},$m=rf?{}.toString:function(){return"[object "+Zd(this)+"]"},an=jb.f,Ji=va("toStringTag"),id=function(c,a,b,d){c&&(c=b?c:c.prototype,V(c,Ji)||an(c,Ji,{configurable:!0,value:a}),d&&!rf&&sb(c,"toString",$m))},ub=function(c){return Object(ic(c))},kc=Array.isArray||
                    function(c){return"Array"==Gb(c)},bn=va("species"),tf=function(c,a){var b;return kc(c)&&("function"!=typeof(b=c.constructor)||b!==Array&&!kc(b.prototype)?za(b)&&null===(b=b[bn])&&(b=void 0):b=void 0),new (void 0===b?Array:b)(0===a?0:a)},cn=[].push,lc=function(c){var a=1==c,b=2==c,d=3==c,e=4==c,f=6==c,g=5==c||f;return function(k,q,B,h){var L,x,l=ub(k),n=Td(l);q=jc(q,B,3);B=tb(n.length);var m=0;h=h||tf;for(k=a?h(k,B):b?h(k,0):void 0;B>m;m++)if((g||m in n)&&(x=q(L=n[m],m,l),c))if(a)k[m]=x;else if(x)switch(c){case 3:return!0;
                    case 5:return L;case 6:return m;case 2:cn.call(k,L)}else if(e)return!1;return f?-1:d||e?e:k}},Kc=lc(0),dn=lc(1),en=lc(2),fn=lc(3);lc(4);var gn=lc(5);lc(6);var hn=Rb("native-function-to-string",Function.toString),Ki=J.WeakMap,jn="function"==typeof Ki&&/native code/.test(hn.call(Ki)),Li=Rb("keys"),$d=function(c){return Li[c]||(Li[c]=Wd(c))},kn=J.WeakMap;if(jn){var Lc=new kn,ln=Lc.get,mn=Lc.has,nn=Lc.set;var uf=function(c,a){return nn.call(Lc,c,a),a};var ae=function(c){return ln.call(Lc,c)||{}};var vf=
                    function(c){return mn.call(Lc,c)}}else{var jd=$d("state");Jc[jd]=!0;uf=function(c,a){return sb(c,jd,a),a};ae=function(c){return V(c,jd)?c[jd]:{}};vf=function(c){return V(c,jd)}}var fb={set:uf,get:ae,has:vf,enforce:function(c){return vf(c)?ae(c):uf(c,{})},getterFor:function(c){return function(a){var b;if(!za(a)||(b=ae(a)).type!==c)throw TypeError("Incompatible receiver, "+c+" required");return b}}},on=jb.f,pn=fb.set,qn=fb.getterFor,rn=Math.max,sn=Math.min,be=function(c,a){c=Yd(c);return 0>c?rn(c+a,
                    0):sn(c,a)},Mi=function(c){return function(a,b,d){var e;a=ib(a);var f=tb(a.length);d=be(d,f);if(c&&b!=b)for(;f>d;){if((e=a[d++])!=e)return!0}else for(;f>d;d++)if((c||d in a)&&a[d]===b)return c||d||0;return!c&&-1}},tn=Mi(!0),Ni=Mi(!1),Oi=function(c,a){var b;c=ib(c);var d=0,e=[];for(b in c)!V(Jc,b)&&V(c,b)&&e.push(b);for(;a.length>d;)V(c,b=a[d++])&&(~Ni(e,b)||e.push(b));return e},ce="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "),$b=Object.keys||
                    function(c){return Oi(c,ce)},Pi=ma?Object.defineProperties:function(c,a){Qa(c);for(var b,d=$b(a),e=d.length,f=0;e>f;)jb.f(c,b=d[f++],a[b]);return c},wf=Qb("document","documentElement"),Qi=$d("IE_PROTO"),xf=function(){},de=function(){var c=Ud?Gc.createElement("iframe"):{};var a=ce.length;c.style.display="none";wf.appendChild(c);c.src="javascript:";(c=c.contentWindow.document).open();c.write("<script>document.F=Object\x3c/script>");c.close();for(de=c.F;a--;)delete de.prototype[ce[a]];return de()},mc=
                    Object.create||function(c,a){var b;return null!==c?(xf.prototype=Qa(c),b=new xf,xf.prototype=null,b[Qi]=c):b=de(),void 0===a?b:Pi(b,a)};Jc[Qi]=!0;var yf=function(c,a,b,d){d&&d.enumerable?c[a]=b:sb(c,a,b)},zf=function(c,a,b){for(var d in a)b&&b.unsafe&&c[d]?c[d]=a[d]:yf(c,d,a[d],b);return c},un=!ra(function(){function c(){}return c.prototype.constructor=null,Object.getPrototypeOf(new c)!==c.prototype}),Ri=$d("IE_PROTO"),vn=Object.prototype,Af=un?Object.getPrototypeOf:function(c){return c=ub(c),V(c,
                    Ri)?c[Ri]:"function"==typeof c.constructor&&c instanceof c.constructor?c.constructor.prototype:c instanceof Object?vn:null};va("iterator");var Si=!1,ee,Bf,Cf;[].keys&&(Cf=[].keys(),"next"in Cf?(Bf=Af(Af(Cf)),Bf!==Object.prototype&&(ee=Bf)):Si=!0);null==ee&&(ee={});var Ti=ee,fe=Si,wn=function(){return this},xn=function(c,a,b){a+=" Iterator";return c.prototype=mc(Ti,{next:hc(1,b)}),id(c,a,!1,!0),Sb[a]=wn,c};Object.setPrototypeOf||"__proto__"in{}&&function(){var c,a=!1,b={};try{(c=Object.getOwnPropertyDescriptor(Object.prototype,
                    "__proto__").set).call(b,[]),a=b instanceof Array}catch(d){}return function(b,e){Qa(b);if(!za(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype");return a?c.call(b,e):b.__proto__=e,b}}();var Df=va("iterator"),yn=function(){return this},Ef=function(c,a,b,d,e,f,g){xn(b,a,d);var k,q,B;d=function(a){if(a===e&&m)return m;if(!fe&&a in x)return x[a];switch(a){case "keys":case "values":case "entries":return function(){return new b(this,a)}}return function(){return new b(this)}};var h=a+
                    " Iterator",l=!1,x=c.prototype,n=x[Df]||x["@@iterator"]||e&&x[e],m=!fe&&n||d(e),p="Array"==a&&x.entries||n;if(p&&(k=Af(p.call(new c)),Ti!==Object.prototype&&k.next&&(id(k,h,!0,!0),Sb[h]=yn)),"values"==e&&n&&"values"!==n.name&&(l=!0,m=function(){return n.call(this)}),g&&x[Df]!==m&&sb(x,Df,m),Sb[a]=m,e)if(q={values:d("values"),keys:f?m:d("keys"),entries:d("entries")},g)for(B in q)!fe&&!l&&B in x||yf(x,B,q[B]);else M({target:a,proto:!0,forced:fe||l},q);return q},Ui=va("species"),Vi=function(c){c=Qb(c);
                    var a=jb.f;ma&&c&&!c[Ui]&&a(c,Ui,{configurable:!0,get:function(){return this}})},zn=jb.f,Wi=Ci.fastKey,Xi=fb.set,Ff=fb.getterFor;(function(c,a,b){var d=-1!==c.indexOf("Map"),e=-1!==c.indexOf("Weak"),f=d?"set":"add",g=J[c],k=g&&g.prototype,q={};if(ma&&"function"==typeof g&&(e||k.forEach&&!ra(function(){(new g).entries().next()}))){var B=a(function(a,b){pn(sf(a,B,c),{type:c,collection:new g});null!=b&&hd(b,a[f],a,d)});var h=qn(c);Kc("add clear delete forEach get has set keys values entries".split(" "),
                    function(a){var b="add"==a||"set"==a;!(a in k)||e&&"clear"==a||sb(B.prototype,a,function(c,d){var f=h(this).collection;if(!b&&e&&!za(c))return"get"==a&&void 0;c=f[a](0===c?0:c,d);return b?this:c})});e||on(B.prototype,"size",{configurable:!0,get:function(){return h(this).collection.size}})}else B=b.getConstructor(a,c,d,f),Ci.REQUIRED=!0;return id(B,c,!1,!0),q[c]=B,M({global:!0,forced:!0},q),e||b.setStrong(B,c,d),B})("Map",function(c){return function(){return c(this,arguments.length?arguments[0]:void 0)}},
                    {getConstructor:function(c,a,b,d){var e=c(function(c,f){sf(c,e,a);Xi(c,{type:a,index:mc(null),first:void 0,last:void 0,size:0});ma||(c.size=0);null!=f&&hd(f,c[d],c,b)}),f=Ff(a),g=function(a,b,c){var d,e,g=f(a),q=k(a,b);return q?q.value=c:(g.last=q={index:e=Wi(b,!0),key:b,value:c,previous:d=g.last,next:void 0,removed:!1},g.first||(g.first=q),d&&(d.next=q),ma?g.size++:a.size++,"F"!==e&&(g.index[e]=q)),a},k=function(a,b){a=f(a);var c=Wi(b);if("F"!==c)return a.index[c];for(a=a.first;a;a=a.next)if(a.key==
                            b)return a};return zf(e.prototype,{clear:function(){for(var a=f(this),b=a.index,c=a.first;c;)c.removed=!0,c.previous&&(c.previous=c.previous.next=void 0),delete b[c.index],c=c.next;a.first=a.last=void 0;ma?a.size=0:this.size=0},delete:function(a){var b=f(this);if(a=k(this,a)){var c=a.next,d=a.previous;delete b.index[a.index];a.removed=!0;d&&(d.next=c);c&&(c.previous=d);b.first==a&&(b.first=c);b.last==a&&(b.last=d);ma?b.size--:this.size--}return!!a},forEach:function(a){for(var b,c=f(this),d=jc(a,1<
                            arguments.length?arguments[1]:void 0,3);b=b?b.next:c.first;)for(d(b.value,b.key,this);b&&b.removed;)b=b.previous},has:function(a){return!!k(this,a)}}),zf(e.prototype,b?{get:function(a){return(a=k(this,a))&&a.value},set:function(a,b){return g(this,0===a?0:a,b)}}:{add:function(a){return g(this,a=0===a?0:a,a)}}),ma&&zn(e.prototype,"size",{get:function(){return f(this).size}}),e},setStrong:function(c,a,b){var d=a+" Iterator",e=Ff(a),f=Ff(d);Ef(c,a,function(a,b){Xi(this,{type:d,target:a,state:e(a),kind:b,
                            last:void 0})},function(){for(var a=f(this),b=a.kind,c=a.last;c&&c.removed;)c=c.previous;return a.target&&(a.last=c=c?c.next:a.state.first)?"keys"==b?{value:c.key,done:!1}:"values"==b?{value:c.value,done:!1}:{value:[c.key,c.value],done:!1}:(a.target=void 0,{value:void 0,done:!0})},b?"entries":"values",!b,!0);Vi(a)}});var Yi=function(c){return function(a,b){var d,e;a=String(ic(a));b=Yd(b);var f=a.length;return 0>b||b>=f?c?"":void 0:55296>(d=a.charCodeAt(b))||56319<d||b+1===f||56320>(e=a.charCodeAt(b+
                    1))||57343<e?c?a.charAt(b):d:c?a.slice(b,b+2):e-56320+(d-55296<<10)+65536}},An={codeAt:Yi(!1),charAt:Yi(!0)}.charAt,Bn=fb.set,Cn=fb.getterFor("String Iterator");Ef(String,"String",function(c){Bn(this,{type:"String Iterator",string:String(c),index:0})},function(){var c,a=Cn(this),b=a.string,d=a.index;return d>=b.length?{value:void 0,done:!0}:(c=An(b,d),a.index+=c.length,{value:c,done:!1})});var Dn=fb.set,En=fb.getterFor("Array Iterator");Ef(Array,"Array",function(c,a){Dn(this,{type:"Array Iterator",
                    target:ib(c),index:0,kind:a})},function(){var c=En(this),a=c.target,b=c.kind,d=c.index++;return!a||d>=a.length?(c.target=void 0,{value:void 0,done:!0}):"keys"==b?{value:d,done:!1}:"values"==b?{value:a[d],done:!1}:{value:[d,a[d]],done:!1}},"values");Sb.Arguments=Sb.Array;var Fn={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,
                    MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},Zi=va("toStringTag"),ge;for(ge in Fn){var $i=J[ge],Gf=$i&&$i.prototype;Gf&&!Gf[Zi]&&sb(Gf,Zi,ge);Sb[ge]=Sb.Array}var Z=ha.Map,Gn=va("match"),Hf=function(c){var a;if(za(c)&&(void 0!==(a=c[Gn])?a:"RegExp"==Gb(c)))throw TypeError("The method doesn't accept regular expressions");
                    return c},Hn=va("match"),If=function(c){var a=/./;try{"/./"[c](a)}catch(b){try{return a[Hn]=!1,"/./"[c](a)}catch(d){}}return!1},aj="".endsWith,In=Math.min,Jn=If("endsWith");M({target:"String",proto:!0,forced:!Jn},{endsWith:function(c){var a=String(ic(this));Hf(c);var b=1<arguments.length?arguments[1]:void 0,d=tb(a.length);b=void 0===b?d:In(tb(b),d);d=String(c);return aj?aj.call(a,d,b):a.slice(b-d.length,b)===d}});var Da=function(c){return ha[c+"Prototype"]},Kn=Da("String").endsWith,bj=String.prototype,
                    Bg=function(c){var a=c.endsWith;return"string"==typeof c||c===bj||c instanceof String&&a===bj.endsWith?Kn:a},kd=function(c,a){var b=[][c];return!b||!ra(function(){b.call(null,a||function(){throw 1;},1)})},cj=kd("forEach")?function(c){return Kc(this,c,1<arguments.length?arguments[1]:void 0)}:[].forEach;M({target:"Array",proto:!0,forced:[].forEach!=cj},{forEach:cj});var Ln=Da("Array").forEach,dj=Array.prototype,Mn={DOMTokenList:!0,NodeList:!0},r=function(c){var a=c.forEach;return c===dj||c instanceof
                Array&&a===dj.forEach||Mn.hasOwnProperty(Zd(c))?Ln:a},ld={f:Object.getOwnPropertySymbols},he=Object.assign,ej=!he||ra(function(){var c={},a={},b=Symbol();return c[b]=7,"abcdefghijklmnopqrst".split("").forEach(function(b){a[b]=b}),7!=he({},c)[b]||"abcdefghijklmnopqrst"!=$b(he({},a)).join("")})?function(c,a){for(var b=ub(c),d=arguments.length,e=1,f=ld.f,g=Sd;d>e;)for(var k,q=Td(arguments[e++]),B=f?$b(q).concat(f(q)):$b(q),h=B.length,l=0;h>l;)k=B[l++],ma&&!g.call(q,k)||(b[k]=q[k]);return b}:he;M({target:"Object",
                    stat:!0,forced:Object.assign!==ej},{assign:ej});var ab=ha.Object.assign,Nn=ra(function(){$b(1)});M({target:"Object",stat:!0,forced:Nn},{keys:function(c){return $b(ub(c))}});var S=ha.Object.keys,fj=function(c){return function(a,b,d,e){rb(b);a=ub(a);var f=Td(a),g=tb(a.length),k=c?g-1:0,q=c?-1:1;if(2>d)for(;;){if(k in f){e=f[k];k+=q;break}if(k+=q,c?0>k:g<=k)throw TypeError("Reduce of empty array with no initial value");}for(;c?0<=k:g>k;k+=q)k in f&&(e=b(e,f[k],k,a));return e}},On={left:fj(!1),right:fj(!0)}.left;
                M({target:"Array",proto:!0,forced:kd("reduce")},{reduce:function(c){return On(this,c,arguments.length,1<arguments.length?arguments[1]:void 0)}});var Pn=Da("Array").reduce,gj=Array.prototype,Ae=function(c){var a=c.reduce;return c===gj||c instanceof Array&&a===gj.reduce?Pn:a};M({target:"Object",stat:!0,forced:!ma,sham:!ma},{defineProperty:jb.f});var hj=Oa(function(c){var a=ha.Object;c=c.exports=function(b,c,e){return a.defineProperty(b,c,e)};a.defineProperty.sham&&(c.sham=!0)}),ba=hj,Qn=/^[\t\n\x0B\f\r \u00a0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff][\t\n\x0B\f\r \u00a0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff]*/,
                    Rn=/[\t\n\x0B\f\r \u00a0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff][\t\n\x0B\f\r \u00a0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff]*$/,Jf=function(c){return function(a){a=String(ic(a));return 1&c&&(a=a.replace(Qn,"")),2&c&&(a=a.replace(Rn,"")),a}};Jf(1);Jf(2);var ij=Jf(3),ie=J.parseInt,Sn=/^[+-]?0[Xx]/,jj=8!==ie("\t\n\x0B\f\r \u00a0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff08")||
                22!==ie("\t\n\x0B\f\r \u00a0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff0x16")?function(c,a){c=ij(String(c));return ie(c,a>>>0||(Sn.test(c)?16:10))}:ie;M({global:!0,forced:parseInt!=jj},{parseInt:jj});var R=ha.parseInt;let yg=!0,zg=!0;var kj=Hc,Tn=ra(function(){kj(1)});M({target:"Object",stat:!0,forced:!ma||Tn,sham:!ma},{getOwnPropertyDescriptor:function(c,a){return kj(ib(c),a)}});var da=Oa(function(c){var a=ha.Object;c=c.exports=function(b,
c){return a.getOwnPropertyDescriptor(b,c)};a.getOwnPropertyDescriptor.sham&&(c.sham=!0)}),nc=function(c,a,b){a=Fc(a);a in c?jb.f(c,a,hc(0,b)):c[a]=b},md=Qb("navigator","userAgent")||"",lj=J.process,mj=lj&&lj.versions,nj=mj&&mj.v8,Tb,je;nj?(Tb=nj.split("."),je=Tb[0]+Tb[1]):md&&(Tb=md.match(/Edge\/(\d+)/),(!Tb||74<=Tb[1])&&(Tb=md.match(/Chrome\/(\d+)/),Tb&&(je=Tb[1])));var ke=je&&+je,Un=va("species"),nd=function(c){return 51<=ke||!ra(function(){var a=[];return(a.constructor={})[Un]=function(){return{foo:1}},
                1!==a[c](Boolean).foo})},oj=va("isConcatSpreadable"),Vn=51<=ke||!ra(function(){var c=[];return c[oj]=!1,c.concat()[0]!==c}),Wn=nd("concat");M({target:"Array",proto:!0,forced:!Vn||!Wn},{concat:function(c){var a,b,d=ub(this),e=tf(d,0),f=0;var g=-1;for(a=arguments.length;g<a;g++){var k=b=-1===g?d:arguments[g];if(za(k)){var q=k[oj];k=void 0!==q?!!q:kc(k)}else k=!1;if(k){if(9007199254740991<f+(q=tb(b.length)))throw TypeError("Maximum allowed index exceeded");for(k=0;k<q;k++,f++)k in b&&nc(e,f,b[k])}else{if(9007199254740991<=
                        f)throw TypeError("Maximum allowed index exceeded");nc(e,f++,b)}}return e.length=f,e}});var Xn=Da("Array").concat,pj=Array.prototype,n=function(c){var a=c.concat;return c===pj||c instanceof Array&&a===pj.concat?Xn:a};M({target:"Array",proto:!0,forced:!nd("filter")},{filter:function(c){return en(this,c,1<arguments.length?arguments[1]:void 0)}});var Yn=Da("Array").filter,qj=Array.prototype,O=function(c){var a=c.filter;return c===qj||c instanceof Array&&a===qj.filter?Yn:a},Zn=J.Promise,rj=va("iterator"),
                    sj=!1;try{var $n=0,tj={next:function(){return{done:!!$n++}},return:function(){sj=!0}};tj[rj]=function(){return this};Array.from(tj,function(){throw 2;})}catch(c){}var uj=function(c,a){if(!a&&!sj)return!1;var b=!1;try{a={},a[rj]=function(){return{next:function(){return{done:b=!0}}}},c(a)}catch(d){}return b},ao=va("species"),vj=function(c,a){var b;c=Qa(c).constructor;return void 0===c||null==(b=Qa(c)[ao])?a:rb(b)},wj=/(iphone|ipod|ipad).*applewebkit/i.test(md),xj=J.location,Kf=J.setImmediate,yj=J.clearImmediate,
                    zj=J.process,Aj=J.MessageChannel,Lf=J.Dispatch,Mf=0,od={},Mc,Nf,Of,Pf=function(c){if(od.hasOwnProperty(c)){var a=od[c];delete od[c];a()}},Qf=function(c){return function(){Pf(c)}},Bj=function(c){Pf(c.data)},Cj=function(c){J.postMessage(c+"",xj.protocol+"//"+xj.host)};Kf&&yj||(Kf=function(c){for(var a=[],b=1;arguments.length>b;)a.push(arguments[b++]);return od[++Mf]=function(){("function"==typeof c?c:Function(c)).apply(void 0,a)},Mc(Mf),Mf},yj=function(c){delete od[c]},"process"==Gb(zj)?Mc=function(c){zj.nextTick(Qf(c))}:
                    Lf&&Lf.now?Mc=function(c){Lf.now(Qf(c))}:Aj&&!wj?(Nf=new Aj,Of=Nf.port2,Nf.port1.onmessage=Bj,Mc=jc(Of.postMessage,Of,1)):!J.addEventListener||"function"!=typeof postMessage||J.importScripts||ra(Cj)?Mc="onreadystatechange"in(Ud?Gc.createElement("script"):{})?function(c){wf.appendChild(Ud?Gc.createElement("script"):{}).onreadystatechange=function(){wf.removeChild(this);Pf(c)}}:function(c){setTimeout(Qf(c),0)}:(Mc=Cj,J.addEventListener("message",Bj,!1)));var Rf=Kf,bo=Hc,Dj=J.MutationObserver||J.WebKitMutationObserver,
                    Sf=J.process,Tf=J.Promise,Ej="process"==Gb(Sf),Fj=bo(J,"queueMicrotask"),Gj=Fj&&Fj.value,pd,oc,qd,Nc,Uf,Vf,Wf,Hj;Gj||(pd=function(){var c;for(Ej&&(c=Sf.domain)&&c.exit();oc;){var a=oc.fn;oc=oc.next;try{a()}catch(b){throw oc?Nc():qd=void 0,b;}}qd=void 0;c&&c.enter()},Ej?Nc=function(){Sf.nextTick(pd)}:Dj&&!wj?(Uf=!0,Vf=document.createTextNode(""),(new Dj(pd)).observe(Vf,{characterData:!0}),Nc=function(){Vf.data=Uf=!Uf}):Tf&&Tf.resolve?(Wf=Tf.resolve(void 0),Hj=Wf.then,Nc=function(){Hj.call(Wf,pd)}):
                    Nc=function(){Rf.call(J,pd)});var Ij=Gj||function(c){c={fn:c,next:void 0};qd&&(qd.next=c);oc||(oc=c,Nc());qd=c},co=function(c){var a,b;this.promise=new c(function(c,e){if(void 0!==a||void 0!==b)throw TypeError("Bad Promise constructor");a=c;b=e});this.resolve=rb(a);this.reject=rb(b)},le={f:function(c){return new co(c)}},Xf=function(c,a){if(Qa(c),za(a)&&a.constructor===c)return a;c=le.f(c);return(0,c.resolve)(a),c.promise},eo=function(c,a){var b=J.console;b&&b.error&&(1===arguments.length?b.error(c):
                    b.error(c,a))},me=function(c){try{return{error:!1,value:c()}}catch(a){return{error:!0,value:a}}},fo=va("species"),Jj=fb.get,go=fb.set,ho=fb.getterFor("Promise"),Ua=Zn,Kj=J.TypeError,Yf=J.document,ne=J.process,io=Rb("inspectSource");Qb("fetch");var Oc=le.f,jo=Oc,rd="process"==Gb(ne),ko=!!(Yf&&Yf.createEvent&&J.dispatchEvent),oe,Lj,pe=Ic("Promise",function(){if(io(Ua)===String(Ua)&&(66===ke||!rd&&"function"!=typeof PromiseRejectionEvent)||!Ua.prototype.finally)return!0;if(51<=ke&&/native code/.test(Ua))return!1;
                    var c=Ua.resolve(1),a=function(a){a(function(){},function(){})};return(c.constructor={})[fo]=a,!(c.then(function(){})instanceof a)}),lo=pe||!uj(function(c){Ua.all(c).catch(function(){})}),Mj=function(c){var a;return!(!za(c)||"function"!=typeof(a=c.then))&&a},Zf=function(c,a,b){if(!a.notified){a.notified=!0;var d=a.reactions;Ij(function(){for(var e=a.value,f=1==a.state,g=0;d.length>g;){var k,q,B,h=d[g++],l=f?h.ok:h.fail,x=h.resolve,n=h.reject,m=h.domain;try{l?(f||(2===a.rejection&&mo(c,a),a.rejection=
                    1),!0===l?k=e:(m&&m.enter(),k=l(e),m&&(m.exit(),B=!0)),k===h.promise?n(Kj("Promise-chain cycle")):(q=Mj(k))?q.call(k,x,n):x(k)):n(e)}catch(la){m&&!B&&m.exit(),n(la)}}a.reactions=[];a.notified=!1;b&&!a.rejection&&no(c,a)})}},Nj=function(c,a,b){var d,e;ko?((d=Yf.createEvent("Event")).promise=a,d.reason=b,d.initEvent(c,!1,!0),J.dispatchEvent(d)):d={promise:a,reason:b};(e=J["on"+c])?e(d):"unhandledrejection"===c&&eo("Unhandled promise rejection",b)},no=function(c,a){Rf.call(J,function(){var b,d=a.value;
                    if(1!==a.rejection&&!a.parent&&(b=me(function(){rd?ne.emit("unhandledRejection",d,c):Nj("unhandledrejection",c,d)}),a.rejection=rd||1!==a.rejection&&!a.parent?2:1,b.error))throw b.value;})},mo=function(c,a){Rf.call(J,function(){rd?ne.emit("rejectionHandled",c):Nj("rejectionhandled",c,a.value)})},Pc=function(c,a,b,d){return function(e){c(a,b,e,d)}},Qc=function(c,a,b,d){a.done||(a.done=!0,d&&(a=d),a.value=b,a.state=2,Zf(c,a,!0))},$f=function(c,a,b,d){if(!a.done){a.done=!0;d&&(a=d);try{if(c===b)throw Kj("Promise can't be resolved itself");
                    var e=Mj(b);e?Ij(function(){var d={done:!1};try{e.call(b,Pc($f,c,d,a),Pc(Qc,c,d,a))}catch(g){Qc(c,d,g,a)}}):(a.value=b,a.state=1,Zf(c,a,!1))}catch(f){Qc(c,{done:!1},f,a)}}};pe&&(Ua=function(c){sf(this,Ua,"Promise");rb(c);oe.call(this);var a=Jj(this);try{c(Pc($f,this,a),Pc(Qc,this,a))}catch(b){Qc(this,a,b)}},oe=function(c){go(this,{type:"Promise",done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})},oe.prototype=zf(Ua.prototype,{then:function(c,a){var b=ho(this),d=Oc(vj(this,
                        Ua));return d.ok="function"!=typeof c||c,d.fail="function"==typeof a&&a,d.domain=rd?ne.domain:void 0,b.parent=!0,b.reactions.push(d),0!=b.state&&Zf(this,b,!1),d.promise},catch:function(c){return this.then(void 0,c)}}),Lj=function(){var c=new oe,a=Jj(c);this.promise=c;this.resolve=Pc($f,c,a);this.reject=Pc(Qc,c,a)},le.f=Oc=function(c){return c===Ua||c===Oj?new Lj(c):jo(c)});M({global:!0,wrap:!0,forced:pe},{Promise:Ua});id(Ua,"Promise",!1,!0);Vi("Promise");var Oj=Qb("Promise");M({target:"Promise",stat:!0,
                    forced:pe},{reject:function(c){var a=Oc(this);return a.reject.call(void 0,c),a.promise}});M({target:"Promise",stat:!0,forced:!0},{resolve:function(c){return Xf(this===Oj?Ua:this,c)}});M({target:"Promise",stat:!0,forced:lo},{all:function(c){var a=this,b=Oc(a),d=b.resolve,e=b.reject,f=me(function(){var b=rb(a.resolve),f=[],q=0,h=1;hd(c,function(c){var g=q++,k=!1;f.push(void 0);h++;b.call(a,c).then(function(a){k||(k=!0,f[g]=a,--h||d(f))},e)});--h||d(f)});return f.error&&e(f.value),b.promise},race:function(c){var a=
                        this,b=Oc(a),d=b.reject,e=me(function(){var e=rb(a.resolve);hd(c,function(c){e.call(a,c).then(b.resolve,d)})});return e.error&&d(e.value),b.promise}});M({target:"Promise",stat:!0},{allSettled:function(c){var a=this,b=le.f(a),d=b.resolve,e=b.reject,f=me(function(){var b=rb(a.resolve),e=[],f=0,h=1;hd(c,function(c){var g=f++,k=!1;e.push(void 0);h++;b.call(a,c).then(function(a){k||(k=!0,e[g]={status:"fulfilled",value:a},--h||d(e))},function(a){k||(k=!0,e[g]={status:"rejected",reason:a},--h||d(e))})});
                        --h||d(e)});return f.error&&e(f.value),b.promise}});M({target:"Promise",proto:!0,real:!0},{finally:function(c){var a=vj(this,Qb("Promise")),b="function"==typeof c;return this.then(b?function(b){return Xf(a,c()).then(function(){return b})}:c,b?function(b){return Xf(a,c()).then(function(){throw b;})}:c)}});var u=ha.Promise;M({target:"Array",proto:!0,forced:!nd("map")},{map:function(c){return dn(this,c,1<arguments.length?arguments[1]:void 0)}});var oo=Da("Array").map,Pj=Array.prototype,A=function(c){var a=
                    c.map;return c===Pj||c instanceof Array&&a===Pj.map?oo:a},po=Math.max,qo=Math.min;M({target:"Array",proto:!0,forced:!nd("splice")},{splice:function(c,a){var b,d,e,f,g=ub(this),k=tb(g.length),q=be(c,k);var h=arguments.length;if(0===h?b=d=0:1===h?(b=0,d=k-q):(b=h-2,d=qo(po(Yd(a),0),k-q)),9007199254740991<k+b-d)throw TypeError("Maximum allowed length exceeded");h=tf(g,d);for(e=0;e<d;e++)(f=q+e)in g&&nc(h,e,g[f]);if(h.length=d,b<d){for(e=q;e<k-d;e++){var L=e+b;(f=e+d)in g?g[L]=g[f]:delete g[L]}for(e=
k;e>k-d+b;e--)delete g[e-1]}else if(b>d)for(e=k-d;e>q;e--)L=e+b-1,(f=e+d-1)in g?g[L]=g[f]:delete g[L];for(e=0;e<b;e++)g[e+q]=arguments[e+2];return g.length=k-d+b,h}});var ro=Da("Array").splice,Qj=Array.prototype,Ja=function(c){var a=c.splice;return c===Qj||c instanceof Array&&a===Qj.splice?ro:a},Rj=[].indexOf,Sj=!!Rj&&0>1/[1].indexOf(1,-0),so=kd("indexOf");M({target:"Array",proto:!0,forced:Sj||so},{indexOf:function(c){return Sj?Rj.apply(this,arguments)||0:Ni(this,c,1<arguments.length?arguments[1]:
                        void 0)}});var to=Da("Array").indexOf,Tj=Array.prototype,E=function(c){var a=c.indexOf;return c===Tj||c instanceof Array&&a===Tj.indexOf?to:a},uo=va("species"),vo=[].slice,wo=Math.max;M({target:"Array",proto:!0,forced:!nd("slice")},{slice:function(c,a){var b,d=ib(this);var e=tb(d.length);c=be(c,e);a=be(void 0===a?e:a,e);if(kc(d)&&("function"!=typeof(b=d.constructor)||b!==Array&&!kc(b.prototype)?za(b)&&null===(b=b[uo])&&(b=void 0):b=void 0,b===Array||void 0===b))return vo.call(d,c,a);b=new (void 0===
                    b?Array:b)(wo(a-c,0));for(e=0;c<a;c++,e++)c in d&&nc(b,e,d[c]);return b.length=e,b}});var xo=Da("Array").slice,Uj=Array.prototype,zb=function(c){var a=c.slice;return c===Uj||c instanceof Array&&a===Uj.slice?xo:a},Vj=!0;"find"in[]&&Array(1).find(function(){Vj=!1});M({target:"Array",proto:!0,forced:Vj},{find:function(c){return gn(this,c,1<arguments.length?arguments[1]:void 0)}});var yo=Da("Array").find,Wj=Array.prototype,U=function(c){var a=c.find;return c===Wj||c instanceof Array&&a===Wj.find?yo:a},
                    Xj=[].slice,ag={};M({target:"Function",proto:!0},{bind:Function.bind||function(c){var a=rb(this),b=Xj.call(arguments,1),d=function(){var e=b.concat(Xj.call(arguments));if(this instanceof d){var f=e.length;if(!(f in ag)){for(var g=[],k=0;k<f;k++)g[k]="a["+k+"]";ag[f]=Function("C,a","return new C("+g.join(",")+")")}e=ag[f](a,e)}else e=a.apply(c,e);return e};return za(a.prototype)&&(d.prototype=a.prototype),d}});var zo=Da("Function").bind,Yj=Function.prototype,Ba=function(c){var a=c.bind;return c===
                Yj||c instanceof Function&&a===Yj.bind?zo:a};M({target:"Array",proto:!0},{includes:function(c){return tn(this,c,1<arguments.length?arguments[1]:void 0)}});var Ao=Da("Array").includes;M({target:"String",proto:!0,forced:!If("includes")},{includes:function(c){return!!~String(ic(this)).indexOf(Hf(c),1<arguments.length?arguments[1]:void 0)}});var Bo=Da("String").includes,Zj=Array.prototype,ak=String.prototype,Aa=function(c){var a=c.includes;return c===Zj||c instanceof Array&&a===Zj.includes?Ao:"string"==
                typeof c||c===ak||c instanceof String&&a===ak.includes?Bo:a};M({target:"Array",proto:!0,forced:kd("some")},{some:function(c){return fn(this,c,1<arguments.length?arguments[1]:void 0)}});var Co=Da("Array").some,bk=Array.prototype,Fg=function(c){var a=c.some;return c===bk||c instanceof Array&&a===bk.some?Co:a};let Gg=pb;var ck=Object.freeze({__proto__:null,shimMediaStream:Hg,shimOnTrack:Ig,shimGetSendersWithDtmf:Jg,shimGetStats:Kg,shimSenderReceiverGetStats:Lg,shimAddTrackRemoveTrackWithNative:Mg,shimAddTrackRemoveTrack:Ng,
                    shimPeerConnection:Ce,fixNegotiationNeeded:Og,shimGetUserMedia:Dg,shimGetDisplayMedia:function(c,a){c.navigator.mediaDevices&&"getDisplayMedia"in c.navigator.mediaDevices||c.navigator.mediaDevices&&("function"==typeof a?c.navigator.mediaDevices.getDisplayMedia=function(b){return a(b).then(a=>{let d=b.video&&b.video.width,f=b.video&&b.video.height;return b.video={mandatory:{chromeMediaSource:"desktop",chromeMediaSourceId:a,maxFrameRate:b.video&&b.video.frameRate||3}},d&&(b.video.mandatory.maxWidth=
                        d),f&&(b.video.mandatory.maxHeight=f),c.navigator.mediaDevices.getUserMedia(b)})}:console.error("shimGetDisplayMedia: getSourceId argument is not a function"))}}),dk="".startsWith,Do=Math.min,Eo=If("startsWith");M({target:"String",proto:!0,forced:!Eo},{startsWith:function(c){var a=String(ic(this));Hf(c);var b=tb(Do(1<arguments.length?arguments[1]:void 0,a.length)),d=String(c);return dk?dk.call(a,d,b):a.slice(b,b+d.length)===d}});var Fo=Da("String").startsWith,ek=String.prototype,Cd=function(c){var a=
                    c.startsWith;return"string"==typeof c||c===ek||c instanceof String&&a===ek.startsWith?Fo:a};M({target:"String",proto:!0,forced:function(c){return ra(function(){return!!"\t\n\v\f\r \u00a0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff"[c]()||"\u200b\u0085\u180e"!="\u200b\u0085\u180e"[c]()||"\t\n\v\f\r \u00a0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029\ufeff"[c].name!==c})}("trim")},
                    {trim:function(){return ij(this)}});var Go=Da("String").trim,fk=String.prototype,uc=function(c){var a=c.trim;return"string"==typeof c||c===fk||c instanceof String&&a===fk.trim?Go:a},F=Oa(function(c){var a={generateIdentifier:function(){return Math.random().toString(36).substr(2,10)}};a.localCName=a.generateIdentifier();a.splitLines=function(a){var b;return A(b=uc(a).call(a).split("\n")).call(b,function(a){return uc(a).call(a)})};a.splitSections=function(a){a=a.split("\nm=");return A(a).call(a,function(a,
b){var c;return uc(c=0<b?"m="+a:a).call(c)+"\r\n"})};a.getDescription=function(b){return(b=a.splitSections(b))&&b[0]};a.getMediaSections=function(b){b=a.splitSections(b);return b.shift(),b};a.matchPrefix=function(b,c){var d;return O(d=a.splitLines(b)).call(d,function(a){return 0===E(a).call(a,c)})};a.parseCandidate=function(a){var b;a={foundation:(b=0===E(a).call(a,"a=candidate:")?a.substring(12).split(" "):a.substring(10).split(" "))[0],component:R(b[1],10),protocol:b[2].toLowerCase(),priority:R(b[3],
                        10),ip:b[4],address:b[4],port:R(b[5],10),type:b[7]};for(var c=8;c<b.length;c+=2)switch(b[c]){case "raddr":a.relatedAddress=b[c+1];break;case "rport":a.relatedPort=R(b[c+1],10);break;case "tcptype":a.tcpType=b[c+1];break;case "ufrag":a.ufrag=b[c+1];a.usernameFragment=b[c+1];break;default:a[b[c]]=b[c+1]}return a};a.writeCandidate=function(a){var b=[];b.push(a.foundation);b.push(a.component);b.push(a.protocol.toUpperCase());b.push(a.priority);b.push(a.address||a.ip);b.push(a.port);var c=a.type;return b.push("typ"),
                    b.push(c),"host"!==c&&a.relatedAddress&&a.relatedPort&&(b.push("raddr"),b.push(a.relatedAddress),b.push("rport"),b.push(a.relatedPort)),a.tcpType&&"tcp"===a.protocol.toLowerCase()&&(b.push("tcptype"),b.push(a.tcpType)),(a.usernameFragment||a.ufrag)&&(b.push("ufrag"),b.push(a.usernameFragment||a.ufrag)),"candidate:"+b.join(" ")};a.parseIceOptions=function(a){return a.substr(14).split(" ")};a.parseRtpMap=function(a){a=a.substr(9).split(" ");var b={payloadType:R(a.shift(),10)};return a=a[0].split("/"),
                    b.name=a[0],b.clockRate=R(a[1],10),b.channels=3===a.length?R(a[2],10):1,b.numChannels=b.channels,b};a.writeRtpMap=function(a){var b=a.payloadType;void 0!==a.preferredPayloadType&&(b=a.preferredPayloadType);var c=a.channels||a.numChannels||1;return"a=rtpmap:"+b+" "+a.name+"/"+a.clockRate+(1!==c?"/"+c:"")+"\r\n"};a.parseExtmap=function(a){var b;a=a.substr(9).split(" ");return{id:R(a[0],10),direction:0<E(b=a[0]).call(b,"/")?a[0].split("/")[1]:"sendrecv",uri:a[1]}};a.writeExtmap=function(a){return"a=extmap:"+
                    (a.id||a.preferredId)+(a.direction&&"sendrecv"!==a.direction?"/"+a.direction:"")+" "+a.uri+"\r\n"};a.parseFmtp=function(a){for(var b={},c=a.substr(E(a).call(a," ")+1).split(";"),f=0;f<c.length;f++){var g,k;a=uc(g=c[f]).call(g).split("=");b[uc(k=a[0]).call(k)]=a[1]}return b};a.writeFmtp=function(a){var b="",c=a.payloadType;if(void 0!==a.preferredPayloadType&&(c=a.preferredPayloadType),a.parameters&&S(a.parameters).length){var f,g=[];r(f=S(a.parameters)).call(f,function(b){a.parameters[b]?g.push(b+
                    "="+a.parameters[b]):g.push(b)});b+="a=fmtp:"+c+" "+g.join(";")+"\r\n"}return b};a.parseRtcpFb=function(a){a=a.substr(E(a).call(a," ")+1).split(" ");return{type:a.shift(),parameter:a.join(" ")}};a.writeRtcpFb=function(a){var b,c="",f=a.payloadType;(void 0!==a.preferredPayloadType&&(f=a.preferredPayloadType),a.rtcpFeedback&&a.rtcpFeedback.length)&&r(b=a.rtcpFeedback).call(b,function(a){c+="a=rtcp-fb:"+f+" "+a.type+(a.parameter&&a.parameter.length?" "+a.parameter:"")+"\r\n"});return c};a.parseSsrcMedia=
                    function(a){var b=E(a).call(a," "),c={ssrc:R(a.substr(7,b-7),10)},f=E(a).call(a,":",b);return-1<f?(c.attribute=a.substr(b+1,f-b-1),c.value=a.substr(f+1)):c.attribute=a.substr(b+1),c};a.parseSsrcGroup=function(a){a=a.substr(13).split(" ");return{semantics:a.shift(),ssrcs:A(a).call(a,function(a){return R(a,10)})}};a.getMid=function(b){if(b=a.matchPrefix(b,"a=mid:")[0])return b.substr(6)};a.parseFingerprint=function(a){a=a.substr(14).split(" ");return{algorithm:a[0].toLowerCase(),value:a[1]}};a.getDtlsParameters=
                    function(b,c){b=a.matchPrefix(b+c,"a=fingerprint:");return{role:"auto",fingerprints:A(b).call(b,a.parseFingerprint)}};a.writeDtlsParameters=function(a,c){var b,d="a=setup:"+c+"\r\n";return r(b=a.fingerprints).call(b,function(a){d+="a=fingerprint:"+a.algorithm+" "+a.value+"\r\n"}),d};a.getIceParameters=function(b,c){b=a.splitLines(b);return b=n(b).call(b,a.splitLines(c)),{usernameFragment:O(b).call(b,function(a){return 0===E(a).call(a,"a=ice-ufrag:")})[0].substr(12),password:O(b).call(b,function(a){return 0===
                        E(a).call(a,"a=ice-pwd:")})[0].substr(10)}};a.writeIceParameters=function(a){return"a=ice-ufrag:"+a.usernameFragment+"\r\na=ice-pwd:"+a.password+"\r\n"};a.parseRtpParameters=function(b){for(var c,e={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},f=a.splitLines(b)[0].split(" "),g=3;g<f.length;g++){var k=f[g],q=a.matchPrefix(b,"a=rtpmap:"+k+" ")[0];if(q){var h;q=a.parseRtpMap(q);var L=a.matchPrefix(b,"a=fmtp:"+k+" ");switch(q.parameters=L.length?a.parseFmtp(L[0]):{},q.rtcpFeedback=A(h=a.matchPrefix(b,
                    "a=rtcp-fb:"+k+" ")).call(h,a.parseRtcpFb),e.codecs.push(q),q.name.toUpperCase()){case "RED":case "ULPFEC":e.fecMechanisms.push(q.name.toUpperCase())}}}return r(c=a.matchPrefix(b,"a=extmap:")).call(c,function(b){e.headerExtensions.push(a.parseExtmap(b))}),e};a.writeRtpDescription=function(b,c){var d,f,g,k="";k+="m="+b+" ";k+=0<c.codecs.length?"9":"0";k+=" UDP/TLS/RTP/SAVPF ";k+=A(d=c.codecs).call(d,function(a){return void 0!==a.preferredPayloadType?a.preferredPayloadType:a.payloadType}).join(" ")+
                    "\r\n";k+="c=IN IP4 0.0.0.0\r\n";k+="a=rtcp:9 IN IP4 0.0.0.0\r\n";r(f=c.codecs).call(f,function(b){k+=a.writeRtpMap(b);k+=a.writeFmtp(b);k+=a.writeRtcpFb(b)});var q,h=0;(r(g=c.codecs).call(g,function(a){a.maxptime>h&&(h=a.maxptime)}),0<h&&(k+="a=maxptime:"+h+"\r\n"),k+="a=rtcp-mux\r\n",c.headerExtensions)&&r(q=c.headerExtensions).call(q,function(b){k+=a.writeExtmap(b)});return k};a.parseRtpEncodingParameters=function(b){var c,e,f,g,k,q,h,L=[],l=a.parseRtpParameters(b),n=-1!==E(c=l.fecMechanisms).call(c,
                    "RED"),m=-1!==E(e=l.fecMechanisms).call(e,"ULPFEC");c=O(f=A(g=a.matchPrefix(b,"a=ssrc:")).call(g,function(b){return a.parseSsrcMedia(b)})).call(f,function(a){return"cname"===a.attribute});var p=0<c.length&&c[0].ssrc;f=A(k=a.matchPrefix(b,"a=ssrc-group:FID")).call(k,function(a){a=a.substr(17).split(" ");return A(a).call(a,function(a){return R(a,10)})});0<f.length&&1<f[0].length&&f[0][0]===p&&(h=f[0][1]);r(q=l.codecs).call(q,function(a){"RTX"===a.name.toUpperCase()&&a.parameters.apt&&(a={ssrc:p,codecPayloadType:R(a.parameters.apt,
                        10)},p&&h&&(a.rtx={ssrc:h}),L.push(a),n&&((a=JSON.parse(z(a))).fec={ssrc:p,mechanism:m?"red+ulpfec":"red"},L.push(a)))});0===L.length&&p&&L.push({ssrc:p});var la,t,u=a.matchPrefix(b,"b=");u.length&&(u=0===E(la=u[0]).call(la,"b=TIAS:")?R(u[0].substr(7),10):0===E(t=u[0]).call(t,"b=AS:")?950*R(u[0].substr(5),10)-16E3:void 0,r(L).call(L,function(a){a.maxBitrate=u}));return L};a.parseRtcpParameters=function(b){var c,e,f={},g=O(c=A(e=a.matchPrefix(b,"a=ssrc:")).call(e,function(b){return a.parseSsrcMedia(b)})).call(c,
                    function(a){return"cname"===a.attribute})[0];g&&(f.cname=g.value,f.ssrc=g.ssrc);c=a.matchPrefix(b,"a=rtcp-rsize");f.reducedSize=0<c.length;f.compound=0===c.length;b=a.matchPrefix(b,"a=rtcp-mux");return f.mux=0<b.length,f};a.parseMsid=function(b){var c,e,f,g=a.matchPrefix(b,"a=msid:");if(1===g.length)return{stream:(f=g[0].substr(7).split(" "))[0],track:f[1]};b=O(c=A(e=a.matchPrefix(b,"a=ssrc:")).call(e,function(b){return a.parseSsrcMedia(b)})).call(c,function(a){return"msid"===a.attribute});return 0<
                b.length?{stream:(f=b[0].value.split(" "))[0],track:f[1]}:void 0};a.generateSessionId=function(){return Math.random().toString().substr(2,21)};a.writeSessionBoilerplate=function(b,c,e){c=void 0!==c?c:2;return"v=0\r\no="+(e||"thisisadapterortc")+" "+(b||a.generateSessionId())+" "+c+" IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n"};a.writeMediaSection=function(b,c,e,f){c=a.writeRtpDescription(b.kind,c);if(c+=a.writeIceParameters(b.iceGatherer.getLocalParameters()),c+=a.writeDtlsParameters(b.dtlsTransport.getLocalParameters(),
                    "offer"===e?"actpass":"active"),c+="a=mid:"+b.mid+"\r\n",b.direction?c+="a="+b.direction+"\r\n":b.rtpSender&&b.rtpReceiver?c+="a=sendrecv\r\n":b.rtpSender?c+="a=sendonly\r\n":b.rtpReceiver?c+="a=recvonly\r\n":c+="a=inactive\r\n",b.rtpSender)e="msid:"+f.id+" "+b.rtpSender.track.id+"\r\n",c=c+("a="+e)+("a=ssrc:"+b.sendEncodingParameters[0].ssrc+" "+e),b.sendEncodingParameters[0].rtx&&(c+="a=ssrc:"+b.sendEncodingParameters[0].rtx.ssrc+" "+e,c+="a=ssrc-group:FID "+b.sendEncodingParameters[0].ssrc+" "+
                    b.sendEncodingParameters[0].rtx.ssrc+"\r\n");return c+="a=ssrc:"+b.sendEncodingParameters[0].ssrc+" cname:"+a.localCName+"\r\n",b.rtpSender&&b.sendEncodingParameters[0].rtx&&(c+="a=ssrc:"+b.sendEncodingParameters[0].rtx.ssrc+" cname:"+a.localCName+"\r\n"),c};a.getDirection=function(b,c){b=a.splitLines(b);for(var d=0;d<b.length;d++)switch(b[d]){case "a=sendrecv":case "a=sendonly":case "a=recvonly":case "a=inactive":return b[d].substr(2)}return c?a.getDirection(c):"sendrecv"};a.getKind=function(b){return a.splitLines(b)[0].split(" ")[0].substr(2)};
                    a.isRejected=function(a){return"0"===a.split(" ",2)[1]};a.parseMLine=function(b){b=a.splitLines(b)[0].substr(2).split(" ");return{kind:b[0],port:R(b[1],10),protocol:b[2],fmt:zb(b).call(b,3).join(" ")}};a.parseOLine=function(b){b=a.matchPrefix(b,"o=")[0].substr(2).split(" ");return{username:b[0],sessionId:b[1],sessionVersion:R(b[2],10),netType:b[3],addressType:b[4],address:b[5]}};a.isValidSDP=function(b){if("string"!=typeof b||0===b.length)return!1;b=a.splitLines(b);for(var c=0;c<b.length;c++)if(2>
                        b[c].length||"="!==b[c].charAt(1))return!1;return!0};c.exports=a}),ul=function(c,a){function b(a,b){b.addTrack(a);b.dispatchEvent(new c.MediaStreamTrackEvent("addtrack",{track:a}))}function d(a,b,d,e){var f=new Event("track");f.track=b;f.receiver=d;f.transceiver={receiver:d};f.streams=e;c.setTimeout(function(){a._dispatchEvent("track",f)})}var e=function(b){var d=this,e=document.createDocumentFragment();if(["addEventListener","removeEventListener","dispatchEvent"].forEach(function(a){d[a]=e[a].bind(e)}),
                    this.canTrickleIceCandidates=null,this.needNegotiation=!1,this.localStreams=[],this.remoteStreams=[],this._localDescription=null,this._remoteDescription=null,this.signalingState="stable",this.iceConnectionState="new",this.connectionState="new",this.iceGatheringState="new",b=JSON.parse(JSON.stringify(b||{})),this.usingBundle="max-bundle"===b.bundlePolicy,"negotiate"===b.rtcpMuxPolicy)throw Ka("NotSupportedError","rtcpMuxPolicy 'negotiate' is not supported");switch(b.rtcpMuxPolicy||(b.rtcpMuxPolicy=
                    "require"),b.iceTransportPolicy){case "all":case "relay":break;default:b.iceTransportPolicy="all"}switch(b.bundlePolicy){case "balanced":case "max-compat":case "max-bundle":break;default:b.bundlePolicy="balanced"}if(b.iceServers=tl(b.iceServers||[],a),this._iceGatherers=[],b.iceCandidatePoolSize)for(var f=b.iceCandidatePoolSize;0<f;f--)this._iceGatherers.push(new c.RTCIceGatherer({iceServers:b.iceServers,gatherPolicy:b.iceTransportPolicy}));else b.iceCandidatePoolSize=0;this._config=b;this.transceivers=
                    [];this._sdpSessionId=F.generateSessionId();this._sdpSessionVersion=0;this._dtlsRole=void 0;this._isClosed=!1};Object.defineProperty(e.prototype,"localDescription",{configurable:!0,get:function(){return this._localDescription}});Object.defineProperty(e.prototype,"remoteDescription",{configurable:!0,get:function(){return this._remoteDescription}});e.prototype.onicecandidate=null;e.prototype.onaddstream=null;e.prototype.ontrack=null;e.prototype.onremovestream=null;e.prototype.onsignalingstatechange=
                    null;e.prototype.oniceconnectionstatechange=null;e.prototype.onconnectionstatechange=null;e.prototype.onicegatheringstatechange=null;e.prototype.onnegotiationneeded=null;e.prototype.ondatachannel=null;e.prototype._dispatchEvent=function(a,b){this._isClosed||(this.dispatchEvent(b),"function"==typeof this["on"+a]&&this["on"+a](b))};e.prototype._emitGatheringStateChange=function(){var a=new Event("icegatheringstatechange");this._dispatchEvent("icegatheringstatechange",a)};e.prototype.getConfiguration=
                    function(){return this._config};e.prototype.getLocalStreams=function(){return this.localStreams};e.prototype.getRemoteStreams=function(){return this.remoteStreams};e.prototype._createTransceiver=function(a,b){var c=0<this.transceivers.length;a={track:null,iceGatherer:null,iceTransport:null,dtlsTransport:null,localCapabilities:null,remoteCapabilities:null,rtpSender:null,rtpReceiver:null,kind:a,mid:null,sendEncodingParameters:null,recvEncodingParameters:null,stream:null,associatedRemoteMediaStreams:[],
                    wantReceive:!0};this.usingBundle&&c?(a.iceTransport=this.transceivers[0].iceTransport,a.dtlsTransport=this.transceivers[0].dtlsTransport):(c=this._createIceAndDtlsTransports(),a.iceTransport=c.iceTransport,a.dtlsTransport=c.dtlsTransport);return b||this.transceivers.push(a),a};e.prototype.addTrack=function(a,b){if(this._isClosed)throw Ka("InvalidStateError","Attempted to call addTrack on a closed peerconnection.");var d;if(this.transceivers.find(function(b){return b.track===a}))throw Ka("InvalidAccessError",
                    "Track already exists.");for(var e=0;e<this.transceivers.length;e++)this.transceivers[e].track||this.transceivers[e].kind!==a.kind||(d=this.transceivers[e]);return d||(d=this._createTransceiver(a.kind)),this._maybeFireNegotiationNeeded(),-1===this.localStreams.indexOf(b)&&this.localStreams.push(b),d.track=a,d.stream=b,d.rtpSender=new c.RTCRtpSender(a,d.dtlsTransport),d.rtpSender};e.prototype.addStream=function(b){var c=this;if(15025<=a)b.getTracks().forEach(function(a){c.addTrack(a,b)});else{var d=
                    b.clone();b.getTracks().forEach(function(a,b){var c=d.getTracks()[b];a.addEventListener("enabled",function(a){c.enabled=a.enabled})});d.getTracks().forEach(function(a){c.addTrack(a,d)})}};e.prototype.removeTrack=function(a){if(this._isClosed)throw Ka("InvalidStateError","Attempted to call removeTrack on a closed peerconnection.");if(!(a instanceof c.RTCRtpSender))throw new TypeError("Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.");var b=this.transceivers.find(function(b){return b.rtpSender===
                    a});if(!b)throw Ka("InvalidAccessError","Sender was not created by this connection.");var d=b.stream;b.rtpSender.stop();b.rtpSender=null;b.track=null;b.stream=null;-1===this.transceivers.map(function(a){return a.stream}).indexOf(d)&&-1<this.localStreams.indexOf(d)&&this.localStreams.splice(this.localStreams.indexOf(d),1);this._maybeFireNegotiationNeeded()};e.prototype.removeStream=function(a){var b=this;a.getTracks().forEach(function(a){var c=b.getSenders().find(function(b){return b.track===a});c&&
                b.removeTrack(c)})};e.prototype.getSenders=function(){return this.transceivers.filter(function(a){return!!a.rtpSender}).map(function(a){return a.rtpSender})};e.prototype.getReceivers=function(){return this.transceivers.filter(function(a){return!!a.rtpReceiver}).map(function(a){return a.rtpReceiver})};e.prototype._createIceGatherer=function(a,b){var d=this;if(b&&0<a)return this.transceivers[0].iceGatherer;if(this._iceGatherers.length)return this._iceGatherers.shift();var e=new c.RTCIceGatherer({iceServers:this._config.iceServers,
                    gatherPolicy:this._config.iceTransportPolicy});return Object.defineProperty(e,"state",{value:"new",writable:!0}),this.transceivers[a].bufferedCandidateEvents=[],this.transceivers[a].bufferCandidates=function(b){var c=!b.candidate||0===Object.keys(b.candidate).length;e.state=c?"completed":"gathering";null!==d.transceivers[a].bufferedCandidateEvents&&d.transceivers[a].bufferedCandidateEvents.push(b)},e.addEventListener("localcandidate",this.transceivers[a].bufferCandidates),e};e.prototype._gather=function(a,
b){var d=this,e=this.transceivers[b].iceGatherer;if(!e.onlocalcandidate){var f=this.transceivers[b].bufferedCandidateEvents;this.transceivers[b].bufferedCandidateEvents=null;e.removeEventListener("localcandidate",this.transceivers[b].bufferCandidates);e.onlocalcandidate=function(c){if(!(d.usingBundle&&0<b)){var f=new Event("icecandidate");f.candidate={sdpMid:a,sdpMLineIndex:b};var g=c.candidate;(c=!g||0===Object.keys(g).length)?"new"!==e.state&&"gathering"!==e.state||(e.state="completed"):("new"===
                e.state&&(e.state="gathering"),g.component=1,g.ufrag=e.getLocalParameters().usernameFragment,g=F.writeCandidate(g),f.candidate=Object.assign(f.candidate,F.parseCandidate(g)),f.candidate.candidate=g,f.candidate.toJSON=function(){return{candidate:f.candidate.candidate,sdpMid:f.candidate.sdpMid,sdpMLineIndex:f.candidate.sdpMLineIndex,usernameFragment:f.candidate.usernameFragment}});g=F.getMediaSections(d._localDescription.sdp);g[f.candidate.sdpMLineIndex]+=c?"a=end-of-candidates\r\n":"a="+f.candidate.candidate+
                    "\r\n";d._localDescription.sdp=F.getDescription(d._localDescription.sdp)+g.join("");g=d.transceivers.every(function(a){return a.iceGatherer&&"completed"===a.iceGatherer.state});"gathering"!==d.iceGatheringState&&(d.iceGatheringState="gathering",d._emitGatheringStateChange());c||d._dispatchEvent("icecandidate",f);g&&(d._dispatchEvent("icecandidate",new Event("icecandidate")),d.iceGatheringState="complete",d._emitGatheringStateChange())}};c.setTimeout(function(){f.forEach(function(a){e.onlocalcandidate(a)})},
                    0)}};e.prototype._createIceAndDtlsTransports=function(){var a=this,b=new c.RTCIceTransport(null);b.onicestatechange=function(){a._updateIceConnectionState();a._updateConnectionState()};var d=new c.RTCDtlsTransport(b);return d.ondtlsstatechange=function(){a._updateConnectionState()},d.onerror=function(){Object.defineProperty(d,"state",{value:"failed",writable:!0});a._updateConnectionState()},{iceTransport:b,dtlsTransport:d}};e.prototype._disposeIceAndDtlsTransports=function(a){var b=this.transceivers[a].iceGatherer;
                    b&&(delete b.onlocalcandidate,delete this.transceivers[a].iceGatherer);(b=this.transceivers[a].iceTransport)&&(delete b.onicestatechange,delete this.transceivers[a].iceTransport);(b=this.transceivers[a].dtlsTransport)&&(delete b.ondtlsstatechange,delete b.onerror,delete this.transceivers[a].dtlsTransport)};e.prototype._transceive=function(b,c,d){var e=Dd(b.localCapabilities,b.remoteCapabilities);c&&b.rtpSender&&(e.encodings=b.sendEncodingParameters,e.rtcp={cname:F.localCName,compound:b.rtcpParameters.compound},
                b.recvEncodingParameters.length&&(e.rtcp.ssrc=b.recvEncodingParameters[0].ssrc),b.rtpSender.send(e));d&&b.rtpReceiver&&0<e.codecs.length&&("video"===b.kind&&b.recvEncodingParameters&&15019>a&&b.recvEncodingParameters.forEach(function(a){delete a.rtx}),b.recvEncodingParameters.length?e.encodings=b.recvEncodingParameters:e.encodings=[{}],e.rtcp={compound:b.rtcpParameters.compound},b.rtcpParameters.cname&&(e.rtcp.cname=b.rtcpParameters.cname),b.sendEncodingParameters.length&&(e.rtcp.ssrc=b.sendEncodingParameters[0].ssrc),
                    b.rtpReceiver.receive(e))};e.prototype.setLocalDescription=function(a){var b=this;if(-1===["offer","answer"].indexOf(a.type))return Promise.reject(Ka("TypeError",'Unsupported type "'+a.type+'"'));if(!Qg("setLocalDescription",a.type,b.signalingState)||b._isClosed)return Promise.reject(Ka("InvalidStateError","Can not set local "+a.type+" in state "+b.signalingState));if("offer"===a.type){var c=F.splitSections(a.sdp);var d=c.shift();c.forEach(function(a,c){a=F.parseRtpParameters(a);b.transceivers[c].localCapabilities=
                    a});b.transceivers.forEach(function(a,c){b._gather(a.mid,c)})}else if("answer"===a.type){c=F.splitSections(b._remoteDescription.sdp);d=c.shift();var e=0<F.matchPrefix(d,"a=ice-lite").length;c.forEach(function(a,c){var f=b.transceivers[c],g=f.iceGatherer,k=f.iceTransport,q=f.dtlsTransport,h=f.localCapabilities,B=f.remoteCapabilities;if(!(F.isRejected(a)&&0===F.matchPrefix(a,"a=bundle-only").length||f.rejected)){var l=F.getIceParameters(a,d);a=F.getDtlsParameters(a,d);e&&(a.role="server");b.usingBundle&&
                0!==c||(b._gather(f.mid,c),"new"===k.state&&k.start(g,l,e?"controlling":"controlled"),"new"===q.state&&q.start(a));c=Dd(h,B);b._transceive(f,0<c.codecs.length,!1)}})}return b._localDescription={type:a.type,sdp:a.sdp},"offer"===a.type?b._updateSignalingState("have-local-offer"):b._updateSignalingState("stable"),Promise.resolve()};e.prototype.setRemoteDescription=function(e){var f=this;if(-1===["offer","answer"].indexOf(e.type))return Promise.reject(Ka("TypeError",'Unsupported type "'+e.type+'"'));
                    if(!Qg("setRemoteDescription",e.type,f.signalingState)||f._isClosed)return Promise.reject(Ka("InvalidStateError","Can not set remote "+e.type+" in state "+f.signalingState));var g={};f.remoteStreams.forEach(function(a){g[a.id]=a});var h=[],l=F.splitSections(e.sdp),n=l.shift(),m=0<F.matchPrefix(n,"a=ice-lite").length,p=0<F.matchPrefix(n,"a=group:BUNDLE ").length;f.usingBundle=p;var r=F.matchPrefix(n,"a=ice-options:")[0];return f.canTrickleIceCandidates=!!r&&0<=r.substr(14).split(" ").indexOf("trickle"),
                        l.forEach(function(d,k){var q=F.splitLines(d),B=F.getKind(d),l=F.isRejected(d)&&0===F.matchPrefix(d,"a=bundle-only").length,L=q[0].substr(2).split(" ")[2];q=F.getDirection(d,n);var x=F.parseMsid(d),Ia=F.getMid(d)||F.generateIdentifier();if(l||"application"===B&&("DTLS/SCTP"===L||"UDP/DTLS/SCTP"===L))f.transceivers[k]={mid:Ia,kind:B,protocol:L,rejected:!0};else{var r,t;!l&&f.transceivers[k]&&f.transceivers[k].rejected&&(f.transceivers[k]=f._createTransceiver(B,!0));var Ha,la,u=F.parseRtpParameters(d);
                            l||(Ha=F.getIceParameters(d,n),(la=F.getDtlsParameters(d,n)).role="client");L=F.parseRtpEncodingParameters(d);var Eg=F.parseRtcpParameters(d),v=0<F.matchPrefix(d,"a=end-of-candidates",n).length;d=F.matchPrefix(d,"a=candidate:").map(function(a){return F.parseCandidate(a)}).filter(function(a){return 1===a.component});if(("offer"===e.type||"answer"===e.type)&&!l&&p&&0<k&&f.transceivers[k]&&(f._disposeIceAndDtlsTransports(k),f.transceivers[k].iceGatherer=f.transceivers[0].iceGatherer,f.transceivers[k].iceTransport=
                                f.transceivers[0].iceTransport,f.transceivers[k].dtlsTransport=f.transceivers[0].dtlsTransport,f.transceivers[k].rtpSender&&f.transceivers[k].rtpSender.setTransport(f.transceivers[0].dtlsTransport),f.transceivers[k].rtpReceiver&&f.transceivers[k].rtpReceiver.setTransport(f.transceivers[0].dtlsTransport)),"offer"!==e.type||l){if("answer"===e.type&&!l){B=(r=f.transceivers[k]).iceGatherer;var w=r.iceTransport;var z=r.dtlsTransport;var y=r.rtpReceiver;l=r.sendEncodingParameters;Ia=r.localCapabilities;
                                f.transceivers[k].recvEncodingParameters=L;f.transceivers[k].remoteCapabilities=u;f.transceivers[k].rtcpParameters=Eg;d.length&&"new"===w.state&&(!m&&!v||p&&0!==k?d.forEach(function(a){De(r.iceTransport,a)}):w.setRemoteCandidates(d));p&&0!==k||("new"===w.state&&w.start(B,Ha,"controlling"),"new"===z.state&&z.start(la));!Dd(r.localCapabilities,r.remoteCapabilities).codecs.filter(function(a){return"rtx"===a.name.toLowerCase()}).length&&r.sendEncodingParameters[0].rtx&&delete r.sendEncodingParameters[0].rtx;
                                f._transceive(r,"sendrecv"===q||"recvonly"===q,"sendrecv"===q||"sendonly"===q);!y||"sendrecv"!==q&&"sendonly"!==q?delete r.rtpReceiver:(t=y.track,x?(g[x.stream]||(g[x.stream]=new c.MediaStream),b(t,g[x.stream]),h.push([t,y,g[x.stream]])):(g.default||(g.default=new c.MediaStream),b(t,g.default),h.push([t,y,g.default])))}}else{(r=f.transceivers[k]||f._createTransceiver(B)).mid=Ia;r.iceGatherer||(r.iceGatherer=f._createIceGatherer(k,p));d.length&&"new"===r.iceTransport.state&&(!v||p&&0!==k?d.forEach(function(a){De(r.iceTransport,
                                a)}):r.iceTransport.setRemoteCandidates(d));Ia=c.RTCRtpReceiver.getCapabilities(B);15019>a&&(Ia.codecs=Ia.codecs.filter(function(a){return"rtx"!==a.name}));l=r.sendEncodingParameters||[{ssrc:1001*(2*k+2)}];Ha=!1;if("sendrecv"===q||"sendonly"===q){if(Ha=!r.rtpReceiver,y=r.rtpReceiver||new c.RTCRtpReceiver(r.dtlsTransport,B),Ha)t=y.track,x&&"-"===x.stream||(x?(g[x.stream]||(g[x.stream]=new c.MediaStream,Object.defineProperty(g[x.stream],"id",{get:function(){return x.stream}})),Object.defineProperty(t,
                                "id",{get:function(){return x.track}}),w=g[x.stream]):(g.default||(g.default=new c.MediaStream),w=g.default)),w&&(b(t,w),r.associatedRemoteMediaStreams.push(w)),h.push([t,y,w])}else r.rtpReceiver&&r.rtpReceiver.track&&(r.associatedRemoteMediaStreams.forEach(function(a){var b=a.getTracks().find(function(a){return a.id===r.rtpReceiver.track.id});b&&function(a,b){b.removeTrack(a);b.dispatchEvent(new c.MediaStreamTrackEvent("removetrack",{track:a}))}(b,a)}),r.associatedRemoteMediaStreams=[]);r.localCapabilities=
                                Ia;r.remoteCapabilities=u;r.rtpReceiver=y;r.rtcpParameters=Eg;r.sendEncodingParameters=l;r.recvEncodingParameters=L;f._transceive(f.transceivers[k],!1,Ha)}}}),void 0===f._dtlsRole&&(f._dtlsRole="offer"===e.type?"active":"passive"),f._remoteDescription={type:e.type,sdp:e.sdp},"offer"===e.type?f._updateSignalingState("have-remote-offer"):f._updateSignalingState("stable"),Object.keys(g).forEach(function(a){var b=g[a];if(b.getTracks().length){if(-1===f.remoteStreams.indexOf(b)){f.remoteStreams.push(b);
                        var e=new Event("addstream");e.stream=b;c.setTimeout(function(){f._dispatchEvent("addstream",e)})}h.forEach(function(a){var c=a[0],e=a[1];b.id===a[2].id&&d(f,c,e,[b])})}}),h.forEach(function(a){a[2]||d(f,a[0],a[1],[])}),c.setTimeout(function(){f&&f.transceivers&&f.transceivers.forEach(function(a){a.iceTransport&&"new"===a.iceTransport.state&&0<a.iceTransport.getRemoteCandidates().length&&(console.warn("Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification"),a.iceTransport.addRemoteCandidate({}))})},
                        4E3),Promise.resolve()};e.prototype.close=function(){this.transceivers.forEach(function(a){a.iceTransport&&a.iceTransport.stop();a.dtlsTransport&&a.dtlsTransport.stop();a.rtpSender&&a.rtpSender.stop();a.rtpReceiver&&a.rtpReceiver.stop()});this._isClosed=!0;this._updateSignalingState("closed")};e.prototype._updateSignalingState=function(a){this.signalingState=a;a=new Event("signalingstatechange");this._dispatchEvent("signalingstatechange",a)};e.prototype._maybeFireNegotiationNeeded=function(){var a=
                    this;"stable"===this.signalingState&&!0!==this.needNegotiation&&(this.needNegotiation=!0,c.setTimeout(function(){if(a.needNegotiation){a.needNegotiation=!1;var b=new Event("negotiationneeded");a._dispatchEvent("negotiationneeded",b)}},0))};e.prototype._updateIceConnectionState=function(){var a,b={new:0,closed:0,checking:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach(function(a){a.iceTransport&&!a.rejected&&b[a.iceTransport.state]++}),a="new",0<b.failed?a="failed":
                    0<b.checking?a="checking":0<b.disconnected?a="disconnected":0<b.new?a="new":0<b.connected?a="connected":0<b.completed&&(a="completed"),a!==this.iceConnectionState)this.iceConnectionState=a,a=new Event("iceconnectionstatechange"),this._dispatchEvent("iceconnectionstatechange",a)};e.prototype._updateConnectionState=function(){var a,b={new:0,closed:0,connecting:0,connected:0,completed:0,disconnected:0,failed:0};if(this.transceivers.forEach(function(a){a.iceTransport&&a.dtlsTransport&&!a.rejected&&(b[a.iceTransport.state]++,
                    b[a.dtlsTransport.state]++)}),b.connected+=b.completed,a="new",0<b.failed?a="failed":0<b.connecting?a="connecting":0<b.disconnected?a="disconnected":0<b.new?a="new":0<b.connected&&(a="connected"),a!==this.connectionState)this.connectionState=a,a=new Event("connectionstatechange"),this._dispatchEvent("connectionstatechange",a)};e.prototype.createOffer=function(b){var d=this;if(d._isClosed)return Promise.reject(Ka("InvalidStateError","Can not call createOffer after close"));var e=d.transceivers.filter(function(a){return"audio"===
                    a.kind}).length,f=d.transceivers.filter(function(a){return"video"===a.kind}).length;if(b){if(b.mandatory||b.optional)throw new TypeError("Legacy mandatory/optional constraints not supported.");void 0!==b.offerToReceiveAudio&&(e=!0===b.offerToReceiveAudio?1:!1===b.offerToReceiveAudio?0:b.offerToReceiveAudio);void 0!==b.offerToReceiveVideo&&(f=!0===b.offerToReceiveVideo?1:!1===b.offerToReceiveVideo?0:b.offerToReceiveVideo)}for(d.transceivers.forEach(function(a){"audio"===a.kind?0>--e&&(a.wantReceive=
                    !1):"video"===a.kind&&0>--f&&(a.wantReceive=!1)});0<e||0<f;)0<e&&(d._createTransceiver("audio"),e--),0<f&&(d._createTransceiver("video"),f--);var g=F.writeSessionBoilerplate(d._sdpSessionId,d._sdpSessionVersion++);d.transceivers.forEach(function(b,e){var f=b.track,g=b.kind,k=b.mid||F.generateIdentifier();b.mid=k;b.iceGatherer||(b.iceGatherer=d._createIceGatherer(e,d.usingBundle));k=c.RTCRtpSender.getCapabilities(g);15019>a&&(k.codecs=k.codecs.filter(function(a){return"rtx"!==a.name}));k.codecs.forEach(function(a){"H264"===
                a.name&&void 0===a.parameters["level-asymmetry-allowed"]&&(a.parameters["level-asymmetry-allowed"]="1");b.remoteCapabilities&&b.remoteCapabilities.codecs&&b.remoteCapabilities.codecs.forEach(function(b){a.name.toLowerCase()===b.name.toLowerCase()&&a.clockRate===b.clockRate&&(a.preferredPayloadType=b.payloadType)})});k.headerExtensions.forEach(function(a){(b.remoteCapabilities&&b.remoteCapabilities.headerExtensions||[]).forEach(function(b){a.uri===b.uri&&(a.id=b.id)})});e=b.sendEncodingParameters||
                    [{ssrc:1001*(2*e+1)}];f&&15019<=a&&"video"===g&&!e[0].rtx&&(e[0].rtx={ssrc:e[0].ssrc+1});b.wantReceive&&(b.rtpReceiver=new c.RTCRtpReceiver(b.dtlsTransport,g));b.localCapabilities=k;b.sendEncodingParameters=e});"max-compat"!==d._config.bundlePolicy&&(g+="a=group:BUNDLE "+d.transceivers.map(function(a){return a.mid}).join(" ")+"\r\n");g+="a=ice-options:trickle\r\n";d.transceivers.forEach(function(a,b){g+=Pg(a,a.localCapabilities,"offer",a.stream,d._dtlsRole);g+="a=rtcp-rsize\r\n";!a.iceGatherer||"new"===
                d.iceGatheringState||0!==b&&d.usingBundle||(a.iceGatherer.getLocalCandidates().forEach(function(a){a.component=1;g+="a="+F.writeCandidate(a)+"\r\n"}),"completed"===a.iceGatherer.state&&(g+="a=end-of-candidates\r\n"))});b=new c.RTCSessionDescription({type:"offer",sdp:g});return Promise.resolve(b)};e.prototype.createAnswer=function(){var b=this;if(b._isClosed)return Promise.reject(Ka("InvalidStateError","Can not call createAnswer after close"));if("have-remote-offer"!==b.signalingState&&"have-local-pranswer"!==
                    b.signalingState)return Promise.reject(Ka("InvalidStateError","Can not call createAnswer in signalingState "+b.signalingState));var d=F.writeSessionBoilerplate(b._sdpSessionId,b._sdpSessionVersion++);b.usingBundle&&(d+="a=group:BUNDLE "+b.transceivers.map(function(a){return a.mid}).join(" ")+"\r\n");d+="a=ice-options:trickle\r\n";var e=F.getMediaSections(b._remoteDescription.sdp).length;b.transceivers.forEach(function(c,f){if(!(f+1>e)){if(c.rejected)return"application"===c.kind?"DTLS/SCTP"===c.protocol?
                    d+="m=application 0 DTLS/SCTP 5000\r\n":d+="m=application 0 "+c.protocol+" webrtc-datachannel\r\n":"audio"===c.kind?d+="m=audio 0 UDP/TLS/RTP/SAVPF 0\r\na=rtpmap:0 PCMU/8000\r\n":"video"===c.kind&&(d+="m=video 0 UDP/TLS/RTP/SAVPF 120\r\na=rtpmap:120 VP8/90000\r\n"),void(d+="c=IN IP4 0.0.0.0\r\na=inactive\r\na=mid:"+c.mid+"\r\n");var g;c.stream&&("audio"===c.kind?g=c.stream.getAudioTracks()[0]:"video"===c.kind&&(g=c.stream.getVideoTracks()[0]),g&&15019<=a&&"video"===c.kind&&!c.sendEncodingParameters[0].rtx&&
                (c.sendEncodingParameters[0].rtx={ssrc:c.sendEncodingParameters[0].ssrc+1}));f=Dd(c.localCapabilities,c.remoteCapabilities);!f.codecs.filter(function(a){return"rtx"===a.name.toLowerCase()}).length&&c.sendEncodingParameters[0].rtx&&delete c.sendEncodingParameters[0].rtx;d+=Pg(c,f,"answer",c.stream,b._dtlsRole);c.rtcpParameters&&c.rtcpParameters.reducedSize&&(d+="a=rtcp-rsize\r\n")}});var f=new c.RTCSessionDescription({type:"answer",sdp:d});return Promise.resolve(f)};e.prototype.addIceCandidate=function(a){var b,
                    c=this;return a&&void 0===a.sdpMLineIndex&&!a.sdpMid?Promise.reject(new TypeError("sdpMLineIndex or sdpMid required")):new Promise(function(d,e){if(!c._remoteDescription)return e(Ka("InvalidStateError","Can not add ICE candidate without a remote description"));if(a&&""!==a.candidate){var f=a.sdpMLineIndex;if(a.sdpMid)for(var g=0;g<c.transceivers.length;g++)if(c.transceivers[g].mid===a.sdpMid){f=g;break}var k=c.transceivers[f];if(!k)return e(Ka("OperationError","Can not add ICE candidate"));if(k.rejected)return d();
                    g=0<Object.keys(a.candidate).length?F.parseCandidate(a.candidate):{};if("tcp"===g.protocol&&(0===g.port||9===g.port)||g.component&&1!==g.component)return d();if((0===f||0<f&&k.iceTransport!==c.transceivers[0].iceTransport)&&!De(k.iceTransport,g))return e(Ka("OperationError","Can not add ICE candidate"));e=a.candidate.trim();0===e.indexOf("a=")&&(e=e.substr(2));(b=F.getMediaSections(c._remoteDescription.sdp))[f]+="a="+(g.type?e:"end-of-candidates")+"\r\n";c._remoteDescription.sdp=F.getDescription(c._remoteDescription.sdp)+
                        b.join("")}else for(f=0;f<c.transceivers.length&&(c.transceivers[f].rejected||(c.transceivers[f].iceTransport.addRemoteCandidate({}),(b=F.getMediaSections(c._remoteDescription.sdp))[f]+="a=end-of-candidates\r\n",c._remoteDescription.sdp=F.getDescription(c._remoteDescription.sdp)+b.join(""),!c.usingBundle));f++);d()})};e.prototype.getStats=function(a){if(a&&a instanceof c.MediaStreamTrack){var b=null;if(this.transceivers.forEach(function(c){c.rtpSender&&c.rtpSender.track===a?b=c.rtpSender:c.rtpReceiver&&
                    c.rtpReceiver.track===a&&(b=c.rtpReceiver)}),!b)throw Ka("InvalidAccessError","Invalid selector.");return b.getStats()}var d=[];return this.transceivers.forEach(function(a){["rtpSender","rtpReceiver","iceGatherer","iceTransport","dtlsTransport"].forEach(function(b){a[b]&&d.push(a[b].getStats())})}),Promise.all(d).then(function(a){var b=new Map;return a.forEach(function(a){a.forEach(function(a){b.set(a.id,a)})}),b})};["RTCRtpSender","RTCRtpReceiver","RTCIceGatherer","RTCIceTransport","RTCDtlsTransport"].forEach(function(a){if((a=
                    c[a])&&a.prototype&&a.prototype.getStats){var b=a.prototype.getStats;a.prototype.getStats=function(){return b.apply(this).then(function(a){var b=new Map;return Object.keys(a).forEach(function(c){var d=a[c];a[c].type={inboundrtp:"inbound-rtp",outboundrtp:"outbound-rtp",candidatepair:"candidate-pair",localcandidate:"local-candidate",remotecandidate:"remote-candidate"}[d.type]||d.type;b.set(c,a[c])}),b})}}});var f=["createOffer","createAnswer"];return f.forEach(function(a){var b=e.prototype[a];e.prototype[a]=
                    function(){var a=arguments;return"function"==typeof a[0]||"function"==typeof a[1]?b.apply(this,[arguments[2]]).then(function(b){"function"==typeof a[0]&&a[0].apply(null,[b])},function(b){"function"==typeof a[1]&&a[1].apply(null,[b])}):b.apply(this,arguments)}}),(f=["setLocalDescription","setRemoteDescription","addIceCandidate"]).forEach(function(a){var b=e.prototype[a];e.prototype[a]=function(){var a=arguments;return"function"==typeof a[1]||"function"==typeof a[2]?b.apply(this,arguments).then(function(){"function"==
                typeof a[1]&&a[1].apply(null)},function(b){"function"==typeof a[2]&&a[2].apply(null,[b])}):b.apply(this,arguments)}}),["getStats"].forEach(function(a){var b=e.prototype[a];e.prototype[a]=function(){var a=arguments;return"function"==typeof a[1]?b.apply(this,arguments).then(function(){"function"==typeof a[1]&&a[1].apply(null)}):b.apply(this,arguments)}}),e},gk=Object.freeze({__proto__:null,shimPeerConnection:Ee,shimReplaceTrack:Tg,shimGetUserMedia:Rg,shimGetDisplayMedia:Sg}),hk=Object.freeze({__proto__:null,
                    shimOnTrack:Vg,shimPeerConnection:Fe,shimSenderGetStats:Wg,shimReceiverGetStats:Xg,shimRemoveStream:Yg,shimRTCDataChannel:Zg,shimGetUserMedia:Ug,shimGetDisplayMedia:function(c,a){c.navigator.mediaDevices&&"getDisplayMedia"in c.navigator.mediaDevices||c.navigator.mediaDevices&&(c.navigator.mediaDevices.getDisplayMedia=function(b){return b&&b.video?(!0===b.video?b.video={mediaSource:a}:b.video.mediaSource=a,c.navigator.mediaDevices.getUserMedia(b)):(b=new DOMException("getDisplayMedia without video constraints is undefined"),
                        b.name="NotFoundError",b.code=8,u.reject(b))})}}),ik=Object.freeze({__proto__:null,shimLocalStreamsAPI:$g,shimRemoteStreamsAPI:ah,shimCallbacksAPI:bh,shimGetUserMedia:ch,shimConstraints:dh,shimRTCIceServerUrls:eh,shimTrackEventTransceiver:fh,shimCreateOfferLegacy:gh}),Ho=Object.freeze({__proto__:null,shimRTCIceCandidate:Ed,shimMaxMessageSize:Tc,shimSendThrowTypeError:Uc,shimConnectionState:Ge,removeAllowExtmapMixed:He});(function({window:c}={},a={shimChrome:!0,shimFirefox:!0,shimEdge:!0,shimSafari:!0}){let b=
                    Lb(c),d={browserDetails:b,commonShim:Ho,extractVersion:Kb,disableLog:ql,disableWarnings:rl};switch(b.browser){case "chrome":if(!ck||!Ce||!a.shimChrome)return pb("Chrome shim is not included in this adapter release."),d;pb("adapter.js shimming chrome.");d.browserShim=ck;Dg(c);Hg(c);Ce(c);Ig(c);Ng(c);Jg(c);Kg(c);Lg(c);Og(c);Ed(c);Ge(c);Tc(c);Uc(c);He(c);break;case "firefox":if(!hk||!Fe||!a.shimFirefox)return pb("Firefox shim is not included in this adapter release."),d;pb("adapter.js shimming firefox.");
                    d.browserShim=hk;Ug(c);Fe(c);Vg(c);Yg(c);Wg(c);Xg(c);Zg(c);Ed(c);Ge(c);Tc(c);Uc(c);break;case "edge":if(!gk||!Ee||!a.shimEdge)return pb("MS edge shim is not included in this adapter release."),d;pb("adapter.js shimming edge.");d.browserShim=gk;Rg(c);Sg(c);Ee(c);Tg(c);Tc(c);Uc(c);break;case "safari":if(!ik||!a.shimSafari)return pb("Safari shim is not included in this adapter release."),d;pb("adapter.js shimming safari.");d.browserShim=ik;eh(c);gh(c);bh(c);$g(c);ah(c);fh(c);ch(c);Ed(c);Tc(c);Uc(c);
                    He(c);break;default:pb("Unsupported browser!")}return d})({window});var X,ea;!function(c){c.WIN_10="Windows 10";c.WIN_81="Windows 8.1";c.WIN_8="Windows 8";c.WIN_7="Windows 7";c.WIN_VISTA="Windows Vista";c.WIN_SERVER_2003="Windows Server 2003";c.WIN_XP="Windows XP";c.WIN_2000="Windows 2000";c.ANDROID="Android";c.OPEN_BSD="Open BSD";c.SUN_OS="Sun OS";c.LINUX="Linux";c.IOS="iOS";c.MAC_OS_X="Mac OS X";c.MAC_OS="Mac OS";c.QNX="QNX";c.UNIX="UNIX";c.BEOS="BeOS";c.OS_2="OS/2";c.SEARCH_BOT="Search Bot"}(X||
                    (X={}));(function(c){c.CHROME="Chrome";c.SAFARI="Safari";c.EDGE="Edge";c.FIREFOX="Firefox";c.OPERA="OPR";c.QQ="QQBrowser";c.WECHAT="MicroMessenger"})(ea||(ea={}));let db=function(c){if(c.match(/[0-9]+\.[0-9]+\.[0-9]+$/))return c;var a=c.match(/([0-9]+\.[0-9]+\.[0-9]+)\-alpha\.([0-9]+)/);if(a&&a[1]&&a[2]){var b,d=a[2];return n(b="".concat(a[1],".")).call(b,d)}return(a=c.match(/([0-9]+\.[0-9]+\.[0-9]+)\-special\.([0-9]+)/))&&a[1]&&a[2]?(b=a[2],n(d="".concat(a[1],".")).call(d,100*(Number(b)+1))):"4.0.0.999"}("4.2.1");
                try{var jk=!0===JSON.parse("true")}catch(c){jk=!0}let yc=jk,eb={username:"test",password:"111111",turnServerURL:"",tcpport:3433,udpport:3478,forceturn:!1},vl={"90p":H(160,90),"90p_1":H(160,90),"120p":H(160,120,15,30,65),"120p_1":H(160,120,15,30,65),"120p_3":H(120,120,15,30,50),"120p_4":H(212,120),"180p":H(320,180,15,30,140),"180p_1":H(320,180,15,30,140),"180p_3":H(180,180,15,30,100),"180p_4":H(240,180,15,30,120),"240p":H(320,240,15,40,200),"240p_1":H(320,240,15,40,200),"240p_3":H(240,240,15,40,140),
                    "240p_4":H(424,240,15,40,220),"360p":H(640,360,15,80,400),"360p_1":H(640,360,15,80,400),"360p_3":H(360,360,15,80,260),"360p_4":H(640,360,30,80,600),"360p_6":H(360,360,30,80,400),"360p_7":H(480,360,15,80,320),"360p_8":H(480,360,30,80,490),"360p_9":H(640,360,15,80,800),"360p_10":H(640,360,24,80,800),"360p_11":H(640,360,24,80,1E3),"480p":H(640,480,15,100,500),"480p_1":H(640,480,15,100,500),"480p_2":H(640,480,30,100,1E3),"480p_3":H(480,480,15,100,400),"480p_4":H(640,480,30,100,750),"480p_6":H(480,480,
                        30,100,600),"480p_8":H(848,480,15,100,610),"480p_9":H(848,480,30,100,930),"480p_10":H(640,480,10,100,400),"720p":H(1280,720,15,120,1130),"720p_1":H(1280,720,15,120,1130),"720p_2":H(1280,720,30,120,2E3),"720p_3":H(1280,720,30,120,1710),"720p_5":H(960,720,15,120,910),"720p_6":H(960,720,30,120,1380),"1080p":H(1920,1080,15,120,2080),"1080p_1":H(1920,1080,15,120,2080),"1080p_2":H(1920,1080,30,120,3E3),"1080p_3":H(1920,1080,30,120,3150),"1080p_5":H(1920,1080,60,120,4780),"1440p":H(2560,1440,30,120,4850),
                    "1440p_1":H(2560,1440,30,120,4850),"1440p_2":H(2560,1440,60,120,7350),"4k":H(3840,2160,30,120,8910),"4k_1":H(3840,2160,30,120,8910),"4k_3":H(3840,2160,60,120,13500)},wl={"480p":Mb(640,480,5),"480p_1":Mb(640,480,5),"480p_2":Mb(640,480,30),"720p":Mb(1280,720,5),"720p_1":Mb(1280,720,5),"720p_2":Mb(1280,720,30),"1080p":Mb(1920,1080,5),"1080p_1":Mb(1920,1080,5),"1080p_2":Mb(1920,1080,30)},xl={speech_low_quality:wc(16E3,!1),speech_standard:wc(32E3,!1,18),music_standard:wc(48E3,!1),standard_stereo:wc(48E3,
                        !0,56),high_quality:wc(48E3,!1,128),high_quality_stereo:wc(48E3,!0,192)},w={PROCESS_ID:"",ENCRYPT_AES:!0,AREAS:[],WEBCS_DOMAIN:["webrtc2-ap-web-1.agora.io","webrtc2-ap-web-2.agoraio.cn"],WEBCS_DOMAIN_BACKUP_LIST:["webrtc2-ap-web-3.agora.io","webrtc2-ap-web-4.agoraio.cn"],PROXY_CS:["ap-proxy-1.agora.io","ap-proxy-2.agora.io"],CDS_AP:["cds-ap-web-1.agora.io","cds-ap-web-2.agoraio.cn","cds-ap-web-3.agora.io","cds-ap-web-4.agoraio.cn"],ACCOUNT_REGISTER:["sua-ap-web-1.agora.io","sua-ap-web-2.agoraio.cn",
                        "sua-ap-web-3.agora.io","sua-ap-web-4.agoraio.cn"],UAP_AP:["uap-ap-web-1.agora.io","uap-ap-web-2.agoraio.cn","uap-ap-web-3.agora.io","uap-ap-web-4.agoraio.cn"],LOG_UPLOAD_SERVER:"logservice.agora.io",EVENT_REPORT_DOMAIN:"statscollector-1.agora.io",EVENT_REPORT_BACKUP_DOMAIN:"statscollector-2.agoraio.cn",GATEWAY_ADDRESS:[],GATEWAY_WSS_ADDRESS:"",LIVE_STREAMING_ADDRESS:"",ACCOUNT_REGISTER_RETRY_TIMEOUT:1,ACCOUNT_REGISTER_RETRY_RATIO:2,ACCOUNT_REGISTER_RETRY_TIMEOUT_MAX:6E4,ACCOUNT_REGISTER_RETRY_COUNT_MAX:1E5,
                    AUDIO_CONTEXT:null,WEBCS_BACKUP_CONNECT_TIMEOUT:6E3,HTTP_CONNECT_TIMEOUT:5E3,PLAYER_STATE_DEFER:2E3,SIGNAL_REQUEST_TIMEOUT:1E4,SIGNAL_REQUEST_WATCH_INTERVAL:1E3,REPORT_STATS:!0,UPLOAD_LOG:!1,NOT_REPORT_EVENT:[],FILEPATH_LENMAX:255,SUBSCRIBE_TCC:!1,PING_PONG_TIME_OUT:10,DUALSTREAM_OPERATION_CHECK:!0,WEBSOCKET_TIMEOUT_MIN:1E4,EVENT_REPORT_SEND_INTERVAL:3E3,MEDIA_ELEMENT_EXISTS_DEPTH:3,CANDIDATE_TIMEOUT:5E3,SHIM_CANDIDATE:!1,LEAVE_MSG_TIMEOUT:2E3,SHOW_REPORT_INVOKER_LOG:!1,STATS_FILTER:{transportId:!0,
                        googTrackId:!0},JOIN_EXTEND:"",PUB_EXTEND:"",SUB_EXTEND:"",FORCE_TURN:!1,TURN_ENABLE_TCP:!0,TURN_ENABLE_UDP:!0,MAX_UPLOAD_CACHE:50,UPLOAD_CACHE_INTERVAL:2E3,CHROME_FORCE_PLAN_B:!1,AUDIO_SOURCE_VOLUME_UPDATE_INTERVAL:400,AUDIO_SOURCE_AVG_VOLUME_DURATION:3E3,AUDIO_VOLUME_INDICATION_INTERVAL:2E3,NORMAL_EVENT_QUEUE_CAPACITY:100,CUSTOM_REPORT:!0,CUSTOM_REPORT_LIMIT:20,PROXY_SERVER_TYPE2:"webnginx-proxy.agora.io",PROXY_SERVER_TYPE3:"webrtc-cloud-proxy.sd-rtn.com"};yc||(w.WEBCS_DOMAIN=["ap-web-1-oversea.agora.io",
                    "ap-web-1-north-america.agora.io"],w.WEBCS_DOMAIN_BACKUP_LIST=["ap-web-2-oversea.agora.io","ap-web-2-north-america.agora.io"],w.PROXY_CS=["proxy-ap-web-oversea.agora.io","proxy-ap-web-america.agora.io"],w.CDS_AP=["cds-ap-web-oversea.agora.io","cds-ap-web-america.agora.io","cds-ap-web-america2.agora.io"],w.ACCOUNT_REGISTER=["sua-ap-web-oversea.agora.io","sua-ap-web-america.agora.io","sua-ap-web-america2.agora.io"],w.UAP_AP=["uap-ap-web-oversea.agora.io","uap-ap-web-america.agora.io","uap-ap-web-america2.agora.io"],
                    w.LOG_UPLOAD_SERVER="logservice-oversea.agora.io",w.EVENT_REPORT_DOMAIN="statscollector-1-oversea.agora.io",w.EVENT_REPORT_BACKUP_DOMAIN="statscollector-2-oversea.agora.io");let Io=[[0,1,2,3,4,5,5],[0,2,2,3,4,5,5],[0,3,3,3,4,5,5],[0,4,4,4,4,5,5],[0,5,5,5,5,5,5]],kk=[];var bg=[],lk=bg.sort,Jo=ra(function(){bg.sort(void 0)}),Ko=ra(function(){bg.sort(null)}),Lo=kd("sort");M({target:"Array",proto:!0,forced:Jo||!Ko||Lo},{sort:function(c){return void 0===c?lk.call(ub(this)):lk.call(ub(this),rb(c))}});var Mo=
                    Da("Array").sort,mk=Array.prototype,sd=function(c){var a=c.sort;return c===mk||c instanceof Array&&a===mk.sort?Mo:a};M({target:"Array",stat:!0},{isArray:kc});var ec=ha.Array.isArray,l;!function(c){c.UNEXPECTED_ERROR="UNEXPECTED_ERROR";c.UNEXPECTED_RESPONSE="UNEXPECTED_RESPONSE";c.TIMEOUT="TIMEOUT";c.INVALID_PARAMS="INVALID_PARAMS";c.NOT_SUPPORTED="NOT_SUPPORTED";c.INVALID_OPERATION="INVALID_OPERATION";c.OPERATION_ABORTED="OPERATION_ABORTED";c.WEB_SECURITY_RESTRICT="WEB_SECURITY_RESTRICT";c.NETWORK_ERROR=
                    "NETWORK_ERROR";c.NETWORK_TIMEOUT="NETWORK_TIMEOUT";c.NETWORK_RESPONSE_ERROR="NETWORK_RESPONSE_ERROR";c.API_INVOKE_TIMEOUT="API_INVOKE_TIMEOUT";c.ENUMERATE_DEVICES_FAILED="ENUMERATE_DEVICES_FAILED";c.DEVICE_NOT_FOUND="DEVICE_NOT_FOUND";c.ELECTRON_IS_NULL="ELECTRON_IS_NULL";c.ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR="ELECTRON_DESKTOP_CAPTURER_GET_SOURCES_ERROR";c.CHROME_PLUGIN_NO_RESPONSE="CHROME_PLUGIN_NO_RESPONSE";c.CHROME_PLUGIN_NOT_INSTALL="CHROME_PLUGIN_NOT_INSTALL";c.MEDIA_OPTION_INVALID=
                    "MEDIA_OPTION_INVALID";c.PERMISSION_DENIED="PERMISSION_DENIED";c.CONSTRAINT_NOT_SATISFIED="CONSTRAINT_NOT_SATISFIED";c.TRACK_IS_DISABLED="TRACK_IS_DISABLED";c.SHARE_AUDIO_NOT_ALLOWED="SHARE_AUDIO_NOT_ALLOWED";c.INVALID_UINT_UID_FROM_STRING_UID="INVALID_UINT_UID_FROM_STRING_UID";c.CAN_NOT_GET_PROXY_SERVER="CAN_NOT_GET_PROXY_SERVER";c.CAN_NOT_GET_GATEWAY_SERVER="CAN_NOT_GET_GATEWAY_SERVER";c.VOID_GATEWAY_ADDRESS="VOID_GATEWAY_ADDRESS";c.UID_CONFLICT="UID_CONFLICT";c.INVALID_LOCAL_TRACK="INVALID_LOCAL_TRACK";
                    c.INVALID_TRACK="INVALID_TRACK";c.SENDER_NOT_FOUND="SENDER_NOT_FOUND";c.CREATE_OFFER_FAILED="CREATE_OFFER_FAILED";c.SET_ANSWER_FAILED="SET_ANSWER_FAILED";c.ICE_FAILED="ICE_FAILED";c.PC_CLOSED="PC_CLOSED";c.SENDER_REPLACE_FAILED="SENDER_REPLACE_FAILED";c.GATEWAY_P2P_LOST="GATEWAY_P2P_LOST";c.NO_ICE_CANDIDATE="NO_ICE_CANDIDATE";c.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS="CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS";c.EXIST_DISABLED_VIDEO_TRACK="EXIST_DISABLED_VIDEO_TRACK";c.INVALID_REMOTE_USER="INVALID_REMOTE_USER";
                    c.REMOTE_USER_IS_NOT_PUBLISHED="REMOTE_USER_IS_NOT_PUBLISHED";c.CUSTOM_REPORT_SEND_FAILED="CUSTOM_REPORT_SEND_FAILED";c.CUSTOM_REPORT_FREQUENCY_TOO_HIGH="CUSTOM_REPORT_FREQUENCY_TOO_HIGH";c.FETCH_AUDIO_FILE_FAILED="FETCH_AUDIO_FILE_FAILED";c.READ_LOCAL_AUDIO_FILE_ERROR="READ_LOCAL_AUDIO_FILE_ERROR";c.DECODE_AUDIO_FILE_FAILED="DECODE_AUDIO_FILE_FAILED";c.WS_ABORT="WS_ABORT";c.WS_DISCONNECT="WS_DISCONNECT";c.WS_ERR="WS_ERR";c.LIVE_STREAMING_TASK_CONFLICT="LIVE_STREAMING_TASK_CONFLICT";c.LIVE_STREAMING_INVALID_ARGUMENT=
                        "LIVE_STREAMING_INVALID_ARGUMENT";c.LIVE_STREAMING_INTERNAL_SERVER_ERROR="LIVE_STREAMING_INTERNAL_SERVER_ERROR";c.LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED="LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED";c.LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED="LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED";c.LIVE_STREAMING_CDN_ERROR="LIVE_STREAMING_CDN_ERROR";c.LIVE_STREAMING_INVALID_RAW_STREAM="LIVE_STREAMING_INVALID_RAW_STREAM";c.LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT="LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT";
                    c.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE="LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE";c.LIVE_STREAMING_WARN_FREQUENT_REQUEST="LIVE_STREAMING_WARN_FREQUENT_REQUEST";c.WEBGL_INTERNAL_ERROR="WEBGL_INTERNAL_ERROR";c.BEAUTY_PROCESSOR_INTERNAL_ERROR="BEAUTY_PROCESSOR_INTERNAL_ERROR";c.CROSS_CHANNEL_WAIT_STATUS_ERROR="CROSS_CHANNEL_WAIT_STATUS_ERROR";c.CROSS_CHANNEL_FAILED_JOIN_SRC="CROSS_CHANNEL_FAILED_JOIN_SEC";c.CROSS_CHANNEL_FAILED_JOIN_DEST="CROSS_CHANNEL_FAILED_JOIN_DEST";c.CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST=
                        "CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST";c.CROSS_CHANNEL_SERVER_ERROR_RESPONSE="CROSS_CHANNEL_SERVER_ERROR_RESPONSE";c.METADATA_OUT_OF_RANGE="METADATA_OUT_OF_RANGE"}(l||(l={}));var qh=function(c,a){return function(){for(var b=Array(arguments.length),d=0;d<b.length;d++)b[d]=arguments[d];return c.apply(a,b)}},xc=Object.prototype.toString,I={isArray:hh,isArrayBuffer:function(c){return"[object ArrayBuffer]"===xc.call(c)},isBuffer:function(c){return null!=c&&null!=c.constructor&&"function"==typeof c.constructor.isBuffer&&
                        c.constructor.isBuffer(c)},isFormData:function(c){return"undefined"!=typeof FormData&&c instanceof FormData},isArrayBufferView:function(c){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(c):c&&c.buffer&&c.buffer instanceof ArrayBuffer},isString:function(c){return"string"==typeof c},isNumber:function(c){return"number"==typeof c},isObject:ih,isUndefined:function(c){return void 0===c},isDate:function(c){return"[object Date]"===xc.call(c)},isFile:function(c){return"[object File]"===
                        xc.call(c)},isBlob:function(c){return"[object Blob]"===xc.call(c)},isFunction:jh,isStream:function(c){return ih(c)&&jh(c.pipe)},isURLSearchParams:function(c){return"undefined"!=typeof URLSearchParams&&c instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:Gd,merge:kh,deepMerge:Je,extend:function(c,
a,b){return Gd(a,function(a,e){c[e]=b&&"function"==typeof a?qh(a,b):a}),c},trim:function(c){return c.replace(/^\s*/,"").replace(/\s*$/,"")}},nk=function(c,a,b){if(!a)return c;if(b)a=b(a);else if(I.isURLSearchParams(a))a=a.toString();else{var d=[];I.forEach(a,function(a,b){null!=a&&(I.isArray(a)?b+="[]":a=[a],I.forEach(a,function(a){I.isDate(a)?a=a.toISOString():I.isObject(a)&&(a=JSON.stringify(a));d.push(lh(b)+"="+lh(a))}))});a=d.join("&")}a&&(b=c.indexOf("#"),-1!==b&&(c=c.slice(0,b)),c+=(-1===c.indexOf("?")?
                    "?":"&")+a);return c};Hd.prototype.use=function(c,a){return this.handlers.push({fulfilled:c,rejected:a}),this.handlers.length-1};Hd.prototype.eject=function(c){this.handlers[c]&&(this.handlers[c]=null)};Hd.prototype.forEach=function(c){I.forEach(this.handlers,function(a){null!==a&&c(a)})};var nh=Hd,cg=function(c,a,b){return I.forEach(b,function(b){c=b(c,a)}),c},ok=function(c){return!(!c||!c.__CANCEL__)},pk=function(c,a){I.forEach(c,function(b,d){d!==a&&d.toUpperCase()===a.toUpperCase()&&(c[a]=b,delete c[d])})},
                    qe=function(c,a,b,d,e){return c.config=a,b&&(c.code=b),c.request=d,c.response=e,c.isAxiosError=!0,c.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},c},No="age authorization content-length content-type etag expires from host if-modified-since if-unmodified-since last-modified location max-forwards proxy-authorization referer retry-after user-agent".split(" "),
                    Oo=function(c){var a,b,d,e={};return c?(I.forEach(c.split("\n"),function(c){(d=c.indexOf(":"),a=I.trim(c.substr(0,d)).toLowerCase(),b=I.trim(c.substr(d+1)),!a)||e[a]&&0<=No.indexOf(a)||(e[a]="set-cookie"===a?(e[a]?e[a]:[]).concat([b]):e[a]?e[a]+", "+b:b)}),e):e},Po=I.isStandardBrowserEnv()?function(){function c(a){return b&&(d.setAttribute("href",a),a=d.href),d.setAttribute("href",a),{href:d.href,protocol:d.protocol?d.protocol.replace(/:$/,""):"",host:d.host,search:d.search?d.search.replace(/^\?/,
                            ""):"",hash:d.hash?d.hash.replace(/^#/,""):"",hostname:d.hostname,port:d.port,pathname:"/"===d.pathname.charAt(0)?d.pathname:"/"+d.pathname}}var a,b=/(msie|trident)/i.test(navigator.userAgent),d=document.createElement("a");return a=c(window.location.href),function(b){b=I.isString(b)?c(b):b;return b.protocol===a.protocol&&b.host===a.host}}():function(){return!0},Qo=I.isStandardBrowserEnv()?{write:function(c,a,b,d,e,f){var g=[];g.push(c+"="+encodeURIComponent(a));I.isNumber(b)&&g.push("expires="+(new Date(b)).toGMTString());
                            I.isString(d)&&g.push("path="+d);I.isString(e)&&g.push("domain="+e);!0===f&&g.push("secure");document.cookie=g.join("; ")},read:function(c){return(c=document.cookie.match(new RegExp("(^|;\\s*)("+c+")=([^;]*)")))?decodeURIComponent(c[3]):null},remove:function(c){this.write(c,"",Date.now()-864E5)}}:{write:function(){},read:function(){return null},remove:function(){}},Ro=function(c){return new Promise(function(a,b){var d=c.data,e=c.headers;I.isFormData(d)&&delete e["Content-Type"];var f=new XMLHttpRequest;
                        c.auth&&(e.Authorization="Basic "+btoa((c.auth.username||"")+":"+(c.auth.password||"")));if(f.open(c.method.toUpperCase(),nk(c.url,c.params,c.paramsSerializer),!0),f.timeout=c.timeout,f.onreadystatechange=function(){if(f&&4===f.readyState&&(0!==f.status||f.responseURL&&0===f.responseURL.indexOf("file:"))){var d="getAllResponseHeaders"in f?Oo(f.getAllResponseHeaders()):null;d={data:c.responseType&&"text"!==c.responseType?f.response:f.responseText,status:f.status,statusText:f.statusText,headers:d,config:c,
                            request:f};var e=d.config.validateStatus;!e||e(d.status)?a(d):b(qe(Error("Request failed with status code "+d.status),d.config,null,d.request,d));f=null}},f.onabort=function(){f&&(b(qe(Error("Request aborted"),c,"ECONNABORTED",f,void 0)),f=null)},f.onerror=function(){b(qe(Error("Network Error"),c,null,f,void 0));f=null},f.ontimeout=function(){b(qe(Error("timeout of "+c.timeout+"ms exceeded"),c,"ECONNABORTED",f,void 0));f=null},I.isStandardBrowserEnv()){var g=(c.withCredentials||Po(c.url))&&c.xsrfCookieName?
                            Qo.read(c.xsrfCookieName):void 0;g&&(e[c.xsrfHeaderName]=g)}if("setRequestHeader"in f&&I.forEach(e,function(a,b){void 0===d&&"content-type"===b.toLowerCase()?delete e[b]:f.setRequestHeader(b,a)}),c.withCredentials&&(f.withCredentials=!0),c.responseType)try{f.responseType=c.responseType}catch(k){if("json"!==c.responseType)throw k;}"function"==typeof c.onDownloadProgress&&f.addEventListener("progress",c.onDownloadProgress);"function"==typeof c.onUploadProgress&&f.upload&&f.upload.addEventListener("progress",
                            c.onUploadProgress);c.cancelToken&&c.cancelToken.promise.then(function(a){f&&(f.abort(),b(a),f=null)});void 0===d&&(d=null);f.send(d)})},So={"Content-Type":"application/x-www-form-urlencoded"},re={adapter:function(){var c;return("undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process)||"undefined"!=typeof XMLHttpRequest)&&(c=Ro),c}(),transformRequest:[function(c,a){return pk(a,"Accept"),pk(a,"Content-Type"),I.isFormData(c)||I.isArrayBuffer(c)||I.isBuffer(c)||I.isStream(c)||
                        I.isFile(c)||I.isBlob(c)?c:I.isArrayBufferView(c)?c.buffer:I.isURLSearchParams(c)?(mh(a,"application/x-www-form-urlencoded;charset=utf-8"),c.toString()):I.isObject(c)?(mh(a,"application/json;charset=utf-8"),JSON.stringify(c)):c}],transformResponse:[function(c){if("string"==typeof c)try{c=JSON.parse(c)}catch(a){}return c}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(c){return 200<=c&&300>c},headers:{common:{Accept:"application/json, text/plain, */*"}}};
                I.forEach(["delete","get","head"],function(c){re.headers[c]={}});I.forEach(["post","put","patch"],function(c){re.headers[c]=I.merge(So)});var To=function(c,a){return a?c.replace(/\/+$/,"")+"/"+a.replace(/^\/+/,""):c},Uo=function(c){c.cancelToken&&c.cancelToken.throwIfRequested();return c.baseURL&&!/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(c.url)&&(c.url=To(c.baseURL,c.url)),c.headers=c.headers||{},c.data=cg(c.data,c.headers,c.transformRequest),c.headers=I.merge(c.headers.common||{},c.headers[c.method]||
                    {},c.headers||{}),I.forEach("delete get head post put patch common".split(" "),function(a){delete c.headers[a]}),(c.adapter||re.adapter)(c).then(function(a){c.cancelToken&&c.cancelToken.throwIfRequested();return a.data=cg(a.data,a.headers,c.transformResponse),a},function(a){ok(a)||(c.cancelToken&&c.cancelToken.throwIfRequested(),a&&a.response&&(a.response.data=cg(a.response.data,a.response.headers,c.transformResponse)));return Promise.reject(a)})},dg=function(c,a){a=a||{};var b={};return I.forEach(["url",
                    "method","params","data"],function(c){void 0!==a[c]&&(b[c]=a[c])}),I.forEach(["headers","auth","proxy"],function(d){I.isObject(a[d])?b[d]=I.deepMerge(c[d],a[d]):void 0!==a[d]?b[d]=a[d]:I.isObject(c[d])?b[d]=I.deepMerge(c[d]):void 0!==c[d]&&(b[d]=c[d])}),I.forEach("baseURL transformRequest transformResponse paramsSerializer timeout withCredentials adapter responseType xsrfCookieName xsrfHeaderName onUploadProgress onDownloadProgress maxContentLength validateStatus maxRedirects httpAgent httpsAgent cancelToken socketPath".split(" "),
                    function(d){void 0!==a[d]?b[d]=a[d]:void 0!==c[d]&&(b[d]=c[d])}),b};Vc.prototype.request=function(c,a){"string"==typeof c?(c=a||{}).url=c:c=c||{};(c=dg(this.defaults,c)).method=c.method?c.method.toLowerCase():"get";var b=[Uo,void 0];c=Promise.resolve(c);this.interceptors.request.forEach(function(a){b.unshift(a.fulfilled,a.rejected)});for(this.interceptors.response.forEach(function(a){b.push(a.fulfilled,a.rejected)});b.length;)c=c.then(b.shift(),b.shift());return c};Vc.prototype.getUri=function(c){return c=
                    dg(this.defaults,c),nk(c.url,c.params,c.paramsSerializer).replace(/^\?/,"")};I.forEach(["delete","get","head","options"],function(c){Vc.prototype[c]=function(a,b){return this.request(I.merge(b||{},{method:c,url:a}))}});I.forEach(["post","put","patch"],function(c){Vc.prototype[c]=function(a,b,d){return this.request(I.merge(d||{},{method:c,url:a,data:b}))}});var Jd=Vc;Ke.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")};Ke.prototype.__CANCEL__=!0;var oh=Ke;Id.prototype.throwIfRequested=
                    function(){if(this.reason)throw this.reason;};Id.source=function(){var c;return{token:new Id(function(a){c=a}),cancel:c}};var Ib=ph(re);Ib.Axios=Jd;Ib.create=function(c){return ph(dg(Ib.defaults,c))};Ib.Cancel=oh;Ib.CancelToken=Id;Ib.isCancel=ok;Ib.all=function(c){return Promise.all(c)};Ib.spread=function(c){return function(a){return c.apply(null,a)}};var Fb=Ib.default=Ib;let vb={DEBUG:0,INFO:1,WARNING:2,ERROR:3,NONE:4},qk=c=>{for(const a in vb)if(vb[a]===c)return a;return"DEFAULT"};class Vo{constructor(){this.logLevel=
                    vb.DEBUG;this.uploadLogWaitingList=[];this.uploadLogUploadingList=[];this.currentLogID=this.uploadErrorCount=0}debug(...c){var a;c=n(a=[vb.DEBUG]).call(a,c);this.log.apply(this,c)}info(...c){var a;c=n(a=[vb.INFO]).call(a,c);this.log.apply(this,c)}warning(...c){var a;c=n(a=[vb.WARNING]).call(a,c);this.log.apply(this,c)}error(...c){var a;c=n(a=[vb.ERROR]).call(a,c);this.log.apply(this,c)}setLogLevel(c){this.logLevel=c=Math.min(Math.max(0,c),4)}enableLogUpload(){Xb("UPLOAD_LOG",!0)}disableLogUpload(){Xb("UPLOAD_LOG",
                    !1);this.uploadLogUploadingList=[];this.uploadLogWaitingList=[]}setProxyServer(c){this.proxyServerURL=c}log(...c){var a,b,d,e;let f=Math.max(0,Math.min(4,c[0]));if(!(c[0]=rh()+" Agora-SDK [".concat(qk(f),"]:"),this.appendLogToWaitingList(f,c),f<this.logLevel)){var g=rh()+" %cAgora-SDK [".concat(qk(f),"]:");switch(f){case vb.DEBUG:c=n(a=[g,"color: #64B5F6;"]).call(a,zb(c).call(c,1));console.log.apply(console,c);break;case vb.INFO:c=n(b=[g,"color: #1E88E5; font-weight: bold;"]).call(b,zb(c).call(c,
                    1));console.log.apply(console,c);break;case vb.WARNING:c=n(d=[g,"color: #FB8C00; font-weight: bold;"]).call(d,zb(c).call(c,1));console.warn.apply(console,c);break;case vb.ERROR:c=n(e=[g,"color: #B00020; font-weight: bold;"]).call(e,zb(c).call(c,1)),console.error.apply(console,c)}}}appendLogToWaitingList(c,...a){if(w.UPLOAD_LOG){var b="";r(a).call(a,a=>{"object"==typeof a&&(a=z(a));b+="".concat(a," ")});this.uploadLogWaitingList.push({payload_str:b,log_level:c,log_item_id:this.currentLogID++});0===
                this.uploadLogUploadingList.length&&this.uploadLogInterval()}}async uploadLogs(){var c,a;let b={sdk_version:db,process_id:w.PROCESS_ID,payload:z(this.uploadLogUploadingList)};console.log(this.url||(this.proxyServerURL?n(c="https://".concat(this.proxyServerURL,"/ls/?h=")).call(c,w.LOG_UPLOAD_SERVER,"&p=443&d=upload/v1"):"https://".concat(w.LOG_UPLOAD_SERVER,"/upload/v1")));c=await Fb.post(this.url||(this.proxyServerURL?n(a="https://".concat(this.proxyServerURL,"/ls/?h=")).call(a,w.LOG_UPLOAD_SERVER,
                    "&p=443&d=upload/v1"):"https://".concat(w.LOG_UPLOAD_SERVER,"/upload/v1")),b,{responseType:"text"});if("OK"!==c.data)throw Error("unexpected upload log response: "+c.data);this.uploadLogUploadingList=[]}uploadLogInterval(){if(0!==this.uploadLogUploadingList.length||0!==this.uploadLogWaitingList.length){var c;0===this.uploadLogUploadingList.length&&(this.uploadLogUploadingList=Ja(c=this.uploadLogWaitingList).call(c,0,10));this.uploadLogs().then(()=>{this.uploadErrorCount=0;0<this.uploadLogWaitingList.length&&
                window.setTimeout(()=>this.uploadLogInterval(),3E3)}).catch(a=>{this.uploadErrorCount+=1;2>this.uploadErrorCount?window.setTimeout(()=>this.uploadLogInterval(),200):window.setTimeout(()=>this.uploadLogInterval(),1E3)})}}}let h=new Vo;class m{constructor(c,a="",b){var d;this.name="AgoraRTCException";this.code=c;this.message=n(d="AgoraRTCError ".concat(this.code,": ")).call(d,a);this.data=b}toString(){var c;return this.data?n(c="".concat(this.message," data: ")).call(c,z(this.data)):this.message}throw(){throw h.error(this.toString()),
                    this;}}var rk,Na;!function(c){c.FREE="free";c.UPLOADING="uploading"}(rk||(rk={}));(function(c){c.NONE="none";c.INIT="init";c.CANPLAY="canplay";c.PLAYING="playing";c.PAUSED="paused";c.SUSPEND="suspend";c.STALLED="stalled";c.WAITING="waiting";c.ERROR="error";c.DESTROYED="destroyed";c.ABORT="abort";c.ENDED="ended";c.EMPTIED="emptied"})(Na||(Na={}));M({target:"Number",stat:!0},{MAX_SAFE_INTEGER:9007199254740991});M({target:"Number",stat:!0},{MIN_SAFE_INTEGER:-9007199254740991});var Wo=function(c,a){for(var b=
                    Array(arguments.length-1),d=0,e=2,f=!0;e<arguments.length;)b[d++]=arguments[e++];return new Promise(function(e,k){b[d]=function(a){if(f)if(f=!1,a)k(a);else{for(var b=Array(arguments.length-1),c=0;c<b.length;)b[c++]=arguments[c];e.apply(null,b)}};try{c.apply(a||null,b)}catch(q){f&&(f=!1,k(q))}})},Xo=Oa(function(c,a){a.length=function(a){var b=a.length;if(!b)return 0;for(var c=0;1<--b%4&&"="===a.charAt(b);)++c;return Math.ceil(3*a.length)/4-c};var b=Array(64),d=Array(123);for(c=0;64>c;)d[b[c]=26>c?
                    c+65:52>c?c+71:62>c?c-4:c-59|43]=c++;a.encode=function(a,c,d){for(var e,f=null,g=[],h=0,l=0;c<d;){var n=a[c++];switch(l){case 0:g[h++]=b[n>>2];e=(3&n)<<4;l=1;break;case 1:g[h++]=b[e|n>>4];e=(15&n)<<2;l=2;break;case 2:g[h++]=b[e|n>>6],g[h++]=b[63&n],l=0}8191<h&&((f||(f=[])).push(String.fromCharCode.apply(String,g)),h=0)}return l&&(g[h++]=b[e],g[h++]=61,1===l&&(g[h++]=61)),f?(h&&f.push(String.fromCharCode.apply(String,g.slice(0,h))),f.join("")):String.fromCharCode.apply(String,g.slice(0,h))};a.decode=
                    function(a,b,c){for(var e,f=c,g=0,h=0;h<a.length;){var l=a.charCodeAt(h++);if(61===l&&1<g)break;if(void 0===(l=d[l]))throw Error("invalid encoding");switch(g){case 0:e=l;g=1;break;case 1:b[c++]=e<<2|(48&l)>>4;e=l;g=2;break;case 2:b[c++]=(15&e)<<4|(60&l)>>2;e=l;g=3;break;case 3:b[c++]=(3&e)<<6|l,g=0}}if(1===g)throw Error("invalid encoding");return c-f};a.test=function(a){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(a)}});Kd.prototype.on=function(c,a,b){return(this._listeners[c]||
                    (this._listeners[c]=[])).push({fn:a,ctx:b||this}),this};Kd.prototype.off=function(c,a){if(void 0===c)this._listeners={};else if(void 0===a)this._listeners[c]=[];else{c=this._listeners[c];for(var b=0;b<c.length;)c[b].fn===a?c.splice(b,1):++b}return this};Kd.prototype.emit=function(c){var a=this._listeners[c];if(a){for(var b=[],d=1;d<arguments.length;)b.push(arguments[d++]);for(d=0;d<a.length;)a[d].fn.apply(a[d++].ctx,b)}return this};var Yo=vh(vh),Zo=function(c){try{var a=eval("quire".replace(/^/,"re"))(c);
                    if(a&&(a.length||Object.keys(a).length))return a}catch(b){}return null},$o=Oa(function(c,a){a.length=function(a){for(var b=0,c=0,f=0;f<a.length;++f)128>(c=a.charCodeAt(f))?b+=1:2048>c?b+=2:55296==(64512&c)&&56320==(64512&a.charCodeAt(f+1))?(++f,b+=4):b+=3;return b};a.read=function(a,c,e){if(1>e-c)return"";for(var b,d=null,k=[],q=0;c<e;)128>(b=a[c++])?k[q++]=b:191<b&&224>b?k[q++]=(31&b)<<6|63&a[c++]:239<b&&365>b?(b=((7&b)<<18|(63&a[c++])<<12|(63&a[c++])<<6|63&a[c++])-65536,k[q++]=55296+(b>>10),k[q++]=
                    56320+(1023&b)):k[q++]=(15&b)<<12|(63&a[c++])<<6|63&a[c++],8191<q&&((d||(d=[])).push(String.fromCharCode.apply(String,k)),q=0);return d?(q&&d.push(String.fromCharCode.apply(String,k.slice(0,q))),d.join("")):String.fromCharCode.apply(String,k.slice(0,q))};a.write=function(a,c,e){for(var b,d,k=e,q=0;q<a.length;++q)128>(b=a.charCodeAt(q))?c[e++]=b:2048>b?(c[e++]=b>>6|192,c[e++]=63&b|128):55296==(64512&b)&&56320==(64512&(d=a.charCodeAt(q+1)))?(b=65536+((1023&b)<<10)+(1023&d),++q,c[e++]=b>>18|240,c[e++]=
                    b>>12&63|128,c[e++]=b>>6&63|128,c[e++]=63&b|128):(c[e++]=b>>12|224,c[e++]=b>>6&63|128,c[e++]=63&b|128);return e-k}}),ap=function(c,a,b){var d=b||8192,e=d>>>1,f=null,g=d;return function(b){if(1>b||b>e)return c(b);g+b>d&&(f=c(d),g=0);b=a.call(f,g,g+=b);return 7&g&&(g=1+(7|g)),b}},pc=Ca.zero=new Ca(0,0);pc.toNumber=function(){return 0};pc.zzEncode=pc.zzDecode=function(){return this};pc.length=function(){return 1};var bp=Ca.zeroHash="\x00\x00\x00\x00\x00\x00\x00\x00";Ca.fromNumber=function(c){if(0===
                    c)return pc;var a=0>c;a&&(c=-c);var b=c>>>0;c=(c-b)/4294967296>>>0;return a&&(c=~c>>>0,b=~b>>>0,4294967295<++b&&(b=0,4294967295<++c&&(c=0))),new Ca(b,c)};Ca.from=function(c){if("number"==typeof c)return Ca.fromNumber(c);if(Q.isString(c)){if(!Q.Long)return Ca.fromNumber(parseInt(c,10));c=Q.Long.fromString(c)}return c.low||c.high?new Ca(c.low>>>0,c.high>>>0):pc};Ca.prototype.toNumber=function(c){if(!c&&this.hi>>>31){c=1+~this.lo>>>0;var a=~this.hi>>>0;return c||(a=a+1>>>0),-(c+4294967296*a)}return this.lo+
                    4294967296*this.hi};Ca.prototype.toLong=function(c){return Q.Long?new Q.Long(0|this.lo,0|this.hi,!!c):{low:0|this.lo,high:0|this.hi,unsigned:!!c}};var ac=String.prototype.charCodeAt;Ca.fromHash=function(c){return c===bp?pc:new Ca((ac.call(c,0)|ac.call(c,1)<<8|ac.call(c,2)<<16|ac.call(c,3)<<24)>>>0,(ac.call(c,4)|ac.call(c,5)<<8|ac.call(c,6)<<16|ac.call(c,7)<<24)>>>0)};Ca.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>
                    8&255,this.hi>>>16&255,this.hi>>>24)};Ca.prototype.zzEncode=function(){var c=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^c)>>>0,this.lo=(this.lo<<1^c)>>>0,this};Ca.prototype.zzDecode=function(){var c=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^c)>>>0,this.hi=(this.hi>>>1^c)>>>0,this};Ca.prototype.length=function(){var c=this.lo,a=(this.lo>>>28|this.hi<<4)>>>0,b=this.hi>>>24;return 0===b?0===a?16384>c?128>c?1:2:2097152>c?3:4:16384>a?128>a?5:6:2097152>a?7:8:128>b?9:10};var Q=Oa(function(c,
a){function b(a,b,c){for(var d=Object.keys(b),e=0;e<d.length;++e)void 0!==a[d[e]]&&c||(a[d[e]]=b[d[e]]);return a}function d(a){function c(a,d){if(!(this instanceof c))return new c(a,d);Object.defineProperty(this,"message",{get:function(){return a}});Error.captureStackTrace?Error.captureStackTrace(this,c):Object.defineProperty(this,"stack",{value:Error().stack||""});d&&b(this,d)}return(c.prototype=Object.create(Error.prototype)).constructor=c,Object.defineProperty(c.prototype,"name",{get:function(){return a}}),
                    c.prototype.toString=function(){return this.name+": "+this.message},c}a.asPromise=Wo;a.base64=Xo;a.EventEmitter=Kd;a.float=Yo;a.inquire=Zo;a.utf8=$o;a.pool=ap;a.LongBits=Ca;a.isNode=!!(void 0!==Pb&&Pb&&Pb.process&&Pb.process.versions&&Pb.process.versions.node);a.global=a.isNode&&Pb||"undefined"!=typeof window&&window||"undefined"!=typeof self&&self||Pb;a.emptyArray=Object.freeze?Object.freeze([]):[];a.emptyObject=Object.freeze?Object.freeze({}):{};a.isInteger=Number.isInteger||function(a){return"number"==
                    typeof a&&isFinite(a)&&Math.floor(a)===a};a.isString=function(a){return"string"==typeof a||a instanceof String};a.isObject=function(a){return a&&"object"==typeof a};a.isset=a.isSet=function(a,b){var c=a[b];return!(null==c||!a.hasOwnProperty(b))&&("object"!=typeof c||0<(Array.isArray(c)?c.length:Object.keys(c).length))};a.Buffer=function(){try{var b=a.inquire("buffer").Buffer;return b.prototype.utf8Write?b:null}catch(f){return null}}();a._Buffer_from=null;a._Buffer_allocUnsafe=null;a.newBuffer=function(b){return"number"==
                typeof b?a.Buffer?a._Buffer_allocUnsafe(b):new a.Array(b):a.Buffer?a._Buffer_from(b):"undefined"==typeof Uint8Array?b:new Uint8Array(b)};a.Array="undefined"!=typeof Uint8Array?Uint8Array:Array;a.Long=a.global.dcodeIO&&a.global.dcodeIO.Long||a.global.Long||a.inquire("long");a.key2Re=/^true|false|0|1$/;a.key32Re=/^-?(?:0|[1-9][0-9]*)$/;a.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;a.longToHash=function(b){return b?a.LongBits.from(b).toHash():a.LongBits.zeroHash};a.longFromHash=function(b,c){b=
                    a.LongBits.fromHash(b);return a.Long?a.Long.fromBits(b.lo,b.hi,c):b.toNumber(!!c)};a.merge=b;a.lcFirst=function(a){return a.charAt(0).toLowerCase()+a.substring(1)};a.newError=d;a.ProtocolError=d("ProtocolError");a.oneOfGetter=function(a){for(var b={},c=0;c<a.length;++c)b[a[c]]=1;return function(){for(var a=Object.keys(this),c=a.length-1;-1<c;--c)if(1===b[a[c]]&&void 0!==this[a[c]]&&null!==this[a[c]])return a[c]}};a.oneOfSetter=function(a){return function(b){for(var c=0;c<a.length;++c)a[c]!==b&&delete this[a[c]]}};
                    a.toJSONOptions={longs:String,enums:String,bytes:String,json:!0};a._configure=function(){var b=a.Buffer;b?(a._Buffer_from=b.from!==Uint8Array.from&&b.from||function(a,c){return new b(a,c)},a._Buffer_allocUnsafe=b.allocUnsafe||function(a){return new b(a)}):a._Buffer_from=a._Buffer_allocUnsafe=null}}),Se=aa,eg,se=Q.LongBits,sk=Q.base64,tk=Q.utf8,uk=function(){return Q.Buffer?function(){return(aa.create=function(){return new eg})()}:function(){return new aa}};aa.create=uk();aa.alloc=function(c){return new Q.Array(c)};
                Q.Array!==Array&&(aa.alloc=Q.pool(aa.alloc,Q.Array.prototype.subarray));aa.prototype._push=function(c,a,b){return this.tail=this.tail.next=new Wc(c,a,b),this.len+=a,this};Pe.prototype=Object.create(Wc.prototype);Pe.prototype.fn=function(c,a,b){for(;127<c;)a[b++]=127&c|128,c>>>=7;a[b]=c};aa.prototype.uint32=function(c){return this.len+=(this.tail=this.tail.next=new Pe(128>(c>>>=0)?1:16384>c?2:2097152>c?3:268435456>c?4:5,c)).len,this};aa.prototype.int32=function(c){return 0>c?this._push(Qe,10,se.fromNumber(c)):
                    this.uint32(c)};aa.prototype.sint32=function(c){return this.uint32((c<<1^c>>31)>>>0)};aa.prototype.uint64=function(c){c=se.from(c);return this._push(Qe,c.length(),c)};aa.prototype.int64=aa.prototype.uint64;aa.prototype.sint64=function(c){c=se.from(c).zzEncode();return this._push(Qe,c.length(),c)};aa.prototype.bool=function(c){return this._push(Oe,1,c?1:0)};aa.prototype.fixed32=function(c){return this._push(Re,4,c>>>0)};aa.prototype.sfixed32=aa.prototype.fixed32;aa.prototype.fixed64=function(c){c=
                    se.from(c);return this._push(Re,4,c.lo)._push(Re,4,c.hi)};aa.prototype.sfixed64=aa.prototype.fixed64;aa.prototype.float=function(c){return this._push(Q.float.writeFloatLE,4,c)};aa.prototype.double=function(c){return this._push(Q.float.writeDoubleLE,8,c)};var cp=Q.Array.prototype.set?function(c,a,b){a.set(c,b)}:function(c,a,b){for(var d=0;d<c.length;++d)a[b+d]=c[d]};aa.prototype.bytes=function(c){var a=c.length>>>0;if(!a)return this._push(Oe,1,0);if(Q.isString(c)){var b=aa.alloc(a=sk.length(c));sk.decode(c,
                    b,0);c=b}return this.uint32(a)._push(cp,a,c)};aa.prototype.string=function(c){var a=tk.length(c);return a?this.uint32(a)._push(tk.write,a,c):this._push(Oe,1,0)};aa.prototype.fork=function(){return this.states=new yl(this),this.head=this.tail=new Wc(Ne,0,0),this.len=0,this};aa.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Wc(Ne,0,0),this.len=0),this};aa.prototype.ldelim=
                    function(){var c=this.head,a=this.tail,b=this.len;return this.reset().uint32(b),b&&(this.tail.next=c.next,this.tail=a,this.len+=b),this};aa.prototype.finish=function(){for(var c=this.head.next,a=this.constructor.alloc(this.len),b=0;c;)c.fn(c.val,a,b),b+=c.len,c=c.next;return a};aa._configure=function(c){eg=c;aa.create=uk();eg._configure()};(Ab.prototype=Object.create(Se.prototype)).constructor=Ab;Ab._configure=function(){Ab.alloc=Q._Buffer_allocUnsafe;Ab.writeBytesBuffer=Q.Buffer&&Q.Buffer.prototype instanceof
                Uint8Array&&"set"===Q.Buffer.prototype.set.name?function(c,a,b){a.set(c,b)}:function(c,a,b){if(c.copy)c.copy(a,b,0,c.length);else for(var d=0;d<c.length;)a[b++]=c[d++]}};Ab.prototype.bytes=function(c){Q.isString(c)&&(c=Q._Buffer_from(c,"base64"));var a=c.length>>>0;return this.uint32(a),a&&this._push(Ab.writeBytesBuffer,a,c),this};Ab.prototype.string=function(c){var a=Q.Buffer.byteLength(c);return this.uint32(a),a&&this._push(zl,a,c),this};Ab._configure();var Ue=ua,fg,Ah=Q.LongBits,dp=Q.utf8,vk="undefined"!=
                typeof Uint8Array?function(c){if(c instanceof Uint8Array||Array.isArray(c))return new ua(c);throw Error("illegal buffer");}:function(c){if(Array.isArray(c))return new ua(c);throw Error("illegal buffer");},wk=function(){return Q.Buffer?function(c){return(ua.create=function(a){return Q.Buffer.isBuffer(a)?new fg(a):vk(a)})(c)}:vk},kb;ua.create=wk();ua.prototype._slice=Q.Array.prototype.subarray||Q.Array.prototype.slice;ua.prototype.uint32=(kb=4294967295,function(){if((kb=(127&this.buf[this.pos])>>>0,
                128>this.buf[this.pos++])||(kb=(kb|(127&this.buf[this.pos])<<7)>>>0,128>this.buf[this.pos++])||(kb=(kb|(127&this.buf[this.pos])<<14)>>>0,128>this.buf[this.pos++])||(kb=(kb|(127&this.buf[this.pos])<<21)>>>0,128>this.buf[this.pos++])||(kb=(kb|(15&this.buf[this.pos])<<28)>>>0,128>this.buf[this.pos++]))return kb;if((this.pos+=5)>this.len)throw this.pos=this.len,qb(this,10);return kb});ua.prototype.int32=function(){return 0|this.uint32()};ua.prototype.sint32=function(){var c=this.uint32();return c>>>1^
                    -(1&c)|0};ua.prototype.bool=function(){return 0!==this.uint32()};ua.prototype.fixed32=function(){if(this.pos+4>this.len)throw qb(this,4);return Ld(this.buf,this.pos+=4)};ua.prototype.sfixed32=function(){if(this.pos+4>this.len)throw qb(this,4);return 0|Ld(this.buf,this.pos+=4)};ua.prototype.float=function(){if(this.pos+4>this.len)throw qb(this,4);var c=Q.float.readFloatLE(this.buf,this.pos);return this.pos+=4,c};ua.prototype.double=function(){if(this.pos+8>this.len)throw qb(this,4);var c=Q.float.readDoubleLE(this.buf,
                    this.pos);return this.pos+=8,c};ua.prototype.bytes=function(){var c=this.uint32(),a=this.pos,b=this.pos+c;if(b>this.len)throw qb(this,c);return this.pos+=c,Array.isArray(this.buf)?this.buf.slice(a,b):a===b?new this.buf.constructor(0):this._slice.call(this.buf,a,b)};ua.prototype.string=function(){var c=this.bytes();return dp.read(c,0,c.length)};ua.prototype.skip=function(c){if("number"==typeof c){if(this.pos+c>this.len)throw qb(this,c);this.pos+=c}else{do if(this.pos>=this.len)throw qb(this);while(128&
                this.buf[this.pos++])}return this};ua.prototype.skipType=function(c){switch(c){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;4!=(c=7&this.uint32());)this.skipType(c);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+c+" at offset "+this.pos);}return this};ua._configure=function(c){fg=c;ua.create=wk();fg._configure();var a=Q.Long?"toLong":"toNumber";Q.merge(ua.prototype,{int64:function(){return Te.call(this)[a](!1)},uint64:function(){return Te.call(this)[a](!0)},
                    sint64:function(){return Te.call(this).zzDecode()[a](!1)},fixed64:function(){return Bh.call(this)[a](!0)},sfixed64:function(){return Bh.call(this)[a](!1)}})};(fc.prototype=Object.create(Ue.prototype)).constructor=fc;fc._configure=function(){Q.Buffer&&(fc.prototype._slice=Q.Buffer.prototype.slice)};fc.prototype.string=function(){var c=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+c,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+
                    c,this.len))};fc._configure();(Xc.prototype=Object.create(Q.EventEmitter.prototype)).constructor=Xc;Xc.prototype.rpcCall=function g(a,b,d,e,f){if(!e)throw TypeError("request must be specified");var k=this;if(!f)return Q.asPromise(g,k,a,b,d,e);if(k.rpcImpl)try{return k.rpcImpl(a,b[k.requestDelimited?"encodeDelimited":"encode"](e).finish(),function(b,e){if(b)return k.emit("error",b,a),f(b);if(null!==e){if(!(e instanceof d))try{e=d[k.responseDelimited?"decodeDelimited":"decode"](e)}catch(L){return k.emit("error",
                    L,a),f(L)}return k.emit("data",e,a),f(null,e)}k.end(!0)})}catch(q){return k.emit("error",q,a),void setTimeout(function(){f(q)},0)}else setTimeout(function(){f(Error("already ended"))},0)};Xc.prototype.end=function(a){return this.rpcImpl&&(a||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this};var ep=Oa(function(a,b){b.Service=Xc}),fp={},Jb=Oa(function(a,b){function d(){e.util._configure();e.Writer._configure(e.BufferWriter);e.Reader._configure(e.BufferReader)}var e=b;e.build=
                    "minimal";e.Writer=Se;e.BufferWriter=Ab;e.Reader=Ue;e.BufferReader=fc;e.util=Q;e.rpc=ep;e.roots=fp;e.configure=d;d()}),xa=Jb.Reader,td=Jb.Writer,p=Jb.util,oa=Jb.roots.default||(Jb.roots.default={}),qc;oa.Events=(qc={},qc.Message=function(){function a(a){if(a)for(var b=S(a),e=0;e<b.length;++e)null!=a[b[e]]&&(this[b[e]]=a[b[e]])}return a.prototype.id=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.msg=p.newBuffer([]),a.create=function(b){return new a(b)},a.encode=function(a,d){return d||(d=td.create()),
                null!=a.id&&Object.hasOwnProperty.call(a,"id")&&d.uint32(8).int64(a.id),null!=a.msg&&Object.hasOwnProperty.call(a,"msg")&&d.uint32(18).bytes(a.msg),d},a.encodeDelimited=function(a,d){return this.encode(a,d).ldelim()},a.decode=function(a,d){a instanceof xa||(a=xa.create(a));d=void 0===d?a.len:a.pos+d;for(var b=new oa.Events.Message;a.pos<d;){var f=a.uint32();switch(f>>>3){case 1:b.id=a.int64();break;case 2:b.msg=a.bytes();break;default:a.skipType(7&f)}}return b},a.decodeDelimited=function(a){return a instanceof
                xa||(a=new xa(a)),this.decode(a,a.uint32())},a.verify=function(a){return"object"!=typeof a||null===a?"object expected":null==a.id||!a.hasOwnProperty("id")||p.isInteger(a.id)||a.id&&p.isInteger(a.id.low)&&p.isInteger(a.id.high)?null==a.msg||!a.hasOwnProperty("msg")||a.msg&&"number"==typeof a.msg.length||p.isString(a.msg)?null:"msg: buffer expected":"id: integer|Long expected"},a.fromObject=function(a){if(a instanceof oa.Events.Message)return a;var b=new oa.Events.Message;return null!=a.id&&(p.Long?
                    (b.id=p.Long.fromValue(a.id)).unsigned=!1:"string"==typeof a.id?b.id=R(a.id,10):"number"==typeof a.id?b.id=a.id:"object"==typeof a.id&&(b.id=(new p.LongBits(a.id.low>>>0,a.id.high>>>0)).toNumber())),null!=a.msg&&("string"==typeof a.msg?p.base64.decode(a.msg,b.msg=p.newBuffer(p.base64.length(a.msg)),0):a.msg.length&&(b.msg=a.msg)),b},a.toObject=function(a,d){d||(d={});var b={};if(d.defaults){if(p.Long){var f=new p.Long(0,0,!1);b.id=d.longs===String?f.toString():d.longs===Number?f.toNumber():f}else b.id=
                    d.longs===String?"0":0;d.bytes===String?b.msg="":(b.msg=[],d.bytes!==Array&&(b.msg=p.newBuffer(b.msg)))}return null!=a.id&&a.hasOwnProperty("id")&&("number"==typeof a.id?b.id=d.longs===String?String(a.id):a.id:b.id=d.longs===String?p.Long.prototype.toString.call(a.id):d.longs===Number?(new p.LongBits(a.id.low>>>0,a.id.high>>>0)).toNumber():a.id),null!=a.msg&&a.hasOwnProperty("msg")&&(b.msg=d.bytes===String?p.base64.encode(a.msg,0,a.msg.length):d.bytes===Array?zb(Array.prototype).call(a.msg):a.msg),
                    b},a.prototype.toJSON=function(){return this.constructor.toObject(this,Jb.util.toJSONOptions)},a}(),qc.ProtoRaws=function(){function a(a){if(this.payloads=[],a)for(var b=S(a),e=0;e<b.length;++e)null!=a[b[e]]&&(this[b[e]]=a[b[e]])}return a.prototype.sendTs=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.payloads=p.emptyArray,a.create=function(b){return new a(b)},a.encode=function(a,d){if(d||(d=td.create()),null!=a.sendTs&&Object.hasOwnProperty.call(a,"sendTs")&&d.uint32(8).int64(a.sendTs),null!=a.payloads&&
                a.payloads.length)for(var b=0;b<a.payloads.length;++b)oa.Events.Message.encode(a.payloads[b],d.uint32(18).fork()).ldelim();return d},a.encodeDelimited=function(a,d){return this.encode(a,d).ldelim()},a.decode=function(a,d){a instanceof xa||(a=xa.create(a));d=void 0===d?a.len:a.pos+d;for(var b=new oa.Events.ProtoRaws;a.pos<d;){var f=a.uint32();switch(f>>>3){case 1:b.sendTs=a.int64();break;case 2:b.payloads&&b.payloads.length||(b.payloads=[]);b.payloads.push(oa.Events.Message.decode(a,a.uint32()));break;
                    default:a.skipType(7&f)}}return b},a.decodeDelimited=function(a){return a instanceof xa||(a=new xa(a)),this.decode(a,a.uint32())},a.verify=function(a){if("object"!=typeof a||null===a)return"object expected";if(null!=a.sendTs&&a.hasOwnProperty("sendTs")&&!(p.isInteger(a.sendTs)||a.sendTs&&p.isInteger(a.sendTs.low)&&p.isInteger(a.sendTs.high)))return"sendTs: integer|Long expected";if(null!=a.payloads&&a.hasOwnProperty("payloads")){if(!ec(a.payloads))return"payloads: array expected";for(var b=0;b<a.payloads.length;++b){var e=
                    oa.Events.Message.verify(a.payloads[b]);if(e)return"payloads."+e}}return null},a.fromObject=function(a){if(a instanceof oa.Events.ProtoRaws)return a;var b=new oa.Events.ProtoRaws;if(null!=a.sendTs&&(p.Long?(b.sendTs=p.Long.fromValue(a.sendTs)).unsigned=!1:"string"==typeof a.sendTs?b.sendTs=R(a.sendTs,10):"number"==typeof a.sendTs?b.sendTs=a.sendTs:"object"==typeof a.sendTs&&(b.sendTs=(new p.LongBits(a.sendTs.low>>>0,a.sendTs.high>>>0)).toNumber())),a.payloads){if(!ec(a.payloads))throw TypeError(".Events.ProtoRaws.payloads: array expected");
                    b.payloads=[];for(var e=0;e<a.payloads.length;++e){if("object"!=typeof a.payloads[e])throw TypeError(".Events.ProtoRaws.payloads: object expected");b.payloads[e]=oa.Events.Message.fromObject(a.payloads[e])}}return b},a.toObject=function(a,d){d||(d={});var b={};if((d.arrays||d.defaults)&&(b.payloads=[]),d.defaults)if(p.Long){var f=new p.Long(0,0,!1);b.sendTs=d.longs===String?f.toString():d.longs===Number?f.toNumber():f}else b.sendTs=d.longs===String?"0":0;if(null!=a.sendTs&&a.hasOwnProperty("sendTs")&&
                ("number"==typeof a.sendTs?b.sendTs=d.longs===String?String(a.sendTs):a.sendTs:b.sendTs=d.longs===String?p.Long.prototype.toString.call(a.sendTs):d.longs===Number?(new p.LongBits(a.sendTs.low>>>0,a.sendTs.high>>>0)).toNumber():a.sendTs),a.payloads&&a.payloads.length)for(b.payloads=[],f=0;f<a.payloads.length;++f)b.payloads[f]=oa.Events.Message.toObject(a.payloads[f],d);return b},a.prototype.toJSON=function(){return this.constructor.toObject(this,Jb.util.toJSONOptions)},a}(),qc.APWorkerEvent=function(){function a(a){if(a)for(var b=
                    S(a),e=0;e<b.length;++e)null!=a[b[e]]&&(this[b[e]]=a[b[e]])}return a.prototype.sid="",a.prototype.cname="",a.prototype.cid=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.lts=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.ip="",a.prototype.uid=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.success=!1,a.prototype.elapse=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.peer=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.ec=0,a.prototype.sc=0,a.prototype.serverIp="",a.prototype.firstSuccess=!1,a.prototype.responseTime=
                    0,a.prototype.serviceName="",a.prototype.responseDetail="",a.create=function(b){return new a(b)},a.encode=function(a,d){return d||(d=td.create()),null!=a.sid&&Object.hasOwnProperty.call(a,"sid")&&d.uint32(10).string(a.sid),null!=a.cname&&Object.hasOwnProperty.call(a,"cname")&&d.uint32(18).string(a.cname),null!=a.cid&&Object.hasOwnProperty.call(a,"cid")&&d.uint32(24).int64(a.cid),null!=a.lts&&Object.hasOwnProperty.call(a,"lts")&&d.uint32(32).int64(a.lts),null!=a.ip&&Object.hasOwnProperty.call(a,"ip")&&
                d.uint32(42).string(a.ip),null!=a.uid&&Object.hasOwnProperty.call(a,"uid")&&d.uint32(48).int64(a.uid),null!=a.success&&Object.hasOwnProperty.call(a,"success")&&d.uint32(56).bool(a.success),null!=a.elapse&&Object.hasOwnProperty.call(a,"elapse")&&d.uint32(64).int64(a.elapse),null!=a.peer&&Object.hasOwnProperty.call(a,"peer")&&d.uint32(72).int64(a.peer),null!=a.ec&&Object.hasOwnProperty.call(a,"ec")&&d.uint32(80).int32(a.ec),null!=a.sc&&Object.hasOwnProperty.call(a,"sc")&&d.uint32(88).int32(a.sc),null!=
                a.serverIp&&Object.hasOwnProperty.call(a,"serverIp")&&d.uint32(98).string(a.serverIp),null!=a.firstSuccess&&Object.hasOwnProperty.call(a,"firstSuccess")&&d.uint32(104).bool(a.firstSuccess),null!=a.responseTime&&Object.hasOwnProperty.call(a,"responseTime")&&d.uint32(112).int32(a.responseTime),null!=a.serviceName&&Object.hasOwnProperty.call(a,"serviceName")&&d.uint32(122).string(a.serviceName),null!=a.responseDetail&&Object.hasOwnProperty.call(a,"responseDetail")&&d.uint32(130).string(a.responseDetail),
                    d},a.encodeDelimited=function(a,d){return this.encode(a,d).ldelim()},a.decode=function(a,d){a instanceof xa||(a=xa.create(a));d=void 0===d?a.len:a.pos+d;for(var b=new oa.Events.APWorkerEvent;a.pos<d;){var f=a.uint32();switch(f>>>3){case 1:b.sid=a.string();break;case 2:b.cname=a.string();break;case 3:b.cid=a.int64();break;case 4:b.lts=a.int64();break;case 5:b.ip=a.string();break;case 6:b.uid=a.int64();break;case 7:b.success=a.bool();break;case 8:b.elapse=a.int64();break;case 9:b.peer=a.int64();break;
                    case 10:b.ec=a.int32();break;case 11:b.sc=a.int32();break;case 12:b.serverIp=a.string();break;case 13:b.firstSuccess=a.bool();break;case 14:b.responseTime=a.int32();break;case 15:b.serviceName=a.string();break;case 16:b.responseDetail=a.string();break;default:a.skipType(7&f)}}return b},a.decodeDelimited=function(a){return a instanceof xa||(a=new xa(a)),this.decode(a,a.uint32())},a.verify=function(a){return"object"!=typeof a||null===a?"object expected":null!=a.sid&&a.hasOwnProperty("sid")&&!p.isString(a.sid)?
                    "sid: string expected":null!=a.cname&&a.hasOwnProperty("cname")&&!p.isString(a.cname)?"cname: string expected":null==a.cid||!a.hasOwnProperty("cid")||p.isInteger(a.cid)||a.cid&&p.isInteger(a.cid.low)&&p.isInteger(a.cid.high)?null==a.lts||!a.hasOwnProperty("lts")||p.isInteger(a.lts)||a.lts&&p.isInteger(a.lts.low)&&p.isInteger(a.lts.high)?null!=a.ip&&a.hasOwnProperty("ip")&&!p.isString(a.ip)?"ip: string expected":null==a.uid||!a.hasOwnProperty("uid")||p.isInteger(a.uid)||a.uid&&p.isInteger(a.uid.low)&&
                    p.isInteger(a.uid.high)?null!=a.success&&a.hasOwnProperty("success")&&"boolean"!=typeof a.success?"success: boolean expected":null==a.elapse||!a.hasOwnProperty("elapse")||p.isInteger(a.elapse)||a.elapse&&p.isInteger(a.elapse.low)&&p.isInteger(a.elapse.high)?null==a.peer||!a.hasOwnProperty("peer")||p.isInteger(a.peer)||a.peer&&p.isInteger(a.peer.low)&&p.isInteger(a.peer.high)?null!=a.ec&&a.hasOwnProperty("ec")&&!p.isInteger(a.ec)?"ec: integer expected":null!=a.sc&&a.hasOwnProperty("sc")&&!p.isInteger(a.sc)?
                        "sc: integer expected":null!=a.serverIp&&a.hasOwnProperty("serverIp")&&!p.isString(a.serverIp)?"serverIp: string expected":null!=a.firstSuccess&&a.hasOwnProperty("firstSuccess")&&"boolean"!=typeof a.firstSuccess?"firstSuccess: boolean expected":null!=a.responseTime&&a.hasOwnProperty("responseTime")&&!p.isInteger(a.responseTime)?"responseTime: integer expected":null!=a.serviceName&&a.hasOwnProperty("serviceName")&&!p.isString(a.serviceName)?"serviceName: string expected":null!=a.responseDetail&&a.hasOwnProperty("responseDetail")&&
                        !p.isString(a.responseDetail)?"responseDetail: string expected":null:"peer: integer|Long expected":"elapse: integer|Long expected":"uid: integer|Long expected":"lts: integer|Long expected":"cid: integer|Long expected"},a.fromObject=function(a){if(a instanceof oa.Events.APWorkerEvent)return a;var b=new oa.Events.APWorkerEvent;return null!=a.sid&&(b.sid=String(a.sid)),null!=a.cname&&(b.cname=String(a.cname)),null!=a.cid&&(p.Long?(b.cid=p.Long.fromValue(a.cid)).unsigned=!1:"string"==typeof a.cid?b.cid=
                    R(a.cid,10):"number"==typeof a.cid?b.cid=a.cid:"object"==typeof a.cid&&(b.cid=(new p.LongBits(a.cid.low>>>0,a.cid.high>>>0)).toNumber())),null!=a.lts&&(p.Long?(b.lts=p.Long.fromValue(a.lts)).unsigned=!1:"string"==typeof a.lts?b.lts=R(a.lts,10):"number"==typeof a.lts?b.lts=a.lts:"object"==typeof a.lts&&(b.lts=(new p.LongBits(a.lts.low>>>0,a.lts.high>>>0)).toNumber())),null!=a.ip&&(b.ip=String(a.ip)),null!=a.uid&&(p.Long?(b.uid=p.Long.fromValue(a.uid)).unsigned=!1:"string"==typeof a.uid?b.uid=R(a.uid,
                    10):"number"==typeof a.uid?b.uid=a.uid:"object"==typeof a.uid&&(b.uid=(new p.LongBits(a.uid.low>>>0,a.uid.high>>>0)).toNumber())),null!=a.success&&(b.success=!!a.success),null!=a.elapse&&(p.Long?(b.elapse=p.Long.fromValue(a.elapse)).unsigned=!1:"string"==typeof a.elapse?b.elapse=R(a.elapse,10):"number"==typeof a.elapse?b.elapse=a.elapse:"object"==typeof a.elapse&&(b.elapse=(new p.LongBits(a.elapse.low>>>0,a.elapse.high>>>0)).toNumber())),null!=a.peer&&(p.Long?(b.peer=p.Long.fromValue(a.peer)).unsigned=
                    !1:"string"==typeof a.peer?b.peer=R(a.peer,10):"number"==typeof a.peer?b.peer=a.peer:"object"==typeof a.peer&&(b.peer=(new p.LongBits(a.peer.low>>>0,a.peer.high>>>0)).toNumber())),null!=a.ec&&(b.ec=0|a.ec),null!=a.sc&&(b.sc=0|a.sc),null!=a.serverIp&&(b.serverIp=String(a.serverIp)),null!=a.firstSuccess&&(b.firstSuccess=!!a.firstSuccess),null!=a.responseTime&&(b.responseTime=0|a.responseTime),null!=a.serviceName&&(b.serviceName=String(a.serviceName)),null!=a.responseDetail&&(b.responseDetail=String(a.responseDetail)),
                    b},a.toObject=function(a,d){d||(d={});var b={};if(d.defaults){if(b.sid="",b.cname="",p.Long){var f=new p.Long(0,0,!1);b.cid=d.longs===String?f.toString():d.longs===Number?f.toNumber():f}else b.cid=d.longs===String?"0":0;p.Long?(f=new p.Long(0,0,!1),b.lts=d.longs===String?f.toString():d.longs===Number?f.toNumber():f):b.lts=d.longs===String?"0":0;b.ip="";p.Long?(f=new p.Long(0,0,!1),b.uid=d.longs===String?f.toString():d.longs===Number?f.toNumber():f):b.uid=d.longs===String?"0":0;b.success=!1;p.Long?
                    (f=new p.Long(0,0,!1),b.elapse=d.longs===String?f.toString():d.longs===Number?f.toNumber():f):b.elapse=d.longs===String?"0":0;p.Long?(f=new p.Long(0,0,!1),b.peer=d.longs===String?f.toString():d.longs===Number?f.toNumber():f):b.peer=d.longs===String?"0":0;b.ec=0;b.sc=0;b.serverIp="";b.firstSuccess=!1;b.responseTime=0;b.serviceName="";b.responseDetail=""}return null!=a.sid&&a.hasOwnProperty("sid")&&(b.sid=a.sid),null!=a.cname&&a.hasOwnProperty("cname")&&(b.cname=a.cname),null!=a.cid&&a.hasOwnProperty("cid")&&
                ("number"==typeof a.cid?b.cid=d.longs===String?String(a.cid):a.cid:b.cid=d.longs===String?p.Long.prototype.toString.call(a.cid):d.longs===Number?(new p.LongBits(a.cid.low>>>0,a.cid.high>>>0)).toNumber():a.cid),null!=a.lts&&a.hasOwnProperty("lts")&&("number"==typeof a.lts?b.lts=d.longs===String?String(a.lts):a.lts:b.lts=d.longs===String?p.Long.prototype.toString.call(a.lts):d.longs===Number?(new p.LongBits(a.lts.low>>>0,a.lts.high>>>0)).toNumber():a.lts),null!=a.ip&&a.hasOwnProperty("ip")&&(b.ip=a.ip),
                null!=a.uid&&a.hasOwnProperty("uid")&&("number"==typeof a.uid?b.uid=d.longs===String?String(a.uid):a.uid:b.uid=d.longs===String?p.Long.prototype.toString.call(a.uid):d.longs===Number?(new p.LongBits(a.uid.low>>>0,a.uid.high>>>0)).toNumber():a.uid),null!=a.success&&a.hasOwnProperty("success")&&(b.success=a.success),null!=a.elapse&&a.hasOwnProperty("elapse")&&("number"==typeof a.elapse?b.elapse=d.longs===String?String(a.elapse):a.elapse:b.elapse=d.longs===String?p.Long.prototype.toString.call(a.elapse):
                    d.longs===Number?(new p.LongBits(a.elapse.low>>>0,a.elapse.high>>>0)).toNumber():a.elapse),null!=a.peer&&a.hasOwnProperty("peer")&&("number"==typeof a.peer?b.peer=d.longs===String?String(a.peer):a.peer:b.peer=d.longs===String?p.Long.prototype.toString.call(a.peer):d.longs===Number?(new p.LongBits(a.peer.low>>>0,a.peer.high>>>0)).toNumber():a.peer),null!=a.ec&&a.hasOwnProperty("ec")&&(b.ec=a.ec),null!=a.sc&&a.hasOwnProperty("sc")&&(b.sc=a.sc),null!=a.serverIp&&a.hasOwnProperty("serverIp")&&(b.serverIp=
                    a.serverIp),null!=a.firstSuccess&&a.hasOwnProperty("firstSuccess")&&(b.firstSuccess=a.firstSuccess),null!=a.responseTime&&a.hasOwnProperty("responseTime")&&(b.responseTime=a.responseTime),null!=a.serviceName&&a.hasOwnProperty("serviceName")&&(b.serviceName=a.serviceName),null!=a.responseDetail&&a.hasOwnProperty("responseDetail")&&(b.responseDetail=a.responseDetail),b},a.prototype.toJSON=function(){return this.constructor.toObject(this,Jb.util.toJSONOptions)},a}(),qc.WorkerEvent=function(){function a(a){if(a)for(var b=
                    S(a),e=0;e<b.length;++e)null!=a[b[e]]&&(this[b[e]]=a[b[e]])}return a.prototype.sid="",a.prototype.cname="",a.prototype.cid=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.lts=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.ip="",a.prototype.uid=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.success=!1,a.prototype.elapse=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.peer=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.command="",a.prototype.actionType="",a.prototype.url="",a.prototype.payload="",a.prototype.serverCode=
                    0,a.prototype.code=0,a.prototype.traceId="",a.prototype.workerType=0,a.prototype.responseTime=0,a.prototype.requestId=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.packIndex=0,a.prototype.requestByUser=!1,a.prototype.tid="",a.prototype.productType="",a.create=function(b){return new a(b)},a.encode=function(a,d){return d||(d=td.create()),null!=a.sid&&Object.hasOwnProperty.call(a,"sid")&&d.uint32(10).string(a.sid),null!=a.cname&&Object.hasOwnProperty.call(a,"cname")&&d.uint32(18).string(a.cname),null!=
                a.cid&&Object.hasOwnProperty.call(a,"cid")&&d.uint32(24).int64(a.cid),null!=a.lts&&Object.hasOwnProperty.call(a,"lts")&&d.uint32(32).int64(a.lts),null!=a.ip&&Object.hasOwnProperty.call(a,"ip")&&d.uint32(42).string(a.ip),null!=a.uid&&Object.hasOwnProperty.call(a,"uid")&&d.uint32(48).int64(a.uid),null!=a.success&&Object.hasOwnProperty.call(a,"success")&&d.uint32(56).bool(a.success),null!=a.elapse&&Object.hasOwnProperty.call(a,"elapse")&&d.uint32(64).int64(a.elapse),null!=a.peer&&Object.hasOwnProperty.call(a,
                    "peer")&&d.uint32(72).int64(a.peer),null!=a.command&&Object.hasOwnProperty.call(a,"command")&&d.uint32(82).string(a.command),null!=a.actionType&&Object.hasOwnProperty.call(a,"actionType")&&d.uint32(90).string(a.actionType),null!=a.url&&Object.hasOwnProperty.call(a,"url")&&d.uint32(98).string(a.url),null!=a.payload&&Object.hasOwnProperty.call(a,"payload")&&d.uint32(106).string(a.payload),null!=a.serverCode&&Object.hasOwnProperty.call(a,"serverCode")&&d.uint32(112).int32(a.serverCode),null!=a.code&&
                Object.hasOwnProperty.call(a,"code")&&d.uint32(120).int32(a.code),null!=a.traceId&&Object.hasOwnProperty.call(a,"traceId")&&d.uint32(130).string(a.traceId),null!=a.workerType&&Object.hasOwnProperty.call(a,"workerType")&&d.uint32(136).int32(a.workerType),null!=a.responseTime&&Object.hasOwnProperty.call(a,"responseTime")&&d.uint32(144).int32(a.responseTime),null!=a.requestId&&Object.hasOwnProperty.call(a,"requestId")&&d.uint32(152).int64(a.requestId),null!=a.packIndex&&Object.hasOwnProperty.call(a,
                    "packIndex")&&d.uint32(160).int32(a.packIndex),null!=a.requestByUser&&Object.hasOwnProperty.call(a,"requestByUser")&&d.uint32(168).bool(a.requestByUser),null!=a.tid&&Object.hasOwnProperty.call(a,"tid")&&d.uint32(178).string(a.tid),null!=a.productType&&Object.hasOwnProperty.call(a,"productType")&&d.uint32(186).string(a.productType),d},a.encodeDelimited=function(a,d){return this.encode(a,d).ldelim()},a.decode=function(a,d){a instanceof xa||(a=xa.create(a));d=void 0===d?a.len:a.pos+d;for(var b=new oa.Events.WorkerEvent;a.pos<
                d;){var f=a.uint32();switch(f>>>3){case 1:b.sid=a.string();break;case 2:b.cname=a.string();break;case 3:b.cid=a.int64();break;case 4:b.lts=a.int64();break;case 5:b.ip=a.string();break;case 6:b.uid=a.int64();break;case 7:b.success=a.bool();break;case 8:b.elapse=a.int64();break;case 9:b.peer=a.int64();break;case 10:b.command=a.string();break;case 11:b.actionType=a.string();break;case 12:b.url=a.string();break;case 13:b.payload=a.string();break;case 14:b.serverCode=a.int32();break;case 15:b.code=a.int32();
                    break;case 16:b.traceId=a.string();break;case 17:b.workerType=a.int32();break;case 18:b.responseTime=a.int32();break;case 19:b.requestId=a.int64();break;case 20:b.packIndex=a.int32();break;case 21:b.requestByUser=a.bool();break;case 22:b.tid=a.string();break;case 23:b.productType=a.string();break;default:a.skipType(7&f)}}return b},a.decodeDelimited=function(a){return a instanceof xa||(a=new xa(a)),this.decode(a,a.uint32())},a.verify=function(a){return"object"!=typeof a||null===a?"object expected":
                    null!=a.sid&&a.hasOwnProperty("sid")&&!p.isString(a.sid)?"sid: string expected":null!=a.cname&&a.hasOwnProperty("cname")&&!p.isString(a.cname)?"cname: string expected":null==a.cid||!a.hasOwnProperty("cid")||p.isInteger(a.cid)||a.cid&&p.isInteger(a.cid.low)&&p.isInteger(a.cid.high)?null==a.lts||!a.hasOwnProperty("lts")||p.isInteger(a.lts)||a.lts&&p.isInteger(a.lts.low)&&p.isInteger(a.lts.high)?null!=a.ip&&a.hasOwnProperty("ip")&&!p.isString(a.ip)?"ip: string expected":null==a.uid||!a.hasOwnProperty("uid")||
                        p.isInteger(a.uid)||a.uid&&p.isInteger(a.uid.low)&&p.isInteger(a.uid.high)?null!=a.success&&a.hasOwnProperty("success")&&"boolean"!=typeof a.success?"success: boolean expected":null==a.elapse||!a.hasOwnProperty("elapse")||p.isInteger(a.elapse)||a.elapse&&p.isInteger(a.elapse.low)&&p.isInteger(a.elapse.high)?null==a.peer||!a.hasOwnProperty("peer")||p.isInteger(a.peer)||a.peer&&p.isInteger(a.peer.low)&&p.isInteger(a.peer.high)?null!=a.command&&a.hasOwnProperty("command")&&!p.isString(a.command)?"command: string expected":
                        null!=a.actionType&&a.hasOwnProperty("actionType")&&!p.isString(a.actionType)?"actionType: string expected":null!=a.url&&a.hasOwnProperty("url")&&!p.isString(a.url)?"url: string expected":null!=a.payload&&a.hasOwnProperty("payload")&&!p.isString(a.payload)?"payload: string expected":null!=a.serverCode&&a.hasOwnProperty("serverCode")&&!p.isInteger(a.serverCode)?"serverCode: integer expected":null!=a.code&&a.hasOwnProperty("code")&&!p.isInteger(a.code)?"code: integer expected":null!=a.traceId&&a.hasOwnProperty("traceId")&&
                        !p.isString(a.traceId)?"traceId: string expected":null!=a.workerType&&a.hasOwnProperty("workerType")&&!p.isInteger(a.workerType)?"workerType: integer expected":null!=a.responseTime&&a.hasOwnProperty("responseTime")&&!p.isInteger(a.responseTime)?"responseTime: integer expected":null==a.requestId||!a.hasOwnProperty("requestId")||p.isInteger(a.requestId)||a.requestId&&p.isInteger(a.requestId.low)&&p.isInteger(a.requestId.high)?null!=a.packIndex&&a.hasOwnProperty("packIndex")&&!p.isInteger(a.packIndex)?
                            "packIndex: integer expected":null!=a.requestByUser&&a.hasOwnProperty("requestByUser")&&"boolean"!=typeof a.requestByUser?"requestByUser: boolean expected":null!=a.tid&&a.hasOwnProperty("tid")&&!p.isString(a.tid)?"tid: string expected":null!=a.productType&&a.hasOwnProperty("productType")&&!p.isString(a.productType)?"productType: string expected":null:"requestId: integer|Long expected":"peer: integer|Long expected":"elapse: integer|Long expected":"uid: integer|Long expected":"lts: integer|Long expected":
                        "cid: integer|Long expected"},a.fromObject=function(a){if(a instanceof oa.Events.WorkerEvent)return a;var b=new oa.Events.WorkerEvent;return null!=a.sid&&(b.sid=String(a.sid)),null!=a.cname&&(b.cname=String(a.cname)),null!=a.cid&&(p.Long?(b.cid=p.Long.fromValue(a.cid)).unsigned=!1:"string"==typeof a.cid?b.cid=R(a.cid,10):"number"==typeof a.cid?b.cid=a.cid:"object"==typeof a.cid&&(b.cid=(new p.LongBits(a.cid.low>>>0,a.cid.high>>>0)).toNumber())),null!=a.lts&&(p.Long?(b.lts=p.Long.fromValue(a.lts)).unsigned=
                    !1:"string"==typeof a.lts?b.lts=R(a.lts,10):"number"==typeof a.lts?b.lts=a.lts:"object"==typeof a.lts&&(b.lts=(new p.LongBits(a.lts.low>>>0,a.lts.high>>>0)).toNumber())),null!=a.ip&&(b.ip=String(a.ip)),null!=a.uid&&(p.Long?(b.uid=p.Long.fromValue(a.uid)).unsigned=!1:"string"==typeof a.uid?b.uid=R(a.uid,10):"number"==typeof a.uid?b.uid=a.uid:"object"==typeof a.uid&&(b.uid=(new p.LongBits(a.uid.low>>>0,a.uid.high>>>0)).toNumber())),null!=a.success&&(b.success=!!a.success),null!=a.elapse&&(p.Long?(b.elapse=
                    p.Long.fromValue(a.elapse)).unsigned=!1:"string"==typeof a.elapse?b.elapse=R(a.elapse,10):"number"==typeof a.elapse?b.elapse=a.elapse:"object"==typeof a.elapse&&(b.elapse=(new p.LongBits(a.elapse.low>>>0,a.elapse.high>>>0)).toNumber())),null!=a.peer&&(p.Long?(b.peer=p.Long.fromValue(a.peer)).unsigned=!1:"string"==typeof a.peer?b.peer=R(a.peer,10):"number"==typeof a.peer?b.peer=a.peer:"object"==typeof a.peer&&(b.peer=(new p.LongBits(a.peer.low>>>0,a.peer.high>>>0)).toNumber())),null!=a.command&&(b.command=
                    String(a.command)),null!=a.actionType&&(b.actionType=String(a.actionType)),null!=a.url&&(b.url=String(a.url)),null!=a.payload&&(b.payload=String(a.payload)),null!=a.serverCode&&(b.serverCode=0|a.serverCode),null!=a.code&&(b.code=0|a.code),null!=a.traceId&&(b.traceId=String(a.traceId)),null!=a.workerType&&(b.workerType=0|a.workerType),null!=a.responseTime&&(b.responseTime=0|a.responseTime),null!=a.requestId&&(p.Long?(b.requestId=p.Long.fromValue(a.requestId)).unsigned=!1:"string"==typeof a.requestId?
                    b.requestId=R(a.requestId,10):"number"==typeof a.requestId?b.requestId=a.requestId:"object"==typeof a.requestId&&(b.requestId=(new p.LongBits(a.requestId.low>>>0,a.requestId.high>>>0)).toNumber())),null!=a.packIndex&&(b.packIndex=0|a.packIndex),null!=a.requestByUser&&(b.requestByUser=!!a.requestByUser),null!=a.tid&&(b.tid=String(a.tid)),null!=a.productType&&(b.productType=String(a.productType)),b},a.toObject=function(a,d){d||(d={});var b={};if(d.defaults){if(b.sid="",b.cname="",p.Long){var f=new p.Long(0,
                    0,!1);b.cid=d.longs===String?f.toString():d.longs===Number?f.toNumber():f}else b.cid=d.longs===String?"0":0;p.Long?(f=new p.Long(0,0,!1),b.lts=d.longs===String?f.toString():d.longs===Number?f.toNumber():f):b.lts=d.longs===String?"0":0;b.ip="";p.Long?(f=new p.Long(0,0,!1),b.uid=d.longs===String?f.toString():d.longs===Number?f.toNumber():f):b.uid=d.longs===String?"0":0;b.success=!1;p.Long?(f=new p.Long(0,0,!1),b.elapse=d.longs===String?f.toString():d.longs===Number?f.toNumber():f):b.elapse=d.longs===
                String?"0":0;p.Long?(f=new p.Long(0,0,!1),b.peer=d.longs===String?f.toString():d.longs===Number?f.toNumber():f):b.peer=d.longs===String?"0":0;b.command="";b.actionType="";b.url="";b.payload="";b.serverCode=0;b.code=0;b.traceId="";b.workerType=0;b.responseTime=0;p.Long?(f=new p.Long(0,0,!1),b.requestId=d.longs===String?f.toString():d.longs===Number?f.toNumber():f):b.requestId=d.longs===String?"0":0;b.packIndex=0;b.requestByUser=!1;b.tid="";b.productType=""}return null!=a.sid&&a.hasOwnProperty("sid")&&
                (b.sid=a.sid),null!=a.cname&&a.hasOwnProperty("cname")&&(b.cname=a.cname),null!=a.cid&&a.hasOwnProperty("cid")&&("number"==typeof a.cid?b.cid=d.longs===String?String(a.cid):a.cid:b.cid=d.longs===String?p.Long.prototype.toString.call(a.cid):d.longs===Number?(new p.LongBits(a.cid.low>>>0,a.cid.high>>>0)).toNumber():a.cid),null!=a.lts&&a.hasOwnProperty("lts")&&("number"==typeof a.lts?b.lts=d.longs===String?String(a.lts):a.lts:b.lts=d.longs===String?p.Long.prototype.toString.call(a.lts):d.longs===Number?
                    (new p.LongBits(a.lts.low>>>0,a.lts.high>>>0)).toNumber():a.lts),null!=a.ip&&a.hasOwnProperty("ip")&&(b.ip=a.ip),null!=a.uid&&a.hasOwnProperty("uid")&&("number"==typeof a.uid?b.uid=d.longs===String?String(a.uid):a.uid:b.uid=d.longs===String?p.Long.prototype.toString.call(a.uid):d.longs===Number?(new p.LongBits(a.uid.low>>>0,a.uid.high>>>0)).toNumber():a.uid),null!=a.success&&a.hasOwnProperty("success")&&(b.success=a.success),null!=a.elapse&&a.hasOwnProperty("elapse")&&("number"==typeof a.elapse?b.elapse=
                    d.longs===String?String(a.elapse):a.elapse:b.elapse=d.longs===String?p.Long.prototype.toString.call(a.elapse):d.longs===Number?(new p.LongBits(a.elapse.low>>>0,a.elapse.high>>>0)).toNumber():a.elapse),null!=a.peer&&a.hasOwnProperty("peer")&&("number"==typeof a.peer?b.peer=d.longs===String?String(a.peer):a.peer:b.peer=d.longs===String?p.Long.prototype.toString.call(a.peer):d.longs===Number?(new p.LongBits(a.peer.low>>>0,a.peer.high>>>0)).toNumber():a.peer),null!=a.command&&a.hasOwnProperty("command")&&
                (b.command=a.command),null!=a.actionType&&a.hasOwnProperty("actionType")&&(b.actionType=a.actionType),null!=a.url&&a.hasOwnProperty("url")&&(b.url=a.url),null!=a.payload&&a.hasOwnProperty("payload")&&(b.payload=a.payload),null!=a.serverCode&&a.hasOwnProperty("serverCode")&&(b.serverCode=a.serverCode),null!=a.code&&a.hasOwnProperty("code")&&(b.code=a.code),null!=a.traceId&&a.hasOwnProperty("traceId")&&(b.traceId=a.traceId),null!=a.workerType&&a.hasOwnProperty("workerType")&&(b.workerType=a.workerType),
                null!=a.responseTime&&a.hasOwnProperty("responseTime")&&(b.responseTime=a.responseTime),null!=a.requestId&&a.hasOwnProperty("requestId")&&("number"==typeof a.requestId?b.requestId=d.longs===String?String(a.requestId):a.requestId:b.requestId=d.longs===String?p.Long.prototype.toString.call(a.requestId):d.longs===Number?(new p.LongBits(a.requestId.low>>>0,a.requestId.high>>>0)).toNumber():a.requestId),null!=a.packIndex&&a.hasOwnProperty("packIndex")&&(b.packIndex=a.packIndex),null!=a.requestByUser&&
                a.hasOwnProperty("requestByUser")&&(b.requestByUser=a.requestByUser),null!=a.tid&&a.hasOwnProperty("tid")&&(b.tid=a.tid),null!=a.productType&&a.hasOwnProperty("productType")&&(b.productType=a.productType),b},a.prototype.toJSON=function(){return this.constructor.toObject(this,Jb.util.toJSONOptions)},a}(),qc.JoinWebProxyAP=function(){function a(a){if(a)for(var b=S(a),e=0;e<b.length;++e)null!=a[b[e]]&&(this[b[e]]=a[b[e]])}return a.prototype.lts=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.sid="",a.prototype.cname=
                    "",a.prototype.cid=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.ip="",a.prototype.uid=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.sucess=0,a.prototype.elapse=p.Long?p.Long.fromBits(0,0,!1):0,a.prototype.eventType="",a.prototype.apServerAddr="",a.prototype.turnServerAddrList="",a.prototype.errorCode="",a.create=function(b){return new a(b)},a.encode=function(a,d){return d||(d=td.create()),null!=a.lts&&Object.hasOwnProperty.call(a,"lts")&&d.uint32(8).int64(a.lts),null!=a.sid&&Object.hasOwnProperty.call(a,
                    "sid")&&d.uint32(18).string(a.sid),null!=a.cname&&Object.hasOwnProperty.call(a,"cname")&&d.uint32(26).string(a.cname),null!=a.cid&&Object.hasOwnProperty.call(a,"cid")&&d.uint32(32).int64(a.cid),null!=a.ip&&Object.hasOwnProperty.call(a,"ip")&&d.uint32(42).string(a.ip),null!=a.uid&&Object.hasOwnProperty.call(a,"uid")&&d.uint32(48).int64(a.uid),null!=a.sucess&&Object.hasOwnProperty.call(a,"sucess")&&d.uint32(56).int32(a.sucess),null!=a.elapse&&Object.hasOwnProperty.call(a,"elapse")&&d.uint32(64).int64(a.elapse),
                null!=a.eventType&&Object.hasOwnProperty.call(a,"eventType")&&d.uint32(74).string(a.eventType),null!=a.apServerAddr&&Object.hasOwnProperty.call(a,"apServerAddr")&&d.uint32(82).string(a.apServerAddr),null!=a.turnServerAddrList&&Object.hasOwnProperty.call(a,"turnServerAddrList")&&d.uint32(90).string(a.turnServerAddrList),null!=a.errorCode&&Object.hasOwnProperty.call(a,"errorCode")&&d.uint32(98).string(a.errorCode),d},a.encodeDelimited=function(a,d){return this.encode(a,d).ldelim()},a.decode=function(a,
d){a instanceof xa||(a=xa.create(a));d=void 0===d?a.len:a.pos+d;for(var b=new oa.Events.JoinWebProxyAP;a.pos<d;){var f=a.uint32();switch(f>>>3){case 1:b.lts=a.int64();break;case 2:b.sid=a.string();break;case 3:b.cname=a.string();break;case 4:b.cid=a.int64();break;case 5:b.ip=a.string();break;case 6:b.uid=a.int64();break;case 7:b.sucess=a.int32();break;case 8:b.elapse=a.int64();break;case 9:b.eventType=a.string();break;case 10:b.apServerAddr=a.string();break;case 11:b.turnServerAddrList=a.string();
                    break;case 12:b.errorCode=a.string();break;default:a.skipType(7&f)}}return b},a.decodeDelimited=function(a){return a instanceof xa||(a=new xa(a)),this.decode(a,a.uint32())},a.verify=function(a){return"object"!=typeof a||null===a?"object expected":null==a.lts||!a.hasOwnProperty("lts")||p.isInteger(a.lts)||a.lts&&p.isInteger(a.lts.low)&&p.isInteger(a.lts.high)?null!=a.sid&&a.hasOwnProperty("sid")&&!p.isString(a.sid)?"sid: string expected":null!=a.cname&&a.hasOwnProperty("cname")&&!p.isString(a.cname)?
                    "cname: string expected":null==a.cid||!a.hasOwnProperty("cid")||p.isInteger(a.cid)||a.cid&&p.isInteger(a.cid.low)&&p.isInteger(a.cid.high)?null!=a.ip&&a.hasOwnProperty("ip")&&!p.isString(a.ip)?"ip: string expected":null==a.uid||!a.hasOwnProperty("uid")||p.isInteger(a.uid)||a.uid&&p.isInteger(a.uid.low)&&p.isInteger(a.uid.high)?null!=a.sucess&&a.hasOwnProperty("sucess")&&!p.isInteger(a.sucess)?"sucess: integer expected":null==a.elapse||!a.hasOwnProperty("elapse")||p.isInteger(a.elapse)||a.elapse&&
                    p.isInteger(a.elapse.low)&&p.isInteger(a.elapse.high)?null!=a.eventType&&a.hasOwnProperty("eventType")&&!p.isString(a.eventType)?"eventType: string expected":null!=a.apServerAddr&&a.hasOwnProperty("apServerAddr")&&!p.isString(a.apServerAddr)?"apServerAddr: string expected":null!=a.turnServerAddrList&&a.hasOwnProperty("turnServerAddrList")&&!p.isString(a.turnServerAddrList)?"turnServerAddrList: string expected":null!=a.errorCode&&a.hasOwnProperty("errorCode")&&!p.isString(a.errorCode)?"errorCode: string expected":
                        null:"elapse: integer|Long expected":"uid: integer|Long expected":"cid: integer|Long expected":"lts: integer|Long expected"},a.fromObject=function(a){if(a instanceof oa.Events.JoinWebProxyAP)return a;var b=new oa.Events.JoinWebProxyAP;return null!=a.lts&&(p.Long?(b.lts=p.Long.fromValue(a.lts)).unsigned=!1:"string"==typeof a.lts?b.lts=R(a.lts,10):"number"==typeof a.lts?b.lts=a.lts:"object"==typeof a.lts&&(b.lts=(new p.LongBits(a.lts.low>>>0,a.lts.high>>>0)).toNumber())),null!=a.sid&&(b.sid=String(a.sid)),
                null!=a.cname&&(b.cname=String(a.cname)),null!=a.cid&&(p.Long?(b.cid=p.Long.fromValue(a.cid)).unsigned=!1:"string"==typeof a.cid?b.cid=R(a.cid,10):"number"==typeof a.cid?b.cid=a.cid:"object"==typeof a.cid&&(b.cid=(new p.LongBits(a.cid.low>>>0,a.cid.high>>>0)).toNumber())),null!=a.ip&&(b.ip=String(a.ip)),null!=a.uid&&(p.Long?(b.uid=p.Long.fromValue(a.uid)).unsigned=!1:"string"==typeof a.uid?b.uid=R(a.uid,10):"number"==typeof a.uid?b.uid=a.uid:"object"==typeof a.uid&&(b.uid=(new p.LongBits(a.uid.low>>>
                    0,a.uid.high>>>0)).toNumber())),null!=a.sucess&&(b.sucess=0|a.sucess),null!=a.elapse&&(p.Long?(b.elapse=p.Long.fromValue(a.elapse)).unsigned=!1:"string"==typeof a.elapse?b.elapse=R(a.elapse,10):"number"==typeof a.elapse?b.elapse=a.elapse:"object"==typeof a.elapse&&(b.elapse=(new p.LongBits(a.elapse.low>>>0,a.elapse.high>>>0)).toNumber())),null!=a.eventType&&(b.eventType=String(a.eventType)),null!=a.apServerAddr&&(b.apServerAddr=String(a.apServerAddr)),null!=a.turnServerAddrList&&(b.turnServerAddrList=
                    String(a.turnServerAddrList)),null!=a.errorCode&&(b.errorCode=String(a.errorCode)),b},a.toObject=function(a,d){d||(d={});var b={};if(d.defaults){if(p.Long){var f=new p.Long(0,0,!1);b.lts=d.longs===String?f.toString():d.longs===Number?f.toNumber():f}else b.lts=d.longs===String?"0":0;b.sid="";b.cname="";p.Long?(f=new p.Long(0,0,!1),b.cid=d.longs===String?f.toString():d.longs===Number?f.toNumber():f):b.cid=d.longs===String?"0":0;b.ip="";p.Long?(f=new p.Long(0,0,!1),b.uid=d.longs===String?f.toString():
                    d.longs===Number?f.toNumber():f):b.uid=d.longs===String?"0":0;b.sucess=0;p.Long?(f=new p.Long(0,0,!1),b.elapse=d.longs===String?f.toString():d.longs===Number?f.toNumber():f):b.elapse=d.longs===String?"0":0;b.eventType="";b.apServerAddr="";b.turnServerAddrList="";b.errorCode=""}return null!=a.lts&&a.hasOwnProperty("lts")&&("number"==typeof a.lts?b.lts=d.longs===String?String(a.lts):a.lts:b.lts=d.longs===String?p.Long.prototype.toString.call(a.lts):d.longs===Number?(new p.LongBits(a.lts.low>>>0,a.lts.high>>>
                    0)).toNumber():a.lts),null!=a.sid&&a.hasOwnProperty("sid")&&(b.sid=a.sid),null!=a.cname&&a.hasOwnProperty("cname")&&(b.cname=a.cname),null!=a.cid&&a.hasOwnProperty("cid")&&("number"==typeof a.cid?b.cid=d.longs===String?String(a.cid):a.cid:b.cid=d.longs===String?p.Long.prototype.toString.call(a.cid):d.longs===Number?(new p.LongBits(a.cid.low>>>0,a.cid.high>>>0)).toNumber():a.cid),null!=a.ip&&a.hasOwnProperty("ip")&&(b.ip=a.ip),null!=a.uid&&a.hasOwnProperty("uid")&&("number"==typeof a.uid?b.uid=d.longs===
                String?String(a.uid):a.uid:b.uid=d.longs===String?p.Long.prototype.toString.call(a.uid):d.longs===Number?(new p.LongBits(a.uid.low>>>0,a.uid.high>>>0)).toNumber():a.uid),null!=a.sucess&&a.hasOwnProperty("sucess")&&(b.sucess=a.sucess),null!=a.elapse&&a.hasOwnProperty("elapse")&&("number"==typeof a.elapse?b.elapse=d.longs===String?String(a.elapse):a.elapse:b.elapse=d.longs===String?p.Long.prototype.toString.call(a.elapse):d.longs===Number?(new p.LongBits(a.elapse.low>>>0,a.elapse.high>>>0)).toNumber():
                    a.elapse),null!=a.eventType&&a.hasOwnProperty("eventType")&&(b.eventType=a.eventType),null!=a.apServerAddr&&a.hasOwnProperty("apServerAddr")&&(b.apServerAddr=a.apServerAddr),null!=a.turnServerAddrList&&a.hasOwnProperty("turnServerAddrList")&&(b.turnServerAddrList=a.turnServerAddrList),null!=a.errorCode&&a.hasOwnProperty("errorCode")&&(b.errorCode=a.errorCode),b},a.prototype.toJSON=function(){return this.constructor.toObject(this,Jb.util.toJSONOptions)},a}(),qc);let gp={sid:"",lts:0,success:null,cname:null,
                    uid:null,peer:null,cid:null,elapse:null,extend:null,vid:0};var Ea,sa,xk;!function(a){a.PUBLISH="publish";a.SUBSCRIBE="subscribe";a.SESSION_INIT="session_init";a.JOIN_CHOOSE_SERVER="join_choose_server";a.REQ_USER_ACCOUNT="req_user_account";a.JOIN_GATEWAY="join_gateway";a.STREAM_SWITCH="stream_switch";a.REQUEST_PROXY_WORKER_MANAGER="request_proxy_worker_manager";a.REQUEST_PROXY_APPCENTER="request_proxy_appcenter";a.FIRST_VIDEO_RECEIVED="first_video_received";a.FIRST_AUDIO_RECEIVED="first_audio_received";
                    a.FIRST_VIDEO_DECODE="first_video_decode";a.FIRST_AUDIO_DECODE="first_audio_decode";a.ON_ADD_AUDIO_STREAM="on_add_audio_stream";a.ON_ADD_VIDEO_STREAM="on_add_video_stream";a.ON_UPDATE_STREAM="on_update_stream";a.ON_REMOVE_STREAM="on_remove_stream";a.USER_ANALYTICS="req_user_analytics"}(Ea||(Ea={}));(function(a){a.SESSION="io.agora.pb.Wrtc.Session";a.JOIN_CHOOSE_SERVER="io.agora.pb.Wrtc.JoinChooseServer";a.REQ_USER_ACCOUNT="io.agora.pb.Wrtc.ReqUserAccount";a.JOIN_GATEWAT="io.agora.pb.Wrtc.JoinGateway";
                    a.PUBLISH="io.agora.pb.Wrtc.Publish";a.SUBSCRIBE="io.agora.pb.Wrtc.Subscribe";a.STREAM_SWITCH="io.agora.pb.Wrtc.StreamSwitch";a.AUDIO_SENDING_STOPPED="io.agora.pb.Wrtc.AudioSendingStopped";a.VIDEO_SENDING_STOPPED="io.agora.pb.Wrtc.VideoSendingStopped";a.REQUEST_PROXY_APPCENTER="io.agora.pb.Wrtc.RequestProxyAppCenter";a.REQUEST_PROXY_WORKER_MANAGER="io.agora.pb.Wrtc.RequestProxyWorkerManager";a.API_INVOKE="io.agora.pb.Wrtc.ApiInvoke";a.FIRST_VIDEO_RECEIVED="io.agora.pb.Wrtc.FirstVideoReceived";a.FIRST_AUDIO_RECEIVED=
                        "io.agora.pb.Wrtc.FirstAudioReceived";a.FIRST_VIDEO_DECODE="io.agora.pb.Wrtc.FirstVideoDecode";a.FIRST_AUDIO_DECODE="io.agora.pb.Wrtc.FirstAudioDecode";a.ON_ADD_AUDIO_STREAM="io.agora.pb.Wrtc.OnAddAudioStream";a.ON_ADD_VIDEO_STREAM="io.agora.pb.Wrtc.OnAddVideoStream";a.ON_UPDATE_STREAM="io.agora.pb.Wrtc.OnUpdateStream";a.ON_REMOVE_STREAM="io.agora.pb.Wrtc.OnRemoveStream";a.JOIN_CHANNEL_TIMEOUT="io.agora.pb.Wrtc.JoinChannelTimeout";a.PEER_PUBLISH_STATUS="io.agora.pb.Wrtc.PeerPublishStatus";a.USER_ANALYTICS=
                        "io.agora.pb.Wrtc.UserAnalytics"})(sa||(sa={}));(function(a){a[a.WORKER_EVENT=156]="WORKER_EVENT";a[a.AP_WORKER_EVENT=160]="AP_WORKER_EVENT"})(xk||(xk={}));let hp=a=>{const b=S(oa.Events);return!!Aa(b).call(b,a.type)};var y,D,rc,Ub,Bc,ud,Va,Fa,C,P,ta,N,ca,wb,Y,G,lb;!function(a){a.CREATE_CLIENT="createClient";a.CHECK_SYSTEM_REQUIREMENTS="checkSystemRequirements";a.CHECK_VIDEO_TRACK_IS_ACTIVE="checkVideoTrackIsActive";a.CHECK_AUDIO_TRACK_IS_ACTIVE="checkAudioTrackIsActive";a.CREATE_MIC_AUDIO_TRACK=
                    "createMicrophoneAudioTrack";a.CREATE_CUSTOM_AUDIO_TRACK="createCustomAudioTrack";a.CREATE_BUFFER_AUDIO_TRACK="createBufferSourceAudioTrack";a.CREATE_CAM_VIDEO_TRACK="createCameraVideoTrack";a.CREATE_CUSTOM_VIDEO_TRACK="createCustomVideoTrack";a.CREATE_MIC_AND_CAM_TRACKS="createMicrophoneAndCameraTracks";a.CREATE_SCREEN_VIDEO_TRACK="createScreenVideoTrack";a.SET_ENCRYPTION_CONFIG="Client.setEncryptionConfig";a.START_PROXY_SERVER="Client.startProxyServer";a.STOP_PROXY_SERVER="Client.stopProxyServer";
                    a.SET_PROXY_SERVER="Client.setProxyServer";a.SET_TURN_SERVER="Client.setTurnServer";a.SET_CLIENT_ROLE="Client.setClientRole";a.SET_LOW_STREAM_PARAMETER="Client.setLowStreamParameter";a.ENABLE_DUAL_STREAM="Client.enableDualStream";a.DISABLE_DUAL_STREAM="Client.disableDualStream";a.JOIN="Client.join";a.LEAVE="Client.leave";a.PUBLISH="Client.publish";a.UNPUBLISH="Client.unpublish";a.SUBSCRIBE="Client.subscribe";a.UNSUBSCRIBE="Client.unsubscribe";a.RENEW_TOKEN="Client.renewToken";a.SET_REMOTE_VIDEO_STREAM_TYPE=
                        "Client.setRemoteVideoStreamType";a.SET_STREAM_FALLBACK_OPTION="Client.setStreamFallbackOption";a.ENABLE_AUDIO_VOLUME_INDICATOR="Client.enableAudioVolumeIndicator";a.SEND_CUSTOM_REPORT_MESSAGE="Client.sendCustomReportMessage";a.ON_LIVE_STREAM_WARNING="Client.onLiveStreamWarning";a.ON_LIVE_STREAM_ERROR="Client.onLiveStreamingError";a.START_LIVE_STREAMING="Client.startLiveStreaming";a.SET_LIVE_TRANSCODING="Client.setLiveTranscoding";a.STOP_LIVE_STREAMING="Client.stopLiveStreaming";a.ADD_INJECT_STREAM_URL=
                        "Client.addInjectStreamUrl";a.REMOVE_INJECT_STREAM_URL="Client.removeInjectStreamUrl";a.START_CHANNEL_MEDIA_RELAY="Client.startChannelMediaRelay";a.UPDATE_CHANNEL_MEDIA_RELAY="Client.updateChannelMediaRelay";a.STOP_CHANNEL_MEDIA_RELAY="Client.stopChannelMediaRelay";a.REQUEST_CONFIG_DISTRIBUTE="_config-distribute-request";a.SET_CONFIG_DISTRIBUTE="_configDistribute";a.LOCAL_TRACK_SET_MUTED="LocalTrack.setMute";a.LOCAL_AUDIO_TRACK_PLAY="LocalAudioTrack.play";a.LOCAL_AUDIO_TRACK_PLAY_IN_ELEMENT="LocalAudioTrack.playInElement";
                    a.LOCAL_AUDIO_TRACK_STOP="LocalAudioTrack.stop";a.LOCAL_AUDIO_TRACK_SET_VOLUME="LocalAudioTrack.setVolume";a.MIC_AUDIO_TRACK_SET_DEVICE="MicrophoneAudioTrack.setDevice";a.BUFFER_AUDIO_TRACK_START="BufferSourceAudioTrack.startProcessAudioBuffer";a.BUFFER_AUDIO_TRACK_STOP="BufferSourceAudioTrack.stopProcessAudioBuffer";a.BUFFER_AUDIO_TRACK_PAUSE="BufferSourceAudioTrack.pauseProcessAudioBuffer";a.BUFFER_AUDIO_TRACK_RESUME="BufferSourceAudioTrack.resumeProcessAudioBuffer";a.BUFFER_AUDIO_TRACK_SEEK="BufferSourceAudioTrack.seekAudioBuffer";
                    a.LOCAL_VIDEO_TRACK_PLAY="LocalVideoTrack.play";a.LOCAL_VIDEO_TRACK_STOP="LocalVideoTrack.stop";a.LOCAL_VIDEO_TRACK_BEAUTY="LocalVideoTrack.setBeautyEffect";a.CAM_VIDEO_TRACK_SET_DEVICE="CameraVideoTrack.setDevice";a.CAM_VIDEO_TRACK_SET_ENCODER_CONFIG="CameraVideoTrack.setEncoderConfiguration";a.REMOTE_VIDEO_TRACK_PLAY="RemoteVideoTrack.play";a.REMOTE_VIDEO_TRACK_STOP="RemoteVideoTrack.stop";a.REMOTE_AUDIO_TRACK_PLAY="RemoteAudioTrack.play";a.REMOTE_AUDIO_TRACK_STOP="RemoteAudioTrack.stop";a.REMOTE_AUDIO_SET_VOLUME=
                        "RemoteAudioTrack.setVolume";a.REMOTE_AUDIO_SET_OUTPUT_DEVICE="RemoteAudioTrack.setOutputDevice";a.STREAM_TYPE_CHANGE="streamTypeChange"}(y||(y={}));(D||(D={})).TRACER="tracer";(function(a){a.IDLE="IDLE";a.INITING="INITING";a.INITEND="INITEND"})(rc||(rc={}));(function(a){a.STATE_CHANGE="state_change";a.RECORDING_DEVICE_CHANGED="recordingDeviceChanged";a.PLAYOUT_DEVICE_CHANGED="playoutDeviceChanged";a.CAMERA_DEVICE_CHANGED="cameraDeviceChanged"})(Ub||(Ub={}));(function(a){a[a.ACCESS_POINT=101]="ACCESS_POINT";
                    a[a.UNILBS=201]="UNILBS";a[a.STRING_UID_ALLOCATOR=901]="STRING_UID_ALLOCATOR"})(Bc||(Bc={}));(function(a){a[a.IIIEGAL_APPID=1]="IIIEGAL_APPID";a[a.IIIEGAL_UID=2]="IIIEGAL_UID";a[a.INTERNAL_ERROR=3]="INTERNAL_ERROR"})(ud||(ud={}));(function(a){a[a.INVALID_VENDOR_KEY=5]="INVALID_VENDOR_KEY";a[a.INVALID_CHANNEL_NAME=7]="INVALID_CHANNEL_NAME";a[a.INTERNAL_ERROR=8]="INTERNAL_ERROR";a[a.NO_AUTHORIZED=9]="NO_AUTHORIZED";a[a.DYNAMIC_KEY_TIMEOUT=10]="DYNAMIC_KEY_TIMEOUT";a[a.NO_ACTIVE_STATUS=11]="NO_ACTIVE_STATUS";
                    a[a.DYNAMIC_KEY_EXPIRED=13]="DYNAMIC_KEY_EXPIRED";a[a.STATIC_USE_DYNAMIC_KEY=14]="STATIC_USE_DYNAMIC_KEY";a[a.DYNAMIC_USE_STATIC_KEY=15]="DYNAMIC_USE_STATIC_KEY";a[a.USER_OVERLOAD=16]="USER_OVERLOAD";a[a.FORBIDDEN_REGION=18]="FORBIDDEN_REGION";a[a.CANNOT_MEET_AREA_DEMAND=19]="CANNOT_MEET_AREA_DEMAND"})(Va||(Va={}));(function(a){a[a.NO_FLAG_SET=100]="NO_FLAG_SET";a[a.FLAG_SET_BUT_EMPTY=101]="FLAG_SET_BUT_EMPTY";a[a.INVALID_FALG_SET=102]="INVALID_FALG_SET";a[a.NO_SERVICE_AVAILABLE=200]="NO_SERVICE_AVAILABLE";
                    a[a.NO_SERVICE_AVAILABLE_P2P=201]="NO_SERVICE_AVAILABLE_P2P";a[a.NO_SERVICE_AVAILABLE_VOICE=202]="NO_SERVICE_AVAILABLE_VOICE";a[a.NO_SERVICE_AVAILABLE_WEBRTC=203]="NO_SERVICE_AVAILABLE_WEBRTC";a[a.NO_SERVICE_AVAILABLE_CDS=204]="NO_SERVICE_AVAILABLE_CDS";a[a.NO_SERVICE_AVAILABLE_CDN=205]="NO_SERVICE_AVAILABLE_CDN";a[a.NO_SERVICE_AVAILABLE_TDS=206]="NO_SERVICE_AVAILABLE_TDS";a[a.NO_SERVICE_AVAILABLE_REPORT=207]="NO_SERVICE_AVAILABLE_REPORT";a[a.NO_SERVICE_AVAILABLE_APP_CENTER=208]="NO_SERVICE_AVAILABLE_APP_CENTER";
                    a[a.NO_SERVICE_AVAILABLE_ENV0=209]="NO_SERVICE_AVAILABLE_ENV0";a[a.NO_SERVICE_AVAILABLE_VOET=210]="NO_SERVICE_AVAILABLE_VOET";a[a.NO_SERVICE_AVAILABLE_STRING_UID=211]="NO_SERVICE_AVAILABLE_STRING_UID";a[a.NO_SERVICE_AVAILABLE_WEBRTC_UNILBS=212]="NO_SERVICE_AVAILABLE_WEBRTC_UNILBS";a[a.NO_SERVICE_AVAILABLE_UNILBS_FLV=213]="NO_SERVICE_AVAILABLE_UNILBS_FLV"})(Fa||(Fa={}));(function(a){a[a.K_TIMESTAMP_EXPIRED=2]="K_TIMESTAMP_EXPIRED";a[a.K_CHANNEL_PERMISSION_INVALID=3]="K_CHANNEL_PERMISSION_INVALID";
                    a[a.K_CERTIFICATE_INVALID=4]="K_CERTIFICATE_INVALID";a[a.K_CHANNEL_NAME_EMPTY=5]="K_CHANNEL_NAME_EMPTY";a[a.K_CHANNEL_NOT_FOUND=6]="K_CHANNEL_NOT_FOUND";a[a.K_TICKET_INVALID=7]="K_TICKET_INVALID";a[a.K_CHANNEL_CONFLICTED=8]="K_CHANNEL_CONFLICTED";a[a.K_SERVICE_NOT_READY=9]="K_SERVICE_NOT_READY";a[a.K_SERVICE_TOO_HEAVY=10]="K_SERVICE_TOO_HEAVY";a[a.K_UID_BANNED=14]="K_UID_BANNED";a[a.K_IP_BANNED=15]="K_IP_BANNED";a[a.K_CHANNEL_BANNED=16]="K_CHANNEL_BANNED";a[a.WARN_NO_AVAILABLE_CHANNEL=103]="WARN_NO_AVAILABLE_CHANNEL";
                    a[a.WARN_LOOKUP_CHANNEL_TIMEOUT=104]="WARN_LOOKUP_CHANNEL_TIMEOUT";a[a.WARN_LOOKUP_CHANNEL_REJECTED=105]="WARN_LOOKUP_CHANNEL_REJECTED";a[a.WARN_OPEN_CHANNEL_TIMEOUT=106]="WARN_OPEN_CHANNEL_TIMEOUT";a[a.WARN_OPEN_CHANNEL_REJECTED=107]="WARN_OPEN_CHANNEL_REJECTED";a[a.WARN_REQUEST_DEFERRED=108]="WARN_REQUEST_DEFERRED";a[a.ERR_DYNAMIC_KEY_TIMEOUT=109]="ERR_DYNAMIC_KEY_TIMEOUT";a[a.ERR_NO_AUTHORIZED=110]="ERR_NO_AUTHORIZED";a[a.ERR_VOM_SERVICE_UNAVAILABLE=111]="ERR_VOM_SERVICE_UNAVAILABLE";a[a.ERR_NO_CHANNEL_AVAILABLE_CODE=
                        112]="ERR_NO_CHANNEL_AVAILABLE_CODE";a[a.ERR_MASTER_VOCS_UNAVAILABLE=114]="ERR_MASTER_VOCS_UNAVAILABLE";a[a.ERR_INTERNAL_ERROR=115]="ERR_INTERNAL_ERROR";a[a.ERR_NO_ACTIVE_STATUS=116]="ERR_NO_ACTIVE_STATUS";a[a.ERR_INVALID_UID=117]="ERR_INVALID_UID";a[a.ERR_DYNAMIC_KEY_EXPIRED=118]="ERR_DYNAMIC_KEY_EXPIRED";a[a.ERR_STATIC_USE_DYANMIC_KE=119]="ERR_STATIC_USE_DYANMIC_KE";a[a.ERR_DYNAMIC_USE_STATIC_KE=120]="ERR_DYNAMIC_USE_STATIC_KE";a[a.ERR_NO_VOCS_AVAILABLE=2E3]="ERR_NO_VOCS_AVAILABLE";a[a.ERR_NO_VOS_AVAILABLE=
                        2001]="ERR_NO_VOS_AVAILABLE";a[a.ERR_JOIN_CHANNEL_TIMEOUT=2002]="ERR_JOIN_CHANNEL_TIMEOUT";a[a.ERR_REPEAT_JOIN_CHANNEL=2003]="ERR_REPEAT_JOIN_CHANNEL";a[a.ERR_JOIN_BY_MULTI_IP=2004]="ERR_JOIN_BY_MULTI_IP";a[a.ERR_NOT_JOINED=2011]="ERR_NOT_JOINED";a[a.ERR_REPEAT_JOIN_REQUEST=2012]="ERR_REPEAT_JOIN_REQUEST";a[a.ERR_INVALID_VENDOR_KEY=2013]="ERR_INVALID_VENDOR_KEY";a[a.ERR_INVALID_CHANNEL_NAME=2014]="ERR_INVALID_CHANNEL_NAME";a[a.ERR_INVALID_STRINGUID=2015]="ERR_INVALID_STRINGUID";a[a.ERR_TOO_MANY_USERS=
                        2016]="ERR_TOO_MANY_USERS";a[a.ERR_SET_CLIENT_ROLE_TIMEOUT=2017]="ERR_SET_CLIENT_ROLE_TIMEOUT";a[a.ERR_SET_CLIENT_ROLE_NO_PERMISSION=2018]="ERR_SET_CLIENT_ROLE_NO_PERMISSION";a[a.ERR_SET_CLIENT_ROLE_ALREADY_IN_USE=2019]="ERR_SET_CLIENT_ROLE_ALREADY_IN_USE";a[a.ERR_PUBLISH_REQUEST_INVALID=2020]="ERR_PUBLISH_REQUEST_INVALID";a[a.ERR_SUBSCRIBE_REQUEST_INVALID=2021]="ERR_SUBSCRIBE_REQUEST_INVALID";a[a.ERR_NOT_SUPPORTED_MESSAGE=2022]="ERR_NOT_SUPPORTED_MESSAGE";a[a.ERR_ILLEAGAL_PLUGIN=2023]="ERR_ILLEAGAL_PLUGIN";
                    a[a.ERR_REJOIN_TOKEN_INVALID=2024]="ERR_REJOIN_TOKEN_INVALID";a[a.ERR_REJOIN_USER_NOT_JOINED=2025]="ERR_REJOIN_USER_NOT_JOINED";a[a.ERR_INVALID_OPTIONAL_INFO=2027]="ERR_INVALID_OPTIONAL_INFO";a[a.ILLEGAL_AES_PASSWORD=2028]="ILLEGAL_AES_PASSWORD";a[a.ERR_TEST_RECOVER=9E3]="ERR_TEST_RECOVER";a[a.ERR_TEST_TRYNEXT=9001]="ERR_TEST_TRYNEXT";a[a.ERR_TEST_RETRY=9002]="ERR_TEST_RETRY"})(C||(C={}));(function(a){a.CONNECTION_STATE_CHANGE="connection-state-change";a.MEDIA_RECONNECT_START="media-reconnect-start";
                    a.MEDIA_RECONNECT_END="media-reconnect-end";a.USER_JOINED="user-joined";a.USER_LEAVED="user-left";a.USER_PUBLISHED="user-published";a.USER_UNPUBLISHED="user-unpublished";a.USER_INFO_UPDATED="user-info-updated";a.CLIENT_BANNED="client-banned";a.CHANNEL_MEDIA_RELAY_STATE="channel-media-relay-state";a.CHANNEL_MEDIA_RELAY_EVENT="channel-media-relay-event";a.VOLUME_INDICATOR="volume-indicator";a.CRYPT_ERROR="crypt-error";a.ON_TOKEN_PRIVILEGE_WILL_EXPIRE="token-privilege-will-expire";a.ON_TOKEN_PRIVILEGE_DID_EXPIRE=
                        "token-privilege-did-expire";a.NETWORK_QUALITY="network-quality";a.STREAM_TYPE_CHANGED="stream-type-changed";a.STREAM_FALLBACK="stream-fallback";a.RECEIVE_METADATA="receive-metadata";a.STREAM_MESSAGE="stream-message";a.LIVE_STREAMING_ERROR="live-streaming-error";a.LIVE_STREAMING_WARNING="live-streaming-warning";a.INJECT_STREAM_STATUS="stream-inject-status";a.EXCEPTION="exception";a.ERROR="error"})(P||(P={}));(function(a){a.CONNECTING="connecting";a.CONNECTED="connected";a.RECONNECTING="reconnecting";
                    a.CLOSED="closed"})(ta||(ta={}));(function(a){a.WS_CONNECTED="ws_connected";a.WS_RECONNECTING="ws_reconnecting";a.WS_CLOSED="ws_closed";a.ON_BINARY_DATA="on_binary_data";a.REQUEST_RECOVER="request_recover";a.REQUEST_JOIN_INFO="request_join_info";a.REQUEST_REJOIN_INFO="req_rejoin_info";a.IS_P2P_DISCONNECTED="is_p2p_dis";a.DISCONNECT_P2P="dis_p2p";a.NEED_RENEW_SESSION="need-sid";a.REPORT_JOIN_GATEWAY="report_join_gateway";a.REQUEST_TIMEOUT="request_timeout";a.REQUEST_SUCCESS="request_success"})(N||
                    (N={}));(function(a){a.PING="ping";a.PING_BACK="ping_back";a.JOIN="join_v2";a.REJOIN="rejoin";a.LEAVE="leave";a.SET_CLIENT_ROLE="set_client_role";a.PUBLISH="publish";a.UNPUBLISH="unpublish";a.SUBSCRIBE="subscribe";a.UNSUBSCRIBE="unsubscribe";a.SUBSCRIBE_CHANGE="subscribe_change";a.TRAFFIC_STATS="traffic_stats";a.RENEW_TOKEN="renew_token";a.SWITCH_VIDEO_STREAM="switch_video_stream";a.SET_FALLBACK_OPTION="set_fallback_option";a.GATEWAY_INFO="gateway_info";a.CONTROL="control";a.SEND_METADATA="send_metadata";
                    a.DATA_STREAM="data_stream"})(ca||(ca={}));(function(a){a.PUBLISH_STATS="publish_stats";a.PUBLISH_RELATED_STATS="publish_related_stats";a.SUBSCRIBE_STATS="subscribe_stats";a.SUBSCRIBE_RELATED_STATS="subscribe_related_stats"})(wb||(wb={}));(function(a){a.ON_USER_ONLINE="on_user_online";a.ON_USER_OFFLINE="on_user_offline";a.ON_STREAM_FALLBACK_UPDATE="on_stream_fallback_update";a.ON_PUBLISH_STREAM="on_publish_stream";a.ON_UPLINK_STATS="on_uplink_stats";a.ON_P2P_LOST="on_p2p_lost";a.ON_REMOVE_STREAM=
                    "on_remove_stream";a.ON_ADD_AUDIO_STREAM="on_add_audio_stream";a.ON_ADD_VIDEO_STREAM="on_add_video_stream";a.ON_TOKEN_PRIVILEGE_WILL_EXPIRE="on_token_privilege_will_expire";a.ON_TOKEN_PRIVILEGE_DID_EXPIRE="on_token_privilege_did_expire";a.ON_USER_BANNED="on_user_banned";a.ON_NOTIFICATION="on_notification";a.ON_CRYPT_ERROR="on_crypt_error";a.MUTE_AUDIO="mute_audio";a.MUTE_VIDEO="mute_video";a.UNMUTE_AUDIO="unmute_audio";a.UNMUTE_VIDEO="unmute_video";a.RECEIVE_METADATA="receive_metadata";a.ON_DATA_STREAM=
                    "on_data_stream";a.ENABLE_LOCAL_VIDEO="enable_local_video";a.DISABLE_LOCAL_VIDEO="disable_local_video";a.ENABLE_LOCAL_AUDIO="enable_local_audio";a.DISABLE_LOCAL_AUDIO="disable_local_audio"})(Y||(Y={}));(function(a){a.CONNECTION_STATE_CHANGE="CONNECTION_STATE_CHANGE";a.NEED_ANSWER="NEED_ANSWER";a.NEED_RENEGOTIATE="NEED_RENEGOTIATE";a.P2P_LOST="P2P_LOST";a.GATEWAY_P2P_LOST="GATEWAY_P2P_LOST";a.NEED_UNPUB="NEED_UNPUB";a.NEED_UNSUB="NEED_UNSUB";a.NEED_UPLOAD="NEED_UPLOAD";a.START_RECONNECT="START_RECONNECT";
                    a.END_RECONNECT="END_RECONNECT";a.NEED_SIGNAL_RTT="NEED_SIGNAL_RTT"})(G||(G={}));(function(a){a.AUDIO_SOURCE_STATE_CHANGE="audio_source_state_change";a.RECEIVE_TRACK_BUFFER="receive_track_buffer";a.ON_AUDIO_BUFFER="on_audio_buffer"})(lb||(lb={}));let te={sendVolumeLevel:0,sendBitrate:0,sendBytes:0,sendPackets:0,sendPacketsLost:0},ue={sendBytes:0,sendBitrate:0,sendPackets:0,sendPacketsLost:0,sendResolutionHeight:0,sendResolutionWidth:0,captureResolutionHeight:0,captureResolutionWidth:0,targetSendBitrate:0,
                    totalDuration:0,totalFreezeTime:0},gg={transportDelay:0,end2EndDelay:0,receiveBitrate:0,receiveLevel:0,receiveBytes:0,receiveDelay:0,receivePackets:0,receivePacketsLost:0,totalDuration:0,totalFreezeTime:0,freezeRate:0,packetLossRate:0,publishDuration:-1},yk={uplinkNetworkQuality:0,downlinkNetworkQuality:0},hg={transportDelay:0,end2EndDelay:0,receiveBitrate:0,receiveBytes:0,receiveDelay:0,receivePackets:0,receivePacketsLost:0,receiveResolutionHeight:0,receiveResolutionWidth:0,totalDuration:0,totalFreezeTime:0,
                    freezeRate:0,packetLossRate:0,publishDuration:-1};var T,na;!function(a){a.CONNECTED="websocket:connected";a.RECONNECTING="websocket:reconnecting";a.WILL_RECONNECT="websocket:will_reconnect";a.CLOSED="websocket:closed";a.FAILED="websocket:failed";a.ON_MESSAGE="websocket:on_message";a.REQUEST_NEW_URLS="websocket:request_new_urls"}(T||(T={}));(function(a){a.TRANSCODE="mix_streaming";a.RAW="raw_streaming";a.INJECT="inject_streaming"})(na||(na={}));let ip={alpha:1,height:640,width:360,x:0,y:0,zOrder:0,
                    audioChannel:0},ig={x:0,y:0,width:160,height:160,zOrder:255,alpha:1},jp={audioBitrate:48,audioChannels:1,audioSampleRate:48E3,backgroundColor:0,height:360,lowLatency:!1,videoBitrate:400,videoCodecProfile:100,videoCodecType:1,videoFrameRate:15,videoGop:30,width:640,images:[],userConfigs:[],userConfigExtraInfo:""},kp={audioBitrate:48,audioChannels:2,audioVolume:100,audioSampleRate:48E3,height:0,width:0,videoBitrate:400,videoFramerate:15,videoGop:30};var mb,Rc,ka,zk,Ga,ya,K,nb,vd,ve;!function(a){a.WARNING=
                    "@live_uap-warning";a.ERROR="@line_uap-error";a.PUBLISH_STREAM_STATUS="@live_uap-publish-status";a.INJECT_STREAM_STATUS="@live_uap-inject-status";a.WORKER_STATUS="@live_uap-worker-status";a.REQUEST_NEW_ADDRESS="@live_uap-request-address"}(mb||(mb={}));(Rc||(Rc={})).REQUEST_WORKER_MANAGER_LIST="@live_req_worker_manager";(function(a){a[a.LIVE_STREAM_RESPONSE_SUCCEED=200]="LIVE_STREAM_RESPONSE_SUCCEED";a[a.LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM=454]="LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM";a[a.LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR=
                    450]="LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR";a[a.LIVE_STREAM_RESPONSE_BAD_STREAM=451]="LIVE_STREAM_RESPONSE_BAD_STREAM";a[a.LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR=400]="LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR";a[a.LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST=404]="LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST";a[a.LIVE_STREAM_RESPONSE_NOT_AUTHORIZED=456]="LIVE_STREAM_RESPONSE_NOT_AUTHORIZED";a[a.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE=457]="LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE";a[a.LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN=
                    429]="LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN";a[a.LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH=452]="LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH";a[a.LIVE_STREAM_RESPONSE_NOT_SUPPORTED=453]="LIVE_STREAM_RESPONSE_NOT_SUPPORTED";a[a.LIVE_STREAM_RESPONSE_MAX_STREAM_NUM=455]="LIVE_STREAM_RESPONSE_MAX_STREAM_NUM";a[a.LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR=500]="LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR";a[a.LIVE_STREAM_RESPONSE_WORKER_LOST=501]="LIVE_STREAM_RESPONSE_WORKER_LOST";a[a.LIVE_STREAM_RESPONSE_RESOURCE_LIMIT=
                    502]="LIVE_STREAM_RESPONSE_RESOURCE_LIMIT";a[a.LIVE_STREAM_RESPONSE_WORKER_QUIT=503]="LIVE_STREAM_RESPONSE_WORKER_QUIT";a[a.ERROR_FAIL_SEND_MESSAGE=504]="ERROR_FAIL_SEND_MESSAGE";a[a.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE=30]="PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE";a[a.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT=31]="PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT";a[a.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH=32]="PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH";a[a.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN=
                    33]="PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN"})(ka||(ka={}));(function(a){a.CONNECT_FAILED="connect failed";a.CONNECT_TIMEOUT="connect timeout";a.WS_DISCONNECTED="websocket disconnected";a.REQUEST_TIMEOUT="request timeout";a.REQUEST_FAILED="request failed";a.WAIT_STATUS_TIMEOUT="wait status timeout";a.WAIT_STATUS_ERROR="wait status error";a.BAD_STATE="bad state";a.WS_ABORT="ws abort";a.AP_REQUEST_TIMEOUT="AP request timeout";a.AP_JSON_PARSE_ERROR="AP json parse error";a.AP_REQUEST_ERROR="AP request error";
                    a.AP_REQUEST_ABORT="AP request abort"})(zk||(zk={}));(function(a){a[a.SetSdkProfile=0]="SetSdkProfile";a[a.SetSourceChannel=1]="SetSourceChannel";a[a.SetSourceUserId=2]="SetSourceUserId";a[a.SetDestChannel=3]="SetDestChannel";a[a.StartPacketTransfer=4]="StartPacketTransfer";a[a.StopPacketTransfer=5]="StopPacketTransfer";a[a.UpdateDestChannel=6]="UpdateDestChannel";a[a.Reconnect=7]="Reconnect";a[a.SetVideoProfile=8]="SetVideoProfile"})(Ga||(Ga={}));(function(a){a.DISCONNECT="disconnect";a.CONNECTION_STATE_CHANGE=
                    "connection-state-change";a.NETWORK_QUALITY="network-quality";a.STREAM_TYPE_CHANGE="stream-type-change";a.IS_P2P_DISCONNECTED="is-p2p-dis";a.DISCONNECT_P2P="dis-p2p";a.REQUEST_NEW_GATEWAY_LIST="req-gate-url";a.NEED_RENEW_SESSION="need-sid"})(ya||(ya={}));(function(a){a.NEED_RENEGOTIATE="@need_renegotiate";a.NEED_REPLACE_TRACK="@need_replace_track";a.NEED_CLOSE="@need_close";a.NEED_ADD_TRACK="@need_add_track";a.NEED_REMOVE_TRACK="@need_remove_track";a.NEED_SESSION_ID="@need_sid";a.SET_OPTIMIZATION_MODE=
                    "@set_optimization_mode";a.GET_STATS="@get_stats";a.GET_LOW_VIDEO_TRACK="@get_low_video_track"})(K||(K={}));(function(a){a.SCREEN_TRACK="screen_track";a.LOW_STREAM="low_stream"})(nb||(nb={}));(function(a){a.SOURCE_STATE_CHANGE="source-state-change";a.TRACK_ENDED="track-ended";a.BEAUTY_EFFECT_OVERLOAD="beauty-effect-overload"})(vd||(vd={}));(ve||(ve={})).FIRST_FRAME_DECODED="first-frame-decoded";let Ak="AFRICA ASIA CHINA EUROPE GLOBAL INDIA JAPAN NORTH_AMERICA OCEANIA OVERSEA SOUTH_AMERICA".split(" "),
                    we={CHINA:{},ASIA:{CODE:"AS",WEBCS_DOMAIN:["ap-web-1-asia.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-asia.agora.io"],PROXY_CS:["proxy-ap-web-asia.agora.io"],CDS_AP:["cds-ap-web-asia.agora.io","cds-ap-web-asia2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-asia.agora.io","sua-ap-web-asia2.agora.io"],UAP_AP:["uap-ap-web-asia.agora.io","uap-ap-web-asia2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-asia.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-asia.agora.io"],LOG_UPLOAD_SERVER:["logservice-asia.agora.io"]},
                        NORTH_AMERICA:{CODE:"NA",WEBCS_DOMAIN:["ap-web-1-north-america.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-north-america.agora.io"],PROXY_CS:["proxy-ap-web-america.agora.io"],CDS_AP:["cds-ap-web-america.agora.io","cds-ap-web-america2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-america.agora.io","sua-ap-web-america2.agora.io"],UAP_AP:["uap-ap-web-america.agora.io","uap-ap-web-america2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-north-america.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-north-america.agora.io"],
                            LOG_UPLOAD_SERVER:["logservice-north-america.agora.io"]},EUROPE:{CODE:"EU",WEBCS_DOMAIN:["ap-web-1-europe.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-europe.agora.io"],PROXY_CS:["proxy-ap-web-europe.agora.io"],CDS_AP:["cds-ap-web-europe.agora.io","cds-ap-web-europe2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-europe.agora.io","sua-ap-web-europe.agora.io"],UAP_AP:["uap-ap-web-europe.agora.io","uap-ap-web-europe2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-europe.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-europe.agora.io"],
                            LOG_UPLOAD_SERVER:["logservice-europe.agora.io"]},JAPAN:{CODE:"JP",WEBCS_DOMAIN:["ap-web-1-japan.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-japan.agora.io"],PROXY_CS:["proxy-ap-web-japan.agora.io"],CDS_AP:["cds-ap-web-japan.agora.io","cds-ap-web-japan2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-japan.agora.io","sua-ap-web-japan2.agora.io"],UAP_AP:["uap-ap-web-japan.agora.io","\tuap-ap-web-japan2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-japan.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-japan.agora.io"],
                            LOG_UPLOAD_SERVER:["logservice-japan.agora.io"]},INDIA:{CODE:"IN",WEBCS_DOMAIN:["ap-web-1-india.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-india.agora.io"],PROXY_CS:["proxy-ap-web-india.agora.io"],CDS_AP:["cds-ap-web-india.agora.io","cds-ap-web-india2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-india.agora.io","sua-ap-web-india2.agora.io"],UAP_AP:["uap-ap-web-india.agora.io","uap-ap-web-india2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-india.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-india.agora.io"],
                            LOG_UPLOAD_SERVER:["logservice-india.agora.io"]},OVERSEA:{CODE:"OVERSEA",WEBCS_DOMAIN:["ap-web-1-oversea.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-oversea.agora.io"],PROXY_CS:["proxy-ap-web-oversea.agora.io"],CDS_AP:["cds-ap-web-oversea.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-oversea.agora.io"],UAP_AP:["uap-ap-web-oversea.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-oversea.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-oversea.agora.io"],LOG_UPLOAD_SERVER:["logservice-oversea.agora.io"]},
                        GLOBAL:{CODE:"GLOBAL",WEBCS_DOMAIN:["webrtc2-ap-web-1.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["webrtc2-ap-web-3.agora.io"],PROXY_CS:["ap-proxy-1.agora.io","ap-proxy-2.agora.io"],CDS_AP:["cds-ap-web-1.agora.io","cds-ap-web-3.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-1.agora.io","sua-ap-web-3.agora.io"],UAP_AP:["uap-ap-web-1.agora.io","uap-ap-web-3.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2.agora.io"],LOG_UPLOAD_SERVER:["logservice.agora.io"]},
                        OCEANIA:{CODE:"OC",WEBCS_DOMAIN:["ap-web-1-oceania.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-oceania.agora.io"],PROXY_CS:["proxy-ap-web-oceania.agora.io"],CDS_AP:["cds-ap-web-oceania.agora.io","cds-ap-web-oceania2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-oceania.agora.io","sua-ap-web-oceania2.agora.io"],UAP_AP:["uap-ap-web-oceania.agora.io","uap-ap-web-oceania2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-oceania.agora.io"],EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-oceania.agora.io"],
                            LOG_UPLOAD_SERVER:["logservice-oceania.agora.io"]},SOUTH_AMERICA:{CODE:"SA",WEBCS_DOMAIN:["ap-web-1-south-america.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-south-america.agora.io"],PROXY_CS:["proxy-ap-web-south-america.agora.io"],CDS_AP:["cds-ap-web-south-america.agora.io","cds-ap-web-south-america2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-south-america.agora.io","sua-ap-web-south-america2.agora.io"],UAP_AP:["uap-ap-web-south-america.agora.io","uap-ap-web-south-america2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-south-america.agora.io"],
                            EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-south-america.agora.io"],LOG_UPLOAD_SERVER:["logservice-south-america.agora.io"]},AFRICA:{CODE:"AF",WEBCS_DOMAIN:["ap-web-1-africa.agora.io"],WEBCS_DOMAIN_BACKUP_LIST:["ap-web-2-africa.agora.io"],PROXY_CS:["proxy-ap-web-africa.agora.io"],CDS_AP:["cds-ap-web-africa.agora.io","cds-ap-web-africa2.agora.io"],ACCOUNT_REGISTER:["sua-ap-web-africa.agora.io","sua-ap-web-africa2.agora.io"],UAP_AP:["uap-ap-web-africa.agora.io","uap-ap-web-africa2.agora.io"],EVENT_REPORT_DOMAIN:["statscollector-1-africa.agora.io"],
                            EVENT_REPORT_BACKUP_DOMAIN:["statscollector-2-africa.agora.io"],LOG_UPLOAD_SERVER:["logservice-south-africa.agora.io"]}};yc&&(we.CHINA={CODE:"CN",WEBCS_DOMAIN:["webrtc2-ap-web-2.agoraio.cn"],WEBCS_DOMAIN_BACKUP_LIST:["webrtc2-ap-web-4.agoraio.cn"],PROXY_CS:["proxy-ap-web.agoraio.cn"],CDS_AP:["cds-ap-web-2.agoraio.cn","cds-ap-web-4.agoraio.cn"],ACCOUNT_REGISTER:["sua-ap-web-2.agoraio.cn","sua-ap-web-4.agoraio.cn"],UAP_AP:["uap-ap-web-2.agoraio.cn","uap-ap-web-4.agoraio.cn"],EVENT_REPORT_DOMAIN:["statscollector-3.agoraio.cn"],
                    EVENT_REPORT_BACKUP_DOMAIN:["statscollector-4.agoraio.cn"],LOG_UPLOAD_SERVER:["logservice-china.agora.io"]});let fa={getDisplayMedia:!1,getStreamFromExtension:!1,supportUnifiedPlan:!1,supportMinBitrate:!1,supportSetRtpSenderParameters:!1,supportDualStream:!0,webAudioMediaStreamDest:!1,supportReplaceTrack:!1,supportWebGL:!1,webAudioWithAEC:!1,supportRequestFrame:!1,supportShareAudio:!1};M({target:"Object",stat:!0,forced:!ma,sham:!ma},{defineProperties:Pi});var Sa=Oa(function(a){var b=ha.Object;a=a.exports=
                    function(a,e){return b.defineProperties(a,e)};b.defineProperties.sham&&(a.sham=!0)}),lp=ce.concat("length","prototype"),jg={f:Object.getOwnPropertyNames||function(a){return Oi(a,lp)}},mp=Qb("Reflect","ownKeys")||function(a){var b=jg.f(Qa(a)),d=ld.f;return d?b.concat(d(a)):b};M({target:"Object",stat:!0,sham:!ma},{getOwnPropertyDescriptors:function(a){var b,d;a=ib(a);for(var e=Hc,f=mp(a),g={},k=0;f.length>k;)void 0!==(d=e(a,b=f[k++]))&&nc(g,b,d);return g}});var ja=ha.Object.getOwnPropertyDescriptors,
                    Bk=jg.f,np={}.toString,Ck="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],Dk=function(a){if(Ck&&"[object Window]"==np.call(a))try{var b=Bk(a)}catch(d){b=Ck.slice()}else b=Bk(ib(a));return b},Ek={f:va},op=jb.f,Wa=$d("hidden"),Fk=va("toPrimitive"),pp=fb.set,Gk=fb.getterFor("Symbol"),xb=Object.prototype,Xa=J.Symbol,wd=Qb("JSON","stringify"),Hk=Hc,bc=jb.f,Ik=Dk,qp=Sd,Vb=Rb("symbols"),xd=Rb("op-symbols"),kg=Rb("string-to-symbol-registry"),lg=Rb("symbol-to-string-registry"),
                    rp=Rb("wks"),mg=J.QObject,ng=!mg||!mg.prototype||!mg.prototype.findChild,og=ma&&ra(function(){return 7!=mc(bc({},"a",{get:function(){return bc(this,"a",{value:7}).a}})).a})?function(a,b,d){var e=Hk(xb,b);e&&delete xb[b];bc(a,b,d);e&&a!==xb&&bc(xb,b,e)}:bc,Jk=function(a,b){var d=Vb[a]=mc(Xa.prototype);return pp(d,{type:"Symbol",tag:a,description:b}),ma||(d.description=b),d},pg=Hb&&"symbol"==typeof Xa.iterator?function(a){return"symbol"==typeof a}:function(a){return Object(a)instanceof Xa},xe=function(a,
b,d){a===xb&&xe(xd,b,d);Qa(a);b=Fc(b,!0);return Qa(d),V(Vb,b)?(d.enumerable?(V(a,Wa)&&a[Wa][b]&&(a[Wa][b]=!1),d=mc(d,{enumerable:hc(0,!1)})):(V(a,Wa)||bc(a,Wa,hc(1,{})),a[Wa][b]=!0),og(a,b,d)):bc(a,b,d)},Lk=function(a,b){Qa(a);var d=ib(b);b=$b(d).concat(qg(d));return Kc(b,function(b){ma&&!Kk.call(d,b)||xe(a,b,d[b])}),a},Kk=function(a){a=Fc(a,!0);var b=qp.call(this,a);return!(this===xb&&V(Vb,a)&&!V(xd,a))&&(!(b||!V(this,a)||!V(Vb,a)||V(this,Wa)&&this[Wa][a])||b)},Mk=function(a,b){a=ib(a);b=Fc(b,!0);
                        if(a!==xb||!V(Vb,b)||V(xd,b)){var d=Hk(a,b);return!d||!V(Vb,b)||V(a,Wa)&&a[Wa][b]||(d.enumerable=!0),d}},Nk=function(a){a=Ik(ib(a));var b=[];return Kc(a,function(a){V(Vb,a)||V(Jc,a)||b.push(a)}),b},qg=function(a){var b=a===xb;a=Ik(b?xd:ib(a));var d=[];return Kc(a,function(a){!V(Vb,a)||b&&!V(xb,a)||d.push(Vb[a])}),d};if(Hb||(Xa=function(){if(this instanceof Xa)throw TypeError("Symbol is not a constructor");var a=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,b=Wd(a),d=function(a){this===
                xb&&d.call(xd,a);V(this,Wa)&&V(this[Wa],b)&&(this[Wa][b]=!1);og(this,b,hc(1,a))};return ma&&ng&&og(xb,b,{configurable:!0,set:d}),Jk(b,a)},yf(Xa.prototype,"toString",function(){return Gk(this).tag}),Sd=Kk,jb.f=xe,Hc=Mk,jg.f=Dk=Nk,ld.f=qg,ma&&bc(Xa.prototype,"description",{configurable:!0,get:function(){return Gk(this).description}})),Ei||(Ek.f=function(a){return Jk(va(a),a)}),M({global:!0,wrap:!0,forced:!Hb,sham:!Hb},{Symbol:Xa}),Kc($b(rp),function(a){var b=ha.Symbol||(ha.Symbol={});V(b,a)||op(b,a,
                    {value:Ek.f(a)})}),M({target:"Symbol",stat:!0,forced:!Hb},{for:function(a){a=String(a);if(V(kg,a))return kg[a];var b=Xa(a);return kg[a]=b,lg[b]=a,b},keyFor:function(a){if(!pg(a))throw TypeError(a+" is not a symbol");if(V(lg,a))return lg[a]},useSetter:function(){ng=!0},useSimple:function(){ng=!1}}),M({target:"Object",stat:!0,forced:!Hb,sham:!ma},{create:function(a,b){return void 0===b?mc(a):Lk(mc(a),b)},defineProperty:xe,defineProperties:Lk,getOwnPropertyDescriptor:Mk}),M({target:"Object",stat:!0,
                    forced:!Hb},{getOwnPropertyNames:Nk,getOwnPropertySymbols:qg}),M({target:"Object",stat:!0,forced:ra(function(){ld.f(1)})},{getOwnPropertySymbols:function(a){return ld.f(ub(a))}}),wd){var sp=!Hb||ra(function(){var a=Xa();return"[null]"!=wd([a])||"{}"!=wd({a})||"{}"!=wd(Object(a))});M({target:"JSON",stat:!0,forced:sp},{stringify:function(a,b,d){for(var e,f=[a],g=1;arguments.length>g;)f.push(arguments[g++]);if(e=b,(za(b)||void 0!==a)&&!pg(a))return kc(b)||(b=function(a,b){if("function"==typeof e&&(b=
                        e.call(this,a,b)),!pg(b))return b}),f[1]=b,wd.apply(null,f)}})}Xa.prototype[Fk]||sb(Xa.prototype,Fk,Xa.prototype.valueOf);id(Xa,"Symbol");Jc[Wa]=!0;var ia=ha.Object.getOwnPropertySymbols,Ra=function(a,b,d){return b in a?hj(a,b,{value:d,enumerable:!0,configurable:!0,writable:!0}):a[b]=d,a},tp=Da("Array").values,Ok=Array.prototype,up={DOMTokenList:!0,NodeList:!0},sc=function(a){var b=a.values;return a===Ok||a instanceof Array&&b===Ok.values||up.hasOwnProperty(Zd(a))?tp:b},vp=!uj(function(a){Array.from(a)});
                M({target:"Array",stat:!0,forced:vp},{from:function(a){var b=ub(a);var d="function"==typeof this?this:Array;var e=arguments.length;var f=1<e?arguments[1]:void 0,g=void 0!==f,k=0;var q=Hi(b);if(g&&(f=jc(f,2<e?arguments[2]:void 0,2)),null==q||d==Array&&Fi(q))for(d=new d(e=tb(b.length));e>k;k++)nc(d,k,g?f(b[k],k):b[k]);else for(e=(b=q.call(b)).next,d=new d;!(q=e.call(b)).done;k++)nc(d,k,g?Ii(b,f,[q.value,k],!0):q.value);return d.length=k,d}});var Ob=ha.Array.from;M({target:"Date",stat:!0},{now:function(){return(new Date).getTime()}});
                var v=ha.Date.now;class Ya{constructor(){this._events={};this.addListener=this.on}getListeners(a){var b;return this._events[a]?A(b=this._events[a]).call(b,a=>a.listener):[]}on(a,b){this._events[a]||(this._events[a]=[]);a=this._events[a];-1===this._indexOfListener(a,b)&&a.push({listener:b,once:!1})}once(a,b){this._events[a]||(this._events[a]=[]);a=this._events[a];-1===this._indexOfListener(a,b)&&a.push({listener:b,once:!0})}off(a,b){if(this._events[a]){var d=this._events[a];b=this._indexOfListener(d,
                    b);-1!==b&&Ja(d).call(d,b,1);0===this._events[a].length&&delete this._events[a]}}removeAllListeners(a){a?delete this._events[a]:this._events={}}emit(a,...b){var d;this._events[a]||(this._events[a]=[]);let e=A(d=this._events[a]).call(d,a=>a);for(d=0;d<e.length;d+=1){let f=e[d];f.once&&this.off(a,f.listener);f.listener.apply(this,b||[])}}_indexOfListener(a,b){let d=a.length;for(;d--;)if(a[d].listener===b)return d;return-1}}class wp extends Ya{constructor(){super(...arguments);this.resultStorage=new Z}setLocalAudioStats(a,
b,d){this.record("AUDIO_INPUT_LEVEL_TOO_LOW",a,this.checkAudioInputLevel(d));this.record("SEND_AUDIO_BITRATE_TOO_LOW",a,this.checkSendAudioBitrate(d))}setLocalVideoStats(a,b,d){this.record("SEND_VIDEO_BITRATE_TOO_LOW",a,this.checkSendVideoBitrate(d));this.record("FRAMERATE_INPUT_TOO_LOW",a,this.checkFramerateInput(d,b));this.record("FRAMERATE_SENT_TOO_LOW",a,this.checkFramerateSent(d))}setRemoteAudioStats(a,b){a=a.getUserId();this.record("AUDIO_OUTPUT_LEVEL_TOO_LOW",a,this.checkAudioOutputLevel(b))}setRemoteVideoStats(a,
b){a=a.getUserId();this.record("RECV_VIDEO_DECODE_FAILED",a,this.checkVideoDecode(b))}record(a,b,d){this.resultStorage.has(a)||this.resultStorage.set(a,{result:[],isPrevNormal:!0});let e=this.resultStorage.get(a);if(e&&(e.result.push(d),5<=e.result.length)){var f;d=Aa(f=e.result).call(f,!0);e.isPrevNormal&&!d&&this.emit("exception",Pk[a],a,b);!e.isPrevNormal&&d&&this.emit("exception",Pk[a]+2E3,a+"_RECOVER",b);e.isPrevNormal=d;e.result=[]}}checkAudioOutputLevel(a){return!(0<a.receiveBitrate&&0===a.receiveLevel)}checkAudioInputLevel(a){return 0!==
                    a.sendVolumeLevel}checkFramerateInput(a,b){let d=null;b._encoderConfig&&b._encoderConfig.frameRate&&(d=Cb(b._encoderConfig.frameRate));a=a.captureFrameRate;return!d||!a||!(10<d&&5>a||10>d&&5<=d&&1>=a)}checkFramerateSent(a){return!(a.captureFrameRate&&a.sendFrameRate&&5<a.captureFrameRate&&1>=a.sendFrameRate)}checkSendVideoBitrate(a){return 0!==a.sendBitrate}checkSendAudioBitrate(a){return 0!==a.sendBitrate}checkVideoDecode(a){return 0===a.receiveBitrate||0!==a.decodeFrameRate}}let Pk={FRAMERATE_INPUT_TOO_LOW:1001,
                    FRAMERATE_SENT_TOO_LOW:1002,SEND_VIDEO_BITRATE_TOO_LOW:1003,RECV_VIDEO_DECODE_FAILED:1005,AUDIO_INPUT_LEVEL_TOO_LOW:2001,AUDIO_OUTPUT_LEVEL_TOO_LOW:2002,SEND_AUDIO_BITRATE_TOO_LOW:2003};class Zc{constructor(a){this.localConnectionsMap=new Z;this.remoteConnectionsMap=new Z;this.trafficStatsPeerList=[];this.updateStats=()=>{var a,d;r(a=this.remoteConnectionsMap).call(a,a=>{var b;let d=a.audioStats;var e=a.videoStats,q=a.pcStats;let h=Bb({},gg),l=Bb({},hg),n=Bb({},yk),m=a.connection.pc.getStats(),p=
                    m.audioRecv[0],r=m.videoRecv[0];q=q?q.videoRecv[0]:void 0;let t=!0===a.connection.pc._statsFilter.videoIsReady,u=this.trafficStats&&U(b=this.trafficStats.peer_delay).call(b,b=>b.peer_uid===a.connection.getUserId());p&&("opus"!==p.codec&&"aac"!==p.codec||(h.codecType=p.codec),p.outputLevel?h.receiveLevel=Math.round(32767*p.outputLevel):a.connection.user.audioTrack&&(h.receiveLevel=Math.round(32767*a.connection.user.audioTrack.getVolumeLevel())),h.receiveBytes=p.bytes,h.receivePackets=p.packets,h.receivePacketsLost=
                    p.packetsLost,h.packetLossRate=h.receivePacketsLost/h.receivePackets,h.receiveBitrate=d?8*Math.max(0,h.receiveBytes-d.receiveBytes):0,h.totalDuration=d?d.totalDuration+1:1,h.totalFreezeTime=d?d.totalFreezeTime:0,h.freezeRate=h.totalFreezeTime/h.totalDuration,h.receiveDelay=p.jitterBufferMs,b=a.connection.user.audioTrack,10<h.totalDuration&&Zc.isRemoteAudioFreeze(b)&&(h.totalFreezeTime+=1));r&&("H264"!==r.codec&&"VP8"!==r.codec||(l.codecType=r.codec),l.receiveBytes=r.bytes,l.receiveBitrate=e?8*Math.max(0,
                    l.receiveBytes-e.receiveBytes):0,l.decodeFrameRate=r.decodeFrameRate,l.renderFrameRate=r.decodeFrameRate,r.outputFrame&&(l.renderFrameRate=r.outputFrame.frameRate),r.receivedFrame?(l.receiveFrameRate=r.receivedFrame.frameRate,l.receiveResolutionHeight=r.receivedFrame.height,l.receiveResolutionWidth=r.receivedFrame.width):a.connection.user.videoTrack&&(l.receiveResolutionHeight=a.connection.user.videoTrack._videoHeight||0,l.receiveResolutionHeight=a.connection.user.videoTrack._videoWidth||0),void 0!==
                r.framesRateFirefox&&(l.receiveFrameRate=Math.round(r.framesRateFirefox)),l.receivePackets=r.packets,l.receivePacketsLost=r.packetsLost,l.packetLossRate=l.receivePacketsLost/l.receivePackets,l.totalDuration=e?e.totalDuration+1:1,l.totalFreezeTime=e?e.totalFreezeTime:0,l.receiveDelay=r.jitterBufferMs||0,e=a.connection.user.videoTrack,a.connection.subscribeOptions.video&&t&&Zc.isRemoteVideoFreeze(e,r,q)&&(l.totalFreezeTime+=1),l.freezeRate=l.totalFreezeTime/l.totalDuration);u&&(h.end2EndDelay=u.B_ad,
                    l.end2EndDelay=u.B_vd,h.transportDelay=u.B_ed,l.transportDelay=u.B_ed,n.uplinkNetworkQuality=u.B_punq?u.B_punq:0,n.downlinkNetworkQuality=u.B_pdnq?u.B_punq:0);a.audioStats=h;a.videoStats=l;a.pcStats=m;a.networkStats=n;a.connection.user.audioTrack&&this.exceptionMonitor.setRemoteAudioStats(a.connection.user.audioTrack,h);a.connection.user.videoTrack&&this.exceptionMonitor.setRemoteVideoStats(a.connection.user.videoTrack,l)});r(d=this.localConnectionsMap).call(d,a=>{let b=a.audioStats,d=a.videoStats,
                    e=Bb({},te),h=Bb({},ue);var l=a.connection.pc.getStats();let n=l.audioSend[0];l=l.videoSend[0];let m=a.connection.getUserId();n&&("opus"!==n.codec&&"aac"!==n.codec||(e.codecType=n.codec),n.inputLevel?e.sendVolumeLevel=Math.round(32767*n.inputLevel):a.connection.audioTrack&&(e.sendVolumeLevel=Math.round(32767*a.connection.audioTrack.getVolumeLevel())),e.sendBytes=n.bytes,e.sendPackets=n.packets,e.sendPacketsLost=n.packetsLost,e.sendBitrate=b?8*Math.max(0,e.sendBytes-b.sendBytes):0);l&&("H264"!==l.codec&&
                "VP8"!==l.codec||(h.codecType=l.codec),h.sendBytes=l.bytes,h.sendBitrate=d?8*Math.max(0,h.sendBytes-d.sendBytes):0,l.inputFrame?(h.captureFrameRate=l.inputFrame.frameRate,h.captureResolutionHeight=l.inputFrame.height,h.captureResolutionWidth=l.inputFrame.width):a.connection.videoTrack&&(h.captureResolutionWidth=a.connection.videoTrack._videoWidth||0,h.captureResolutionHeight=a.connection.videoTrack._videoHeight||0),l.sentFrame?(h.sendFrameRate=l.sentFrame.frameRate,h.sendResolutionHeight=l.sentFrame.height,
                    h.sendResolutionWidth=l.sentFrame.width):a.connection.videoTrack&&(h.sendResolutionWidth=a.connection.videoTrack._videoWidth||0,h.sendResolutionHeight=a.connection.videoTrack._videoHeight||0),l.avgEncodeMs&&(h.encodeDelay=l.avgEncodeMs),a.connection.videoTrack&&a.connection.videoTrack._encoderConfig&&a.connection.videoTrack._encoderConfig.bitrateMax&&(h.targetSendBitrate=1E3*a.connection.videoTrack._encoderConfig.bitrateMax),h.sendPackets=l.packets,h.sendPacketsLost=l.packetsLost,h.totalDuration=
                    d?d.totalDuration+1:1,h.totalFreezeTime=d?d.totalFreezeTime:0,this.isLocalVideoFreeze(l)&&(h.totalFreezeTime+=1));a.audioStats=e;a.videoStats=h;a.audioStats&&a.connection.audioTrack&&this.exceptionMonitor.setLocalAudioStats(m,a.connection.audioTrack,a.audioStats);a.videoStats&&a.connection.videoTrack&&this.exceptionMonitor.setLocalVideoStats(m,a.connection.videoTrack,a.videoStats)})};this.clientId=a;this.updateStatsInterval=window.setInterval(this.updateStats,1E3);this.exceptionMonitor=new wp;this.exceptionMonitor.on("exception",
                    (a,d,e)=>{this.onStatsException&&this.onStatsException(a,d,e)})}reset(){this.localConnectionsMap=new Z;this.remoteConnectionsMap=new Z;this.trafficStats=void 0;this.trafficStatsPeerList=[];this.uplinkStats=void 0}getLocalAudioTrackStats(a){return(a=this.localConnectionsMap.get(a))&&a.audioStats?a.audioStats:Bb({},te)}getLocalVideoTrackStats(a){return(a=this.localConnectionsMap.get(a))&&a.videoStats?a.videoStats:Bb({},ue)}getRemoteAudioTrackStats(a){var b;let d=this.remoteConnectionsMap.get(a);if(!d||
                    !d.audioStats)return Bb({},gg);if(!this.trafficStats)return d.audioStats;a=U(b=this.trafficStats.peer_delay).call(b,a=>a.peer_uid===d.connection.user.uid);return a&&(d.audioStats.publishDuration=a.B_ppad+(v()-this.trafficStats.timestamp)),d.audioStats}getRemoteNetworkQualityStats(a){return(a=this.remoteConnectionsMap.get(a))&&a.networkStats?a.networkStats:Bb({},yk)}getRemoteVideoTrackStats(a){var b;let d=this.remoteConnectionsMap.get(a);if(!d||!d.videoStats)return Bb({},hg);if(!this.trafficStats)return d.videoStats;
                    a=U(b=this.trafficStats.peer_delay).call(b,a=>a.peer_uid===d.connection.user.uid);return a&&(d.videoStats.publishDuration=a.B_ppvd+(v()-this.trafficStats.timestamp)),d.videoStats}getRTCStats(){var a,b;let d=0,e=0,f=0,g=0;r(a=this.localConnectionsMap).call(a,a=>{a.audioStats&&(d+=a.audioStats.sendBytes,e+=a.audioStats.sendBitrate);a.videoStats&&(d+=a.videoStats.sendBytes,e+=a.videoStats.sendBitrate)});r(b=this.remoteConnectionsMap).call(b,a=>{a.audioStats&&(f+=a.audioStats.receiveBytes,g+=a.audioStats.receiveBitrate);
                    a.videoStats&&(f+=a.videoStats.receiveBytes,g+=a.videoStats.receiveBitrate)});a=1;return this.trafficStats&&(a+=this.trafficStats.peer_delay.length),{Duration:0,UserCount:a,SendBitrate:e,SendBytes:d,RecvBytes:f,RecvBitrate:g,OutgoingAvailableBandwidth:this.uplinkStats?this.uplinkStats.B_uab/1E3:0,RTT:this.trafficStats?2*this.trafficStats.B_acd:0}}removeConnection(a){this.localConnectionsMap.delete(a);this.remoteConnectionsMap.delete(a)}addLocalConnection(a){let b=a.connectionId;this.localConnectionsMap.has(b)||
                this.localConnectionsMap.set(b,{connection:a})}addRemoteConnection(a){let b=a.connectionId;this.remoteConnectionsMap.has(b)||this.remoteConnectionsMap.set(b,{connection:a})}updateTrafficStats(a){var b;let d=O(b=a.peer_delay).call(b,a=>{var b;return-1===E(b=this.trafficStatsPeerList).call(b,a.peer_uid)});r(d).call(d,a=>{var b,d;let e=U(b=Ob(sc(d=this.remoteConnectionsMap).call(d))).call(b,b=>b.connection._userId===a.peer_uid);void 0!==a.B_ppad&&void 0!==a.B_ppvd&&(this.onUploadPublishDuration&&this.onUploadPublishDuration(a.peer_uid,
                    a.B_ppad,a.B_ppvd,e?v()-e.connection.startTime:0),this.trafficStatsPeerList.push(a.peer_uid))});this.trafficStats=a}updateUplinkStats(a){var b;this.uplinkStats&&this.uplinkStats.B_fir!==a.B_fir&&h.debug(n(b="[".concat(this.clientId,"]: Period fir changes to ")).call(b,a.B_fir));this.uplinkStats=a}static isRemoteVideoFreeze(a,b,d){if(!a)return!1;a=!d||b.framesDecodeCount>d.framesDecodeCount;return!!d&&b.framesDecodeFreezeTime>d.framesDecodeFreezeTime||!a}static isRemoteAudioFreeze(a){return!!a&&a._isFreeze()}isLocalVideoFreeze(a){return!(!a.inputFrame||
                    !a.sentFrame)&&5<a.inputFrame.frameRate&&3>a.sentFrame.frameRate}}var Qk;let rg=()=>{},Mh={},dd=[[[100,.00520833333333333],[66.6666666666666,.00434027777777778],[66.6666666666667,.00173611111111111]],[[233.333333333333,.00347222222222222],[266.666666666667],[.00173611111111111],[183.333333333333,2.17013888888889E-4]],[[700,.001953125],[200,.001953125],[175,2.44140625E-4]],[[899.999999999998,.00173611111111111],[1200,8.68055555555556E-4],[160,2.60416666666667E-4]],[[2666.66666666667,8.84130658436214E-4],
                    [1166.66666666667,8.84130658436214E-4],[600,4.82253E-5]]];class xp{constructor(){this.fnMap=new Z}throttleByKey(a,b,d,e,...f){if(this.fnMap.has(b)){var g=this.fnMap.get(b);g.threshold!==d?(g.fn(...g.args),clearTimeout(g.timer),g=window.setTimeout(()=>{const a=this.fnMap.get(b);a&&a.fn(...a.args);this.fnMap.delete(b)},d),this.fnMap.set(b,{fn:a,threshold:d,timer:g,args:f,skipFn:e})):(g.skipFn&&g.skipFn(...g.args),this.fnMap.set(b,Xe({},g,{fn:a,args:f,skipFn:e})))}else g=window.setTimeout(()=>{const a=
                    this.fnMap.get(b);a&&a.fn(...a.args);this.fnMap.delete(b)},d),this.fnMap.set(b,{fn:a,threshold:d,timer:g,args:f,skipFn:e})}}let Rk=new xp,Sk=Ba(Qk=Rk.throttleByKey).call(Qk,Rk),Nd=null,yp=1;class cc{constructor(a){var b;this.lockingPromise=u.resolve();this.locks=0;this.name="";this.lockId=yp++;a&&(this.name=a);h.debug(n(b="[lock-".concat(this.name,"-")).call(b,this.lockId,"] is created."))}get isLocked(){return 0<this.locks}lock(){var a,b;let d;this.locks+=1;h.debug(n(a=n(b="[lock-".concat(this.name,
                    "-")).call(b,this.lockId,"] is locked, current queue ")).call(a,this.locks,"."));let e=new u(a=>{d=()=>{var b,d;--this.locks;h.debug(n(b=n(d="[lock-".concat(this.name,"-")).call(d,this.lockId,"] is not locked, current queue ")).call(b,this.locks,"."));a()}});a=this.lockingPromise.then(()=>d);return this.lockingPromise=this.lockingPromise.then(()=>e),a}}let Ze=new cc("safari"),Rh=!1,Sh=!1;class zp extends Ya{constructor(){super();this._state=rc.IDLE;this.lastAccessCameraPermission=this.lastAccessMicrophonePermission=
                    this.isAccessCameraPermission=this.isAccessMicrophonePermission=!1;this.deviceInfoMap=new Z;this.init().then(()=>{var a,b;navigator.mediaDevices&&navigator.mediaDevices.addEventListener&&navigator.mediaDevices.addEventListener("devicechange",Ba(b=this.updateDevicesInfo).call(b,this));window.setInterval(Ba(a=this.updateDevicesInfo).call(a,this),2500)}).catch(a=>h.error(a.toString()))}get state(){return this._state}set state(a){a!==this._state&&(this.emit(Ub.STATE_CHANGE,a),this._state=a)}async enumerateDevices(a,
b,d=!1){if(!navigator.mediaDevices||!navigator.mediaDevices.enumerateDevices)return(new m(l.NOT_SUPPORTED,"enumerateDevices() not supported.")).throw();var e=await navigator.mediaDevices.enumerateDevices();e=this.checkMediaDeviceInfoIsOk(e);let f=!this.isAccessMicrophonePermission&&a,g=!this.isAccessCameraPermission&&b;e.audio&&(f=!1);e.video&&(g=!1);let k=e=null,q=null;if(!d&&(f||g)){Ze.isLocked&&(h.debug("[device manager] wait GUM lock"),(await Ze.lock())(),h.debug("[device manager] GUM unlock"));
                    if(Rh&&(f=!1,this.isAccessMicrophonePermission=!0),Sh&&(g=!1,this.isAccessCameraPermission=!0),h.debug("[device manager] check media device permissions",a,b,f,g),f&&g){try{q=await navigator.mediaDevices.getUserMedia({audio:!0,video:!0})}catch(la){d=Od(la.name||la.code||la,la.message);if(d.code===l.PERMISSION_DENIED)throw d;h.warning("getUserMedia failed in getDevices",d)}this.isAccessMicrophonePermission=this.isAccessCameraPermission=!0}else if(f){try{e=await navigator.mediaDevices.getUserMedia({audio:a})}catch(la){d=
                        Od(la.name||la.code||la,la.message);if(d.code===l.PERMISSION_DENIED)throw d;h.warning("getUserMedia failed in getDevices",d)}this.isAccessMicrophonePermission=!0}else if(g){try{k=await navigator.mediaDevices.getUserMedia({video:b})}catch(la){d=Od(la.name||la.code||la,la.message);if(d.code===l.PERMISSION_DENIED)throw d;h.warning("getUserMedia failed in getDevices",d)}this.isAccessCameraPermission=!0}h.debug("[device manager] mic permission",a,"cam permission",b)}try{var n,p,t;let a=await navigator.mediaDevices.enumerateDevices();
                    return e&&r(n=e.getTracks()).call(n,a=>a.stop()),k&&r(p=k.getTracks()).call(p,a=>a.stop()),q&&r(t=q.getTracks()).call(t,a=>a.stop()),e=null,k=null,q=null,a}catch(la){var x,u,Ha;e&&r(x=e.getTracks()).call(x,a=>a.stop());k&&r(u=k.getTracks()).call(u,a=>a.stop());q&&r(Ha=q.getTracks()).call(Ha,a=>a.stop());q=k=e=null;return(new m(l.ENUMERATE_DEVICES_FAILED,la.toString())).throw()}}async getRecordingDevices(a=!1){a=await this.enumerateDevices(!0,!1,a);return O(a).call(a,a=>"audioinput"===a.kind)}async getCamerasDevices(a=
{a=await this.enumerateDevices(!1,!0,a);return O(a).call(a,a=>"videoinput"===a.kind)}async getSpeakers(a=!1){a=await this.enumerateDevices(!0,!1,a);return O(a).call(a,a=>"audiooutput"===a.kind)}searchDeviceNameById(a){return(a=this.deviceInfoMap.get(a))?a.device.label||a.device.deviceId:null}searchDeviceIdByName(a){var b;let d=null;return r(b=this.deviceInfoMap).call(b,b=>{b.device.label===a&&(d=b.device.deviceId)}),d}async getDeviceById(a){var b=await this.enumerateDevices(!0,!0,!0);b=U(b).call(b,
                    b=>b.deviceId===a);if(!b)throw new m(l.DEVICE_NOT_FOUND,"deviceId: ".concat(a));return b}async init(){this.state=rc.INITING;try{await this.updateDevicesInfo(),this.state=rc.INITEND}catch(a){throw(h.warning("Device Detection functionality cannot start properly.",a.toString()),this.state=rc.IDLE,"boolean"==typeof isSecureContext?isSecureContext:"https:"===location.protocol||"file:"===location.protocol||"localhost"===location.hostname||"127.0.0.1"===location.hostname||"::1"===location.hostname)||(new m(l.WEB_SECURITY_RESTRICT,
                    "Your context is limited by web security, please try using https protocol or localhost.")).throw(),a;}}async updateDevicesInfo(){var a;let b=await this.enumerateDevices(!0,!0,!0),d=v(),e=[],f=this.checkMediaDeviceInfoIsOk(b);if(r(b).call(b,a=>{if(a.deviceId){var b=this.deviceInfoMap.get(a.deviceId);if("ACTIVE"!==(b?b.state:"INACTIVE")){let b={initAt:d,updateAt:d,device:a,state:"ACTIVE"};this.deviceInfoMap.set(a.deviceId,b);e.push(b)}b&&(b.updateAt=d)}}),r(a=this.deviceInfoMap).call(a,(a,b)=>{"ACTIVE"===
                a.state&&a.updateAt!==d&&(a.state="INACTIVE",e.push(a))}),this.state!==rc.INITEND)return f.audio&&(this.lastAccessMicrophonePermission=!0,this.isAccessMicrophonePermission=!0),void(f.video&&(this.lastAccessCameraPermission=!0,this.isAccessCameraPermission=!0));r(e).call(e,a=>{switch(a.device.kind){case "audioinput":this.lastAccessMicrophonePermission&&this.isAccessMicrophonePermission&&this.emit(Ub.RECORDING_DEVICE_CHANGED,a);break;case "videoinput":this.lastAccessCameraPermission&&this.isAccessCameraPermission&&
                this.emit(Ub.CAMERA_DEVICE_CHANGED,a);break;case "audiooutput":this.lastAccessMicrophonePermission&&this.isAccessMicrophonePermission&&this.emit(Ub.PLAYOUT_DEVICE_CHANGED,a)}});f.audio&&(this.lastAccessMicrophonePermission=!0,this.isAccessMicrophonePermission=!0);f.video&&(this.lastAccessCameraPermission=!0,this.isAccessCameraPermission=!0)}checkMediaDeviceInfoIsOk(a){let b=O(a).call(a,a=>"audioinput"===a.kind);a=O(a).call(a,a=>"videoinput"===a.kind);let d={audio:!1,video:!1};for(let a of b)if(a.label&&
                    a.deviceId){d.audio=!0;break}for(let b of a)if(b.label&&b.deviceId){d.video=!0;break}return d}}let gb=new zp;var Ap=[].slice,Bp=/MSIE .\./.test(md),Tk=function(a){return function(b,d){var e=2<arguments.length,f=e?Ap.call(arguments,2):void 0;return a(e?function(){("function"==typeof b?b:Function(b)).apply(this,f)}:b,d)}};M({global:!0,bind:!0,forced:Bp},{setTimeout:Tk(J.setTimeout),setInterval:Tk(J.setInterval)});var Ec=ha.setTimeout;let Uh=0,$e=0,Uk=(a,b)=>{b=oa.Events[a].create(b);return oa.Events[a].encode(b).finish()};
                class Cp{constructor(){var a,b;this.baseInfoMap=new Z;this.clientList=kk;this.keyEventUploadPendingItems=[];this.normalEventUploadPendingItems=[];this.apiInvokeUploadPendingItems=[];this.apiInvokeCount=0;this.ltsList=[];this.lastSendNormalEventTime=v();this.customReportCount=0;this.eventUploadTimer=window.setInterval(Ba(a=this.doSend).call(a,this),w.EVENT_REPORT_SEND_INTERVAL);this.setSessionIdTimer=window.setInterval(Ba(b=this.appendSessionId).call(b,this),w.EVENT_REPORT_SEND_INTERVAL)}reportApiInvoke(a,
b,d){b.timeout=b.timeout||6E4;b.reportResult=void 0===b.reportResult||b.reportResult;let e=v(),f=this.apiInvokeCount+=1,g=()=>({tag:b.tag,invokeId:f,sid:a,name:b.name,apiInvokeTime:e,options:b.options}),k=!!w.SHOW_REPORT_INVOKER_LOG;k&&h.info("".concat(b.name," start"),b.options);let q=!1;Db(b.timeout).then(()=>{q||(this.sendApiInvoke(wa({},g(),{error:l.API_INVOKE_TIMEOUT,success:!1})),h.debug("".concat(b.name," timeout")))});let n=new m(l.UNEXPECTED_ERROR,"".concat(b.name,": this api invoke is end"));
                    return{onSuccess:a=>{let e=()=>{if(q)throw n;return q=!0,this.sendApiInvoke(wa({},g(),{success:!0},b.reportResult&&{result:a})),k&&h.info("".concat(b.name," onSuccess")),a};return d?Sk(e,b.name+"Success",d,()=>q=!0):e()},onError:a=>{let e=()=>{if(q)throw a;q=!0;this.sendApiInvoke(wa({},g(),{success:!1,error:a.toString()}));k&&h.info("".concat(b.name," onFailure"),a.toString())};return d?Sk(e,b.name+"Error",d,()=>q=!0):e()}}}sessionInit(a,b){if(!this.baseInfoMap.has(a)){var d=v();a=this.createBaseInfo(a,
                    d);a.cname=b.cname;var e=ab({},{willUploadConsoleLog:w.UPLOAD_LOG,areaVersion:yc?"global":"oversea",areas:w.AREAS&&w.AREAS.join(",")},b.extend),f=v();b=wa({},a,{eventType:Ea.SESSION_INIT,appid:b.appid,browser:navigator.userAgent,build:"v4.2.1-0-gf505b57(12/23/2020, 5:25:33 PM)",lts:f,elapse:f-d,extend:z(e),mode:b.mode,process:w.PROCESS_ID,success:!0,version:db});this.send({type:sa.SESSION,data:b},!0)}}joinChooseServer(a,b){if(a=this.baseInfoMap.get(a)){var d=a.info,e=v();b=wa({},d,{eventType:Ea.JOIN_CHOOSE_SERVER,
                    lts:e,eventElapse:e-b.lts,chooseServerAddr:b.csAddr,errorCode:b.ec,elapse:e-a.startTime,success:b.succ,chooseServerAddrList:z(b.serverList),uid:b.uid?R(b.uid):null,cid:b.cid?R(b.cid):null});this.send({type:sa.JOIN_CHOOSE_SERVER,data:b},!0)}}reqUserAccount(a,b){if(a=this.baseInfoMap.get(a)){var d=a.info,e=v();b=wa({},d,{eventType:Ea.REQ_USER_ACCOUNT,lts:e,success:b.success,serverAddress:b.serverAddr,stringUid:b.stringUid,uid:b.uid,errorCode:b.errorCode,elapse:e-a.startTime,eventElapse:e-b.lts,extend:z(b.extend)});
                    this.send({type:sa.REQ_USER_ACCOUNT,data:b},!0)}}joinGateway(a,b){if(a=this.baseInfoMap.get(a)){var d=a.info;b.vid&&(d.vid=b.vid);d.uid=b.uid;d.cid=b.cid;var e=v();d=wa({},d,{eventType:Ea.JOIN_GATEWAY,lts:e,gatewayAddr:b.addr,success:b.succ,errorCode:b.ec,elapse:e-a.startTime,eventElapse:e-b.lts});b.succ&&(a.lastJoinSuccessTime=e);this.send({type:sa.JOIN_GATEWAT,data:d},!0)}}joinChannelTimeout(a,b){if(a=this.baseInfoMap.get(a)){var d=v();b=wa({},a.info,{lts:d,timeout:b,elapse:d-a.startTime});this.send({type:sa.JOIN_CHANNEL_TIMEOUT,
                    data:b},!0)}}publish(a,b){if(a=this.baseInfoMap.get(a)){var d=a.info,e=v();b=wa({},d,{eventType:Ea.PUBLISH,lts:e,eventElapse:e-b.lts,elapse:e-a.startTime,success:b.succ,errorCode:b.ec,videoName:b.videoName,audioName:b.audioName,screenName:b.screenName,screenshare:b.screenshare,audio:b.audio,video:b.video,p2pid:b.p2pid,publishRequestid:b.publishRequestid});this.send({type:sa.PUBLISH,data:b},!0)}}subscribe(a,b){if(a=this.baseInfoMap.get(a)){var d=a.info,e=v();a=wa({},d,{eventType:Ea.SUBSCRIBE,lts:e,
                    eventElapse:e-b.lts,elapse:e-a.startTime,success:b.succ,errorCode:b.ec,video:b.video,audio:b.audio,subscribeRequestid:b.subscribeRequestid,p2pid:b.p2pid});"string"==typeof b.peerid?a.peerSuid=b.peerid:a.peer=b.peerid;this.send({type:sa.SUBSCRIBE,data:a},!0)}}firstRemoteFrame(a,b,d,e){if(a=this.baseInfoMap.get(a)){var f=a.info,g=v();b=wa({},f,{},e,{elapse:g-a.startTime,eventType:b,lts:g});this.send({type:d,data:b},!0)}}onGatewayStream(a,b,d,e){if(a=this.baseInfoMap.get(a))b=wa({},a.info,{},e,{eventType:b,
                    lts:v()}),this.send({type:d,data:b},!0)}streamSwitch(a,b){if(a=this.baseInfoMap.get(a)){var d=a.info,e=v();b=wa({},d,{eventType:Ea.STREAM_SWITCH,lts:e,isDual:b.isdual,elapse:e-a.startTime,success:b.succ});this.send({type:sa.STREAM_SWITCH,data:b},!0)}}requestProxyAppCenter(a,b){if(a=this.baseInfoMap.get(a)){var d=a.info,e=v();b=wa({},d,{eventType:Ea.REQUEST_PROXY_APPCENTER,lts:e,eventElapse:e-b.lts,elapse:e-a.startTime,APAddr:b.APAddr,workerManagerList:b.workerManagerList,response:b.response,errorCode:b.ec,
                    success:b.succ});this.send({type:sa.REQUEST_PROXY_APPCENTER,data:b},!0)}}requestProxyWorkerManager(a,b){if(a=this.baseInfoMap.get(a)){var d=a.info,e=v();b=wa({},d,{eventType:Ea.REQUEST_PROXY_WORKER_MANAGER,lts:e,eventElapse:e-b.lts,elapse:e-a.startTime,workerManagerAddr:b.workerManagerAddr,response:b.response,errorCode:b.ec,success:b.succ});this.send({type:sa.REQUEST_PROXY_WORKER_MANAGER,data:b},!0)}}setProxyServer(a){(this.proxyServer=a)?h.debug("reportProxyServerurl: ".concat(a)):h.debug("disable reportProxyServerurl: ".concat(a))}peerPublishStatus(a,
b){if(a=this.baseInfoMap.get(a)){var d=a.info,e=v();b=wa({},d,{subscribeElapse:b.subscribeElapse,peer:b.peer,peerPublishDuration:Math.max(b.audioPublishDuration,b.videoPublishDuration),audiotag:0<b.audioPublishDuration?1:-1,videotag:0<b.videoPublishDuration?1:-1,lts:e,elapse:e-a.startTime,joinChannelSuccessElapse:e-(a.lastJoinSuccessTime||e)});this.send({type:sa.PEER_PUBLISH_STATUS,data:b},!0)}}workerEvent(a,b){if(a=this.baseInfoMap.get(a)){var d=a.info,e=v();b=Ol(wa({},d,{},b,{elapse:e-a.startTime,
                    lts:e,productType:"WebRTC"}),"payload",1300);r(b).call(b,a=>this.send({type:"WorkerEvent",data:a,isPb:!0,id:156},!0))}}apworkerEvent(a,b){if(a=this.baseInfoMap.get(a)){var d=a.info,e=v();b=wa({},d,{},b,{elapse:e-a.startTime,lts:e});this.send({type:"APWorkerEvent",data:b,isPb:!0,id:160},!0)}}joinWebProxyAP(a,b){if(a=this.baseInfoMap.get(a)){var d=a.info,e=v();b=wa({},d,{},b,{elapse:e-a.startTime,lts:e});this.send({type:"JoinWebProxyAP",data:b,isPb:!0,id:700},!0)}}async sendCustomReportMessage(a,b){if(this.customReportCount+=
                    b.length,this.customReportCount>w.CUSTOM_REPORT_LIMIT)throw new m(l.CUSTOM_REPORT_FREQUENCY_TOO_HIGH);this.customReportCounterTimer||(this.customReportCounterTimer=window.setInterval(()=>{this.customReportCount=0},5E3));b=A(b).call(b,b=>({type:sa.USER_ANALYTICS,data:wa({sid:a},b)}));b={msgType:"EventMessages",sentTs:Math.round(v()/1E3),payloads:A(b).call(b,a=>z(a))};try{await this.postDataToStatsCollector(b)}catch(d){throw h.error("send custom report message failed",d.toString()),new m(l.CUSTOM_REPORT_SEND_FAILED,
                    d.message);}}sendApiInvoke(a){var b=w.NOT_REPORT_EVENT;if(a.tag&&Aa(b)&&Aa(b).call(b,a.tag))return!1;if(null===a.sid)return this.apiInvokeUploadPendingItems.push(a),!1;b=this.baseInfoMap.get(a.sid);if(!b)return this.apiInvokeUploadPendingItems.push(a),!1;let {cname:d,uid:e,cid:f}=b.info;a.lts=a.lts||v();a={invokeId:a.invokeId,sid:a.sid,cname:d,cid:f,uid:e,lts:a.lts,success:a.success,elapse:a.lts-b.startTime,execElapse:a.lts-a.apiInvokeTime,apiName:a.name,options:a.options?z(a.options):void 0,execStates:a.states?
                        z(a.states):void 0,execResult:a.result?z(a.result):void 0,errorCode:a.error?z(a.error):void 0};return this.send({type:sa.API_INVOKE,data:a},!1),!0}appendSessionId(){var a;r(a=this.clientList).call(a,a=>{if(a._sessionId){let b=this.apiInvokeUploadPendingItems.length;for(let d=0;d<b;d++){let b=this.apiInvokeUploadPendingItems.shift();b&&(b.sid=a._sessionId,this.sendApiInvoke(ab({},b)))}}})}send(a,b){if(b)return this.keyEventUploadPendingItems.push(a),void this.sendItems(this.keyEventUploadPendingItems,
                    !0);var d;(this.normalEventUploadPendingItems.push(a),this.normalEventUploadPendingItems.length>w.NORMAL_EVENT_QUEUE_CAPACITY)&&Ja(d=this.normalEventUploadPendingItems).call(d,0,1);10<=this.normalEventUploadPendingItems.length&&this.sendItems(this.normalEventUploadPendingItems,!1)}doSend(){0<this.keyEventUploadPendingItems.length&&this.sendItems(this.keyEventUploadPendingItems,!0);0<this.normalEventUploadPendingItems.length&&5E3<=v()-this.lastSendNormalEventTime&&this.sendItems(this.normalEventUploadPendingItems,
                    !1)}sendItems(a,b){let d=[],e=[];for(var f=[];a.length;){let b=a.shift();hp(b)?20>e.length?e.push(b):f.push(b):20>d.length?d.push(b):f.push(b)}a.push(...f);for(let a of[...d,...e]){var g,k;-1!==E(g=this.ltsList).call(g,a.data.lts)?(a.data.lts=this.ltsList[this.ltsList.length-1]+1,this.ltsList.push(a.data.lts)):(this.ltsList.push(a.data.lts),sd(k=this.ltsList).call(k,(a,b)=>a-b))}b||(this.lastSendNormalEventTime=v());f={msgType:"EventMessages",sentTs:Math.round(v()/1E3),payloads:A(d).call(d,a=>z(a))};
                    g=Uk("ProtoRaws",{sentTs:Math.round(v()/1E3),payloads:A(e).call(e,a=>({id:a.id,msg:Uk(a.type,a.data)}))});k=a=>d=>{var e,f,g;b?this.keyEventUploadPendingItems=n(e=this.keyEventUploadPendingItems).call(e,a):(this.normalEventUploadPendingItems=n(f=this.normalEventUploadPendingItems).call(f,a),this.normalEventUploadPendingItems.length>w.NORMAL_EVENT_QUEUE_CAPACITY&&(Ja(g=this.normalEventUploadPendingItems).call(g,0,this.normalEventUploadPendingItems.length-w.NORMAL_EVENT_QUEUE_CAPACITY),h.warning("report: drop normal events")))};
                    return e.length&&this.postDataToStatsCollector(g,!0).catch(k(e)),d.length&&this.postDataToStatsCollector(f).catch(k(d)),a}async postDataToStatsCollector(a,b=!1){var d,e,f;let g=b?"/events/proto-raws":"/events/messages",k=this.url||(this.proxyServer?n(d=n(e="https://".concat(this.proxyServer,"/rs/?h=")).call(e,w.EVENT_REPORT_DOMAIN,"&p=6443&d=")).call(d,g):n(f="https://".concat(w.EVENT_REPORT_DOMAIN,":6443")).call(f,g));for(d=0;2>d;d+=1){var h,l,m;1===d&&(k=this.backupUrl||(this.proxyServer?n(h=n(l=
                    "https://".concat(this.proxyServer,"/rs/?h=")).call(l,w.EVENT_REPORT_BACKUP_DOMAIN,"&p=6443&d=")).call(h,g):n(m="https://".concat(w.EVENT_REPORT_BACKUP_DOMAIN,":6443")).call(m,g)));try{b?await Yl(k,{timeout:1E4,data:a}):await Nb(k,{timeout:1E4,data:a})}catch(Ia){if(1===d)throw Ia;continue}break}}createBaseInfo(a,b){let d=ab({},gp);return d.sid=a,this.baseInfoMap.set(a,{info:d,startTime:b}),d}}let t=new Cp,Zl={[Bc.ACCESS_POINT]:{[Fa.NO_FLAG_SET]:{desc:"flag is zero",retry:!1},[Fa.FLAG_SET_BUT_EMPTY]:{desc:"flag is empty",
                            retry:!1},[Fa.INVALID_FALG_SET]:{desc:"invalid flag",retry:!1},[Fa.NO_SERVICE_AVAILABLE]:{desc:"no service available",retry:!0},[Fa.NO_SERVICE_AVAILABLE_P2P]:{desc:"no unilbs p2p service available",retry:!0},[Fa.NO_SERVICE_AVAILABLE_VOET]:{desc:"no unilbs voice service available",retry:!0},[Fa.NO_SERVICE_AVAILABLE_WEBRTC]:{desc:"no unilbs webrtc service available",retry:!0},[Fa.NO_SERVICE_AVAILABLE_CDS]:{desc:"no cds service available",retry:!0},[Fa.NO_SERVICE_AVAILABLE_CDN]:{desc:"no cdn dispatcher service available",
                            retry:!0},[Fa.NO_SERVICE_AVAILABLE_TDS]:{desc:"no tds service available",retry:!0},[Fa.NO_SERVICE_AVAILABLE_REPORT]:{desc:"no unilbs report service available",retry:!0},[Fa.NO_SERVICE_AVAILABLE_APP_CENTER]:{desc:"no app center service available",retry:!0},[Fa.NO_SERVICE_AVAILABLE_ENV0]:{desc:"no unilbs sig env0 service available",retry:!0},[Fa.NO_SERVICE_AVAILABLE_VOET]:{desc:"no unilbs voet service available",retry:!0},[Fa.NO_SERVICE_AVAILABLE_STRING_UID]:{desc:"no string uid service available",
                            retry:!0},[Fa.NO_SERVICE_AVAILABLE_WEBRTC_UNILBS]:{desc:"no webrtc unilbs service available",retry:!0}},[Bc.UNILBS]:{[Va.INVALID_VENDOR_KEY]:{desc:"invalid vendor key, can not find appid",retry:!1},[Va.INVALID_CHANNEL_NAME]:{desc:"invalid channel name",retry:!1},[Va.INTERNAL_ERROR]:{desc:"unilbs internal error",retry:!1},[Va.NO_AUTHORIZED]:{desc:"invalid token, authorized failed",retry:!1},[Va.DYNAMIC_KEY_TIMEOUT]:{desc:"dynamic key or token timeout",retry:!1},[Va.NO_ACTIVE_STATUS]:{desc:"no active status",
                            retry:!1},[Va.DYNAMIC_KEY_EXPIRED]:{desc:"dynamic key expired",retry:!1},[Va.STATIC_USE_DYNAMIC_KEY]:{desc:"static use dynamic key",retry:!1},[Va.DYNAMIC_USE_STATIC_KEY]:{desc:"dynamic use static key",retry:!1},[Va.USER_OVERLOAD]:{desc:"amount of users over load",retry:!1},[Va.FORBIDDEN_REGION]:{desc:"the request is forbidden in this area",retry:!1},[Va.CANNOT_MEET_AREA_DEMAND]:{desc:"unable to allocate services in this area",retry:!1}},[Bc.STRING_UID_ALLOCATOR]:{[ud.IIIEGAL_APPID]:{desc:"invalid appid",
                            retry:!1},[ud.IIIEGAL_UID]:{desc:"invalid string uid",retry:!1},[ud.INTERNAL_ERROR]:{desc:"string uid allocator internal error",retry:!0}}},$l={[C.K_TIMESTAMP_EXPIRED]:{desc:"K_TIMESTAMP_EXPIRED",action:"failed"},[C.K_CHANNEL_PERMISSION_INVALID]:{desc:"K_CHANNEL_PERMISSION_INVALID",action:"failed"},[C.K_CERTIFICATE_INVALID]:{desc:"K_CERTIFICATE_INVALID",action:"failed"},[C.K_CHANNEL_NAME_EMPTY]:{desc:"K_CHANNEL_NAME_EMPTY",action:"failed"},[C.K_CHANNEL_NOT_FOUND]:{desc:"K_CHANNEL_NOT_FOUND",action:"failed"},
                    [C.K_TICKET_INVALID]:{desc:"K_TICKET_INVALID",action:"failed"},[C.K_CHANNEL_CONFLICTED]:{desc:"K_CHANNEL_CONFLICTED",action:"failed"},[C.K_SERVICE_NOT_READY]:{desc:"K_SERVICE_NOT_READY",action:"recover"},[C.K_SERVICE_TOO_HEAVY]:{desc:"K_SERVICE_TOO_HEAVY",action:"tryNext"},[C.K_UID_BANNED]:{desc:"K_UID_BANNED",action:"failed"},[C.K_IP_BANNED]:{desc:"K_IP_BANNED",action:"failed"},[C.ERR_INVALID_VENDOR_KEY]:{desc:"ERR_INVALID_VENDOR_KEY",action:"failed"},[C.ERR_INVALID_CHANNEL_NAME]:{desc:"ERR_INVALID_CHANNEL_NAME",
                        action:"failed"},[C.WARN_NO_AVAILABLE_CHANNEL]:{desc:"WARN_NO_AVAILABLE_CHANNEL",action:"failed"},[C.WARN_LOOKUP_CHANNEL_TIMEOUT]:{desc:"WARN_LOOKUP_CHANNEL_TIMEOUT",action:"tryNext"},[C.WARN_LOOKUP_CHANNEL_REJECTED]:{desc:"WARN_LOOKUP_CHANNEL_REJECTED",action:"failed"},[C.WARN_OPEN_CHANNEL_TIMEOUT]:{desc:"WARN_OPEN_CHANNEL_TIMEOUT",action:"tryNext"},[C.WARN_OPEN_CHANNEL_REJECTED]:{desc:"WARN_OPEN_CHANNEL_REJECTED",action:"failed"},[C.WARN_REQUEST_DEFERRED]:{desc:"WARN_REQUEST_DEFERRED",action:"failed"},
                    [C.ERR_DYNAMIC_KEY_TIMEOUT]:{desc:"ERR_DYNAMIC_KEY_TIMEOUT",action:"failed"},[C.ERR_NO_AUTHORIZED]:{desc:"ERR_NO_AUTHORIZED",action:"failed"},[C.ERR_VOM_SERVICE_UNAVAILABLE]:{desc:"ERR_VOM_SERVICE_UNAVAILABLE",action:"tryNext"},[C.ERR_NO_CHANNEL_AVAILABLE_CODE]:{desc:"ERR_NO_CHANNEL_AVAILABLE_CODE",action:"failed"},[C.ERR_MASTER_VOCS_UNAVAILABLE]:{desc:"ERR_MASTER_VOCS_UNAVAILABLE",action:"tryNext"},[C.ERR_INTERNAL_ERROR]:{desc:"ERR_INTERNAL_ERROR",action:"tryNext"},[C.ERR_NO_ACTIVE_STATUS]:{desc:"ERR_NO_ACTIVE_STATUS",
                        action:"failed"},[C.ERR_INVALID_UID]:{desc:"ERR_INVALID_UID",action:"failed"},[C.ERR_DYNAMIC_KEY_EXPIRED]:{desc:"ERR_DYNAMIC_KEY_EXPIRED",action:"failed"},[C.ERR_STATIC_USE_DYANMIC_KE]:{desc:"ERR_STATIC_USE_DYANMIC_KE",action:"failed"},[C.ERR_DYNAMIC_USE_STATIC_KE]:{desc:"ERR_DYNAMIC_USE_STATIC_KE",action:"failed"},[C.ERR_NO_VOCS_AVAILABLE]:{desc:"ERR_NO_VOCS_AVAILABLE",action:"tryNext"},[C.ERR_NO_VOS_AVAILABLE]:{desc:"ERR_NO_VOS_AVAILABLE",action:"tryNext"},[C.ERR_JOIN_CHANNEL_TIMEOUT]:{desc:"ERR_JOIN_CHANNEL_TIMEOUT",
                        action:"tryNext"},[C.ERR_JOIN_BY_MULTI_IP]:{desc:"ERR_JOIN_BY_MULTI_IP",action:"recover"},[C.ERR_NOT_JOINED]:{desc:"ERR_NOT_JOINED",action:"failed"},[C.ERR_REPEAT_JOIN_REQUEST]:{desc:"ERR_REPEAT_JOIN_REQUEST",action:"quit"},[C.ERR_REPEAT_JOIN_CHANNEL]:{desc:"ERR_REPEAT_JOIN_CHANNEL",action:"quit"},[C.ERR_INVALID_VENDOR_KEY]:{desc:"ERR_INVALID_VENDOR_KEY",action:"failed"},[C.ERR_INVALID_CHANNEL_NAME]:{desc:"ERR_INVALID_CHANNEL_NAME",action:"failed"},[C.ERR_INVALID_STRINGUID]:{desc:"ERR_INVALID_STRINGUID",
                        action:"failed"},[C.ERR_TOO_MANY_USERS]:{desc:"ERR_TOO_MANY_USERS",action:"tryNext"},[C.ERR_SET_CLIENT_ROLE_TIMEOUT]:{desc:"ERR_SET_CLIENT_ROLE_TIMEOUT",action:"failed"},[C.ERR_SET_CLIENT_ROLE_NO_PERMISSION]:{desc:"ERR_SET_CLIENT_ROLE_TIMEOUT",action:"failed"},[C.ERR_SET_CLIENT_ROLE_ALREADY_IN_USE]:{desc:"ERR_SET_CLIENT_ROLE_ALREADY_IN_USE",action:"success"},[C.ERR_PUBLISH_REQUEST_INVALID]:{desc:"ERR_PUBLISH_REQUEST_INVALID",action:"failed"},[C.ERR_SUBSCRIBE_REQUEST_INVALID]:{desc:"ERR_SUBSCRIBE_REQUEST_INVALID",
                        action:"failed"},[C.ERR_NOT_SUPPORTED_MESSAGE]:{desc:"ERR_NOT_SUPPORTED_MESSAGE",action:"failed"},[C.ERR_ILLEAGAL_PLUGIN]:{desc:"ERR_ILLEAGAL_PLUGIN",action:"failed"},[C.ERR_REJOIN_TOKEN_INVALID]:{desc:"ERR_REJOIN_TOKEN_INVALID",action:"failed"},[C.ERR_REJOIN_USER_NOT_JOINED]:{desc:"ERR_REJOIN_NOT_JOINED",action:"failed"},[C.ERR_INVALID_OPTIONAL_INFO]:{desc:"ERR_INVALID_OPTIONAL_INFO",action:"quit"},[C.ERR_TEST_RECOVER]:{desc:"ERR_TEST_RECOVER",action:"recover"},[C.ERR_TEST_TRYNEXT]:{desc:"ERR_TEST_TRYNEXT",
                        action:"recover"},[C.ERR_TEST_RETRY]:{desc:"ERR_TEST_RETRY",action:"recover"},[C.ILLEGAL_AES_PASSWORD]:{desc:"ERR_TEST_RETRY",action:"failed"}},Pa={timeout:500,timeoutFactor:1.5,maxRetryCount:1/0,maxRetryTimeout:1E4};class sg extends Ya{constructor(a,b){super();this.currentURLIndex=this.connectionID=0;this.reconnectMode="tryNext";this._state="closed";this.reconnectCount=0;this.name=a;this.retryConfig=b}get url(){return this.websocket?this.websocket.url:null}get state(){return this._state}set state(a){a!==
                this._state&&(this._state=a,"reconnecting"===this._state?this.emit(T.RECONNECTING,this.reconnectMode):"connected"===this._state?this.emit(T.CONNECTED):"closed"===this._state?this.emit(T.CLOSED):"failed"===this._state&&this.emit(T.FAILED))}init(a){return new u((b,d)=>{this.urls=a;let e=this.urls[this.currentURLIndex];this.state="connecting";this.createWebSocketConnection(e).then(b).catch(d);this.once(T.CLOSED,()=>d(new m(l.WS_DISCONNECT)));this.once(T.CONNECTED,()=>b())})}close(a,b){if(this.currentURLIndex=
                    0,this.reconnectCount=0,this.websocket){this.websocket.onclose=null;this.websocket.onopen=null;this.websocket.onmessage=null;let a=this.websocket;b?Ec(()=>a.close(),500):a.close();this.websocket=void 0}this.state=a?"failed":"closed"}reconnect(a,b){if(!this.websocket)return void h.warning("[".concat(this.name,"] can not reconnect, no websocket"));void 0!==a&&(this.reconnectMode=a);h.debug("[".concat(this.name,"] reconnect is triggered initiative"));a=this.websocket.onclose;this.websocket.onclose=null;
                    this.websocket.close();a&&Ba(a).call(a,this.websocket)({code:9999,reason:b})}sendMessage(a){if(!this.websocket||this.websocket.readyState!==WebSocket.OPEN)throw new m(l.WS_ABORT,"websocket is not ready");a=z(a);try{this.websocket.send(a)}catch(b){throw new m(l.WS_ERR,"send websocket message error"+b.toString());}}async createWebSocketConnection(a){let b=this.connectionID+=1;return new u((d,e)=>{var f,g;this.websocket&&(this.websocket.onclose=null,this.websocket.close());w.GATEWAY_WSS_ADDRESS&&Cd(f=
                    this.name).call(f,"gateway")&&(a=w.GATEWAY_WSS_ADDRESS);h.debug(n(g="[".concat(this.name,"] start connect, url: ")).call(g,a));try{this.websocket=new WebSocket(a),this.websocket.binaryType="arraybuffer"}catch(q){var k;f=new m(l.WS_ERR,"init websocket failed! Error: ".concat(q.toString()));return h.error(n(k="[".concat(this.name,"]")).call(k,f)),void e(f)}Db(5E3).then(()=>{b===this.connectionID&&this.websocket&&this.websocket.readyState!==WebSocket.OPEN&&this.websocket&&this.websocket.close()});this.websocket.onopen=
                    ()=>{h.debug("[".concat(this.name,"] websocket opened:"),a);this.reconnectMode="retry";this.state="connected";this.reconnectCount=0;d()};this.websocket.onclose=async a=>{var b,f,g,k;if(h.debug(n(b=n(f=n(g=n(k="[".concat(this.name,"] websocket close ")).call(k,this.websocket&&this.websocket.url,", code: ")).call(g,a.code,", reason: ")).call(f,a.reason,", current mode: ")).call(b,this.reconnectMode)),this.reconnectCount<this.retryConfig.maxRetryCount){"connected"===this.state&&(this.state="reconnecting");
                    b=gc(this,T.WILL_RECONNECT,this.reconnectMode)||this.reconnectMode;b=await this.reconnectWithAction(b);if("closed"===this.state)return void h.debug("[".concat(this.connectionID,"] ws is closed, no need to reconnect"));if(!b)return e(new m(l.WS_DISCONNECT,"websocket reconnect failed: ".concat(a.code))),void this.close(!0);d()}else e(new m(l.WS_DISCONNECT,"websocket close: ".concat(a.code))),this.close()};this.websocket.onmessage=a=>{this.emit(T.ON_MESSAGE,a)}})}async reconnectWithAction(a,b){var d,
                    e;if(!b&&this.reconnectCount>=this.retryConfig.maxRetryCount||!this.urls||"closed"===this.state)return!1;this.onlineReconnectListener||!navigator||void 0===navigator.onLine||navigator.onLine||(this.onlineReconnectListener=new u(a=>{let b=()=>{this.onlineReconnectListener=void 0;window.removeEventListener("online",b);a()};window.addEventListener("online",b)}));b=am(this.reconnectCount,this.retryConfig);if(h.debug(n(d=n(e="[".concat(this.name,"] wait ")).call(e,b,"ms to reconnect websocket, mode: ")).call(d,
                    a)),await u.race([Db(b),this.onlineReconnectListener||new u(()=>{})]),"closed"===this.state)return!1;this.reconnectCount+=1;try{if("retry"===a)await this.createWebSocketConnection(this.urls[this.currentURLIndex]);else if("tryNext"===a){var f,g;if(this.currentURLIndex+=1,this.currentURLIndex>=this.urls.length)return await this.reconnectWithAction("recover");h.debug(n(f=n(g="[".concat(this.name,"] websocket url length: ")).call(g,this.urls.length," current index: ")).call(f,this.currentURLIndex));await this.createWebSocketConnection(this.urls[this.currentURLIndex])}else"recover"===
                a&&(h.debug("[".concat(this.name,"] request new urls")),this.urls=await Ma(this,T.REQUEST_NEW_URLS),this.currentURLIndex=0,await this.createWebSocketConnection(this.urls[this.currentURLIndex]));return!0}catch(k){return h.error("[".concat(this.name,"] reconnect failed"),k.toString()),await this.reconnectWithAction(a)}}}class Dp{constructor(a){this.input=[];this.size=a}add(a){var b;(this.input.push(a),this.input.length>this.size)&&Ja(b=this.input).call(b,0,1)}mean(){var a;return 0===this.input.length?
                    0:Ae(a=this.input).call(a,(a,d)=>a+d)/this.input.length}}class Ep extends Ya{constructor(a){super();this._connectionState=ta.CLOSED;this.openConnectionTime=v();this.lastMsgTime=v();this.uploadCache=[];this.rttRolling=new Dp(5);this.pingpongTimeoutCount=0;this.onWebsocketMessage=a=>{if(a.data instanceof ArrayBuffer)return void this.emit(N.ON_BINARY_DATA,a.data);a=JSON.parse(a.data);if(this.lastMsgTime=v(),a.hasOwnProperty("_id")){let b="res-@".concat(a._id);this.emit(b,a._result,a._message)}else if(a.hasOwnProperty("_type")&&
                    (this.emit(a._type,a._message),a._type===Y.ON_NOTIFICATION&&this.handleNotification(a._message),a._type===Y.ON_USER_BANNED))switch(a._message.error_code){case 14:this.close("UID_BANNED");break;case 15:this.close("IP_BANNED");break;case 16:this.close("CHANNEL_BANNED")}};this.clientId=a.clientId;this.spec=a;this.websocket=new sg("gateway-".concat(this.clientId),this.spec.retryConfig);this.handleWebsocketEvents();window.addEventListener("offline",()=>{this.connectionState===ta.CONNECTED&&this.reconnect("retry",
                    "offline")})}get connectionState(){return this._connectionState}set connectionState(a){a!==this._connectionState&&(this._connectionState=a,a===ta.CONNECTED?this.emit(N.WS_CONNECTED):a===ta.RECONNECTING?this.emit(N.WS_RECONNECTING):a===ta.CLOSED&&this.emit(N.WS_CLOSED,this._disconnectedReason))}get url(){return this.websocket?this.websocket.url:null}get rtt(){return this.rttRolling.mean()}async request(a,b,d){var e,f,g,k,q;let p=pa(6,"");var r={_id:p,_type:a,_message:b};let t=this.websocket.connectionID;
                    var x=()=>new u((a,b)=>{if(this.connectionState===ta.CONNECTED)return a();const d=()=>{this.off(N.WS_CLOSED,e);a()},e=()=>{this.off(N.WS_CONNECTED,d);b(new m(l.WS_ABORT))};this.once(N.WS_CONNECTED,d);this.once(N.WS_CLOSED,e)});this.connectionState!==ta.CONNECTING&&this.connectionState!==ta.RECONNECTING||a===ca.JOIN||a===ca.REJOIN||await x();var v=new u((d,e)=>{let f=!1;const g=(e,g)=>{f=!0;d({isSuccess:"success"===e,message:g||{}});this.off(N.WS_CLOSED,k);this.off(N.WS_RECONNECTING,k);this.emit(N.REQUEST_SUCCESS,
                        a,b)};this.once("res-@".concat(p),g);const k=()=>{e(new m(l.WS_ABORT,"type: ".concat(a)));this.off(N.WS_CLOSED,k);this.off(N.WS_RECONNECTING,k);this.off("res-@".concat(p),g)};this.once(N.WS_CLOSED,k);this.once(N.WS_RECONNECTING,k);Db(w.SIGNAL_REQUEST_TIMEOUT).then(()=>{this.websocket.connectionID!==t||f||(h.warning("ws request timeout, type: ".concat(a)),this.emit(N.REQUEST_TIMEOUT,a,b))})});this.websocket.sendMessage(r);r=null;try{r=await v}catch(Ha){if(this.connectionState===ta.CLOSED||a===ca.LEAVE)throw new m(l.WS_ABORT);
                        return!this.spec.forceWaitGatewayResponse||d?Ha.throw():a===ca.JOIN||a===ca.REJOIN?null:(await x(),await this.request(a,b))}if(r.isSuccess)return r.message;d=Number(r.message.error_code||r.message.code);x=Wh(d);v=new m(l.UNEXPECTED_RESPONSE,n(e="".concat(x.desc,": ")).call(e,r.message.error_str),{code:d,data:r.message});return"success"===x.action?r.message:(h.warning(n(f=n(g=n(k=n(q="[".concat(this.websocket.connectionID,"] unexpected response from type ")).call(q,a,", error_code: ")).call(k,d,", message: ")).call(g,
                        x.desc,", action: ")).call(f,x.action)),"failed"===x.action?v.throw():"quit"===x.action?(this.initError=v,this.close(),v.throw()):(d===C.ERR_JOIN_BY_MULTI_IP?(this.multiIpOption=r.message.option,h.warning("[".concat(this.clientId,"] detect multi ip, recover")),this.reconnect("recover")):this.reconnect(x.action),a===ca.JOIN||a===ca.REJOIN?null:await this.request(a,b)))}waitMessage(a,b){return new u(d=>{let e=f=>{b&&!b(f)||(this.off(a,e),d(f))};this.on(a,e)})}upload(a,b){a={_type:a,_message:b};try{this.websocket.sendMessage(a)}catch(e){b=
                    w.MAX_UPLOAD_CACHE||50;var d;(this.uploadCache.push(a),this.uploadCache.length>b)&&Ja(d=this.uploadCache).call(d,0,1);0<this.uploadCache.length&&!this.uploadCacheInterval&&(this.uploadCacheInterval=window.setInterval(()=>{var a;if(this.connectionState===ta.CONNECTED){var b=Ja(a=this.uploadCache).call(a,0,1)[0];0===this.uploadCache.length&&(window.clearInterval(this.uploadCacheInterval),this.uploadCacheInterval=void 0);this.upload(b._type,b._message)}},w.UPLOAD_CACHE_INTERVAL||2E3))}}send(a,b){this.websocket.sendMessage({_type:a,
                    _message:b})}init(a){return this.initError=void 0,this.multiIpOption=void 0,this.joinResponse=void 0,this.reconnectToken=void 0,new u((b,d)=>{this.once(N.WS_CONNECTED,()=>b(this.joinResponse));this.once(N.WS_CLOSED,()=>d(this.initError||new m(l.WS_ABORT)));this.connectionState=ta.CONNECTING;this.websocket.init(a).catch(d)})}close(a){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0);this.joinResponse=this.reconnectToken=void 0;this._disconnectedReason=
                    a||"LEAVE";this.connectionState=ta.CLOSED;this.websocket.close()}async join(){var a;if(!this.joinResponse){var b=ad(this,N.REQUEST_JOIN_INFO);b=await this.request(ca.JOIN,b);if(!b)return this.emit(N.REPORT_JOIN_GATEWAY,l.TIMEOUT,this.url||""),!1;this.joinResponse=b;this.reconnectToken=this.joinResponse.rejoin_token}return this.connectionState=ta.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(Ba(a=this.handlePingPong).call(a,this),3E3),
                    !0}async rejoin(){var a,b;if(!this.reconnectToken)throw new m(l.UNEXPECTED_ERROR,"can not rejoin, no rejoin token");var d=ad(this,N.REQUEST_REJOIN_INFO);d.token=this.reconnectToken;d=await this.request(ca.REJOIN,d);return!!d&&(this.connectionState=ta.CONNECTED,this.pingpongTimer&&window.clearInterval(this.pingpongTimer),this.pingpongTimer=window.setInterval(Ba(a=this.handlePingPong).call(a,this),3E3),d.peers&&r(b=d.peers).call(b,a=>{this.emit(Y.ON_USER_ONLINE,{uid:a.uid});a.audio_mute?this.emit(Y.MUTE_AUDIO,
                    {uid:a.uid}):this.emit(Y.UNMUTE_AUDIO,{uid:a.uid});a.video_mute?this.emit(Y.MUTE_VIDEO,{uid:a.uid}):this.emit(Y.UNMUTE_VIDEO,{uid:a.uid});a.audio_enable_local?this.emit(Y.ENABLE_LOCAL_AUDIO,{uid:a.uid}):this.emit(Y.DISABLE_LOCAL_AUDIO,{uid:a.uid});a.video_enable_local?this.emit(Y.ENABLE_LOCAL_VIDEO,{uid:a.uid}):this.emit(Y.DISABLE_LOCAL_VIDEO,{uid:a.uid});a.audio||a.video||this.emit(Y.ON_REMOVE_STREAM,{uid:a.uid,uint_id:a.uint_id});a.audio&&this.emit(Y.ON_ADD_AUDIO_STREAM,{uid:a.uid,uint_id:a.uint_id,
                    audio:!0});a.video&&this.emit(Y.ON_ADD_VIDEO_STREAM,{uid:a.uid,uint_id:a.uint_id,video:!0})}),!0)}reconnect(a,b){this.pingpongTimer&&(this.pingpongTimeoutCount=0,window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0);this.websocket.reconnect(a,b)}handleNotification(a){h.debug("[".concat(this.clientId,"] receive notification: "),a);a=Wh(a.code);if("success"!==a.action){if("failed"!==a.action)return"quit"===a.action?("ERR_REPEAT_JOIN_CHANNEL"===a.desc&&this.close("UID_BANNED"),void this.close()):
                    void this.reconnect(a.action);h.error("[".concat(this.clientId,"] ignore error: "),a.desc)}}handlePingPong(){if(this.websocket&&"connected"===this.websocket.state){0<this.pingpongTimeoutCount&&this.rttRolling.add(3E3);this.pingpongTimeoutCount+=1;var a=w.PING_PONG_TIME_OUT,b=v();this.pingpongTimeoutCount>=a&&(h.warning("PINGPONG Timeout. Last Socket Message: ".concat(b-this.lastMsgTime,"ms")),b-this.lastMsgTime>w.WEBSOCKET_TIMEOUT_MIN)?this.reconnect("retry","ping_lost"):this.request(ca.PING,void 0,
                    !0).then(()=>{this.pingpongTimeoutCount=0;let a=v()-b;this.rttRolling.add(a);w.REPORT_STATS&&this.send(ca.PING_BACK,{pingpongElapse:a})}).catch(a=>{})}}handleWebsocketEvents(){this.websocket.on(T.ON_MESSAGE,this.onWebsocketMessage);this.websocket.on(T.CLOSED,()=>{this.connectionState=ta.CLOSED});this.websocket.on(T.FAILED,()=>{this._disconnectedReason="NETWORK_ERROR";this.connectionState=ta.CLOSED});this.websocket.on(T.RECONNECTING,a=>{this.joinResponse=void 0;this.connectionState===ta.CONNECTED?
                    this.connectionState=ta.RECONNECTING:this.connectionState=ta.CONNECTING});this.websocket.on(T.WILL_RECONNECT,(a,b)=>{if(ad(this,N.IS_P2P_DISCONNECTED)&&"retry"===a)return this.reconnectToken=void 0,this.emit(N.NEED_RENEW_SESSION),this.emit(N.DISCONNECT_P2P),b("tryNext");"retry"!==a&&(this.reconnectToken=void 0,this.emit(N.NEED_RENEW_SESSION),this.emit(N.DISCONNECT_P2P));b(a)});this.websocket.on(T.CONNECTED,()=>{this.openConnectionTime=v();this.reconnectToken?this.rejoin().catch(a=>{var b;h.warning(n(b=
                    "[".concat(this.clientId,"] rejoin failed ")).call(b,a));this.reconnect("tryNext")}):this.join().catch(a=>{if(this.emit(N.REPORT_JOIN_GATEWAY,a.code,this.url||""),a instanceof m&&a.code===l.UNEXPECTED_RESPONSE&&a.data.code===C.ERR_NO_AUTHORIZED)return h.warning("[".concat(this.clientId,"] reconnect no authorized, recover")),void this.reconnect("recover");h.error("[".concat(this.clientId,"] join gateway request failed"),a.toString());this.spec.forceWaitGatewayResponse?this.reconnect("tryNext"):(this.initError=
                    a,this.close())})});this.websocket.on(T.REQUEST_NEW_URLS,(a,b)=>{Ma(this,N.REQUEST_RECOVER,this.multiIpOption).then(a).catch(b)})}}class Vk extends Ya{constructor(a,b){super();this._hints=[];this._ID=b||pa(8,"track-");this._mediaStreamTrack=this._originMediaStreamTrack=a}toString(){return this._ID}getTrackId(){return this._ID}getMediaStreamTrack(){return this._mediaStreamTrack}}class ye extends Vk{constructor(a,b){super(a,b);this._enabled=!0;this._isClosed=!1;this._trackProcessors=[];this._handleTrackEnded=
                    ()=>{this.emit(vd.TRACK_ENDED)};this._enabledMutex=new cc("".concat(b));a.addEventListener("ended",this._handleTrackEnded)}getTrackLabel(){return this._originMediaStreamTrack.label}close(){var a;this._isClosed||(this.stop(),r(a=this._trackProcessors).call(a,a=>a.destroy()),this._trackProcessors=[],this._originMediaStreamTrack.stop(),this._mediaStreamTrack!==this._originMediaStreamTrack&&(this._mediaStreamTrack.stop(),this._mediaStreamTrack=null),this._originMediaStreamTrack=null,this._enabledMutex=
                    null,h.debug("[".concat(this.getTrackId(),"] close")),this.emit(K.NEED_CLOSE),this._isClosed=!0)}async _registerTrackProcessor(a){var b;if(-1===E(b=this._trackProcessors).call(b,a)){var d=this._trackProcessors[this._trackProcessors.length-1];this._trackProcessors.push(a);a.onOutputChange=async()=>{this._mediaStreamTrack=a.output||this._originMediaStreamTrack;this._updatePlayerSource();await Ta(this,K.NEED_REPLACE_TRACK,this._mediaStreamTrack)};d?(d.onOutputChange=async()=>{d.output&&await a.setInput(d.output)},
                    await a.setInput(d.output||d.input||this._originMediaStreamTrack)):await a.setInput(this._originMediaStreamTrack)}}_getOutputFromProcessors(){if(0===this._trackProcessors.length)return this._originMediaStreamTrack;let a=this._trackProcessors[this._trackProcessors.length-1];return a.output||a.input||this._originMediaStreamTrack}async _updateOriginMediaStreamTrack(a,b){a!==this._originMediaStreamTrack&&((this._originMediaStreamTrack.removeEventListener("ended",this._handleTrackEnded),b&&this._originMediaStreamTrack.stop(),
                    a.addEventListener("ended",this._handleTrackEnded),this._originMediaStreamTrack=a,0<this._trackProcessors.length)?(await this._trackProcessors[0].setInput(a),this._mediaStreamTrack=this._getOutputFromProcessors()):this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await Ta(this,K.NEED_REPLACE_TRACK,this._mediaStreamTrack))}_getDefaultPlayerConfig(){return{}}}let Xh=window.AudioContext||window.webkitAudioContext,Cc=null,ed=new Ya,af=null;class Wk extends Ya{constructor(){super();
                    this.isPlayed=!1;this.audioOutputLevel=this.audioLevelBase=0;this.audioOutputLevelCache=null;this.audioOutputLevelCacheMaxLength=w.AUDIO_SOURCE_AVG_VOLUME_DURATION/w.AUDIO_SOURCE_VOLUME_UPDATE_INTERVAL||15;this.isDestroyed=!1;this._noAudioInputCount=0;this.context=fd();this.playNode=this.context.destination;this.outputNode=this.context.createGain();gd(this.outputNode);this.analyserNode=this.context.createAnalyser()}get isNoAudioInput(){return 3<=this.noAudioInputCount}get noAudioInputCount(){return this._noAudioInputCount}set noAudioInputCount(a){3>
                this._noAudioInputCount&&3<=a?this.onNoAudioInput&&this.onNoAudioInput():3<=this._noAudioInputCount&&0==this._noAudioInputCount%10&&this.onNoAudioInput&&this.onNoAudioInput();this._noAudioInputCount=a}startGetAudioBuffer(a){this.audioBufferNode||(this.audioBufferNode=this.context.createScriptProcessor(a),this.outputNode.connect(this.audioBufferNode),this.audioBufferNode.connect(this.context.destination),this.audioBufferNode.onaudioprocess=a=>{this.emit(lb.ON_AUDIO_BUFFER,fm(a))})}stopGetAudioBuffer(){this.audioBufferNode&&
                (this.audioBufferNode.onaudioprocess=null,this.outputNode.disconnect(this.audioBufferNode),this.audioBufferNode=void 0)}createOutputTrack(){if(!fa.webAudioMediaStreamDest)throw new m(l.NOT_SUPPORTED,"your browser is not support audio processor");return this.destNode&&this.outputTrack||(this.destNode=this.context.createMediaStreamDestination(),this.outputNode.connect(this.destNode),this.outputTrack=this.destNode.stream.getAudioTracks()[0]),this.outputTrack}play(a){"running"!==this.context.state&&cb(()=>
                {ed.emit("autoplay-failed")});this.isPlayed=!0;this.playNode=a||this.context.destination;this.outputNode.connect(this.playNode)}stop(){if(this.isPlayed)try{this.outputNode.disconnect(this.playNode)}catch(a){}this.isPlayed=!1}getAudioLevel(){return this.audioOutputLevel}getAccurateVolumeLevel(){let a=new Uint8Array(this.analyserNode.frequencyBinCount);this.analyserNode.getByteFrequencyData(a);let b=0;for(let d=0;d<a.length;d++)b+=a[d];return b/a.length}getAudioAvgLevel(){var a;null===this.audioOutputLevelCache&&
                (this.audioOutputLevelCache=[this.audioOutputLevel]);return Ae(a=this.audioOutputLevelCache).call(a,(a,d)=>a+d)/this.audioOutputLevelCache.length}getAudioVolume(){return this.outputNode.gain.value}setVolume(a){this.outputNode.gain.setValueAtTime(a,this.context.currentTime)}setMute(a){a?(this.disconnect(),this.audioLevelBase=0,this.audioOutputLevel=0):this.connect()}destroy(){this.disconnect();this.stop();this.isDestroyed=!0;this.onNoAudioInput=void 0}disconnect(){this.sourceNode&&this.sourceNode.disconnect();
                    this.outputNode&&this.outputNode.disconnect();window.clearInterval(this.updateAudioOutputLevelInterval)}connect(){var a;this.sourceNode&&this.sourceNode.connect(this.outputNode);this.outputNode.connect(this.analyserNode);this.updateAudioOutputLevelInterval=window.setInterval(Ba(a=this.updateAudioOutputLevel).call(a,this),w.AUDIO_SOURCE_VOLUME_UPDATE_INTERVAL||400)}updateAudioOutputLevel(){if(this.context&&"running"!==this.context.state&&this.context.resume(),this.analyserNode){if(this.analyserNode.getFloatTimeDomainData){var a=
                    new Float32Array(this.analyserNode.frequencyBinCount);this.analyserNode.getFloatTimeDomainData(a)}else{var b;a=new Uint8Array(this.analyserNode.frequencyBinCount);this.analyserNode.getByteTimeDomainData(a);let d=!0;a=new Float32Array(A(b=Ob(a)).call(b,a=>(128!==a&&(d=!1),.0078125*(a-128))));d?this.noAudioInputCount+=1:this.noAudioInputCount=0}for(b=0;b<a.length;b+=1)Math.abs(a[b])>this.audioLevelBase&&(this.audioLevelBase=Math.abs(a[b]),1<this.audioLevelBase&&(this.audioLevelBase=1));this.audioOutputLevel=
                    this.audioLevelBase;this.audioLevelBase/=4;null!==this.audioOutputLevelCache&&(this.audioOutputLevelCache.push(this.audioOutputLevel),this.audioOutputLevelCache.length>this.audioOutputLevelCacheMaxLength&&this.audioOutputLevelCache.shift())}}}class Xk extends Wk{constructor(a,b){if(super(),this.isCurrentTrackCloned=!1,this.isRemoteTrack=!1,this.rebuildWebAudio=()=>{if(!this.isNoAudioInput||this.isDestroyed)return document.body.removeEventListener("click",this.rebuildWebAudio,!0),void h.debug("rebuild web audio success, current volume",
                    this.getAudioLevel());this.context.resume().then(()=>h.info("resume success"));h.debug("rebuild web audio because of ios 12 bugs");this.disconnect();var a=this.track;this.track=this.track.clone();this.isCurrentTrackCloned?a.stop():this.isCurrentTrackCloned=!0;a=new MediaStream([this.track]);this.sourceNode=this.context.createMediaStreamSource(a);gd(this.sourceNode);this.analyserNode=this.context.createAnalyser();let b=this.outputNode.gain.value;this.outputNode=this.context.createGain();this.outputNode.gain.setValueAtTime(b,
                    this.context.currentTime);gd(this.outputNode);this.connect();this.audioElement.srcObject=a;this.isPlayed&&this.play(this.playNode)},"audio"!==a.kind)throw new m(l.UNEXPECTED_ERROR);this.track=a;a=new MediaStream([this.track]);this.isRemoteTrack=!!b;this.sourceNode=this.context.createMediaStreamSource(a);gd(this.sourceNode);this.connect();this.audioElement=document.createElement("audio");this.audioElement.srcObject=a;a=qa();b&&a.os===X.IOS&&(ed.on("state-change",this.rebuildWebAudio),this.onNoAudioInput=
                    ()=>{document.body.addEventListener("click",this.rebuildWebAudio,!0);this.rebuildWebAudio();document.body.click()})}get isFreeze(){return!1}updateTrack(a){this.sourceNode.disconnect();this.track=a;this.isCurrentTrackCloned=!1;a=new MediaStream([a]);this.sourceNode=this.context.createMediaStreamSource(a);gd(this.sourceNode);this.sourceNode.connect(this.outputNode);this.audioElement.srcObject=a}destroy(){this.audioElement.remove();ed.off("state-change",this.rebuildWebAudio);super.destroy()}}class Fp{constructor(){this.elementMap=
                    new Z;this.elementsNeedToResume=[];this.sinkIdMap=new Z;this.autoResumeAudioElement()}async setSinkID(a,b){let d=this.elementMap.get(a);if(this.sinkIdMap.set(a,b),d)try{await d.setSinkId(b)}catch(e){throw new m(l.PERMISSION_DENIED,"can not set sink id: "+e.toString());}}play(a,b){if(!this.elementMap.has(b)){var d=document.createElement("audio");d.autoplay=!0;d.srcObject=new MediaStream([a]);this.elementMap.set(b,d);(a=this.sinkIdMap.get(b))&&d.setSinkId(a).catch(a=>{h.warning("[".concat(b,"] set sink id failed"),
                    a.toString())});(a=d.play())&&a.then&&a.catch(a=>{h.warning("audio element play warning",a.toString());this.elementMap.has(b)&&"NotAllowedError"===a.name&&(h.warning("detected audio element autoplay failed"),this.elementsNeedToResume.push(d),cb(()=>{this.onAutoplayFailed&&this.onAutoplayFailed()}))})}}updateTrack(a,b){(a=this.elementMap.get(a))&&(a.srcObject=new MediaStream([b]))}isPlaying(a){return this.elementMap.has(a)}setVolume(a,b){(a=this.elementMap.get(a))&&(b=Math.max(0,Math.min(100,b)),a.volume=
                    b/100)}stop(a){var b,d;let e=this.elementMap.get(a);if(this.sinkIdMap.delete(a),e){var f=E(b=this.elementsNeedToResume).call(b,e);Ja(d=this.elementsNeedToResume).call(d,f,1);e.srcObject=null;e.remove();this.elementMap.delete(a)}}autoResumeAudioElement(){let a=()=>{var a;r(a=this.elementsNeedToResume).call(a,a=>{a.play().then(a=>{h.debug("Auto resume audio element success")}).catch(a=>{h.warning("Auto resume audio element failed!",a)})});this.elementsNeedToResume=[]};Pl().then(()=>{document.body.addEventListener("touchstart",
                    a,!0);document.body.addEventListener("mousedown",a,!0)})}}let ob=new Fp;class Za extends ye{constructor(a,b,d){super(a,d);this.trackMediaType="audio";this._enabled=!0;this._useAudioElement=!1;this._encoderConfig=b;this._source=new Xk(a);fa.webAudioWithAEC||(this._useAudioElement=!0)}get isPlaying(){return this._useAudioElement?ob.isPlaying(this.getTrackId()):this._source.isPlayed}setVolume(a){W(a,"volume",0,1E3);let b=t.reportApiInvoke(null,{tag:D.TRACER,name:y.LOCAL_AUDIO_TRACK_SET_VOLUME,options:[this.getTrackId(),
                        a]},300);this._source.setVolume(a/100);try{let a=this._source.createOutputTrack();this._mediaStreamTrack!==a&&(this._mediaStreamTrack=a,Ta(this,K.NEED_REPLACE_TRACK,this._mediaStreamTrack).then(()=>{h.debug("[".concat(this.getTrackId(),"] replace web audio track success"))}).catch(a=>{h.warning("[".concat(this.getTrackId(),"] replace web audio track failed"),a)}))}catch(d){}b.onSuccess()}getVolumeLevel(){return this._source.getAudioLevel()}async setPlaybackDevice(a){let b=t.reportApiInvoke(null,{tag:D.TRACER,
                    name:y.REMOTE_AUDIO_SET_OUTPUT_DEVICE,options:[this.getTrackId(),a]});if(!this._useAudioElement)throw new m(l.NOT_SUPPORTED,"your browser does not support setting the audio output device");try{await ob.setSinkID(this.getTrackId(),a)}catch(d){throw b.onError(d),d;}b.onSuccess()}async setEnabled(a){var b;if(a!==this._enabled){h.info("[".concat(this.getTrackId(),"] start setEnabled"),a);var d=await this._enabledMutex.lock();if(!a){this._originMediaStreamTrack.enabled=!1;try{await Ta(this,K.NEED_REMOVE_TRACK,
                    this)}catch(e){throw h.error("[".concat(this.getTrackId(),"] setEnabled to false error"),e.toString()),d(),e;}return this._enabled=!1,d()}this._originMediaStreamTrack.enabled=!0;try{await Ta(this,K.NEED_ADD_TRACK,this)}catch(e){throw h.error("[".concat(this.getTrackId(),"] setEnabled to true error"),e.toString()),d(),e;}h.info(n(b="[".concat(this.getTrackId(),"] setEnabled to ")).call(b,a," success"));this._enabled=!0;d()}}getStats(){cd(()=>{h.warning("[deprecated] LocalAudioTrack.getStats will be removed in the future, use AgoraRTCClient.getLocalAudioStats instead")},
                    "localAudioTrackGetStatsWarning");return gc(this,K.GET_STATS)||cf({},te)}setAudioFrameCallback(a,b=4096){if(!a)return this._source.removeAllListeners(lb.ON_AUDIO_BUFFER),void this._source.stopGetAudioBuffer();this._source.startGetAudioBuffer(b);this._source.removeAllListeners(lb.ON_AUDIO_BUFFER);this._source.on(lb.ON_AUDIO_BUFFER,b=>a(b))}play(){let a=t.reportApiInvoke(null,{tag:D.TRACER,name:y.LOCAL_AUDIO_TRACK_PLAY,options:[this.getTrackId()]});h.debug("[".concat(this.getTrackId(),"] start audio playback"));
                    this._useAudioElement?(h.debug("[".concat(this.getTrackId(),"] start audio playback in element")),ob.play(this._mediaStreamTrack,this.getTrackId())):this._source.play();a.onSuccess()}stop(){let a=t.reportApiInvoke(null,{tag:D.TRACER,name:y.LOCAL_AUDIO_TRACK_STOP,options:[this.getTrackId()]});h.debug("[".concat(this.getTrackId(),"] stop audio playback"));this._useAudioElement?ob.stop(this.getTrackId()):this._source.stop();a.onSuccess()}close(){super.close();this._source.destroy()}_updatePlayerSource(){h.debug("[track-".concat(this.getTrackId(),
                    "] update player source track"));this._source.updateTrack(this._mediaStreamTrack);this._useAudioElement&&ob.updateTrack(this.getTrackId(),this._mediaStreamTrack)}async _updateOriginMediaStreamTrack(a,b){this._originMediaStreamTrack!==a&&(this._originMediaStreamTrack.removeEventListener("ended",this._handleTrackEnded),a.addEventListener("ended",this._handleTrackEnded),b&&this._originMediaStreamTrack.stop(),this._originMediaStreamTrack=a,this._source.updateTrack(this._originMediaStreamTrack),this._mediaStreamTrack!==
                this._source.outputTrack&&(this._mediaStreamTrack=this._originMediaStreamTrack,this._updatePlayerSource(),await Ta(this,K.NEED_REPLACE_TRACK,this._mediaStreamTrack)))}}class tg extends Za{constructor(a,b,d,e){super(a,b.encoderConfig?Fd(b.encoderConfig):{},e);this._deviceName="default";this._enabled=!0;this._config=b;this._constraints=d;this._deviceName=a.label}async setDevice(a){var b,d;let e=t.reportApiInvoke(null,{tag:D.TRACER,name:y.MIC_AUDIO_TRACK_SET_DEVICE,options:[this.getTrackId(),a]});if(h.info(n(b=
                    "[".concat(this.getTrackId,"] start set device to ")).call(b,a)),this._enabled)try{let d=await gb.getDeviceById(a);b={};b.audio=cf({},this._constraints);b.audio.deviceId={exact:a};this._originMediaStreamTrack.stop();let e=null;try{e=await Eb(b,this.getTrackId())}catch(k){throw h.error("[track-".concat(this.getTrackId(),"] setDevice failed"),k.toString()),e=await Eb({video:this._constraints},this.getTrackId()),await this._updateOriginMediaStreamTrack(e.getAudioTracks()[0],!1),k;}await this._updateOriginMediaStreamTrack(e.getAudioTracks()[0],
                    !1);this._deviceName=d.label;this._config.microphoneId=a;this._constraints.deviceId={exact:a}}catch(f){throw e.onError(f),h.error("[track-".concat(this.getTrackId(),"] setDevice error"),f.toString()),f;}else try{this._deviceName=(await gb.getDeviceById(a)).label,this._config.microphoneId=a,this._constraints.deviceId={exact:a}}catch(f){throw e.onError(f),h.error("[track-".concat(this.getTrackId(),"] setDevice error"),f.toString()),f;}e.onSuccess();h.info(n(d="[".concat(this.getTrackId,"] set device to ")).call(d,
                    a," success"))}async setEnabled(a,b){if(b)return h.debug("[".concat(this.getTrackId,"] setEnabled false (do not close microphone)")),await super.setEnabled(a);if(a!==this._enabled){h.info("[".concat(this.getTrackId(),"] start setEnabled"),a);b=await this._enabledMutex.lock();if(!a){this._originMediaStreamTrack.onended=null;this._originMediaStreamTrack.stop();this._enabled=!1;try{await Ta(this,K.NEED_REMOVE_TRACK,this)}catch(e){throw h.error("[".concat(this.getTrackId(),"] setEnabled false failed"),
                    e.toString()),b(),e;}return void b()}a=cf({},this._constraints);var d=gb.searchDeviceIdByName(this._deviceName);d&&!a.deviceId&&(a.deviceId=d);try{let a=await Eb({audio:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(a.getAudioTracks()[0],!1);await Ta(this,K.NEED_ADD_TRACK,this)}catch(e){throw b(),h.error("[".concat(this.getTrackId(),"] setEnabled true failed"),e.toString()),e;}this._enabled=!0;h.info("[".concat(this.getTrackId(),"] setEnabled success"));b()}}}class Gp extends Za{constructor(a,
b,d,e){super(b.createOutputTrack(),d,e);this.source=a;this._bufferSource=b;this._bufferSource.on(lb.AUDIO_SOURCE_STATE_CHANGE,a=>{this.emit(vd.SOURCE_STATE_CHANGE,a)});try{this._mediaStreamTrack=this._source.createOutputTrack()}catch(f){}}get currentState(){return this._bufferSource.currentState}get duration(){return this._bufferSource.duration}getCurrentTime(){return this._bufferSource.currentTime}startProcessAudioBuffer(a){let b=t.reportApiInvoke(null,{tag:D.TRACER,name:y.BUFFER_AUDIO_TRACK_START,
                    options:[this.getTrackId(),a,this.duration]});a&&this._bufferSource.updateOptions(a);this._bufferSource.startProcessAudioBuffer();b.onSuccess()}pauseProcessAudioBuffer(){let a=t.reportApiInvoke(null,{tag:D.TRACER,name:y.BUFFER_AUDIO_TRACK_PAUSE,options:[this.getTrackId()]});this._bufferSource.pauseProcessAudioBuffer();a.onSuccess()}seekAudioBuffer(a){let b=t.reportApiInvoke(null,{tag:D.TRACER,name:y.BUFFER_AUDIO_TRACK_SEEK,options:[this.getTrackId()]});this._bufferSource.seekAudioBuffer(a);b.onSuccess()}resumeProcessAudioBuffer(){let a=
                    t.reportApiInvoke(null,{tag:D.TRACER,name:y.BUFFER_AUDIO_TRACK_RESUME,options:[this.getTrackId()]});this._bufferSource.resumeProcessAudioBuffer();a.onSuccess()}stopProcessAudioBuffer(){let a=t.reportApiInvoke(null,{tag:D.TRACER,name:y.BUFFER_AUDIO_TRACK_STOP,options:[this.getTrackId()]});this._bufferSource.stopProcessAudioBuffer();a.onSuccess()}}class Sc extends Za{constructor(){let a=fd().createMediaStreamDestination();super(a.stream.getAudioTracks()[0]);try{this._mediaStreamTrack=this._source.createOutputTrack()}catch(b){}this.destNode=
                    a;this.trackList=[]}hasAudioTrack(a){var b;return-1!==E(b=this.trackList).call(b,a)}addAudioTrack(a){var b;-1===E(b=this.trackList).call(b,a)?(h.debug("add ".concat(a.getTrackId()," to mixing track")),a._source.outputNode.connect(this.destNode),this.trackList.push(a),this.updateEncoderConfig()):h.warning("track is already added")}removeAudioTrack(a){var b;if(-1!==E(b=this.trackList).call(b,a)){h.debug("remove ".concat(a.getTrackId()," from mixing track"));try{a._source.outputNode.disconnect(this.destNode)}catch(d){}bd(this.trackList,
                    a);this.updateEncoderConfig()}}updateEncoderConfig(){var a;let b={};r(a=this.trackList).call(a,a=>{a._encoderConfig&&((a._encoderConfig.bitrate||0)>(b.bitrate||0)&&(b.bitrate=a._encoderConfig.bitrate),(a._encoderConfig.sampleRate||0)>(b.sampleRate||0)&&(b.sampleRate=a._encoderConfig.sampleRate),(a._encoderConfig.sampleSize||0)>(b.sampleSize||0)&&(b.sampleSize=a._encoderConfig.sampleSize),a._encoderConfig.stereo&&(b.stereo=!0))});this._encoderConfig=b}}let ug=new Z;class Hp extends Ya{constructor(a){super();
                    this.inChannelInfo={joinAt:null,duration:0};this._state="DISCONNECTED";this.needToSendUnpubUnsub=new Z;this.hasChangeBGPAddress=this.isSignalRecover=!1;this.joinGatewayStartTime=0;this._signalTimeout=!1;this.clientId=a.clientId;this.spec=a;this.signal=new Ep(df({},a,{retryConfig:a.websocketRetryConfig}));this._statsCollector=a.statsCollector;this.role=a.role||"audience";this.handleSignalEvents()}get state(){return this._state}set state(a){if(a!==this._state){var b=this._state;this._state=a;"DISCONNECTED"===
                a&&this._disconnectedReason?this.emit(ya.CONNECTION_STATE_CHANGE,a,b,this._disconnectedReason):this.emit(ya.CONNECTION_STATE_CHANGE,a,b)}}async join(a,b){var d;"disabled"!==a.cloudProxyServer&&(this.hasChangeBGPAddress=!0);let e=v();var f=ug.get(a.cname);if(f||(f=new Z,ug.set(a.cname,f)),f.has(a.uid))throw f=new m(l.UID_CONFLICT),t.joinGateway(a.sid,{lts:e,succ:!1,ec:f.code,addr:null,uid:a.uid,cid:a.cid}),f;f.set(a.uid,!0);this.joinInfo=a;this.key=b;b=A(d=a.gatewayAddrs).call(d,a=>"wss://".concat(a));
                    d=0;this.joinGatewayStartTime=e;try{d=(await this.signal.init(b)).uid}catch(g){throw h.error("[".concat(this.clientId,"] User join failed"),g.toString()),t.joinGateway(a.sid,{lts:e,succ:!1,ec:g.code===l.UNEXPECTED_ERROR?g.message:g.code,addr:this.signal.url,uid:a.uid,cid:a.cid}),f.delete(a.uid),this.signal.close(),g;}return this.state="CONNECTED",this.inChannelInfo.joinAt=v(),h.debug("[".concat(this.clientId,"] Connected to gateway server")),this.trafficStatsInterval=window.setInterval(()=>{this.updateTrafficStats().catch(a=>
                    {h.warning("[".concat(this.clientId,"] get traffic stats error"),a.toString())})},3E3),this.networkQualityInterval=window.setInterval(()=>{navigator&&void 0!==navigator.onLine&&!navigator.onLine?this.emit(ya.NETWORK_QUALITY,{downlinkNetworkQuality:6,uplinkNetworkQuality:6}):this._signalTimeout?this.emit(ya.NETWORK_QUALITY,{downlinkNetworkQuality:5,uplinkNetworkQuality:5}):"CONNECTED"===this.state&&this._statsCollector.trafficStats?this.emit(ya.NETWORK_QUALITY,{uplinkNetworkQuality:Jh(this._statsCollector.trafficStats.B_unq),
                        downlinkNetworkQuality:Jh(this._statsCollector.trafficStats.B_dnq)}):this.emit(ya.NETWORK_QUALITY,{uplinkNetworkQuality:0,downlinkNetworkQuality:0})},2E3),d}async leave(a=!1){if("DISCONNECTED"!==this.state){this.state="DISCONNECTING";try{if(!a&&this.signal.connectionState===ta.CONNECTED){var b=this.signal.request(ca.LEAVE,void 0,!0);await (3E3===1/0?b:u.race([b,Ql(3E3)]))}}catch(d){h.warning("[".concat(this.clientId,"] leave request failed, ignore"),d)}this.signal.close();this.reset();this.state=
                    "DISCONNECTED"}}async publish(a,b){if(!this.joinInfo)throw new m(l.UNEXPECTED_ERROR,"publish no joinInfo");let d=a.getUserId(),e=a.videoTrack?Fl(a.videoTrack):{};if(a.on(G.NEED_ANSWER,(f,g,k)=>{var q;let n={state:"offer",stream_type:b,p2p_id:a.pc.ID,sdp:z(f),audio:!!a.audioTrack,video:!!a.videoTrack,screen:a.videoTrack&&-1!==E(q=a.videoTrack._hints).call(q,nb.SCREEN_TRACK),attributes:e,dtx:a.audioTrack instanceof tg&&a.audioTrack._config.DTX,hq:!1,lq:!1,stereo:!1,speech:!1,mode:this.spec.mode,codec:this.spec.codec,
                    extend:w.PUB_EXTEND};this.signal.request(ca.PUBLISH,n,!0).then(a=>{d&&this.needToSendUnpubUnsub.set(d,!0);g(JSON.parse(a.sdp))}).catch(b=>{if(f.retry&&b.data&&b.data.code===C.ERR_PUBLISH_REQUEST_INVALID)return h.warning("[".concat(this.clientId,"] receiver publish error code, retry"),b.toString()),Ma(a,G.NEED_UNPUB).then(()=>{f.retry=!1;Ma(a,G.NEED_ANSWER,f).then(g).catch(k)});b.code!==l.WS_ABORT&&k(b)})}),a.on(G.NEED_RENEGOTIATE,(d,e,k)=>{this.signal.request(ca.PUBLISH,{state:"negotiation",stream_type:b,
                    p2p_id:a.pc.ID,sdp:d},!0).then(a=>{e(JSON.parse(a.sdp))}).catch(a=>{a.code!==l.WS_ABORT&&k(a)})}),a.on(G.NEED_UNPUB,e=>d&&!this.needToSendUnpubUnsub.has(d)?e(!1):"RECONNECTING"===this.state?e(!0):void this.signal.request(ca.UNPUBLISH,{stream_id:a.getUserId(),stream_type:b},!0).then(()=>e(!1)).catch(a=>{h.warning("unpublish warning: ",a);e(!0)})),a.on(G.NEED_UPLOAD,(a,d)=>{this.signal.upload(a,{stream_type:b,stats:d})}),a.on(G.NEED_SIGNAL_RTT,a=>{a(this.signal.rtt)}),"RECONNECTING"!==this.state){if("CONNECTED"!==
                    this.state)return(new m(l.INVALID_OPERATION,"can not publish when connection state is ".concat(this.state))).throw();await a.startP2PConnection()}else a.readyToReconnectPC()}async subscribe(a){if(!this.joinInfo)throw new m(l.UNEXPECTED_ERROR,"subscribe no joinInfo");let b=a.getUserId();if(a.on(G.NEED_ANSWER,(d,e,f)=>{var g=a.subscribeOptions;g={stream_id:a.getUserId(),audio:!!g.audio,video:!!g.video,mode:this.spec.mode,codec:this.spec.codec,p2p_id:a.pc.ID,sdp:z(d),tcc:!!w.SUBSCRIBE_TCC,extend:w.SUB_EXTEND};
                    this.signal.request(ca.SUBSCRIBE,g,!0).then(a=>{this.needToSendUnpubUnsub.set(b,!0);e(JSON.parse(a.sdp))}).catch(b=>{if(d.retry&&b.data&&b.data.code===C.ERR_SUBSCRIBE_REQUEST_INVALID)return h.warning("[".concat(this.clientId,"] receiver subscribe error code, retry"),b.toString()),Ma(a,G.NEED_UNSUB).then(()=>{d.retry=!1;Ma(a,G.NEED_ANSWER,d).then(e).catch(f)});b.code!==l.WS_ABORT&&f(b)})}),a.on(G.NEED_UNSUB,d=>this.needToSendUnpubUnsub.has(b)?"RECONNECTING"===this.state?d(!0):void this.signal.request(ca.UNSUBSCRIBE,
                    {stream_id:a.getUserId()},!0).then(()=>d(!1)).catch(a=>{h.warning("unsubscribe warning",a);d(!0)}):d(!1)),a.on(G.NEED_UPLOAD,(b,e)=>{this.signal.upload(b,{stream_id:a.getUserId(),stats:e})}),a.on(G.NEED_SIGNAL_RTT,a=>{a(this.signal.rtt)}),"RECONNECTING"!==this.state){if("CONNECTED"!==this.state)return(new m(l.INVALID_OPERATION,"can not subscribe when connection state is ".concat(this.state))).throw();await a.startP2PConnection()}else a.readyToReconnectPC()}async subscribeChange(a,b){var d,e;if(!this.joinInfo)throw new m(l.UNEXPECTED_ERROR,
                    "subscribe no joinInfo");if(await a.setSubscribeOptions(b),"RECONNECTING"!==this.state){if("CONNECTED"!==this.state)return(new m(l.INVALID_OPERATION,"can not subscribe change when connection state is ".concat(this.state))).throw();h.debug(n(d=n(e="[".concat(this.clientId,"] send subscribe change, audio: ")).call(e,b.audio,", video: ")).call(d,b.video));await this.signal.request(ca.SUBSCRIBE_CHANGE,{stream_id:a.getUserId(),audio:!!b.audio,video:!!b.video},!0)}}async unsubscribe(a){await a.closeP2PConnection()}getGatewayInfo(){return this.signal.request(ca.GATEWAY_INFO)}renewToken(a){return this.signal.request(ca.RENEW_TOKEN,
                    {token:a})}async setClientRole(a){a!==this.role&&("CONNECTED"===this.state?(await this.signal.request(ca.SET_CLIENT_ROLE,{role:a}),this.role=a):this.role=a)}async setRemoteVideoStreamType(a,b){await this.signal.request(ca.SWITCH_VIDEO_STREAM,{stream_id:a,stream_type:b})}async setStreamFallbackOption(a,b){await this.signal.request(ca.SET_FALLBACK_OPTION,{stream_id:a,fallback_type:b})}getInChannelInfo(){return this.inChannelInfo.joinAt&&(this.inChannelInfo.duration=v()-this.inChannelInfo.joinAt),df({},
                    this.inChannelInfo)}async getGatewayVersion(){return(await this.signal.request(ca.GATEWAY_INFO)).version}reset(){if(this.inChannelInfo.joinAt&&(this.inChannelInfo.duration=v()-this.inChannelInfo.joinAt,this.inChannelInfo.joinAt=null),this.trafficStatsInterval&&(window.clearInterval(this.trafficStatsInterval),this.trafficStatsInterval=void 0),this.joinInfo){let a=ug.get(this.joinInfo.cname);a&&a.delete(this.joinInfo.uid)}this.needToSendUnpubUnsub=new Z;this.key=this.joinInfo=void 0;this.networkQualityInterval&&
                (window.clearInterval(this.networkQualityInterval),this.networkQualityInterval=void 0)}updateTurnConfigFromSignal(){if(this.joinInfo){var a;(a=(a=(this.signal.url||"").match(/wss:\/\/([^:]+):(\d+)/))?{username:eb.username,password:eb.password,turnServerURL:a[1],tcpport:R(a[2])+30,udpport:R(a[2])+30,forceturn:!1}:null)&&"off"!==this.joinInfo.turnServer.mode&&this.joinInfo.turnServer.servers.push(df({},eb,{turnServerURL:a.turnServerURL,tcpport:a.tcpport,udpport:a.udpport}))}}async updateTrafficStats(){var a;
                    if("CONNECTED"===this.state){var b=await this.signal.request(ca.TRAFFIC_STATS,void 0,!0);b.timestamp=v();r(a=b.peer_delay).call(a,a=>{var b;let d=this._statsCollector.trafficStats&&U(b=this._statsCollector.trafficStats.peer_delay).call(b,b=>b.peer_uid===a.peer_uid);d&&d.B_st!==a.B_st&&cb(()=>{this.emit(ya.STREAM_TYPE_CHANGE,a.peer_uid,a.B_st)})});this._statsCollector.updateTrafficStats(b)}}getJoinMessage(){if(!this.joinInfo||!this.key)throw new m(l.UNEXPECTED_ERROR,"can not generate join message, no join info");
                    let a=ab({},this.joinInfo.apResponse),b={session_id:this.joinInfo.sid,app_id:this.joinInfo.appId,channel_key:this.key,channel_name:this.joinInfo.cname,sdk_version:db,browser:navigator.userAgent,process_id:w.PROCESS_ID,mode:this.spec.mode,codec:this.spec.codec,role:this.role,has_changed_gateway:this.hasChangeBGPAddress,ap_response:a,extends:w.JOIN_EXTEND,details:{6:this.joinInfo.stringUid},features:{rejoin:!0},optionalInfo:this.joinInfo.optionalInfo};this.joinInfo.stringUid&&(b.string_uid=this.joinInfo.stringUid);
                    if(this.joinInfo.aesmode&&this.joinInfo.aespassword)if(b.aes_mode=this.joinInfo.aesmode,w.ENCRYPT_AES){var d=this.joinInfo.aespassword;var e=a.uid;var f=d.length;d=(new TextEncoder).encode(d);var g=(4-d.length%4)%4;if(0!==g){var k=new d.constructor(d.length+g);g=new d.constructor(g);d=(k.set(d,0),k.set(g,d.length),k)}f=[f];d=new Uint32Array(d.buffer);k=new Uint32Array(f.length+d.length);f=(k.set(f,0),k.set(d,f.length),k);for(d=0;d<f.length;d++)f[d]^=e,f[d]=~f[d];e=Ye(new Uint8Array(f.buffer));b.aes_secret=
                        e;b.aes_encrypt=!0}else b.aes_secret=this.joinInfo.aespassword;return a.addresses[this.signal.websocket.currentURLIndex]&&(b.ap_response.ticket=a.addresses[this.signal.websocket.currentURLIndex].ticket,delete a.addresses),b}getRejoinMessage(){if(!this.joinInfo)throw new m(l.UNEXPECTED_ERROR,"can not generate rejoin message, no join info");return{session_id:this.joinInfo.sid,channel_name:this.joinInfo.cname,cid:this.joinInfo.cid,uid:this.joinInfo.uid,vid:Number(this.joinInfo.vid)}}handleSignalEvents(){this.signal.on(N.WS_RECONNECTING,
                    ()=>{this.joinInfo&&(this.state="RECONNECTING",t.sessionInit(this.joinInfo.sid,{lts:(new Date).getTime(),extend:this.isSignalRecover?{recover:!0}:{rejoin:!0},cname:this.joinInfo.cname,appid:this.joinInfo.appId,mode:this.spec.mode}),this.isSignalRecover=!1,this.joinGatewayStartTime=v())});this.signal.on(N.WS_CLOSED,a=>{this.reset();this._disconnectedReason=a;this.state="DISCONNECTED"});this.signal.on(N.WS_CONNECTED,()=>{this.updateTurnConfigFromSignal();this.state="CONNECTED";this.joinInfo&&t.joinGateway(this.joinInfo.sid,
                    {lts:this.joinGatewayStartTime,succ:!0,ec:null,vid:this.joinInfo.vid,addr:this.signal.url,uid:this.joinInfo.uid,cid:this.joinInfo.cid})});this.signal.on(Y.ON_UPLINK_STATS,a=>{this._statsCollector.updateUplinkStats(a)});this.signal.on(N.REQUEST_RECOVER,(a,b,d)=>{if(!this.joinInfo)return d(new m(l.UNEXPECTED_ERROR,"gateway: can not recover, no join info"));a&&(this.joinInfo.multiIP=a,this.hasChangeBGPAddress=!0);this.isSignalRecover=!0;Ma(this,ya.REQUEST_NEW_GATEWAY_LIST).then(b).catch(d)});this.signal.on(N.REQUEST_JOIN_INFO,
                    a=>{a(this.getJoinMessage())});this.signal.on(N.REQUEST_REJOIN_INFO,a=>{a(this.getRejoinMessage())});this.signal.on(N.REPORT_JOIN_GATEWAY,(a,b)=>{this.joinInfo&&t.joinGateway(this.joinInfo.sid,{lts:this.joinGatewayStartTime,succ:!1,ec:a,addr:b,uid:this.joinInfo.uid,cid:this.joinInfo.cid})});this.signal.on(N.IS_P2P_DISCONNECTED,a=>{a(ad(this,ya.IS_P2P_DISCONNECTED))});this.signal.on(N.DISCONNECT_P2P,()=>{this.needToSendUnpubUnsub=new Z;this.emit(ya.DISCONNECT_P2P)});this.signal.on(N.NEED_RENEW_SESSION,
                    ()=>{this.emit(ya.NEED_RENEW_SESSION)});this.signal.on(N.REQUEST_SUCCESS,()=>{this._signalTimeout=!1});this.signal.on(N.REQUEST_TIMEOUT,()=>{this._signalTimeout=!0})}}class Ip{constructor(a){this.client=a}updateConfig(a,b){if(b){null!=b.uploadLog&&(Xb("UPLOAD_LOG",b.uploadLog),t.reportApiInvoke(this.client._sessionId||null,{name:y.SET_CONFIG_DISTRIBUTE,options:{feature:"uploadLog",value:b.uploadLog}}).onSuccess());null!=b.dualStream&&(this.client._isDualStreamEnabled=b.dualStream,t.reportApiInvoke(this.client._sessionId||
                    null,{name:y.SET_CONFIG_DISTRIBUTE,options:{feature:"dualStream",value:b.dualStream}}).onSuccess());null==b.streamFallbackOptions||(this.client._defaultStreamFallbackType=b.streamFallbackOptions);try{var d,e;h.debug(n(d="[".concat(a,"] setParameter in distribution: ")).call(d,z(b)));A(e=S(b)).call(e,a=>Xb(a,b[a]))}catch(g){var f;h.debug(n(f="[".concat(a,"] setParameter in distribution failed: ")).call(f,z(b)))}}}}let ef=1,ff=1,di=a=>{const b=S(we);for(let f=0;f<b.length;f++){var d,e;const g=b[f],
                    k=we[g];if((yc||"CHINA"!==g)&&(Aa(d=k.WEBCS_DOMAIN).call(d,a)||Aa(e=k.WEBCS_DOMAIN_BACKUP_LIST).call(e,a)))return"OVERSEA"===k.CODE?"AS".concat(",","EU",",","AF",",","NA",",","SA",",","OC"):k.CODE}},Jp=a=>{const b={CODE:"",WEBCS_DOMAIN:[],WEBCS_DOMAIN_BACKUP_LIST:[],PROXY_CS:[],CDS_AP:[],ACCOUNT_REGISTER:[],UAP_AP:[],EVENT_REPORT_DOMAIN:[],EVENT_REPORT_BACKUP_DOMAIN:[],LOG_UPLOAD_SERVER:[]};return A(a).call(a,a=>{const d=we[a];(a=S(d))&&A(a).call(a,a=>{var e;"CODE"!==a&&(b[a]=n(e=b[a]).call(e,d[a]))})}),
                    b};var vg=function(){function a(a){this.input=[];this.size=a}return a.prototype.add=function(a){this.input.push(a);this.input.length>this.size&&this.input.splice(0,1)},a.prototype.diffMean=function(){return 0===this.input.length?0:(this.input[this.input.length-1]-this.input[0])/this.input.length},a}(),gi=function(a,b){return(gi=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(a,b){a.__proto__=b}||function(a,b){for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d])})(a,b)},wg=function(){return(wg=
                    Object.assign||function(a){for(var b,d=1,e=arguments.length;d<e;d++)for(var f in b=arguments[d])Object.prototype.hasOwnProperty.call(b,f)&&(a[f]=b[f]);return a}).apply(this,arguments)},yd={timestamp:0,bitrate:{actualEncoded:0,transmit:0},sendPacketLossRate:0,recvPacketLossRate:0,videoRecv:[],videoSend:[],audioRecv:[],audioSend:[]},Yk={firsCount:0,nacksCount:0,plisCount:0,framesDecodeCount:0,framesDecodeInterval:0,framesDecodeFreezeTime:0,decodeFrameRate:0,bytes:0,packetsLost:0,packetLostRate:0,packets:0,
                    ssrc:0},Zk={firsCount:0,nacksCount:0,plisCount:0,frameCount:0,bytes:0,packets:0,packetsLost:0,packetLostRate:0,ssrc:0,rttMs:0},$k={bytes:0,packets:0,packetsLost:0,packetLostRate:0,ssrc:0,rttMs:0},al={jitterBufferMs:0,jitterMs:0,bytes:0,packetsLost:0,packetLostRate:0,packets:0,ssrc:0,receivedFrames:0,droppedFrames:0},xg=function(){function a(a,d){var b=this;this.videoIsReady=!1;this.stats=hb(yd);this.isFirstAudioDecoded=this.isFirstAudioReceived=this.isFirstVideoDecoded=this.isFirstVideoReceived=!1;
                    this.lossRateWindowStats=[];this.pc=a;this.options=d;this.intervalTimer=window.setInterval(function(){return hf(b,void 0,void 0,function(){return jf(this,function(a){return this.updateStats(),[2]})})},this.options.updateInterval)}return a.prototype.getStats=function(){return this.stats},a.prototype.setVideoIsReady=function(a){this.videoIsReady=a},a.prototype.destroy=function(){window.clearInterval(this.intervalTimer)},a.prototype.calcLossRate=function(a){var b=this;this.lossRateWindowStats.push(a);
                    this.lossRateWindowStats.length>this.options.lossRateInterval&&this.lossRateWindowStats.splice(0,1);for(var e=this.lossRateWindowStats.length,f=0,g=0,k=0,h=0,l=function(d){a[d].forEach(function(a,q){if(b.lossRateWindowStats[e-1][d][q]&&b.lossRateWindowStats[0][d][q]){var l=b.lossRateWindowStats[e-1][d][q].packets-b.lossRateWindowStats[0][d][q].packets;q=b.lossRateWindowStats[e-1][d][q].packetsLost-b.lossRateWindowStats[0][d][q].packetsLost;"videoSend"===d||"audioSend"===d?(f+=l,k+=q):(g+=l,h+=q);
                        Number.isNaN(l)||Number.isNaN(l)?a.packetLostRate=0:a.packetLostRate=0>=l||0>=q?0:q/l}})},n=0,m=["videoSend","audioSend","videoRecv","audioRecv"];n<m.length;n++)l(m[n]);a.sendPacketLossRate=0>=f||0>=k?0:k/f;a.recvPacketLossRate=0>=g||0>=h?0:h/g},a}(),Kp=function(a){function b(){var b=null!==a&&a.apply(this,arguments)||this;return b._stats=yd,b.lastDecodeVideoReceiverStats=new Map,b}return gf(b,a),b.prototype.updateStats=function(){return hf(this,void 0,void 0,function(){var a,b,f,g;return jf(this,
                    function(d){switch(d.label){case 0:return[4,this._getStats()];case 1:return a=d.sent(),b=this.statsResponsesToObjects(a),this._stats=hb(yd),f=b.filter(function(a){return"ssrc"===a.type}),this.processSSRCStats(f),(g=b.find(function(a){return"VideoBwe"===a.type}))&&this.processBandwidthStats(g),this._stats.timestamp=Date.now(),this.calcLossRate(this._stats),this.stats=this._stats,[2]}})})},b.prototype.processBandwidthStats=function(a){this._stats.bitrate={actualEncoded:Number(a.googActualEncBitrate),
                    targetEncoded:Number(a.googTargetEncBitrate),retransmit:Number(a.googRetransmitBitrate),transmit:Number(a.googTransmitBitrate)};this._stats.sendBandwidth=Number(a.googAvailableSendBandwidth)},b.prototype.processSSRCStats=function(a){var b=this;a.forEach(function(a){var d=a.id.includes("send");switch(a.mediaType+"_"+(d?"send":"recv")){case "video_send":d=hb(Zk);d.codec=a.googCodecName;d.adaptionChangeReason="none";a.googCpuLimitedResolution&&(d.adaptionChangeReason="cpu");a.googBandwidthLimitedResolution&&
                (d.adaptionChangeReason="bandwidth");d.avgEncodeMs=Number(a.googAvgEncodeMs);d.inputFrame={width:Number(a.googFrameWidthInput)||Number(a.googFrameWidthSent),height:Number(a.googFrameHeightInput)||Number(a.googFrameHeightSent),frameRate:Number(a.googFrameRateInput)};d.sentFrame={width:Number(a.googFrameWidthSent),height:Number(a.googFrameHeightSent),frameRate:Number(a.googFrameRateInput)};d.firsCount=Number(a.googFirReceived);d.nacksCount=Number(a.googNacksReceived);d.plisCount=Number(a.googPlisReceived);
                    d.frameCount=Number(a.framesEncoded);d.bytes=Number(a.bytesSent);d.packets=Number(a.packetsSent);d.packetsLost=Number(a.packetsLost);d.ssrc=Number(a.ssrc);d.rttMs=Number(a.googRtt||0);b._stats.videoSend.push(d);b._stats.rtt=d.rttMs;break;case "video_recv":d=hb(Yk);var e=b.lastDecodeVideoReceiverStats.get(Number(a.ssrc));if(d.codec=a.googCodecName,d.targetDelayMs=Number(a.googTargetDelayMs),d.renderDelayMs=Number(a.googRenderDelayMs),d.currentDelayMs=Number(a.googCurrentDelayMs),d.minPlayoutDelayMs=
                    Number(a.googMinPlayoutDelayMs),d.decodeMs=Number(a.googDecodeMs),d.maxDecodeMs=Number(a.googMaxDecodeMs),d.receivedFrame={width:Number(a.googFrameWidthReceived),height:Number(a.googFrameHeightReceived),frameRate:Number(a.googFrameRateReceived)},d.decodedFrame={width:Number(a.googFrameWidthReceived),height:Number(a.googFrameHeightReceived),frameRate:Number(a.googFrameRateDecoded)},d.outputFrame={width:Number(a.googFrameWidthReceived),height:Number(a.googFrameHeightReceived),frameRate:Number(a.googFrameRateOutput)},
                    d.jitterBufferMs=Number(a.googJitterBufferMs),d.firsCount=Number(a.googFirsSent),d.nacksCount=Number(a.googNacksSent),d.plisCount=Number(a.googPlisSent),d.framesDecodeCount=Number(a.framesDecoded),d.bytes=Number(a.bytesReceived),d.packets=Number(a.packetsReceived),d.packetsLost=Number(a.packetsLost),d.ssrc=Number(a.ssrc),0<d.packets&&!b.isFirstVideoReceived&&(b.onFirstVideoReceived&&b.onFirstVideoReceived(),b.isFirstVideoReceived=!0),0<d.framesDecodeCount&&!b.isFirstVideoDecoded&&(b.onFirstVideoDecoded&&
                b.onFirstVideoDecoded(d.decodedFrame.width,d.decodedFrame.height),b.isFirstVideoDecoded=!0),e){a=e.stats;var f=Date.now()-e.lts;d.framesDecodeFreezeTime=a.framesDecodeFreezeTime;d.framesDecodeInterval=a.framesDecodeInterval;d.framesDecodeCount>a.framesDecodeCount&&b.isFirstVideoDecoded?(e.lts=Date.now(),d.framesDecodeInterval=f,500<=d.framesDecodeInterval&&(b.videoIsReady?d.framesDecodeFreezeTime+=d.framesDecodeInterval:b.setVideoIsReady(!0))):d.framesDecodeCount<e.stats.framesDecodeCount&&(d.framesDecodeInterval=
                    0)}b.lastDecodeVideoReceiverStats.set(d.ssrc,{stats:wg({},d),lts:Date.now()});b._stats.videoRecv.push(d);break;case "audio_recv":d=hb(al);d.codec=a.googCodecName;d.outputLevel=Math.abs(Number(a.audioOutputLevel))/32767;d.decodingCNG=Number(a.googDecodingCNG);d.decodingCTN=Number(a.googDecodingCTN);d.decodingCTSG=Number(a.googDecodingCTSG);d.decodingNormal=Number(a.googDecodingNormal);d.decodingPLC=Number(a.googDecodingPLC);d.decodingPLCCNG=Number(a.googDecodingPLCCNG);d.expandRate=Number(a.googExpandRate);
                    d.accelerateRate=Number(a.googAccelerateRate);d.preemptiveExpandRate=Number(a.googPreemptiveExpandRate);d.secondaryDecodedRate=Number(a.googSecondaryDecodedRate);d.speechExpandRate=Number(a.googSpeechExpandRate);d.preferredJitterBufferMs=Number(a.googPreferredJitterBufferMs);d.jitterBufferMs=Number(a.googJitterBufferMs);d.jitterMs=Number(a.googJitterReceived);d.bytes=Number(a.bytesReceived);d.packets=Number(a.packetsReceived);d.packetsLost=Number(a.packetsLost);d.ssrc=Number(a.ssrc);d.receivedFrames=
                        Number(a.googDecodingCTN)||Number(a.packetsReceived);d.droppedFrames=Number(a.googDecodingPLC)+Number(a.googDecodingPLCCNG)||Number(a.packetsLost);0<d.receivedFrames&&!b.isFirstAudioReceived&&(b.onFirstAudioReceived&&b.onFirstAudioReceived(),b.isFirstAudioReceived=!0);0<d.decodingNormal&&!b.isFirstAudioDecoded&&(b.onFirstAudioDecoded&&b.onFirstAudioDecoded(),b.isFirstAudioDecoded=!0);b._stats.audioRecv.push(d);break;case "audio_send":d=hb($k),d.codec=a.googCodecName,d.inputLevel=Math.abs(Number(a.audioInputLevel))/
                    32767,d.aecReturnLoss=Number(a.googEchoCancellationReturnLoss||0),d.aecReturnLossEnhancement=Number(a.googEchoCancellationReturnLossEnhancement||0),d.residualEchoLikelihood=Number(a.googResidualEchoLikelihood||0),d.residualEchoLikelihoodRecentMax=Number(a.googResidualEchoLikelihoodRecentMax||0),d.bytes=Number(a.bytesSent),d.packets=Number(a.packetsSent),d.packetsLost=Number(a.packetsLost),d.ssrc=Number(a.ssrc),d.rttMs=Number(a.googRtt||0),b._stats.rtt=d.rttMs,b._stats.audioSend.push(d)}})},b.prototype._getStats=
                    function(){var a=this;return new Promise(function(b,d){a.pc.getStats(b,d)})},b.prototype.statsResponsesToObjects=function(a){var b=[];return a.result().forEach(function(a){var d={id:a.id,timestamp:a.timestamp.valueOf().toString(),type:a.type};a.names().forEach(function(b){d[b]=a.stat(b)});b.push(d)}),b},b}(xg),dc;!function(a){a.CERTIFICATE="certificate";a.CODEC="codec";a.CANDIDATE_PAIR="candidate-pair";a.LOCAL_CANDIDATE="local-candidate";a.REMOTE_CANDIDATE="remote-candidate";a.INBOUND="inbound-rtp";
                    a.TRACK="track";a.OUTBOUND="outbound-rtp";a.PC="peer-connection";a.REMOTE_INBOUND="remote-inbound-rtp";a.REMOTE_OUTBOUND="remote-outbound-rtp";a.TRANSPORT="transport";a.CSRC="csrc";a.DATA_CHANNEL="data-channel";a.STREAM="stream";a.SENDER="sender";a.RECEIVER="receiver"}(dc||(dc={}));var bl=function(a){function b(){var b=null!==a&&a.apply(this,arguments)||this;return b._stats=yd,b.lastDecodeVideoReceiverStats=new Map,b.lastVideoFramesRecv=new Map,b.lastVideoFramesSent=new Map,b.lastVideoFramesDecode=
                    new Map,b.mediaBytesSent=new Map,b.mediaBytesRetransmit=new Map,b.mediaBytesTargetEncode=new Map,b.lastEncoderMs=new Map,b}return gf(b,a),b.prototype.updateStats=function(){return hf(this,void 0,void 0,function(){var a,b=this;return jf(this,function(d){switch(d.label){case 0:return a=this,[4,this.pc.getStats()];case 1:return a.report=d.sent(),this._stats=hb(yd),this.report.forEach(function(a){switch(a.type){case dc.OUTBOUND:"audio"===a.mediaType?b.processAudioOutboundStats(a):"video"===a.mediaType&&
                    b.processVideoOutboundStats(a);break;case dc.INBOUND:"audio"===a.mediaType?b.processAudioInboundStats(a):"video"===a.mediaType&&b.processVideoInboundStats(a);break;case dc.TRANSPORT:(a=b.report.get(a.selectedCandidatePairId))&&b.processCandidatePairStats(a);break;case dc.CANDIDATE_PAIR:a.selected&&b.processCandidatePairStats(a)}}),this.updateSendBitrate(),this._stats.timestamp=Date.now(),this.calcLossRate(this._stats),this.stats=this._stats,[2]}})})},b.prototype.processCandidatePairStats=function(a){this._stats.sendBandwidth=
                    a.availableOutgoingBitrate||0;a.currentRoundTripTime&&(this._stats.rtt=1E3*a.currentRoundTripTime);this._stats.videoSend.forEach(function(b){!b.rttMs&&a.currentRoundTripTime&&(b.rttMs=1E3*a.currentRoundTripTime)});this._stats.audioSend.forEach(function(b){!b.rttMs&&a.currentRoundTripTime&&(b.rttMs=1E3*a.currentRoundTripTime)})},b.prototype.processAudioInboundStats=function(a){var b=this._stats.audioRecv.find(function(b){return b.ssrc===a.ssrc});b||(b=hb(al),this._stats.audioRecv.push(b));b.ssrc=a.ssrc;
                    b.packets=a.packetsReceived;b.packetsLost=a.packetsLost;b.bytes=a.bytesReceived;b.jitterMs=1E3*a.jitter;a.trackId&&this.processAudioTrackReceiverStats(a.trackId,b);a.codecId&&(b.codec=this.getCodecFromCodecStats(a.codecId));b.receivedFrames||(b.receivedFrames=a.packetsReceived);b.droppedFrames||(b.droppedFrames=a.packetsLost);0<b.receivedFrames&&!this.isFirstAudioReceived&&(this.onFirstAudioReceived&&this.onFirstAudioReceived(),this.isFirstAudioReceived=!0);b.outputLevel&&0<b.outputLevel&&!this.isFirstAudioDecoded&&
                    (this.onFirstAudioDecoded&&this.onFirstAudioDecoded(),this.isFirstAudioDecoded=!0)},b.prototype.processVideoInboundStats=function(a){var b=this._stats.videoRecv.find(function(b){return b.ssrc===a.ssrc});b||(b=hb(Yk),this._stats.videoRecv.push(b));b.ssrc=a.ssrc;b.packets=a.packetsReceived;b.packetsLost=a.packetsLost;b.bytes=a.bytesReceived;b.firsCount=a.firCount;b.nacksCount=a.nackCount;b.plisCount=a.pliCount;b.framesDecodeCount=a.framesDecoded;var d=this.lastDecodeVideoReceiverStats.get(b.ssrc),g=
                    this.lastVideoFramesDecode.get(b.ssrc),k=Date.now();if(0<b.framesDecodeCount&&!this.isFirstVideoDecoded){var h=b.decodedFrame?b.decodedFrame.width:0,l=b.decodedFrame?b.decodedFrame.height:0;this.onFirstVideoDecoded&&this.onFirstVideoDecoded(h,l);this.isFirstVideoDecoded=!0}d&&(h=d.stats,l=k-d.lts,b.framesDecodeFreezeTime=h.framesDecodeFreezeTime,b.framesDecodeInterval=h.framesDecodeInterval,b.framesDecodeCount>h.framesDecodeCount&&this.isFirstVideoDecoded?(d.lts=Date.now(),b.framesDecodeInterval=
                    l,500<=b.framesDecodeInterval&&(this.videoIsReady?b.framesDecodeFreezeTime+=b.framesDecodeInterval:this.setVideoIsReady(!0))):b.framesDecodeCount<h.framesDecodeCount&&(b.framesDecodeInterval=0));g&&800<=k-g.lts?(b.decodeFrameRate=Math.round((b.framesDecodeCount-g.count)/((k-g.lts)/1E3)),this.lastVideoFramesDecode.set(b.ssrc,{count:b.framesDecodeCount,lts:k,rate:b.decodeFrameRate})):g?b.decodeFrameRate=g.rate:this.lastVideoFramesDecode.set(b.ssrc,{count:b.framesDecodeCount,lts:k,rate:0});a.totalDecodeTime&&
                (b.decodeMs=1E3*a.totalDecodeTime);a.trackId&&this.processVideoTrackReceiverStats(a.trackId,b);a.codecId&&(b.codec=this.getCodecFromCodecStats(a.codecId));a.framerateMean&&(b.framesRateFirefox=a.framerateMean);0<b.packets&&!this.isFirstVideoReceived&&(this.onFirstVideoReceived&&this.onFirstVideoReceived(),this.isFirstVideoReceived=!0);this.lastDecodeVideoReceiverStats.set(b.ssrc,{stats:wg({},b),lts:d?d.lts:Date.now()})},b.prototype.processVideoOutboundStats=function(a){var b=this._stats.videoSend.find(function(b){return b.ssrc===
                    a.ssrc});b||(b=hb(Zk),this._stats.videoSend.push(b));var d=this.mediaBytesSent.get(a.ssrc);d?d.add(a.bytesSent):((g=new vg(10)).add(a.bytesSent),this.mediaBytesSent.set(a.ssrc,g));void 0!==a.retransmittedBytesSent&&((d=this.mediaBytesRetransmit.get(a.ssrc))?d.add(a.retransmittedBytesSent):((g=new vg(10)).add(a.retransmittedBytesSent),this.mediaBytesRetransmit.set(a.ssrc,g)));if(a.totalEncodedBytesTarget){var g;(d=this.mediaBytesTargetEncode.get(a.ssrc))?d.add(a.totalEncodedBytesTarget):((g=new vg(10)).add(a.totalEncodedBytesTarget),
                    this.mediaBytesTargetEncode.set(a.ssrc,g))}if(b.ssrc=a.ssrc,b.bytes=a.bytesSent,b.packets=a.packetsSent,b.firsCount=a.firCount,b.nacksCount=a.nackCount,b.plisCount=a.pliCount,b.frameCount=a.framesEncoded,b.adaptionChangeReason=a.qualityLimitationReason,a.totalEncodeTime&&a.framesEncoded)d=this.lastEncoderMs.get(a.ssrc),b.avgEncodeMs=!d||d.lastFrameCount>a.framesEncoded?1E3*a.totalEncodeTime/a.framesEncoded:1E3*(a.totalEncodeTime-d.lastEncoderTime)/(a.framesEncoded-d.lastFrameCount),this.lastEncoderMs.set(a.ssrc,
                    {lastFrameCount:a.framesEncoded,lastEncoderTime:a.totalEncodeTime,lts:Date.now()});(a.codecId&&(b.codec=this.getCodecFromCodecStats(a.codecId)),a.mediaSourceId&&this.processVideoMediaSource(a.mediaSourceId,b),a.trackId&&this.processVideoTrackSenderStats(a.trackId,b),a.remoteId)?this.processRemoteInboundStats(a.remoteId,b):(d=this.findRemoteStatsId(a.ssrc,dc.REMOTE_INBOUND))&&this.processRemoteInboundStats(d,b)},b.prototype.processAudioOutboundStats=function(a){var b=this._stats.audioSend.find(function(b){return b.ssrc===
                    a.ssrc});if(b||(b=hb($k),this._stats.audioSend.push(b)),b.ssrc=a.ssrc,b.packets=a.packetsSent,b.bytes=a.bytesSent,a.mediaSourceId&&this.processAudioMediaSource(a.mediaSourceId,b),a.codecId&&(b.codec=this.getCodecFromCodecStats(a.codecId)),a.trackId&&this.processAudioTrackSenderStats(a.trackId,b),a.remoteId)this.processRemoteInboundStats(a.remoteId,b);else{var d=this.findRemoteStatsId(a.ssrc,dc.REMOTE_INBOUND);d&&this.processRemoteInboundStats(d,b)}},b.prototype.findRemoteStatsId=function(a,b){var d=
                    Array.from(this.report.values()).find(function(d){return d.type===b&&d.ssrc===a});return d?d.id:null},b.prototype.processVideoMediaSource=function(a,b){(a=this.report.get(a))&&a.width&&a.height&&a.framesPerSecond&&(b.inputFrame={width:a.width,height:a.height,frameRate:a.framesPerSecond})},b.prototype.processAudioMediaSource=function(a,b){(a=this.report.get(a))&&(b.inputLevel=a.audioLevel)},b.prototype.processVideoTrackSenderStats=function(a,b){if(a=this.report.get(a)){var d=0,e=Date.now(),k=this.lastVideoFramesSent.get(b.ssrc);
                    k&&800<=e-k.lts?(d=Math.round((a.framesSent-k.count)/((e-k.lts)/1E3)),this.lastVideoFramesSent.set(b.ssrc,{count:a.framesSent,lts:e,rate:d})):k?d=k.rate:this.lastVideoFramesSent.set(b.ssrc,{count:a.framesSent,lts:e,rate:0});b.sentFrame={width:a.frameWidth,height:a.frameHeight,frameRate:d}}},b.prototype.processVideoTrackReceiverStats=function(a,b){if(a=this.report.get(a)){var d=this.lastVideoFramesRecv.get(b.ssrc),e=Date.now();b.framesReceivedCount=a.framesReceived;var k=0;d&&800<=e-d.lts?(k=Math.round((a.framesReceived-
                    d.count)/((e-d.lts)/1E3)),this.lastVideoFramesRecv.set(b.ssrc,{count:a.framesReceived,lts:e,rate:k})):d?k=d.rate:this.lastVideoFramesRecv.set(b.ssrc,{count:a.framesReceived,lts:e,rate:0});b.receivedFrame={width:a.frameWidth||0,height:a.frameHeight||0,frameRate:k||0};b.decodedFrame={width:a.frameWidth||0,height:a.frameHeight||0,frameRate:b.decodeFrameRate||0};b.outputFrame={width:a.frameWidth||0,height:a.frameHeight||0,frameRate:b.decodeFrameRate||0};a.jitterBufferDelay&&a.jitterBufferEmittedCount&&
                (b.jitterBufferMs=1E3*a.jitterBufferDelay/a.jitterBufferEmittedCount,b.currentDelayMs=1E3*a.jitterBufferDelay/a.jitterBufferEmittedCount)}},b.prototype.processAudioTrackSenderStats=function(a,b){(a=this.report.get(a))&&(b.aecReturnLoss=a.echoReturnLoss||0,b.aecReturnLossEnhancement=a.echoReturnLossEnhancement||0)},b.prototype.processAudioTrackReceiverStats=function(a,b){if(a=this.report.get(a)){a.removedSamplesForAcceleration&&a.totalSamplesReceived&&(b.accelerateRate=a.removedSamplesForAcceleration/
                    a.totalSamplesReceived);a.jitterBufferDelay&&a.jitterBufferEmittedCount&&(b.jitterBufferMs=1E3*a.jitterBufferDelay/a.jitterBufferEmittedCount);b.outputLevel=a.audioLevel;var d=1920;a.totalSamplesDuration&&a.totalSamplesReceived&&(d=a.totalSamplesReceived/a.totalSamplesDuration/50,b.receivedFrames=Math.round(a.totalSamplesReceived/d));a.concealedSamples&&(b.droppedFrames=Math.round(a.concealedSamples/d))}},b.prototype.processRemoteInboundStats=function(a,b){(a=this.report.get(a))&&(b.packetsLost=a.packetsLost,
                a.roundTripTime&&(b.rttMs=1E3*a.roundTripTime))},b.prototype.getCodecFromCodecStats=function(a){a=this.report.get(a);return a?(a=a.mimeType.match(/\/(.*)$/))&&a[1]?a[1]:"":""},b.prototype.updateSendBitrate=function(){var a=0,b=null,f=null;this.mediaBytesSent.forEach(function(b){a+=b.diffMean()});this.mediaBytesRetransmit.forEach(function(a){b=null===b?a.diffMean():b+a.diffMean()});this.mediaBytesTargetEncode.forEach(function(a){f=null===f?a.diffMean():f+a.diffMean()});this._stats.bitrate={actualEncoded:8*
                        (null!==b?a-b:a)/(this.options.updateInterval/1E3),transmit:8*a/(this.options.updateInterval/1E3)};null!==b&&(this._stats.bitrate.retransmit=8*b/(this.options.updateInterval/1E3));null!==f&&(this._stats.bitrate.targetEncoded=8*f/(this.options.updateInterval/1E3))},b}(xg),Lp=function(a){function b(){return null!==a&&a.apply(this,arguments)||this}return gf(b,a),b.prototype.updateStats=function(){return Promise.resolve()},b}(xg);class cl{constructor(a){this.localCandidateCount=0;this.allCandidateReceived=
                    !1;this.videoTrack=this.audioTrack=null;this.mediaStream=new MediaStream;this.ID=dl;dl+=1;this.spec=a;this.createPeerConnection();a=this.pc;var b=void 0,d=void 0;void 0===b&&(b=250);void 0===d&&(d=8);var e;this.statsFilter=(e=(e=navigator.userAgent.toLocaleLowerCase().match(/chrome\/[\d]./i))&&e[0]?Number(e[0].split("/")[1]):null)?76>e?new Kp(a,{updateInterval:b,lossRateInterval:d}):new bl(a,{updateInterval:b,lossRateInterval:d}):window.RTCStatsReport&&a.getStats()instanceof Promise?new bl(a,{updateInterval:b,
                    lossRateInterval:d}):new Lp(a,{updateInterval:b,lossRateInterval:d})}get _statsFilter(){return this.statsFilter}getStats(){return this.statsFilter.getStats()}async createOfferSDP(){try{let a=await this.pc.createOffer(this.offerOptions);if(!a.sdp)throw Error("offer sdp is empty");return a.sdp}catch(a){throw h.error("create offer error:",a.toString()),new m(l.CREATE_OFFER_FAILED,a.toString());}}async setOfferSDP(a){try{await this.pc.setLocalDescription({type:"offer",sdp:a})}catch(b){throw h.error("set local offer error",
                    b.toString()),new m(l.CREATE_OFFER_FAILED,b.toString());}}async setAnswerSDP(a){try{await this.pc.setRemoteDescription({type:"answer",sdp:a})}catch(b){if("InvalidStateError"!==b.name||"stable"!==this.pc.signalingState)throw h.error("set remote answer error",b.toString()),new m(l.SET_ANSWER_FAILED,b.toString());h.debug("[pc-".concat(this.ID,"] ignore invalidstate error"))}}close(){this.onConnectionStateChange=this.onICEConnectionStateChange=void 0;try{this.pc.close()}catch(a){}this.statsFilter.destroy()}createPeerConnection(){let a=
                    {iceServers:[{urls:"stun:webcs.agora.io:3478"}]};var b;this.spec.iceServers?a.iceServers=this.spec.iceServers:this.spec.turnServer&&"off"!==this.spec.turnServer.mode&&r(b=this.spec.turnServer.servers).call(b,b=>{var d,f;(a.iceServers&&a.iceServers.push({username:b.username,credential:b.password,credentialType:"password",urls:n(d="turn:".concat(b.turnServerURL,":")).call(d,b.udpport,"?transport=udp")}),b.tcpport)&&a.iceServers&&a.iceServers.push({username:b.username,credential:b.password,credentialType:"password",
                    urls:n(f="turn:".concat(b.turnServerURL,":")).call(f,b.tcpport,"?transport=tcp")});b.forceturn&&(a.iceTransportPolicy="relay")});w.CHROME_FORCE_PLAN_B&&We()&&(a.sdpSemantics="plan-b",fa.supportUnifiedPlan=!1);this.pc=new RTCPeerConnection(a);this.pc.oniceconnectionstatechange=()=>{this.onICEConnectionStateChange&&this.onICEConnectionStateChange(this.pc.iceConnectionState)};this.pc.onconnectionstatechange=()=>{this.onConnectionStateChange&&this.onConnectionStateChange(this.pc.connectionState)};this.pc.onsignalingstatechange=
                    ()=>{"closed"===this.pc.connectionState&&this.onConnectionStateChange&&this.onConnectionStateChange(this.pc.connectionState)};this.pc.onicecandidate=a=>{if(!a.candidate)return this.pc.onicecandidate=null,this.allCandidateReceived=!0,void h.debug("[pc-".concat(this.ID,"] local candidate count"),this.localCandidateCount);this.localCandidateCount+=1};Ec(()=>{this.allCandidateReceived||(this.allCandidateReceived=!0,h.debug("[pc-".concat(this.ID,"] onicecandidate timeout, local candidate count"),this.localCandidateCount))},
                    w.CANDIDATE_TIMEOUT)}}class el extends cl{constructor(a){super(a)}async addStream(a){a=a.getTracks();for(let b of a)await this.addTrack(b)}async replaceTrack(a){if(!fa.supportReplaceTrack){var b="audio"===a.kind?this.audioTrack:this.videoTrack;if(!b)throw new m(l.UNEXPECTED_ERROR,"can not find replaced track");return this.removeTrack(b),await this.addTrack(a),!0}let d=this.getSender(a.kind),e=U(b=this.mediaStream.getTracks()).call(b,b=>b.kind===a.kind);e&&this.mediaStream.removeTrack(e);this.mediaStream.addTrack(a);
                    try{await d.replaceTrack(a),"audio"===a.kind?this.audioTrack=a:this.videoTrack=a}catch(f){throw new m(l.SENDER_REPLACE_FAILED,f.toString());}return!1}removeTrack(a){let b=this.getSender(a.kind);this.mediaStream.removeTrack(a);try{this.pc.removeTrack(b)}catch(d){h.warning("[pc-".concat(this.ID,"] remove track error, ignore"),d)}"audio"===a.kind?(this.audioTrack=null,this.audioSender=void 0,this.audioTransceiver&&(this.audioTransceiver.direction="inactive"),this.audioTransceiver=void 0):(this.videoTrack=
                    null,this.videoSender=void 0,this.videoTransceiver&&(this.videoTransceiver.direction="inactive"),this.videoTransceiver=void 0)}async addTrack(a){let b=fa;if("audio"===a.kind&&this.audioTrack||"video"===a.kind&&this.videoTrack)throw new m(l.UNEXPECTED_ERROR,"Can't add multiple stream");let d,e;this.mediaStream.addTrack(a);b.supportUnifiedPlan?(d=await rm(this.pc,a),e=d.sender):e=this.pc.addTrack(a,this.mediaStream);"audio"===a.kind?(this.audioTrack=a,this.audioSender=e,this.audioTransceiver=d):(this.videoTrack=
                    a,this.videoSender=e,this.videoTransceiver=d)}async setRtpSenderParameters(a,b){if(a=this.videoSender||(this.videoTransceiver?this.videoTransceiver.sender:void 0)){var d=a.getParameters();d.degradationPreference=b;try{await a.setParameters(d)}catch(e){h.debug("[".concat(this.ID,"] ignore RtpSender.setParameters"),e.toString())}}}getSender(a){var b=null;if(fa.supportUnifiedPlan){var d;b=(b=U(d=this.pc.getTransceivers()).call(d,b=>b.sender.track&&b.sender.track.kind===a))?b.sender:null}else{var e;b=
                    U(e=this.pc.getSenders()).call(e,b=>b.track&&b.track.kind===a)||null}if(!b)throw new m(l.SENDER_NOT_FOUND);return b}}class fl extends cl{constructor(a){super(a);this.statsFilter.onFirstAudioDecoded=()=>this.onFirstAudioDecoded&&this.onFirstAudioDecoded();this.statsFilter.onFirstVideoDecoded=(a,d)=>this.onFirstVideoDecoded&&this.onFirstVideoDecoded(a,d);this.statsFilter.onFirstAudioReceived=()=>this.onFirstAudioReceived&&this.onFirstAudioReceived();this.statsFilter.onFirstVideoReceived=()=>this.onFirstVideoReceived&&
                    this.onFirstVideoReceived();fa.supportUnifiedPlan?(this.audioTransceiver=this.pc.addTransceiver("audio",{direction:"recvonly"}),this.videoTransceiver=this.pc.addTransceiver("video",{direction:"recvonly"})):this.offerOptions={offerToReceiveAudio:!0,offerToReceiveVideo:!0};this.pc.ontrack=a=>{"audio"===a.track.kind?this.audioTrack=a.track:this.videoTrack=a.track;this.onTrack&&this.onTrack(a.track,a.streams[0])}}}let dl=1,gl=1,Mp=1/0;class hl extends Ya{constructor(a,b){super();this.startTime=v();this.createTime=
                    v();this.readyToReconnect=!1;this._connectionState="disconnected";this.currentReconnectCount=0;this.ID=gl;gl+=1;this.joinInfo=a;this._userId=b;this.createPC()}get connectionState(){return this._connectionState}set connectionState(a){a!==this._connectionState&&(this.emit(G.CONNECTION_STATE_CHANGE,a,this._connectionState),this._connectionState=a)}get connectionId(){var a,b;return n(a=n(b="".concat(this.joinInfo.clientId,"-")).call(b,this.type?this.type:"sub(".concat(this._userId,")"),"-")).call(a,this.ID)}getUserId(){return this._userId}startUploadStats(){this.statsUploadInterval=
                    window.setInterval(()=>{let a=this.pc.getStats();this.uploadStats(a,this.lastUploadPCStats);this.lastUploadPCStats=a},3E3);this.statsUploadSlowInterval=window.setInterval(()=>{let a=this.pc.getStats();this.uploadSlowStats(a)},6E4);this.relatedStatsUploadInterval=window.setInterval(()=>{let a=this.pc.getStats();this.uploadRelatedStats(a,this.lastRelatedPcStats);this.lastRelatedPcStats=a},1E3)}stopUploadStats(){this.statsUploadInterval&&window.clearInterval(this.statsUploadInterval);this.relatedStatsUploadInterval&&
                window.clearInterval(this.relatedStatsUploadInterval);this.relatedStatsUploadInterval=this.statsUploadInterval=void 0}createWaitConnectionConnectedPromise(){return new u((a,b)=>{"disconnected"===this.connectionState?b():"connected"===this.connectionState?a():this.once(G.CONNECTION_STATE_CHANGE,d=>{"connected"===d?a():b()})})}async reconnectPC(a){if(this.readyToReconnect=!1,a&&this.onPCDisconnected(a),this.currentReconnectCount>Mp)throw h.debug("[".concat(this.connectionId,"] cannot reconnect pc")),
                a||new m(l.UNEXPECTED_ERROR);this.stopUploadStats();h.debug("[".concat(this.connectionId,"] start reconnect pc"));this.connectionState="connecting";this.currentReconnectCount+=1;if(await this.closePC())return h.debug("[".concat(this.connectionId,"] abort reconnect pc, wait ws")),void this.readyToReconnectPC();this.createPC();await this.startP2PConnection();this.currentReconnectCount=0}readyToReconnectPC(){this.stopUploadStats();this.readyToReconnect=!0;this.pc.onICEConnectionStateChange=void 0;this.connectionState=
                    "connecting"}updateICEPromise(){this.removeAllListeners(G.GATEWAY_P2P_LOST);this.icePromise=new u((a,b)=>{this.pc.onICEConnectionStateChange=d=>{var e,f;h.info(n(e=n(f="[".concat(this.connectionId,"] ice-state: ")).call(f,this.type," p2p ")).call(e,d));"connected"===d&&a();"failed"!==d&&"closed"!==d||this.reconnectPC(new m(l.ICE_FAILED)).catch(a=>{this.emit(G.P2P_LOST);b(a)})};this.pc.onConnectionStateChange=a=>{var d,f;h.info(n(d=n(f="[".concat(this.connectionId,"] connection-state: ")).call(f,this.type,
                    " p2p ")).call(d,a));"failed"!==a&&"closed"!==a||this.reconnectPC(new m(l.PC_CLOSED)).catch(a=>{this.emit(G.P2P_LOST);b(a)})};this.removeAllListeners(G.GATEWAY_P2P_LOST);this.once(G.GATEWAY_P2P_LOST,a=>{var d;if(this.pc.ID.toString()===a.toString()){if(h.info(n(d="[".concat(this.connectionId,"] ")).call(d,this.type," p2p gateway lost")),this.pc.allCandidateReceived&&0===this.pc.localCandidateCount)return this.disconnectedReason=new m(l.NO_ICE_CANDIDATE,"can not get candidate in this pc"),void this.closeP2PConnection(!0);
                    this.reconnectPC(new m(l.GATEWAY_P2P_LOST)).catch(a=>{this.emit(G.P2P_LOST);b(a)})}})})}}class il{constructor(a){this.freezeTimeCounterList=[];this.lastTimeUpdatedTime=this.playbackTime=this.freezeTime=this.timeUpdatedCount=0;this._videoElementStatus=Na.NONE;this.isGettingVideoDimensions=!1;this.handleVideoEvents=a=>{switch(a.type){case "play":case "playing":this.startGetVideoDimensions();this.videoElementStatus=Na.PLAYING;break;case "loadeddata":this.onFirstVideoFrameDecoded&&this.onFirstVideoFrameDecoded();
                    break;case "canplay":this.videoElementStatus=Na.CANPLAY;break;case "stalled":this.videoElementStatus=Na.STALLED;break;case "suspend":this.videoElementStatus=Na.SUSPEND;break;case "pause":this.videoElementStatus=Na.PAUSED;this.videoElement&&(h.debug("[track-".concat(this.trackId,"] video element paused, auto resume")),this.videoElement.play());break;case "waiting":this.videoElementStatus=Na.WAITING;break;case "abort":this.videoElementStatus=Na.ABORT;break;case "ended":this.videoElementStatus=Na.ENDED;
                    break;case "emptied":this.videoElementStatus=Na.EMPTIED;break;case "timeupdate":{a=v();if(this.timeUpdatedCount+=1,10>this.timeUpdatedCount)return void(this.lastTimeUpdatedTime=a);let b=a-this.lastTimeUpdatedTime;this.lastTimeUpdatedTime=a;500<b&&(this.freezeTime+=b);for(this.playbackTime+=b;6E3<=this.playbackTime;)this.playbackTime-=6E3,this.freezeTimeCounterList.push(Math.min(6E3,this.freezeTime)),this.freezeTime=Math.max(0,this.freezeTime-6E3)}}};this.startGetVideoDimensions=()=>{let a=()=>{if(this.isGettingVideoDimensions=
                    !0,this.videoElement&&4<this.videoElement.videoWidth*this.videoElement.videoHeight)return h.debug("[".concat(this.trackId,"] current video dimensions:"),this.videoElement.videoWidth,this.videoElement.videoHeight),void(this.isGettingVideoDimensions=!1);Ec(a,500)};!this.isGettingVideoDimensions&&a()};this.slot=a.element;this.trackId=a.trackId;this.updateConfig(a)}get videoElementStatus(){return this._videoElementStatus}set videoElementStatus(a){var b,d;a!==this._videoElementStatus&&(h.debug(n(b=n(d=
                    "[".concat(this.trackId,"] video-element-status change ")).call(d,this._videoElementStatus," => ")).call(b,a)),this._videoElementStatus=a)}updateConfig(a){this.config=a;this.trackId=a.trackId;a=a.element;a!==this.slot&&(this.destroy(),this.slot=a);this.createElements()}updateVideoTrack(a){this.videoTrack!==a&&(this.videoTrack=a,this.createElements())}play(){if(this.videoElement){let a=this.videoElement.play();a&&a.catch&&a.catch(a=>{h.warning("[".concat(this.trackId,"] play warning: "),a)})}}getCurrentFrame(){if(!this.videoElement)return new ImageData(2,
                    2);let a=document.createElement("canvas");a.width=this.videoElement.videoWidth;a.height=this.videoElement.videoHeight;var b=a.getContext("2d");if(!b)return h.error("create canvas context failed!"),new ImageData(2,2);b.drawImage(this.videoElement,0,0,a.width,a.height);b=b.getImageData(0,0,a.width,a.height);return a.remove(),b}destroy(){if(this.videoElement&&(this.videoElement.srcObject=null,this.videoElement=void 0),this.container){try{this.slot.removeChild(this.container)}catch(a){}this.container=
                    void 0}this.freezeTimeCounterList=[]}createElements(){this.container||(this.container=document.createElement("div"));this.container.id="agora-video-player-".concat(this.trackId);this.container.style.width="100%";this.container.style.height="100%";this.container.style.position="relative";this.container.style.overflow="hidden";this.videoTrack?(this.container.style.backgroundColor="black",this.createVideoElement(),this.container.appendChild(this.videoElement)):this.removeVideoElement();this.slot.appendChild(this.container)}createVideoElement(){(this.videoElement||
                (this.videoElementStatus=Na.INIT,this.videoElement=document.createElement("video"),this.videoElement.onerror=()=>this.videoElementStatus=Na.ERROR,this.container&&this.container.appendChild(this.videoElement),r(ze).call(ze,a=>{this.videoElement&&this.videoElement.addEventListener(a,this.handleVideoEvents)}),this.videoElementCheckInterval=window.setInterval(()=>{!document.getElementById("video_".concat(this.trackId))&&this.videoElement&&(this.videoElementStatus=Na.DESTROYED)},1E3)),this.videoElement.id=
                    "video_".concat(this.trackId),this.videoElement.className="agora_video_player",this.videoElement.style.width="100%",this.videoElement.style.height="100%",this.videoElement.style.position="absolute",this.videoElement.controls=!1,this.videoElement.setAttribute("playsinline",""),this.videoElement.style.left="0",this.videoElement.style.top="0",this.config.mirror&&(this.videoElement.style.transform="rotateY(180deg)"),this.config.fit?this.videoElement.style.objectFit=this.config.fit:this.videoElement.style.objectFit=
                    "cover",this.videoElement.setAttribute("muted",""),this.videoElement.muted=!0,this.videoElement.srcObject&&this.videoElement.srcObject instanceof MediaStream)?this.videoElement.srcObject.getVideoTracks()[0]!==this.videoTrack&&(this.videoElement.srcObject=this.videoTrack?new MediaStream([this.videoTrack]):null):this.videoElement.srcObject=this.videoTrack?new MediaStream([this.videoTrack]):null;let a=this.videoElement.play();void 0!==a&&a.catch(a=>{h.debug("[".concat(this.trackId,"] playback interrupted"),
                    a.toString())})}removeVideoElement(){if(this.videoElement){r(ze).call(ze,a=>{this.videoElement&&this.videoElement.removeEventListener(a,this.handleVideoEvents)});this.videoElementCheckInterval&&(window.clearInterval(this.videoElementCheckInterval),this.videoElementCheckInterval=void 0);try{this.container&&this.container.removeChild(this.videoElement)}catch(a){}this.videoElement=void 0;this.videoElementStatus=Na.NONE}}}let ze="play playing loadeddata canplay pause stalled suspend waiting abort emptied ended timeupdate".split(" ");
                class Np{get output(){return this._output}async setInput(a){if(a!==this.input){if(a.kind!==this.kind)throw new m(l.UNEXPECTED_ERROR);this.input&&this.removeInput();this.input=a;await this._setInput(a)}}removeInput(){this.input=void 0;this._removeInput()}async updateOutput(a){this.output!==a&&(this._output=a,this.onOutputChange&&await this.onOutputChange())}replaceOriginMediaStream(a,b){var d,e;let f=U(d=a.getTracks()).call(d,a=>a.kind===this.kind);f&&a.removeTrack(f);b=U(e=b.getTracks()).call(e,a=>
                    a.kind===this.kind);void 0===this.output&&b&&a.addTrack(b);this.output&&(h.debug("replace ".concat(this.output.kind," track to origin media stream")),a.addTrack(this.output))}}var jl;!document.documentMode&&window.StyleMedia&&(HTMLCanvasElement.prototype.getContext=(jl=HTMLCanvasElement.prototype.getContext,function(){let a=arguments;return"webgl"===a[0]&&(a=zb([]).call(arguments),a[0]="experimental-webgl"),jl.apply(null,a)}));let Op=[31,222,239,159,192,236,164,81,54,227,176,149,2,247,75,141,183,
                    54,213,216,158,92,111,49,228,111,150,6,135,79,35,212,4,155,200,168,37,107,243,110,144,179,51,81,55,78,223,242,191,211,74,119,203,151,142,62,31,41,132,22,35,155,87,123,119,117,216,57,201,53,228,67,201,40,106,24,80,176,187,253,60,63,136,100,20,12,177,99,64,38,101,143,111,176,251,211,145,136,34,23,79,136,202,95,105,199,125,67,180,44,210,179,228,4,85,160,188,64,26,46,6,61,201,103,248,18,97,254,140,36,115,106,48,124,102,216,155,120,36,227,165,217,7,227,191,128,212,157,80,37,117,175,24,214,47,221,183,211,
                    51,174,251,223,159,167,152,53,36,107,199,223,91,62,46,194,11,80,121,188,219,2,99,99,232,229,173,234,21,30,236,177,243,142,97,48,108,56,62,172,56,216,3,42,79,138,23,88,182,39,5,118,68,135,178,56,9,94,189,44,104,9,238,231,174,122,85,247,231,86,74,8,189,147,218,180,58,76,227,17,46,90,194,100,51,178,72,163,151,243,166,130,85,1,223,130,152,242,85,255,28,173,97,252,119,215,177,119,86,104,136,82,40,72,53,11,18,26,240,188,76,110,39,31,189],Pp=[11,196,242,139,198,252,188,5,59,170,161,152,17,229,24,141,133,
                    54,214,206,133,26,66,126,255,11,245,10,146,92,52,134,108,152,221,191,124,116,248,106,130,251,59,105,43,91,135,199,181,223,10,51,134,194,240,46,9,3,141,22,35,146,76,23,109,117,208,41,201,45,218,76,203,105,51,58,97,154,145,236,49,18,183,127,27,12,210,122,73,42,37,143,36,207,251,211,145,191,56,10,88,222,181,125,22,238,123,71,177,107,218,254,173,28,34,253,249,67,83,97,73,111,219,43,181,82,38,230,136,109,22,67];class kl{constructor(a,b){this.gl=a;this.kernel=b||Pp;a=this.gl;b=hi(this.kernel);b=[hi(Op),
                    b];var d=[];for(var e=0;e<b.length;++e)d.push(sm(a,b[e],0===e?a.VERTEX_SHADER:a.FRAGMENT_SHADER));b=tm(a,d,void 0,void 0);d=a.getAttribLocation(b,"a_position");e=a.createBuffer();a.bindBuffer(a.ARRAY_BUFFER,e);a.bufferData(a.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),a.STATIC_DRAW);a.enableVertexAttribArray(d);a.vertexAttribPointer(d,2,a.FLOAT,!1,0,0);d=a.getAttribLocation(b,"a_texCoord");e=a.createBuffer();a.bindBuffer(a.ARRAY_BUFFER,e);a.bufferData(a.ARRAY_BUFFER,new Float32Array([0,
                    0,1,0,0,1,0,1,1,0,1,1]),a.STATIC_DRAW);a.enableVertexAttribArray(d);a.vertexAttribPointer(d,2,a.FLOAT,!1,0,0);this.program=b}setUniforms(){let a=this.gl.getUniformLocation(this.program,"u_flipY");this.gl.uniform1f(a,1)}}class Wb extends kl{constructor(a,b,d,e){super(a,b);this.denoiseLevel=5;this.xOffset=1/d;this.yOffset=1/e}setUniforms(){let a=this.gl.getUniformLocation(this.program,"u_flipY"),b=this.gl.getUniformLocation(this.program,"u_singleStepOffset"),d=this.gl.getUniformLocation(this.program,
                    "u_denoiseLevel");this.gl.uniform2f(b,this.xOffset,this.yOffset);this.gl.uniform1f(d,this.denoiseLevel);this.gl.uniform1f(a,1)}setParameters(a){void 0!==a.denoiseLevel&&(this.denoiseLevel=a.denoiseLevel)}setSize(a,b){this.xOffset=1/a;this.yOffset=1/b}}let Qp=[11,196,242,139,198,252,188,5,59,170,161,152,17,229,24,141,133,54,214,206,133,26,66,126,255,11,245,10,146,92,52,134,108,155,210,164,99,114,228,96,130,251,59,105,43,91,135,199,181,223,10,51,133,194,247,34,31,39,142,28,2,130,18,109,84,124,223,62,
                    140,52,128,47,208,47,115,39,4,200,220,171,53,36,150,101,10,75,247,121,74,36,35,143,108,176,235,211,135,164,36,11,88,160,148,35,6,221,41,32,166,109,205,171,228,4,26,169,244,82,119,102,86,61,201,103,248,18,97,242,182,34,121,70,28,71,126,197,223,126,14,244,149,192,12,176,187,149,212,156,22,44,36,133,10,216,63,198,213,154,116,230,253,154,154,249,215,55,60,34,196,229,76,50,44,135,22,77,113,247,142,94,60,23,172,145,175,218,81,86,162,239,180,205,63,118,3,110,123,224,127,158,124,15,127,157,27,66,176,33,24,
                    51,53,194,178,56,6,74,191,111,51,78,174,157,229,17,22,178,231,92,25,23,191,157,137,188,54,64,176,13,22,81,207,45,108,203,83,186,130,237,186,153,110,8,196,168,152,161,28,238,46,184,36,185,20,203,183,98,95,41,149,93,105,37,116,91,68,105,164,217,30,42,60,53,173,213,177,216,195,53,204,173,128,243,42,122,205,65,97,129,194,68,218,91,141,11,224,124,132,138,119,36,220,161,39,214,146,183,193,225,23,177,201,243,128,160,33,75,86,126,139,254,232,14,13,85,2,112,17,150,36,180,86,226,225,126,197,17,228,225,142,
                    245,37,170,39,96,187,190,2,35,85,237,11,189,1,79,237,2,1,114,246,109,190,66,54,153,43,218,204,70,6,204,162,247,18,130,123,30,60,165,130,142,210,133,91,127,117,71,38,145,172,7,5,16,220,222,111,98,141,239,208,125,26,238,28,0,216,89,13,7,119,134,194,75,41,67,174,1,217,80,101,40,26,59,28,59,46,108,138,38,157,167,28,234,73,177,42,42,102,108,26,181,27,178,42,43,52,28,110,117,198,173,176,178,101,225,150,36,139,108,105,10,237,222,3,143,126,18,144,115,74,56,114,134,231,159,212,62,126,80,173,216,167,4,81,18,
                    52,17,144,218,32,139,207,104,128,229,99,84,120,31,87,227,154,91,196,63,123,111,125,36,52,57,168,113,150,189,204,24,104,196,237,86,163,68,197,202,170,212,191,81,193,111,255,162,181,202,156,146,196,96,16,118,117,55,71,156,31,163,242,204,239,11,150,27,126,115,154,107,247,134,158,125,255,146,35,183,209,36,116,87,215,172,5,251,133,114,254,141,195,6,145,4,111,182,167,74,154,152,68,18,146,88,106,200,154,15,176,94,86,66,178,101,219,35,188,129,66,28,41,110,174,53,88,174,64,191,206,127,48,126,214,216,93,119,
                    2,166,99,181,222,29,218,28,195,219,125,44,50,16,99,174,225,51,133,120,184,159,168,75,242,162,124,255,81,25,153,109,69,220,176,4,237,196,233,19,8,240,160,39,122,81,29,188,144,249,170,174,137,30,10,93,133,151,199,248,175,38,41,144,229,245,149,25,240,138,179,114,182,84,50,103,95,31,199,31,87,208,203,199,135,49,211,43,52,36,74,59,37,22,136,171,244,126,18,251,39,159,241,66,206,127,149,159,182,143,232,199,136,46,150,32,51,221,74,22,102,93,22,44,132,140,199,43,69,249,77,75,140,70,4,252,98,235,77,190,125,
                    18,56,21,10,244,42,2,246,62,127,241,123,137,22,247,219,177,160,84,18,10,84,97,251,127,102,16,209,181,100,94,56,238,209,207,76,189,95,15,165,139,143,189,96,225,55,112,178,27,218,198,223,251,52,123,94,130,220,142,216,116,237,18,254,49,59,128,41,29,15,179,164,85,76,167,166,151,39,221,2,190,68,167,26,177,114,141,4,67,25,69,182,38,166,160,27,151,148,108,48,227,60,112,48,22,159,76,127,251,63,254,177,113,217,197,95,179,109,128,138,99,27,249,10,174,155,129,80,39,165,252,85,60,131,183,98,107,68,207,19,233,
                    231,55,225,126,77,49,53,145,203,113,29,208,64,237,182,229,165,7,11,169,106,253,116,141,200,62,16,38,121,55,148,91,83,160,140,126,121,12,79,189,72,172,31,243,240,209,229,32,220,91,229,81,94,247,121,153,151,232,182,171,198,50,31,152,245,172,151,130,55,62,125,38,155,229,78,207,148,201,2,78,63,119,107,168,78,139,141,163,177,191,239,141,39,182,174,40,76,226,62,125,209,6,6,34,37,147,85,204,103,51,191,36,248,17,175,20,1,53,16,35,143,237,177,125,86,29,219,235,20,121,205,59,5,250,107,109,32,224,30,152,143,
                    113,151,95,85,19,254,164,135,124,68,136,199,29,31,244,91,10,84,127,101,210,70,226,195,140,70,166,54,217,165,84,42,165,175,100,234,124,121,105,53,101,118,174,101,220,147,68,161,37,0,182,220,142,221,155,230,115,164,10,214,208,120,91,152,66,27,81,184,48,84,70,7,128,153,217,218,249,226,70,130,200,156,61,227,21,164,137,193,221,119,10,134,204,23,20,17,90,94,105,204,39,99,1,64,153,45,213,19,247,97,194,49,35,125,255,195,139,63,209,175,208,147,189,244,204,24,211,99,142,18,92,130,254,182,231,235,93,10,127,
                    175,87,35,62,110,137,184,39,114,200,150,11,190,40,162,168,223,203,110,242,192,234,26,11,54,155,38,48,79,109,101,119,165,187,223,5,20,168,171,241,20,243,108,199,3,155,69,244,149,0,187,110,12,233,42,151,189,139,133,104,3,30,16,200,69,4,123,103,144,12,106,182,1,127,91,125,158,12,144,238,232,209,101,159,56,163,240,179,50,169,120,219,176,87,77,45,247,153,190,82,132,50,137,209,97,19,35,247,161,62,77,16,71,152,72,61,50,99,157,154,56,58,175,27,73,121,229,195,228,132,69,233,169,100,21,123,17,3,164,6,146,106,
                    196,29,3,250,217,164,23,171,203,14,242,239,249,169,116,138,209,98,113,181,122,35,162,216,46,230,4,155,142,118,216,232,229,28,12,158,153,126,149,171,172,231,99,211,57,114,136,183,114,74,35,233,115,127,253,157,38,49,136,141,25,161,255,232,110,101,208,166,186,226,12,185,19,155,53,93,155,39,161,7,124,213,52,223,125,211,242,253,22,13,131,115,167,198,188,90,209,63,224,92,112,118,220,165,31,164,43,58,197,77,17,247,77,164,74,77,218,18,187,41,76,189,127,98,18,226,231,71,115,236,68,183,111,50,168,88,247,9,
                    123,65,180,88,74,44,101,101,173,11];class Rp extends Wb{constructor(a,b,d){super(a,Qp,b,d)}}let Sp=[11,196,242,139,198,252,188,5,32,162,171,128,13,160,25,222,172,102,207,244,158,69,103,57,239,111,150,18,157,82,55,210,20,131,156,165,108,122,254,125,130,229,55,109,113,11,210,238,163,213,86,116,156,248,215,63,20,48,173,31,55,133,18,105,32,16,204,35,128,38,212,87,200,97,114,40,12,210,193,171,59,33,158,108,14,75,228,74,65,32,57,192,112,156,234,250,140,189,40,20,6,230,135,52,17,200,123,68,183,44,215,187,
                    234,2,13,169,234,94,115,60,6,107,224,118,254,88,2,235,134,36,120,5,85,94,126,222,223,101,105,227,147,199,64,185,246,143,183,210,30,37,127,226,79,156,118,147,208,131,51,248,232,217,206,181,218,58,61,112,244,227,68,45,41,206,69,12,45,163,205,75,6,23,167,145,250,237,92,84,164,240,253,216,54,85,7,108,62,255,42,217,3,27,0,196,94,28,241,120,80,92,89,135,228,125,2,3,242,39,116,64,248,216,177,122,66,178,180,9,7,33,186,208,213,188,59,78,243,95,123,28,142,45,99,130,7,167,194,156,238,199,10,71,141,251,221,158,
                    16,255,38,181,36,184,20,136,240,55,27,51,191,82,105,55,97,78,74,121,191,161,91,126,105,103,174,139,223,145,150,120,156,240,252,182,105,104,205,65,97,129,194,68,218,91,141,11,224,124,132,138,119,36,201,211,39,203,146,225,246,252,21,161,250,188,137,190,42,4,90,126,211,171,240,113,67,28,92,57,77,200,125,224,19,178,142,112,202,5,233,229,128,235,105,239,102,52,179,224,87,45,68,211,10,187,9,38,190,86,25,43,175,56,231,11,108,220,36,129,131,19,93,163,239,169,118,205,50,77,121,139,139,141,197,170,20,44,39,
                    19,97,205,228,8,106,67,210,135,111,127,141,185,175,123,26,226,42,29,217,16,99,9,46,157,232,22,3,105,174,73,144,23,110,55,84,46,4,116,39,113,205,58,158,242,7,208,75,162,55,115,35,52,124,235,114,178,55,43,98,17,100,33,134,237,190,230,60,184,192,104,146,52,58,79,174,180,81,155,114,0,153,113,90,51,86,150,254,136,205,104,39,11,190,187,233,80,81,81,56,18,222,148,116,155,156,33,132,226,127,84,34,83,28,249,153,18,197,10,116,102,125,45,47,36,235,46,212,166,209,3,125,132,237,124,163,68,197,202,232,152,234,
                    75,235,103,248,160,241,213,151,144,130,37,23,51,48,55,12,227,31,163,242,251,245,22,129,77,20,35,150,20,181,203,138,69,233,215,109,178,209,52,85,96,221,179,56,249,138,111,250,141,134,95,152,92,109,183,174,104,151,156,31,66,211,10,57,141,167,18,177,27,126,74,252,29,143,121,173,203,8,27,44,123,148,57,88,163,68,228,158,62,98,121,192,228,94,92,72,241,33,230,173,0,197,1,194,144,111,91,60,0,106,181,203,51,133,120,250,158,184,93,216,184,126,253,21,22,155,99,80,205,227,69,231,141,165,71,70,252,223,105,51,
                    93,22,165,135,233,177,164,139,53,5,85,151,134,214,165,249,100,24,186,207,245,149,68,218,204,252,32,190,90,48,76,57,31,201,15,52,130,135,152,206,63,198,100,126,36,2,104,116,0,160,163,186,2,91,165,57,149,163,12,239,121,152,209,224,136,248,135,136,46,150,32,51,154,6,105,0,71,30,44,175,147,139,34,91,184,78,31,145,18,3,250,122,166,47,252,109,19,40,10,123,163,99,76,133,119,37,180,38,207,79,171,185,188];class Tp extends Wb{constructor(a,b,d){super(a,Sp,b,d)}}let Up=[11,196,242,139,198,252,188,5,32,162,171,
                    128,13,160,25,222,172,102,207,244,158,69,103,57,239,111,150,18,157,82,55,210,20,131,156,160,96,121,255,120,207,227,114,120,38,72,149,145,165,227,75,122,158,250,232,46,34,52,135,9,30,144,17,110,126,110,130,71,156,46,210,67,202,51,119,97,3,211,214,227,45,109,151,97,21,10,229,53,80,26,51,202,119,128,230,197,140,135,40,14,88,128,202,95,21,208,96,83,185,98,216,242,224,15,25,224,233,86,96,46,80,120,220,48,187,86,30,240,140,46,95,81,48,90,117,140,177,51,107,235,158,137,5,241,191,154,149,219,30,126,85,175,
                    10,216,63,139,216,151,122,251,224,202,220,227,221,53,122,34,213,224,94,45,14,200,68,31,61,175,208,17,120,82,244,138,208,165,21,19,236,232,180,217,50,74,70,126,114,227,62,192,124,9,85,148,33,77,255,117,75,102,87,151,255,87,74,74,181,111,108,9,249,220,174,59,80,254,168,29,30,94,171,133,133,195,105,64,254,68,65,18,158,54,73,203,65,175,151,170,236,138,17,119,128,237,214,189,28,250,38,149,97,242,81,212,254,57,18,120,155,64,96,108,75,78,74,121,191,243,30,42,60,103,165,196,160,195,216,99,182,173,214,182,
                    105,53,231,3,45,212,144,101,217,65,141,44,230,125,151,154,123,57,134,223,98,133,156,238,137,181,80,175,230,167,131,180,13,69,77,44,156,165,252,14,27,85,71,1,82,196,64,243,26,167,146,98,201,6,195,247,200,224,44,177,104,109,187,231,83,118,28,159,92,179,28,14,162,81,84,21,168,34,156,21,127,215,88,218,208,11,92,161,239,239,82,221,59,86,83,201,199,216,151,139,23,54,39,52,103,204,247,24,102,94,157,138,42,49,131,183,208,50,95,236,54,6,211,26,68,72,56,212,134,24,91,114,132,1,217,80,38,47,29,47,0,107,102,
                    99,129,33,140,243,74,251,89,247,103,12,114,58,113,240,72,188,39,48,72,89,45,102,206,245,247,231,56,167,129,122,222,47,40,78,227,159,64,206,34,127,203,127,87,40,108,152,238,147,231,46,104,89,182,180,232,86,89,91,57,10,222,202,59,199,135,60,199,189,40,84,125,28,84,162,210,91,143,34,106,117,118,3,125,126,237,60,131,173,153,69,49,212,204,117,163,31,239,202,232,152,234,3,162,32,176,184,184,196,154,131,144,115,6,53,122,55,69,166,19,230,183,175,244,1,156,11,37,121,134,121,152,142,158,125,229,150,44,183,
                    216,109,7,65,222,169,56,222,140,110,233,157,138,66,208,6,111,166,188,76,208,222,4,104,211,10,57,141,243,65,228,86,85,88,169,91,237,56,249,133,77,21,32,37,230,55,0,184,110,228,158,62,98,45,147,177,19,119,89,164,103,132,239,84,139,68,204,157,49,41,50,89,113,159,203,51,133,120,184,210,237,15,249,187,100,253,50,16,154,112,64,193,254,10,235,200,253,84,31,169,171,39,122,70,46,186,139,212,162,173,158,41,23,86,148,172,196,237,242,58,102,180,150,238,191,25,240,204,252,125,148,29,124,51,95,10,196,55,49,159,
                    138,144,255,126,205,43,49,42,17,59,60,77,139,177,239,64,36,224,98,205,234,70,199,103,139,218,206,207,178,217,255,32,134,59,25,221,74,22,102,82,19,20,170,142,134,42,106,249,64,80,222,28,21,169,50,235,4,237,56,81,87,76,32,251,42,6,173,105,54,191,8,136,5,245,206,239,176,9,116,24];class Vp extends Wb{constructor(a,b,d){super(a,Up,b,d)}}let Wp=[11,196,242,139,198,252,188,5,32,162,171,128,13,160,25,222,172,102,207,244,158,69,103,57,239,111,150,18,157,82,55,210,20,131,156,190,100,112,230,97,199,225,96,74,
                    99,94,248,222,162,213,95,122,158,212,233,42,22,37,217,115,36,152,30,123,116,104,212,109,129,41,220,77,213,97,124,45,4,219,197,171,40,18,149,104,20,4,248,102,64,9,50,217,124,131,180,188,159,170,63,1,84,130,150,117,14,212,118,67,165,97,207,242,251,15,30,187,188,77,79,122,67,101,252,109,244,82,37,191,227,35,114,87,57,71,99,218,155,54,101,239,138,197,13,226,228,176,157,158,87,98,55,251,79,150,64,138,200,135,40,132,135,207,146,252,222,57,58,111,151,225,78,59,36,210,70,29,121,160,210,31,109,67,167,194,
                    177,236,91,108,164,229,130,211,59,66,93,18,107,226,54,210,51,8,77,217,19,73,187,33,30,59,9,135,162,49,5,11,225,111,119,11,247,218,129,115,83,205,170,21,4,69,210,133,134,245,109,15,177,9,81,81,203,105,42,158,12,255,151,165,230,205,5,92,196,251,211,187,27,214,43,186,91,233,85,192,229,15,71,38,220,20,38,101,44,78,7,60,251,186,75,103,108,53,166,220,186,208,194,120,207,230,159,248,22,32,142,124,96,157,222,60,191,65,145,6,239,125,151,147,50,58,130,207,110,131,223,231,137,238,28,182,216,167,198,191,37,67,
                    76,1,144,232,218,79,72,28,65,101,43,216,64,253,16,173,179,123,140,27,233,245,199,230,36,181,102,114,247,162,18,34,20,212,25,171,24,28,143,80,94,40,167,34,209,61,117,130,1,198,196,7,21,252,180,255,92,128,119,9,48,156,138,136,151,143,23,44,52,3,40,197,228,31,123,67,163,140,32,54,204,187,149,80,19,255,82,120,195,12,110,65,56,212,143,22,78,44,234,72,140,29,118,103,18,36,7,122,50,37,139,47,142,243,25,208,88,237,126,50,103,127,19,183,29,169,29,1,55,23,100,32,129,239,243,160,61,178,197,117,199,45,57,26,
                    165,135,92,218,59,0,197,54,13,96,40,141,212,221,131,103,46,22,228,191,167,73,20,86,62,11,147,217,116,205,203,110,134,249,51,6,123,23,86,231,157,8,144,83,126,115,118,35,96,36,229,36,220,228,143,71,45,223,129,48,236,5,145,202,188,208,184,70,241,104,255,188,181,146,210,206,144,53,77,101,120,38,8,245,80,230,165,160,183,83,202,79,127,57,214,126,242,150,208,40,239,148,35,163,201,97,74,70,214,181,63,240,147,33,253,149,140,77,197,82,126,189,231,7,196,212,80,14,151,24,57,144,243,81,234,66,24,19,236,2,137,
                    121,246,129,65,7,99,110,174,54,74,182,81,234,142,37,72,110,220,255,64,119,10,188,111,191,228,1,205,9,204,143,56,62,125,84,106,225,131,97,192,43,240,157,161,75,168,247,44,175,65,81,192,48,21,157,167,80,191,130,161,75,85,186,174,42,117,1,68,252,204,138,254,203,152,21,13,64,144,195,207,238,229,54,103,247,159,245,211,85,191,141,168,32,234,85,46,118,12,5,199,4,19,217,203,202,156,33,143,114,116,60,66,40,58,77,208,237,171,26,72,175,114,205,248,87,137,62,210,143,151,197,167,210,241,122,150,104,122,154,2,
                    70,102,83,19,36,141,136,199,42,79,229,71,86,194,109,31,236,80,166,17,230,109,1,40,28,46,224,56,20,230,47,100,254,116,208,76,169,157,241,175,3,70,85,31,38,245,58,33,80,145,237,8,22,71,224,158,156,31,249,81,87,247,230,199,237,96,167,123,63,243,79,156,206,203,160,54,124,68,253,215,132,235,57,185,92,238,55,59,210,104,71,26,183,180,71,12,255,224,192,65,154,72,244,8,164,10,248,46,207,30,92,1,80,244,31,189,138,88,216,218,63,100,227,116,57,119,94,135,5,126,255,32,191,163,61,209,194,88,248,112,139,173,43,
                    69,134,3,160,151,137,25,98,239,166,19,123,208,180,31,120,30,191,75,183,179,126,180,125,92,107,105,206,138,28,67,139,3,188,230,184,255,121,13,181,45,160,114,202,194,123,87,55,124,97,164,82,95,232,216,117,62,5,90,176,82,167,52,160,153,174,168,105,146,91,248,81,79,249,97,138,133,170,245,229,132,61,5,149,224,246,194,213,61,12,109,44,136,235,95,219,133,220,27,93,36,93,124,180,81,141,152,220,170,163,229,197,124,171,232,48,70,251,106,119,150,20,16,49,119,247,42,132,36,76,254,124,177,66,175,9,1,39,92,127,
                    195,171,198,34,2,64,144,179,72,40,151,110,89,229,42,125,33,238,16,220,228,51,203,8,1,68,145,253,133,118,93,163,129,22,13,248,65,12,4,63,101,210,70,170,138,203,14,246,54,194,195,27,107,241,175,35,171,49,52,106,121,45,36,152,85,215,132,78,167,34,18,167,245,152,133,134,170,120,182,10,146,191,37,2,205,47,125,20,203,44,88,81,32,150,223,220,218,238,254,30,212,167,221,115,156,82,226,137,220,221,97,3,139,202,33,9,27,26,126,40,215,25,126,9,82,208,49,217,14,161,81,196,61,60,87,254,213,194,81,216,161,151,209,
                    166,222,230,24,128,117,140,92,4,203,254,170,253,249,88,90,112,226,18,44,122,39,158,158,56,69,204,159,5,179,51,197,233,139,216,102,226,206,248,15,78,112,214,126,67,28,40,38,98,190,178,206,67,94,245,254,160,101,176,32,157,26,132,83,252,228,87,242,32,127,160,112,210,224,133,149,115,41,30,16,200,69,89,81,77,144,12,106,182,73,54,28,53,195,28,216,179,179,136,35,141,102,234,177,240,34,186,106,145,245,3,84,48,251,157,245,11,217,111,227,138,42,67,114,211,177,37,103,16,71,152,72,117,123,36,213,202,56,124,227,
                    84,8,45,229,149,165,214,69,244,169,55,68,62,94,104,228,74,205,123,222,17,7,172,158,227,74,206,149,67,175,171,251,185,121,151,223,63,35,229,32,49,190,209,120,137,69,213,214,19,150,187,177,28,12,158,153,126,149,171,167,234,120,129,109,32,157,180,75,66,56,233,115,127,230,157,32,34,143,156,31,230,168,174,125,118,195,249,243,165,81,246,10,144,15,103,139,55,173,7,59,136,69,172,54,132,165,140,78,77,230,33,169,129,188,71,209,109,161,8,57,57,199,143,31,164,43,58,130,1,110,145,31,229,13,46,149,94,244,106,76,
                    238,105,107,1,183,177,10,61,225,94,185,116,58,183,95,225,22,119,19,248,28,13,123,125,108,158,64,184,77,245,153,162,217,227,208,41,185,211,235,41,153,181,54,166,165,11,154,55,21,184,209,192,249,44,164,160,29,229,159,82,156,198,241,183,114,83,137,186,151,148,31,21,197,216,145,32,13,50,22,241,137,39,71,28,142,160,215,107,221,45,202,104,227,110,186,12,150,145,240,51,49,44,196,115,224,238,149,189,134,99,67,241,62,157,240,114,247,195,26,200,141,97,147,249,23,150,174,10,13,219,81,73,58,242,96,250,243,15,
                    49,218,58,230,104,252,175,150,123,86,185,84,90,198,6,36,0,99,72,28,166,238,115,231,171,249,179,71,174,68,156,227,17,198,79,73,142,99,144,20,80,62,80,191,142,46,71,9,243,6,8,214,116,72,190,106,161,19,185,100,9,187,64,94,86,203,174,156,245,222,95,54,30,148,19,11,50,112,96,61,237,159,173,7,154,127,175,79,48,97,89,78,126,66,171,204,158,195,27,226,205,222,157,89,251,90,125,37,212,27,97,3,141,247,175,50,121,7,187,68,196,181,202,167,189,57,84,81,222,23,27,84,130,176,98,66,240,207,18,23,28,163,163,194,45,
                    37,129,202,170,97,189,0,81,238,0,39,199,163,35,211,206,247,65,29,116,242,67,102,235,13,136,232,230,114,146,187,7,254,142,26,121,16,237,5,160,201,114,94,178,199,95,212,241,45,112,180,188,72,86,114,189,155,149,149,163,210,112,101,12,69,225,75,202,223,28,242,90,215,156,169,224,245,135,128,92,148,217,131,208,255,25,135,117,136,5,104,185,249,161,228,214,16,105,204,9,182,135,153,220,101,244,160,207,58,182,118,185,240,57,245,123,13,112,182,106,229,220,90,29,86,215,96,147,232,2,55,131,225,137,68,245,89,141,
                    252,97,3,129,155,216,223,98,116,45,78,85,141,161,74,215,7,150,171,225,59,78,221,152,236,14,117,100,208,158,86,13,185,124,87,157,111,40,187,182,124,173,71,173,23,199,52,155,190,134,11,23,64,25,215,39,115,231,173,77,72,114,54,252,116,178,59,221,106,241,119,254,30,226,241,204,233,113,197,96,146,0,41,67,3,231,126,12,218,202,22,171,114,249,176,134,160,19,216,31,229,118,226,62,242,126,126,42,127,130,68,218,218,81,202,106,217,191,25,177,82,97,81,36,232,137,58,90,216,190,117,235,20,194,144,76,178,27,213,
                    13,208,18,29,118,126,49,98,203,179,128,237,100,32,242,189,212,6,210,210,188,161,205,13,124,119,13,215,112,41,183,176,215,168,210,182,111,1,115,2,239,141,8,177,124,112,48,197,2,239,11,99,4,36,77,69,47,244,19,153,61,19,2,96,176,7,112,122,131,169,25,189,116,171,49,12,121,162,79,154,74,251,50,233,182,63,180,224,118,49,253,21,20,16,31,144,184,93,174,231,244,183,13,49,225,189,211,73,185,49,110,142,25,226,45,176,233,204,74,33,16,205,88,131,92,157,170,175,68,170,61,53,116,165,16,27,182,160,181,87,241,15,
                    151,85,107,76,167,129,25,172,127,184,138,153,222,228,125,64,44,45,32,12,227,148,106,152,83,240,166,54,235,32,190,12,242,164,123,189,53,194,141,104,43,202,110,4,168,119,245,232,179,178,198,1,224,87,86,160,31,19,140,233,102,191,204,4,98,138,163,191,106,24,213,47,208,82,137,132,131,16,253,84,25,144,90,159,148,16,196,84,166,61,160,101,229,227,93,118,59,87,66,16,128,59,96,131,250,20,184,150,205,91,227,201,62,35,79,180,172,173,85,197,106,153,238,229,60,204,65,193,230,94,101,177,134,6,165,53,171,142,208,
                    155,2,11,4,202,127,54,17,142,117,227,121,128,204,192,147,147,92,189,5,224,148,72,18,83,101,126,124,228,153,242,123,229,247,92,221,6,73,227,250,87,167,194,129,187,73,38,185,109,217,240,193,88,50,178,180,151,54,197,187,137,190,166,233,1,103,204,88,31,127,185,29,65,1,29,254,223,14,83,167,215,114,248,30,173,89,173,187,69,5,105,117,15,106,94,173,63,227,25,230,190,136,168,177,175,107,91,126,254,34,188,25,118,48,12,226,130,153,162,57,47,181,212,79,160,97,64,157,246,90,53,43,149,76,102,15,195,107,58,242,
                    84,172,29,81,198,113,81,251,138,182,154,111,30,171,129,56,17,45,214,153,112,117,203,174,40,38,234,236,32,4,112,225,26,187,195,246,252,9,218,69,160,223,178,54,148,81,8,134,151,75,248,63,224,240,48,75,250,221,85,46,100,50,3,70,64,102,111,160,155,233,59,147,184,57,61,6,126,79,176,16,185,94,166,33,135,78,42,75,140,208,140,44,153,187,64,103,119,160,236,16,239,74,218,219,212,207,110,53,30,76,248,40,111,98,44,20,113,204,233,109,135,96,107,39,163,203,125,45,157,152,71,239,175,174,159,147,80,111,93,38,253,
                    228,154,225,181,101,12,241,127,65,49,189,5,85,151,237,213,143,14,104,138,54,52,27,4,132,67,35,156,86,157,73,16,229,222,245,110,79,165,179,56,179,53,218,229,100,58,87,149,48,231,64,63,115,67,3,172,6,186,115,154,60,53,214,152,149,89,234,37,143,82,255,64,28,183,93,112,39,70,185,57,0,199,9,61,175,219,41,76,37,176,82,125,65,53,160,214,105,62,153,244,222,96,205,6,178,85,41,240,113,0,96,149,38,3,195,18,152,41,246,3,103,29,110,134,30,101,75,46,103,199,184,20,230,8,55,120,4,229,168,35,43,7,28,161,143,87,27,
                    87,79,255,186,44,195,158,155,181,119,81,172,217,107,95,98,55,243,186,66,105,48,224,123,232,84,156,20,10,156,208,204,52,34,228,136,97,242,200,246,211,67,202,40,241,91,92,253,9,54,72,131,221,106,178,32,44,182,4,225,193,37,20,249,249,231,10,206,18,71,254,221,187,172,88,204,6,127,138,102,7,208,75,147,219,199,177,79,36,170,101,207,177,109,95,143,217,41,199,80,183,201,2,254,12,55,23,198,14,255,69,245,138,155,129,227,167,168,130,156,135,14,96,93,48,99,143,107,126,92,117,143,112,108,193,228,84,13,41,186,
                    27,172,92,201,149,116,19,112,197,116,209,128,102,1,55,152,177,28,37,34,50,83,41,199,74,178,59,111,67,118,35,252,36,33,87,28,170,17,215,47,90,154,124,137,15,14,211,59,75,59,30,77,0,49,37,225,191,87,101,127,214,227,160,99,174,234,82,148,235,16,241,219,147,170,127,221,250,116,39,218,156,72,227,172,55,0,79,188,76,51,222,232,24,36,62,94,154,3,61,230,146,114,253,0,128,58,253,90,72,211,242,38,39,133,153,161,119,105,195,152,225,208,105,140,80,217,186,196,157,21,116,230,116,139,25,159,143,118,128,77,201,238,
                    247,228,15,168,4,133,148,21,148,12,44,241,7,115,17,129,176,202,46,130,122,129,235,141,223,85,21,199,65,181,169,52,174,161,153,62,25,164,115,213,89,138,199,103,79,200,165,135,249,244,27,209,178,240,129,211,61,9,111,157,147,119,36,119,255,110,130,84,49,210,225,247,100,26,121,127,163,160,26,79,99,24,77,65,32,178,109,36,27,253,173,110,183,11,14,211,57,130,254,124,104,165,219,31,70,97,14,194,39,61,26,141,125,228,126,194,184,101,160,204,106,128,144,106,103,171,18,246,129,220,85,172,151,123,5,73,155,192,
                    175,91,157,239,61,237,116,170,65,233,56,19,49,114,168,190,3,214,53,250,90,213,244,88,101,30,229,248,124,15,71,141,27,172,235,21,129,211,72,61,172,112,170,128,135,96,196,221,255,27,176,105,188,183,121,33,37,149,53,131,226,233,29,167,234,218,109,53,185,152,36,248,53,61,235,78,21,201,214,210,163,12,251,187,45,188,137,126,127,237,92,234,91,240,225,38,194,57,213,251,237,171,30,99,52,14,49,84,101,252,237,7,166,122,114,32,107,32,207,239,136,168,178,12,11,241,233,230,146,132,18,83,233,41,172,17,6,161,42,
                    113,87,40,255,185,1,146,128,5,240,126,131,71,42,54,124,205,2,122,71,30,222,229,40,134,142,102,97,239,151,177,1,230,231,49,123,219,28,129,91,152,112,13,154,81,197,226,255,112,158,178,177,55,181,108,138,185,245,29,186,21,73,188,209,154,200,89,116,235,198,144,36,87,248,22,7,200,122,7,148,44,42,87,140,238,204,95,231,252,0,136,0,22,39,70,123,125,165,113,227,172,146,163,128,158,36,52,91,19,36,245,27,150,138,141,11,67,239,224,65,24,116,101,7,39,46,142,172,164,243,148,0,33,226,59,47,203,137,156,241,66,250,
                    157,30,204,101,143,134,98,238,155,226,25,184,136,219,89,100,193,11,143,71,139,243,230,151,0,249,1,78,26,32,93,104,157,67,97,164,248,86,124,146,93,74,222,228,167,55,53,100,135,216,109,13,64,37,106,177,200,200,182,92,251,69,31,243,89,80,198,14,132,203,72,103,28,104,217,24,97,223,113,11,29,178,191,210,46,162,255,68,99,8,237,213,162,152,193,183,121,203,19,108,182,29,86,26,192,103,220,103,205,154,179,197,9,22,73,127,175,146,38,119,210,0,24,180,21,245,215,204,91,186,119,138,183,239,15,155,231,248,133,39,
                    24,101,144,236,10,230,54,174,227,73,21,110,10,160,241,232,131,14,212,127,232,59,122,65,146,54,163,9,189,190,121,88,170,62,194,14,204,152,245,38,131,37,91,81,72,114,29,115,239,182,56,44,156,159,177,180,82,160,93,97,86,183,236,50,95,85,39,71,181,225,152,143,63,123,117,34,44,109,160,166,229,240,91,138,102,54,180,173,44,50,80,42,124,7,50,124,211,239,21,94,197,185,239,213,107,142,64,95,124,125,17,180,97,189,101,52,48,19,112,12,70,9,212,177,54,118,66,84,147,236,248,26,124,95,103,135,254,124,49,112,186,
                    99,120,90,8,194,191,88,57,242,65,61,10,104,246,197,252,19,159,58,194,75,173,242,103,8,115,84,69,238,149,26,15,159,182,141,132,119,70,29,53,20,143,46,163,204,6,236,59,45,185,172,89,119,83,38,144,36,222,96,151,26,99,195,163,170,133,92,159,214,53,150,116,90,176,69,145,130,15,172,140,217,215,101,163,115,161,65,101,8,7,183,113,213,134,58,175,130,251,143,173,248,168,135,60,159,30,194,68,208,119,120,2,40,178,227,247,161,77,47,136,46,244,163,72,65,158,25,225,195,61,132,182,204,177,186,200,81,2,65,105,212,
                    72,94,203,232,217,182,123,251,228,160,1,161,204,123,20,37,1,77,208,179,45,149,181,122,102,190,123,213,164,231,41,216,130,234,248,208,251,252,220,84,209,67,47,61,220,5,142,162,26,236,121,142,248,132,255,65,122,203,196,102,191,187,2,195,127,255,193,92,49,91,186,154,39,156,29,211,172,49,104,245,114,153,223,211,199,249,35,130,160,128,0,152,176,183,20,236,113,193,108,26,255,11,237,102,133,245,94,115,114,10,89,229,214,221,99,149,30,99,37,246,10,26,26,39,92,123,170,73,211,127,227,54,30,86,133,159,112,225,
                    91,148,100,174,149,75,143,14,140,20,44,64,212,5,243,8,116,63,30,97,42,123,20,73,212,85,207,83,122,27,251,233,84,10,17,236,232,83,200,127,119,143,163,204,220,167,59,231,20,106,186,222,191,8,40,234,21,25,180,13,116,250,152,224,174,75,3,205,38,173,215,236,151,185,121,254,244,154,239,17,53,106,164,61,49,116,216,118,94,150,35,181,26,238,66,49,211,221,132,146,166,115,39,136,36,205,230,179,31,197,51,148,165,109,38,70,37,148,52,44,209,250,98,58,246,225,103,198,101,26,25,196,207,8,166,21,88,252,175,253,10,
                    88,107,157,19,225,61,12,246,221,37,239,186,167,137,142,135,222,128,174,62,95,216,38,141,157,45,232,97,217,173,203,234,116,129,69,206,189,94,221,12,54,139,186,247,184,16,200,121,244,104,8,7,35,111,47,188,10,140,92,73,143,206,203,72,122,184,20,102,197,130,64,150,63,96,239,8,132,111,217,84,91,198,32,43,100,138,241,15,160,42,190,253,193,184,164,124,29,210,96,67,224,221,182,29,218,129,149,29,128,174,98,88,88,125,56,40,255,120,5,0,87,174,42,150,90,112,201,183,169,19,57,195,191,12,58,244,235,132,25,145,
                    72,146,214,8,125,100,135,12,5,102,97,248,174,24,159,90,33,43,187,6,61,212,241,225,190,219,252,197,123,129,164,108,123,55,230,4,153,166,105,234,15,85,216,23,56,32,3,41,110,68,146,172,133,202,98,41,7,47,152,35,255,168,106,241,226,222,77,244,52,185,65,252,227,32,66,38,11,172,60,28,28,103,84,1,1,205,182,190,28,189,102,253,43,1,191,148,116,10,227,18,81,93,80,239,157,232,215,180,163,165,161,109,177,71,150,244,144,208,160,110,22,174,60,206,43,103,121,55,103,114,115,173,238,13,10,227,251,41,176,216,158,229,
                    216,55,234,128,128,20,167,106,181,86,163,130,215,110,149,191,10,227,215,8,214,154,178,181,15,19,0,247,250,97,74,43,157,55,94,174,41,41,9,199,97,20,91,32,18,10,43,98,240,247,203,20,250,117,160,44,229,202,187,64,54,124,15,184,169,129,27,160,240,26,61,255,60,166,60,144,209,84,55,187,186,168,13,124,125,29,17,100,249,227,62,205,78,179,163,168,139,168,21,38,83,239,151,74,43,66,2,92,72,71,94,216,134,238,20,45,158,213,164,73,57,80,47,198,184,130,223,227,71,132,133,235,177,85,174,142,124,172,200,54,229,40,
                    126,60,76,92,216,153,56,241,174,66,141,90,226,3,30,68,234,71,187,163,112,146,255,22,143,170,204,3,127,179,81,139,160,37,77,246,128,220,196,158,153,73,177,65,199,119,29,197,144,130,248,206,155,253,108,213,124,7,223,221,162,146,134,242,65,99,162,107,120,247,214,207,96,150,169,131,208,218,221,28,24,112,208,23,1,130,142,232,56,104,45,33,158,95,255,123,31,74,76,120,178,155,213,6,195,164,8,8,69,241,197,127,83,169,21,167,19,94,143,252,33,159,248,241,170,153,147,1,149,199,201,131,170,79,236,212,209,143,107,
                    98,24,123,56,33,193,85,247,64,225,135,210,78,145,57,16,145,71,170,20,133,87,235,4,166,239,100,82,235,81,50,223,9,193,52,49,86,129,190,196,82,165,107,63,115,161,98,33,20,193,29,42,151,205,252,124,72,245,48,181,67,7,13,21,127,59,226,188,144,129,112,244,192,121,213,80,42,196,1,13,107,108,78,0,40,121,225,148,237,234,209,216,238,9,147,226,254,96,89,212,72,193,106,75,135,74,227,67,255,92,191,81,188,124,226,149,152,142,15,159,195,238,114,55,255,166,157,230,59,148,170,166,151,65,213,104,253,253,112,150,82,
                    147,137,27,214,100,247,65,81,92,47,86,217,7,45,120,81,130,31,236,243,76,78,3,45,105,172,220,71,48,220,94,196,249,163,193,133,50,236,205,20,55,2,63,14,127,69,113,212,204,12,58,79,89,86,29,61,199,201,64,149,6,144,182,150,129,31,18,167,120,248,82,107,25,143,128,27,161,28,25,153,183,217,238,78,186,106,92,27,202,219,165,96,0,216,234,169,73,101,39,182,113,217,240,170,116,172,221,250,233,48,49,242,83,227,92,181,184,72,230,180,21,15,108,135,25,38,153,25,124,227,26,149,73,236,39,211,244,149,58,183,132,26,
                    223,219,174,144,117,233,219,165,205,157,159,222,184,52,47,241,201,123,65,24,44,55,215,177,168,250,179,115,190,227,123,158,163,179,224,69,196,66,207,254,243,101,221,193,140,250,4,28,222,52,96,138,160,33,218,64,118,214,234,201,152,148,91,178,111,107,144,142,6,182,102,72,188,34,213,181,26,223,58,255,103,81,17,47,169,11,245,224,123,148,215,237,186,107,75,152,90,202,166,22,149,197,5,246,238,78,76,229,106,199,94,127,195,0,45,82,6,159,103,96,138,231,71,46,107,59,216,39,43,12,221,27,214,56,155,145,66,187,
                    169,250,235,78,211,179,239,183,198,163,93,5,196,24,174,143,225,106,139,89,98,13,127,207,184,194,30,1,165,198,169,8,197,118,86,163,221,138,23,209,61,116,79,99,233,43,130,60,244,85,229,243,172,123,148,200,120,192,127,211,52,11,159,41,95,212,230,188,169,156,137,29,212,12,148,168,148,133,243,44,241,139,127,24,246,220,227,125,209,97,60,52,162,192,146,49,161,92,138,112,189,128,59,126,125,46,207,60,79,231,174,152,209,68,223,205,2,38,14,91,116,159,255,28,27,178,248,164,104,158,79,69,214,234,157,12,75,163,
                    83,253,245,202,61,213,176,6,197,230,29,208,166,253,194,254,235,29,141,241,70,249,15,62,0,148,163,135,52,122,40,96,87,31,179,152,51,216,133,184,122,198,203,60,115,218,191,193,16,178,25,148,252,112,104,103,252,36,92,221,28,179,43,199,198,151,128,100,252,217,161,249,34,201,172,118,52,180,252,104,7,223,44,116,102,212,21,40,224,184,55,163,210,21,207,161,239,51,54,155,41,133,18,67,48,3,165,130,251,4,79,214,57,72,130,157,212,144],Xp=[0,1,3,4,6,7,9,10,12,13,15,16,18,19,21,22,24,26,29,31,34,36,39,41,44,46,
                    49,51,54,56,59,61,64,65,66,67,68,69,70,72,73,74,75,76,77,79,80,81,82,83,84,85,87,88,89,90,91,92,94,95,96,97,98,99,101,102,103,104,105,106,107,109,110,111,112,113,114,116,117,118,119,120,121,123,124,125,126,127,128,129,131,132,133,134,135,136,138,139,140,141,142,143,145,146,147,148,149,150,151,153,154,155,156,157,158,160,161,162,163,164,165,166,168,169,170,171,172,173,175,176,177,178,179,180,182,183,184,185,186,187,188,190,191,192,193,194,195,197,198,199,200,201,202,204,205,206,207,208,209,210,212,
                    213,214,215,216,217,219,220,221,222,223,224,226,226,226,227,227,227,228,228,228,229,229,229,230,230,231,231,231,232,232,232,233,233,233,234,234,235,235,235,236,236,236,237,237,237,238,238,239,239,239,240,240,240,241,241,241,242,242,243,243,243,244,244,244,245,245,245,246,246,246,247,247,247,248,248,248,249,249,249,250,250,250,251,251,251,252,252,252,253,253,253,254,254,254,255],ll=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,35,36,37,39,40,42,43,44,46,
                    47,49,50,51,53,54,56,57,58,59,61,62,63,64,66,67,68,69,71,72,73,74,76,77,78,79,81,82,83,84,86,87,88,90,91,92,93,95,96,97,98,100,101,102,103,105,106,107,108,110,111,112,113,115,116,117,118,120,121,122,124,125,126,127,129,130,131,132,134,135,136,137,139,140,141,142,144,145,146,147,149,150,151,152,154,155,156,158,159,160,161,163,164,165,166,168,169,170,171,173,174,175,176,178,179,180,181,183,184,185,186,188,189,190,192,193,194,195,197,198,199,200,202,203,204,205,207,208,209,210,212,213,214,215,217,218,
                    219,220,222,223,224,226,226,226,227,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,243,244,244,244,245,245,245,246,246,246,247,247,247,248,248,248,249,249,249,250,250,250,251,251,251,252,252,252,253,253,253,254,254,254,255],Yp=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,46,47,48,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,68,69,70,72,
                    73,74,76,77,78,80,81,83,84,85,87,88,89,91,92,94,95,96,98,99,100,102,103,105,106,107,109,110,111,113,114,116,117,118,120,121,122,124,125,127,128,129,131,132,133,135,136,138,139,140,142,143,144,146,147,149,150,151,153,154,155,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,192,193,193,194,195,195,196,197,197,198,199,199,200,201,201,202,203,203,204,205,205,206,207,207,208,209,209,210,211,211,212,213,213,214,215,
                    215,216,217,217,218,219,219,220,221,221,222,223,223,224,225,225,226,227,227,228,229,229,230,231,231,232,233,233,234,235,235,236,237,237,238,239,239,240,241,241,242,243,243,244,245,245,246,247,247,248,249,249,250,251,251,252,253,253,254,255];class Zp extends Wb{constructor(a,b,d,e){super(a,Wp,d,e);this.lightLevel=.1;this.rednessLevel=.5;this.mskin_he_max=175/180*3.141593;this.mskin_he_min=115/180*3.141593;this.mskin_hc_max=173/180*3.141593;this.mskin_hc_min=116/180*3.141593;this.mskin_hc_axis=2.04203545;
                    this.mfacts_rotate_ge=this.mfacts_rotate_le=this.mfacts_rotate_c=0;this.tab_addr=null;this.lutTextures=[];this.inputTexture=b;this.init()}setUniforms(){var a=this.gl.getUniformLocation(this.program,"u_flipY"),b=this.gl.getUniformLocation(this.program,"u_denoiseLevel");this.gl.uniform1f(b,this.denoiseLevel);this.gl.uniform1f(a,1);a=this.gl.getUniformLocation(this.program,"light");this.gl.uniform1f(a,this.lightLevel);a=this.gl.getUniformLocation(this.program,"redness");this.gl.uniform1f(a,this.rednessLevel);
                    a=this.gl.getUniformLocation(this.program,"skin_he_max");b=this.gl.getUniformLocation(this.program,"skin_he_min");var d=this.gl.getUniformLocation(this.program,"skin_hc_max"),e=this.gl.getUniformLocation(this.program,"skin_hc_min");let f=this.gl.getUniformLocation(this.program,"skin_hc_axis"),g=this.gl.getUniformLocation(this.program,"facts_rotate_c"),k=this.gl.getUniformLocation(this.program,"facts_rotate_le"),h=this.gl.getUniformLocation(this.program,"facts_rotate_ge");this.gl.uniform1f(a,this.mskin_he_max);
                    this.gl.uniform1f(b,this.mskin_he_min);this.gl.uniform1f(d,this.mskin_hc_max);this.gl.uniform1f(e,this.mskin_hc_min);this.gl.uniform1f(f,this.mskin_hc_axis);this.gl.uniform1f(g,this.mfacts_rotate_c);this.gl.uniform1f(k,this.mfacts_rotate_le);this.gl.uniform1f(h,this.mfacts_rotate_ge);a=this.gl.getUniformLocation(this.program,"u_originImage");this.gl.activeTexture(this.gl.TEXTURE2);this.gl.bindTexture(this.gl.TEXTURE_2D,this.inputTexture);this.gl.uniform1i(a,2);a=["lighten_lut"];b=[this.gl.TEXTURE3];
                    for(d=0;d<a.length;d++)e=this.gl.getUniformLocation(this.program,a[d]),this.gl.activeTexture(b[d]),this.gl.bindTexture(this.gl.TEXTURE_2D,this.lutTextures[d]),this.gl.uniform1i(e,d+3)}setParameters(a){void 0!==a.denoiseLevel&&(this.denoiseLevel=a.denoiseLevel);void 0!==a.lightLevel&&(this.lightLevel=a.lightLevel);void 0!==a.rednessLevel&&(this.rednessLevel=a.rednessLevel,this.updateRedness(this.rednessLevel));a.lighteningContrastLevel&&this.updateLut(a.lighteningContrastLevel)}init(){this.tab_addr=
                    new Uint8Array(ll);let a=[this.tab_addr],b=[256],d=[1];for(let e=0;e<a.length;e++){let f=this.gl.createTexture();if(!f)throw new m(l.WEBGL_INTERNAL_ERROR,"create lut texture failed");this.gl.bindTexture(this.gl.TEXTURE_2D,f);this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.LUMINANCE,b[e],d[e],0,this.gl.LUMINANCE,this.gl.UNSIGNED_BYTE,a[e]);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE);
                    this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR);this.lutTextures.push(f)}}updateRedness(a){var b=a;1<a&&(a=1);0>a&&(a=0);1<b&&(b=1);0>b&&(b=0);this.mfacts_rotate_c=.8*a;.8>b&&(b=0);this.mskin_he_max=175/180*3.141593;this.mskin_hc_max=173/180*3.141593;this.mskin_he_min=(115-4*b)/180*3.141593;this.mskin_hc_min=(116-4*b)/180*3.141593;this.mskin_hc_axis=(117-4*b)/180*3.141593;this.mskin_hc_axis<
                this.mskin_hc_min&&(this.mskin_hc_axis=this.mskin_hc_min);1.5707965>this.mskin_hc_min&&(this.mskin_hc_min=1.5707965);1.5707965>this.mskin_hc_axis&&(this.mskin_hc_axis=1.5707965);1.5707965>this.mskin_he_min&&(this.mskin_he_min=1.5707965);3.141593<this.mskin_hc_max&&(this.mskin_hc_max=3.141593);3.141593<this.mskin_hc_axis&&(this.mskin_hc_axis=3.141593);3.141593<this.mskin_he_max&&(this.mskin_he_max=3.141593);a=this.mskin_he_max-this.mskin_hc_max;b=this.mskin_hc_max-this.mskin_hc_axis;this.mfacts_rotate_ge=
                    .01<a?this.mfacts_rotate_c*b/a:this.mfacts_rotate_c;a=this.mskin_hc_min-this.mskin_he_min;b=this.mskin_hc_axis-this.mskin_hc_min;this.mfacts_rotate_le=.01<a?this.mfacts_rotate_c*b/a:this.mfacts_rotate_c}updateLut(a){var b=null;if(0===a&&(b=ll),1===a&&(b=Yp),2===a&&(b=Xp),!b)throw new m(l.WEBGL_INTERNAL_ERROR,"invalid ylut_table value:"+a);this.tab_addr=new Uint8Array(b);a=[this.tab_addr];b=[256];let d=[1];for(let e=0;e<a.length;e++)this.gl.bindTexture(this.gl.TEXTURE_2D,this.lutTextures[e]),this.gl.texImage2D(this.gl.TEXTURE_2D,
                    0,this.gl.LUMINANCE,b[e],d[e],0,this.gl.LUMINANCE,this.gl.UNSIGNED_BYTE,a[e])}}class $p{constructor(){this.canvas=this.gl=null;this.programs=[];this.inputTexture=this.commonProgram=null;this.outputTextures=[];this.fbos=[];this.originalFrameHeight=this.originalFrameWidth=0;this.enableBeauty=!1;this.denoiseLevel=5;this.lightLevel=.35;this.rednessLevel=.5;this.lighteningContrastLevel=1}setEnableBeauty(a){this.enableBeauty=!!a}init(a,b,d){if(!fa.supportWebGL)throw new m(l.NOT_SUPPORTED,"your browser is not support webGL");
                    if(this.gl=d.getContext("webgl"),!this.gl)throw new m(l.WEBGL_INTERNAL_ERROR,"can not get webgl context");if(this.initGL(a,b),!this.inputTexture)throw new m(l.WEBGL_INTERNAL_ERROR,"can not find input texture");this.canvas=d;this.programs.push(new kl(this.gl));this.programs.push(new Rp(this.gl,a,b));this.programs.push(new Tp(this.gl,a,b));this.programs.push(new Vp(this.gl,a,b));this.programs.push(new Zp(this.gl,this.inputTexture,a,b));this.commonProgram=this.programs[0].program;this.setDenoiseLevel(this.denoiseLevel);
                    this.setLightLevel(this.lightLevel);this.setRednessLevel(this.rednessLevel);this.setContrastLevel(this.lighteningContrastLevel)}render(a){if(!this.gl||!this.commonProgram||!this.canvas)return void h.warning("video effect manager is not init!");var b=0;if(this.originalFrameHeight===a.videoWidth&&this.originalFrameWidth===a.videoHeight)b=2;else if(this.originalFrameHeight!==a.videoHeight||this.originalFrameWidth!==a.videoWidth){var d,e,f;if(h.debug(n(d=n(e=n(f="beauty effect: resolution changed ".concat(this.originalFrameWidth,
                    "x")).call(f,this.originalFrameHeight," -> ")).call(e,a.videoWidth,"x")).call(d,a.videoHeight)),0===a.videoHeight||0===a.videoWidth)return void h.debug("beauty effect: skip 0 resolution frame");this.canvas.width=a.videoWidth;this.canvas.height=a.videoHeight;a.setAttribute("width",a.videoWidth.toString());a.setAttribute("height",a.videoHeight.toString());this.release();this.init(a.videoWidth,a.videoHeight,this.canvas)}this.gl.viewport(0,0,a.videoWidth,a.videoHeight);this.gl.bindTexture(this.gl.TEXTURE_2D,
                    this.inputTexture);this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,a);a=this.enableBeauty?this.programs.length-1:0;for(d=0;d<=a;d++)e=this.programs[d].program,this.gl.useProgram(e),e=this.gl.getUniformLocation(e,"u_image"),this.programs[d].setUniforms(),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.fbos[b+d%2]),this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.drawArrays(this.gl.TRIANGLES,0,6),this.gl.activeTexture(this.gl.TEXTURE0),
                    this.gl.bindTexture(this.gl.TEXTURE_2D,this.outputTextures[b+d%2]),this.gl.uniform1i(e,0);this.gl.useProgram(this.commonProgram);b=this.gl.getUniformLocation(this.commonProgram,"u_flipY");this.gl.uniform1f(b,-1);this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null);this.gl.clearColor(0,0,0,1);this.gl.clear(this.gl.COLOR_BUFFER_BIT);this.gl.drawArrays(this.gl.TRIANGLES,0,6)}setDenoiseLevel(a){var b;r(b=this.programs).call(b,b=>{b instanceof Wb&&b.setParameters({denoiseLevel:a})});this.denoiseLevel=a}setLightLevel(a){var b;
                    r(b=this.programs).call(b,b=>{b instanceof Wb&&b.setParameters({lightLevel:a})});this.lightLevel=a}setRednessLevel(a){var b;r(b=this.programs).call(b,b=>{b instanceof Wb&&b.setParameters({rednessLevel:a})});this.rednessLevel=a}setContrastLevel(a){var b;r(b=this.programs).call(b,b=>{b instanceof Wb&&b.setParameters({lighteningContrastLevel:a})});this.lighteningContrastLevel=a}setSize(a,b){var d;r(d=this.programs).call(d,d=>{d instanceof Wb&&d.setSize(a,b)})}release(){this.inputTexture=this.commonProgram=
                    this.gl=null;this.programs=[];this.outputTextures=[];this.fbos=[]}initGL(a,b){if(!this.gl)throw new m(l.WEBGL_INTERNAL_ERROR,"can not find webgl context");this.inputTexture=this.gl.createTexture();this.gl.bindTexture(this.gl.TEXTURE_2D,this.inputTexture);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR);
                    this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR);for(let d=0;4>d;d++){let e=this.gl.createTexture();if(!e)throw new m(l.WEBGL_INTERNAL_ERROR,"create texture failed");this.gl.bindTexture(this.gl.TEXTURE_2D,e);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR);
                        2>d?this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,a,b,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null):this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,b,a,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null);let f=this.gl.createFramebuffer();if(!f)throw new m(l.WEBGL_INTERNAL_ERROR,"create frame buffer failed");this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,f);this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,e,0);this.outputTextures.push(e);this.fbos.push(f)}this.gl.viewport(0,
                        0,a,b);this.originalFrameWidth=a;this.originalFrameHeight=b}}class aq{constructor(){this.recordedFrameCount=this.targetFrameRate=0;this.recordingTime=2}async startRecordBeautyEffectOutput(a,b=4){if(this.recordID)throw new m(l.UNEXPECTED_ERROR,"another beauty effect recording is in progress");let d=pa(6,"");return this.recordID=d,this.targetFrameRate=a,this.recordedFrameCount=0,this.recordingTime=b,await Db(1E3*this.recordingTime),this.recordID!==d?(this.recordID=void 0,!0):(this.recordID=void 0,this.recordedFrameCount<
                this.targetFrameRate*this.recordingTime/2?(h.warning("detect beauty effect overload, current framerate",this.recordedFrameCount/2),!1):(h.debug("beauty effect current framerate",this.recordedFrameCount/2),!0))}stopRecordBeautyEffectOutput(){this.recordedFrameCount=this.targetFrameRate=0;this.recordID=void 0}addFrame(){this.recordID&&(this.recordedFrameCount+=1)}}class bq extends Np{constructor(){super();this.kind="video";this.fps=15;this.overloadDetector=new aq;this.enabled=!1;this.stopChromeBackgroundLoop=
                    null;this.lastRenderTime=0;this.fps=30;this.manager=new $p}async setBeautyEffectOptions(a,b){void 0!==b.smoothnessLevel&&W(b.smoothnessLevel,"options.smoothnessLevel",0,1,!1);void 0!==b.lighteningLevel&&W(b.lighteningLevel,"options.lighteningLevel",0,1,!1);void 0!==b.rednessLevel&&W(b.rednessLevel,"options.rednessLevel",0,1,!1);void 0!==b.lighteningContrastLevel&&bb(b.lighteningContrastLevel,"options.lighteningContrastLevel",[0,1,2]);void 0!==b.smoothnessLevel&&this.manager.setDenoiseLevel(Math.max(.1,
                    10*b.smoothnessLevel));void 0!==b.lighteningLevel&&this.manager.setLightLevel(Math.max(.1,b.lighteningLevel/2));void 0!==b.rednessLevel&&this.manager.setRednessLevel(Math.max(.01,b.rednessLevel));void 0!==b.lighteningContrastLevel&&this.manager.setContrastLevel(b.lighteningContrastLevel);this.enabled!==a&&(this.manager.setEnableBeauty(a),this.enabled=a,a?this.input&&await this.startEffect():await this.stopEffect())}destroy(){this.onOutputChange=void 0;this.stopEffect();this.enabled=!1}async startEffect(){let a=
                    qa();if(!this.input)return void h.warning("video track is null, fail to start video effect!");if(this.output)return void h.warning("video effect is already enabled");let b=await this.renderWithWebGL();await this.updateOutput(b);h.info("start video effect, output:",this.output);this.overloadDetector.startRecordBeautyEffectOutput(this.fps).then(a=>{a||this.onOverload&&this.onOverload()});let d=()=>{requestAnimationFrame(d);const a=v(),b=1E3/this.fps,g=this.lastRenderTime?a-this.lastRenderTime:b;g<b||
                (this.lastRenderTime=a-(g-b),this.video&&this.video.paused&&this.video.play(),this.enabled&&this.video&&(this.manager.render(this.video),this.output&&this.output.requestFrame&&this.output.requestFrame(),this.overloadDetector.addFrame()))};requestAnimationFrame(d);a.name===ea.CHROME&&document.addEventListener("visibilitychange",()=>{document.hidden?this.stopChromeBackgroundLoop=bf(()=>{this.enabled&&this.video&&this.manager.render(this.video);this.output&&this.output.requestFrame&&this.output.requestFrame();
                    this.overloadDetector.addFrame()},this.fps):this.stopChromeBackgroundLoop&&(this.stopChromeBackgroundLoop(),this.stopChromeBackgroundLoop=null)},!1)}async stopEffect(){h.info("stop video effect");this.overloadDetector.stopRecordBeautyEffectOutput();this.manager.release();this.canvas&&this.canvas.remove();this.video&&this.video.remove();this.video=this.canvas=void 0;await this.updateOutput(void 0)}async _setInput(a){this.enabled&&!this.video&&await this.startEffect()}_removeInput(){this.stopEffect()}async renderWithWebGL(){var a;
                    if(!this.input)throw new m(l.BEAUTY_PROCESSOR_INTERNAL_ERROR,"can not renderWithWebGL, no input");this.canvas&&(this.canvas.remove(),this.canvas=void 0);this.video&&(this.video.remove(),this.video=void 0);this.canvas=document.createElement("canvas");this.video=document.createElement("video");this.video.setAttribute("autoplay","");this.video.setAttribute("muted","");this.video.muted=!0;this.video.setAttribute("playsinline","");this.video.setAttribute("style","display:none");this.video.srcObject=new MediaStream([this.input]);
                    let b=new u(a=>{const b=()=>{this.video&&this.video.removeEventListener("playing",b);a()};this.video&&this.video.addEventListener("playing",b)}),d=this.input.getSettings(),e=d.width,f=d.height;if(d.frameRate&&this.fps!==d.frameRate&&(this.fps=d.frameRate,h.debug("beauty video processor: set fps to",this.fps)),h.debug(n(a="beauty video processor: width ".concat(e," height ")).call(a,f)),!e||!f)throw new m(l.BEAUTY_PROCESSOR_INTERNAL_ERROR,"can not get track resolution");this.canvas.width=e;this.canvas.height=
                        f;this.video.setAttribute("width",e.toString());this.video.setAttribute("height",f.toString());this.manager.init(e,f,this.canvas);this.video.play();await b;return this.canvas.captureStream(fa.supportRequestFrame?0:this.fps).getVideoTracks()[0]}}class $a extends ye{constructor(a,b,d,e){super(a,e);this.trackMediaType="video";this._enabled=!0;$c(a).then(([a,b])=>{this._videoHeight=b;this._videoWidth=a}).catch(rg);this._encoderConfig=b;this._optimizationMode=d}get isPlaying(){return!!this._player}play(a,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               b={}){let d=t.reportApiInvoke(null,{tag:D.TRACER,name:y.LOCAL_VIDEO_TRACK_PLAY,options:[this.getTrackId(),"string"==typeof a?a:"HTMLElement",b]});if(!(a instanceof HTMLElement)){let b=document.getElementById(a.toString());var e;b?a=b:(h.warning(n(e="[track-".concat(this.getTrackId(),'] can not find "#')).call(e,a,'" element, use document.body')),a=document.body)}h.debug("[track-".concat(this.getTrackId(),"] start video playback"),z(b));a=Qd({},this._getDefaultPlayerConfig(),{},b,{trackId:this.getTrackId(),
                    element:a});this._player?this._player.updateConfig(a):(this._player=new il(a),this._player.updateVideoTrack(this._mediaStreamTrack));this._player.play();d.onSuccess()}stop(){let a=t.reportApiInvoke(null,{tag:D.TRACER,name:y.LOCAL_VIDEO_TRACK_STOP,options:[this.getTrackId()]});if(!this._player)return a.onSuccess();this._player.destroy();this._player=void 0;h.debug("[track-".concat(this.getTrackId(),"] stop video playback"));a.onSuccess()}async setEnabled(a){if(a!==this._enabled){h.info("[".concat(this.getTrackId(),
                    "] start setEnabled"),a);var b=await this._enabledMutex.lock();if(!a){this._originMediaStreamTrack.enabled=!1;try{await Ta(this,K.NEED_REMOVE_TRACK,this)}catch(d){throw h.error("[".concat(this.getTrackId(),"] setEnabled to false error"),d.toString()),b(),d;}return this._enabled=!1,h.info("[".concat(this.getTrackId(),"] setEnabled to false success")),b()}this._originMediaStreamTrack.enabled=!0;try{await Ta(this,K.NEED_ADD_TRACK,this)}catch(d){throw h.error("[".concat(this.getTrackId(),"] setEnabled to true error"),
                    d.toString()),b(),d;}h.info("[".concat(this.getTrackId(),"] setEnabled to true success"));this._enabled=!0;b()}}getStats(){cd(()=>{h.warning("[deprecated] LocalVideoTrack.getStats will be removed in the future, use AgoraRTCClient.getLocalVideoStats instead")},"localVideoTrackGetStatsWarning");return gc(this,K.GET_STATS)||Qd({},ue)}async setBeautyEffect(a,b={}){let d=t.reportApiInvoke(null,{tag:D.TRACER,name:y.LOCAL_VIDEO_TRACK_BEAUTY,options:[this.getTrackId(),a,b]});if(a||this._videoBeautyProcessor){if(qa().os===
                    X.IOS||qa().os===X.ANDROID)throw a=new m(l.INVALID_OPERATION,"can not enable beauty effect on mobile device"),d.onError(a),a;if(!this._enabled&&a)throw a=new m(l.TRACK_IS_DISABLED,"can not enable beauty effect when track is disabled"),d.onError(a),a;h.info("[".concat(this.getTrackId(),"] start setBeautyEffect"),a,z(b));try{this._videoBeautyProcessor?await this._videoBeautyProcessor.setBeautyEffectOptions(a,b):(this._videoBeautyProcessor=new bq,this._videoBeautyProcessor.onOverload=()=>{cb(()=>this.emit(vd.BEAUTY_EFFECT_OVERLOAD))},
                    await this._videoBeautyProcessor.setBeautyEffectOptions(a,b),await this._registerTrackProcessor(this._videoBeautyProcessor))}catch(e){throw h.error("[".concat(this.getTrackId(),"] setBeautyEffect error"),e.toString()),d.onError(e),e;}h.info("[".concat(this.getTrackId(),"] setBeautyEffect success"));d.onSuccess()}}getCurrentFrameData(){return this._player?this._player.getCurrentFrame():new ImageData(2,2)}async setOptimizationMode(a){var b;if("motion"===a||"detail"===a||"balanced"===a){try{await Ta(this,
                    K.SET_OPTIMIZATION_MODE,a)}catch(d){throw h.error("[".concat(this.getTrackId(),"] set optimization mode failed"),d.toString()),d;}this._optimizationMode=a;h.info(n(b="[".concat(this.getTrackId(),"] set optimization mode success (")).call(b,a,")"))}else h.error(l.INVALID_PARAMS,"optimization mode must be motion, detail or balanced")}_updatePlayerSource(){this._player&&this._player.updateVideoTrack(this._mediaStreamTrack)}_getDefaultPlayerConfig(){return{fit:"contain"}}}class ml extends $a{constructor(a,
b,d,e,f){super(a,b.encoderConfig?vc(b.encoderConfig):{},e,f);this._enabled=!0;this._deviceName="default";this._config=b;this._constraints=d;this._deviceName=a.label;this._config.encoderConfig&&(this._encoderConfig=vc(this._config.encoderConfig))}async setDevice(a){var b;let d=t.reportApiInvoke(null,{tag:D.TRACER,name:y.CAM_VIDEO_TRACK_SET_DEVICE,options:[this.getTrackId(),a]});if(h.info(n(b="[track-".concat(this.getTrackId(),"] set device to ")).call(b,a)),this._enabled)try{let d=await gb.getDeviceById(a);
                    b={};b.video=Qd({},this._constraints);b.video.deviceId={exact:a};b.video.facingMode=void 0;this._originMediaStreamTrack.stop();let f=null;try{f=await Eb(b,this.getTrackId())}catch(g){throw h.error("[".concat(this.getTrackId(),"] setDevice failed"),g.toString()),f=await Eb({video:this._constraints},this.getTrackId()),await this._updateOriginMediaStreamTrack(f.getVideoTracks()[0],!1),g;}await this._updateOriginMediaStreamTrack(f.getVideoTracks()[0],!1);$c(this._originMediaStreamTrack).then(([a,b])=>
                    {this._videoHeight=b;this._videoWidth=a});this._deviceName=d.label;this._config.cameraId=a;this._constraints.deviceId={exact:a}}catch(e){throw d.onError(e),h.error("[".concat(this.getTrackId(),"] setDevice error"),e.toString()),e;}else try{this._deviceName=(await gb.getDeviceById(a)).label,this._config.cameraId=a,this._constraints.deviceId={exact:a}}catch(e){throw d.onError(e),h.error("[track-".concat(this.getTrackId(),"] setDevice error"),e.toString()),e;}h.info("[".concat(this.getTrackId(),"] setDevice success"));
                    d.onSuccess()}async setEnabled(a){if(a!==this._enabled){h.info("[".concat(this.getTrackId(),"] start setEnabled"),a);var b=await this._enabledMutex.lock();if(!a){this._originMediaStreamTrack.onended=null;this._originMediaStreamTrack.stop();this._enabled=!1;try{await Ta(this,K.NEED_REMOVE_TRACK,this)}catch(e){throw h.error("[".concat(this.getTrackId(),"] setEnabled to false error"),e.toString()),b(),e;}return h.info("[".concat(this.getTrackId(),"] setEnabled to false success")),b()}a=Qd({},this._constraints);
                    var d=gb.searchDeviceIdByName(this._deviceName);d&&!a.deviceId&&(a.deviceId={exact:d});try{let a=await Eb({video:this._constraints},this.getTrackId());await this._updateOriginMediaStreamTrack(a.getVideoTracks()[0],!1);await Ta(this,K.NEED_ADD_TRACK,this)}catch(e){throw h.error("[".concat(this.getTrackId(),"] setEnabled true error"),e.toString()),b(),e;}$c(this._originMediaStreamTrack).then(([a,b])=>{this._videoHeight=b;this._videoWidth=a});h.info("[".concat(this.getTrackId(),"] setEnabled to true success"));
                    this._enabled=!0;b()}}async setEncoderConfiguration(a){let b=t.reportApiInvoke(null,{tag:D.TRACER,name:y.CAM_VIDEO_TRACK_SET_ENCODER_CONFIG,options:[this.getTrackId(),a]});if(!this._enabled)throw a=new m(l.TRACK_IS_DISABLED,"can not set encoder configuration when track is disabled"),b.onError(a),a;a=vc(a);let d=JSON.parse(z(this._config));d.encoderConfig=a;let e=kf(d);h.debug("[".concat(this.getTrackId(),"] setEncoderConfiguration applyConstraints"),z(a),z(e));try{await this._originMediaStreamTrack.applyConstraints(e),
                    $c(this._originMediaStreamTrack).then(([a,b])=>{this._videoHeight=b;this._videoWidth=a})}catch(f){throw a=new m(l.UNEXPECTED_ERROR,f.toString()),h.error("[track-".concat(this.getTrackId(),"] applyConstraints error"),a.toString()),b.onError(a),a;}this._config=d;this._constraints=e;this._encoderConfig=a;try{await Ta(this,K.NEED_RENEGOTIATE)}catch(f){return b.onError(f),f.throw()}b.onSuccess()}_getDefaultPlayerConfig(){return{mirror:!0,fit:"cover"}}}class nl extends hl{constructor(a,b,d,e){super(b,b.stringUid||
                    b.uid);this.type="pub";this.detecting=!1;this.renegotiateWithGateway=async()=>(h.debug("[pc-".concat(this.pc.ID,"] renegotiate start")),new u(async(a,b)=>{this.connectionState="connecting";let d=e=>{"connected"===e&&(this.off(G.CONNECTION_STATE_CHANGE,d),a());"disconnected"===e&&(this.off(G.CONNECTION_STATE_CHANGE,d),b(new m(l.OPERATION_ABORTED,"renegotiate abort")))};this.on(G.CONNECTION_STATE_CHANGE,d);var e=await this.pc.createOfferSDP();this.audioTrack&&this.audioTrack._encoderConfig&&(e=lf(e,
                    this.audioTrack._encoderConfig));await this.pc.setOfferSDP(e);let f=await Ma(this,G.NEED_RENEGOTIATE,e);e=um(e,this.updateAnswerSDP(f.sdp));await this.pc.setAnswerSDP(e);h.debug("[pc-".concat(this.pc.ID,"] renegotiate success"));this.connectionState="connected"}));this.handleStreamRenegotiate=(a,b)=>{"connected"===this.connectionState?this.renegotiateWithGateway().then(a).catch(b):a()};this.handleReplaceTrack=(a,b,d)=>{if(this.audioTrack instanceof Sc&&"audio"===a.kind)return u.resolve();this.pc.replaceTrack(a).then(a=>
                    a?this.renegotiateWithGateway():u.resolve()).then(b).catch(d)};this.handleCloseAudioTrack=a=>{};this.handleCloseVideoTrack=()=>{this.lowStreamConnection&&this.lowStreamConnection.videoTrack&&this.lowStreamConnection.videoTrack.close()};this.handleGetSessionID=a=>{a(this.joinInfo.sid)};this.handleGetLocalVideoStats=a=>{a(this.statsCollector.getLocalVideoTrackStats(this.connectionId))};this.handleGetLocalAudioStats=a=>{a(this.statsCollector.getLocalAudioTrackStats(this.connectionId))};this.handleSetOptimizationMode=
                    (a,b,d)=>{this.pc.setRtpSenderParameters({},"detail"===a?"maintain-resolution":"motion"===a?"maintain-framerate":a).then(b).catch(d)};this.isLowStreamConnection=!!e;this.codec=d;this.statsCollector=a;this.statsCollector.addLocalConnection(this)}getAllTracks(){let a=[];return this.videoTrack&&a.push(this.videoTrack),this.audioTrack&&this.audioTrack instanceof Sc?a=n(a).call(a,this.audioTrack.trackList):this.audioTrack&&a.push(this.audioTrack),a}async addTracks(a){let b=fa;if("connecting"===this.connectionState)try{return await this.createWaitConnectionConnectedPromise(),
                    await this.addTracks(a)}catch(g){throw new m(l.OPERATION_ABORTED,"publish abort");}var d=!1;let e=this.getAllTracks();a=Lh(a=O(a).call(a,a=>-1===E(e).call(e,a)));for(let e=0;e<a.length;e+=1){var f=a[e];if(!(f instanceof ye))return(new m(l.INVALID_LOCAL_TRACK)).throw();if(f instanceof $a&&this.disabledVideoTrack){if(this.disabledVideoTrack!==f)return(new m(l.EXIST_DISABLED_VIDEO_TRACK)).throw();this.disabledVideoTrack=void 0}if(f instanceof $a&&this.videoTrack)return(new m(l.CAN_NOT_PUBLISH_MULTIPLE_VIDEO_TRACKS)).throw();
                    if(f instanceof Za&&this.audioTrack)if(this.audioTrack instanceof Sc)this.audioTrack.addAudioTrack(f);else{if(!b.webAudioMediaStreamDest)throw new m(l.NOT_SUPPORTED,"your browser is not support audio mixing");d=new Sc;d.addAudioTrack(this.audioTrack);d.addAudioTrack(f);d=await this.addTrackWithPC(d)}else f instanceof $a&&this.isLowStreamConnection?(d=this.lowStreamParameter||{width:160,height:120,framerate:15,bitrate:50},f=vm(f,d),f=new $a(f,{bitrateMax:d.bitrate,bitrateMin:d.bitrate}),f._hints.push(nb.LOW_STREAM),
                        d=await this.addTrackWithPC(f)):(this.detecting=!0,Ec(()=>{this.detecting=!1},8E3),d=await this.addTrackWithPC(f))}d&&await this.renegotiateWithGateway();r(a).call(a,a=>this.bindTrackEvents(a))}async removeTracks(a,b){let d=this.getAllTracks();a=Lh(a=O(a).call(a,a=>-1!==E(d).call(d,a)||a===this.disabledVideoTrack));let e=[];for(let d=0;d<a.length;d+=1){let f=a[d];if(this.unbindTrackEvents(f),this.audioTrack instanceof Sc&&f instanceof Za)this.audioTrack.removeAudioTrack(f),0===this.audioTrack.trackList.length&&
                (e.push(this.audioTrack),this.audioTrack=void 0);else if(f instanceof Za)e.push(f),this.audioTrack=void 0;else if(f instanceof $a){if(b){if(this.disabledVideoTrack===f)return void(this.disabledVideoTrack=void 0)}else this.disabledVideoTrack=this.videoTrack;e.push(f);this.isLowStreamConnection&&f.close();this.videoTrack=void 0}}if(this.videoTrack||this.audioTrack){if(0!==e.length){if("connecting"===this.connectionState)try{await this.createWaitConnectionConnectedPromise()}catch(g){return}for(let a of e){var f;
                    h.debug(n(f="[".concat(this.connectionId,"] remove ")).call(f,a.trackMediaType," from pc"));await this.pc.removeTrack(a._mediaStreamTrack)}await this.renegotiateWithGateway()}}else await this.closeP2PConnection()}startP2PConnection(){return new u(async(a,b)=>{if(!this.audioTrack&&!this.videoTrack)return b(new m(l.UNEXPECTED_ERROR,"no track to publish"));let d=e=>{var f;"connected"===e&&(t.publish(this.joinInfo.sid,{lts:this.startTime,succ:!0,ec:null,audioName:this.audioTrack&&this.audioTrack.getTrackLabel(),
                    videoName:this.videoTrack&&this.videoTrack.getTrackLabel(),screenshare:!(!this.videoTrack||-1===E(f=this.videoTrack._hints).call(f,nb.SCREEN_TRACK)),audio:!!this.audioTrack,video:!!this.videoTrack,p2pid:this.pc.ID,publishRequestid:this.ID}),this.off(G.CONNECTION_STATE_CHANGE,d),a());if("disconnected"===e){if(this.off(G.CONNECTION_STATE_CHANGE,d),this.disconnectedReason)return b(this.disconnectedReason);b(new m(l.OPERATION_ABORTED,"publish abort"))}};this.on(G.CONNECTION_STATE_CHANGE,d);this.disconnectedReason=
                    void 0;this.connectionState="connecting";this.startTime=v();try{!this.pc.videoTrack&&this.videoTrack&&await this.pc.addTrack(this.videoTrack._mediaStreamTrack);!this.pc.audioTrack&&this.audioTrack&&await this.pc.addTrack(this.audioTrack._mediaStreamTrack);let a=await this.pc.createOfferSDP();this.audioTrack&&this.audioTrack._encoderConfig&&(a=lf(a,this.audioTrack._encoderConfig));await this.pc.setOfferSDP(a);h.debug("[".concat(this.connectionId,"] create and set offer success"));let b=await Ma(this,
                    G.NEED_ANSWER,{messageType:"OFFER",sdp:a,offererSessionId:104,retry:!0}),d=this.updateAnswerSDP(b.sdp);await this.pc.setAnswerSDP(d);h.debug("[".concat(this.connectionId,"] set answer success"));await this.icePromise;this.connectionState="connected";this.startUploadStats()}catch(f){var e;this.off(G.CONNECTION_STATE_CHANGE,d);this.connectionState="disconnected";t.publish(this.joinInfo.sid,{lts:this.startTime,succ:!1,ec:f.code,audioName:this.audioTrack&&this.audioTrack.getTrackLabel(),videoName:this.videoTrack&&
                        this.videoTrack.getTrackLabel(),screenshare:!(!this.videoTrack||-1===E(e=this.videoTrack._hints).call(e,nb.SCREEN_TRACK)),audio:!!this.audioTrack,video:!!this.videoTrack,p2pid:this.pc.ID,publishRequestid:this.ID});h.error("[".concat(this.connectionId,"] connection error"),f.toString());b(f)}})}async closeP2PConnection(a){let b=this.getAllTracks();var d;(r(b).call(b,a=>{this.unbindTrackEvents(a)}),this.isLowStreamConnection&&this.videoTrack&&this.videoTrack.close(),this.videoTrack=void 0,this.audioTrack instanceof
                Sc)&&r(d=this.audioTrack.trackList).call(d,a=>{this.audioTrack.removeAudioTrack(a)});this.audioTrack=void 0;this.stopUploadStats();this.statsCollector.removeConnection(this.connectionId);await this.closePC(a);this.connectionState="disconnected";this.removeAllListeners()}getNetworkQuality(){var a,b=this.pc.getStats();if(!b.videoSend[0]&&!b.audioSend[0])return 1;var d=gc(this,G.NEED_SIGNAL_RTT),e=b.videoSend[0]?b.videoSend[0].rttMs:void 0;let f=b.audioSend[0]?b.audioSend[0].rttMs:void 0;e=e&&f?(e+f)/
                    2:e||f;d=70*b.sendPacketLossRate/50+.3*((e&&d?(e+d)/2:e||d)||0)/1500;d=.17>d?1:.36>d?2:.59>d?3:.1>d?4:5;return this.videoTrack&&this.videoTrack._encoderConfig&&-1===E(a=this.videoTrack._hints).call(a,nb.SCREEN_TRACK)&&(a=this.videoTrack._encoderConfig.bitrateMax,b=b.bitrate.actualEncoded,a&&b)?(b=(1E3*a-b)/(1E3*a),Io[.15>b?0:.3>b?1:.45>b?2:.6>b?3:4][d]):d}uploadStats(a,b){let d=this.audioTrack?Il(a,this.audioTrack):void 0,e=this.videoTrack?Hl(a,this.videoTrack):void 0,f=Ih(a,b),g=Gl(a);d&&cb(()=>
                    this.emit(G.NEED_UPLOAD,wb.PUBLISH_STATS,d));e&&cb(()=>this.emit(G.NEED_UPLOAD,wb.PUBLISH_STATS,wm({},e,{},f)));g&&cb(()=>this.emit(G.NEED_UPLOAD,wb.PUBLISH_STATS,g))}uploadSlowStats(a){let b=Ih(a);b&&cb(()=>this.emit(G.NEED_UPLOAD,wb.PUBLISH_STATS,b))}uploadRelatedStats(a){let b=Ll(a);b&&cb(()=>{this.emit(G.NEED_UPLOAD,wb.PUBLISH_RELATED_STATS,b)})}bindTrackEvents(a){this.isLowStreamConnection||(a instanceof Za?(a.addListener(K.GET_STATS,this.handleGetLocalAudioStats),a.addListener(K.NEED_CLOSE,
                    this.handleCloseAudioTrack)):a instanceof $a&&(a.addListener(K.GET_STATS,this.handleGetLocalVideoStats),a.addListener(K.NEED_CLOSE,this.handleCloseVideoTrack),a.addListener(K.SET_OPTIMIZATION_MODE,this.handleSetOptimizationMode)),a.addListener(K.NEED_RENEGOTIATE,this.handleStreamRenegotiate),a.addListener(K.NEED_REPLACE_TRACK,this.handleReplaceTrack),a.addListener(K.NEED_SESSION_ID,this.handleGetSessionID))}unbindTrackEvents(a){this.isLowStreamConnection||(a instanceof Za?(a.off(K.GET_STATS,this.handleGetLocalAudioStats),
                    a.off(K.NEED_CLOSE,this.handleCloseAudioTrack)):a instanceof $a&&(a.off(K.GET_STATS,this.handleGetLocalVideoStats),a.off(K.NEED_CLOSE,this.handleCloseVideoTrack)),a.off(K.NEED_RENEGOTIATE,this.handleStreamRenegotiate),a.off(K.NEED_REPLACE_TRACK,this.handleReplaceTrack),a.off(K.NEED_SESSION_ID,this.handleGetSessionID))}async addTrackWithPC(a){if("connecting"===this.connectionState)return(new m(l.INVALID_OPERATION,"last publish operation has not finished")).throw();var b=this.videoTrack;let d=!1;this.audioTrack&&
                a instanceof Za?(this.audioTrack=a,h.debug("[".concat(this.connectionId,"] replace pc audio track")),d=await this.pc.replaceTrack(a._mediaStreamTrack)):this.videoTrack&&a instanceof $a?(this.videoTrack=a,h.debug("[".concat(this.connectionId,"] replace pc video track")),d=await this.pc.replaceTrack(a._mediaStreamTrack)):a instanceof Za?(this.audioTrack=a,h.debug("[".concat(this.connectionId,"] add audio track to pc")),await this.pc.addTrack(a._mediaStreamTrack),d=!0):a instanceof $a&&(this.videoTrack=
                    a,h.debug("[".concat(this.connectionId,"] add video track to pc")),await this.pc.addTrack(a._mediaStreamTrack),d=!0);a=fa;this.videoTrack!==b&&this.videoTrack&&a.supportSetRtpSenderParameters&&(b={},a="balanced",this.videoTrack._encoderConfig&&(b.maxBitrate=this.videoTrack._encoderConfig.bitrateMax?1E3*this.videoTrack._encoderConfig.bitrateMax:void 0),"motion"===this.videoTrack._optimizationMode?a="maintain-framerate":"detail"===this.videoTrack._optimizationMode&&(a="maintain-resolution"),h.debug("[".concat(this.connectionId,
                    "] set pc rtp sender"),b,a),await this.pc.setRtpSenderParameters(b,a));return"disconnected"!==this.connectionState&&d}updateAnswerSDP(a){var b,d;a=a.replace(/a=x-google-flag:conference\r\n/g,"");this.videoTrack&&E(b=this.videoTrack._hints).call(b,nb.SCREEN_TRACK);if(this.videoTrack&&this.videoTrack._encoderConfig&&-1===E(d=this.videoTrack._hints).call(d,nb.SCREEN_TRACK)){{b=this.codec;var e=this.videoTrack._encoderConfig,f=fa;d=e.bitrateMin;e=e.bitrateMax;let q=a.match(/m=video.*\r\n/)||a.match(/m=video.*\n/);
                    if(q&&0<q.length&&f.supportMinBitrate&&d){f=null;var g,k;if("h264"===b?f=a.match(/a=rtpmap:(\d+) H264\/90000\r\n/)||a.match(/a=rtpmap:(\d+) H264\/90000\n/):"vp8"===b&&(f=a.match(/a=rtpmap:(\d+) VP8\/90000\r\n/)||a.match(/a=rtpmap:(\d+) VP8\/90000\n/)),f&&f[1])a=a.replace(q[0],n(g=n(k="".concat(q[0],"a=fmtp:")).call(k,f[1]," x-google-min-bitrate=")).call(g,d,"\r\n"))}if(q&&0<q.length&&e){var h,l;g="AS";qa().name===ea.FIREFOX&&(e=1E3*(e>>>0),g="TIAS");a=a.replace(q[0],n(h=n(l="".concat(q[0],"b=")).call(l,
                        g,":")).call(h,e,"\r\n"))}}}this.audioTrack&&this.audioTrack._encoderConfig&&(a=lf(a,this.audioTrack._encoderConfig));h=a;l=qa();return h=l.name!==ea.SAFARI&&l.os!==X.IOS?h:h.replace(/a=.*video-orientation\r\n/g,"")}createPC(){this.pc=new el({turnServer:this.joinInfo.turnServer});this.updateICEPromise()}async closePC(a){return this.pc.onICEConnectionStateChange=void 0,this.pc.close(),!a&&await Ma(this,G.NEED_UNPUB)}onPCDisconnected(a){var b;t.publish(this.joinInfo.sid,{lts:this.startTime,succ:!1,
                    ec:a.code,audioName:this.audioTrack&&this.audioTrack.getTrackLabel(),videoName:this.videoTrack&&this.videoTrack.getTrackLabel(),screenshare:!(!this.videoTrack||-1===E(b=this.videoTrack._hints).call(b,nb.SCREEN_TRACK)),audio:!!this.audioTrack,video:!!this.videoTrack,p2pid:this.pc.ID,publishRequestid:this.ID})}}class ol extends Vk{constructor(a,b,d){super(a);this._isDestroyed=!1;this._userId=b;this._uintId=d}getUserId(){return this._userId}_updateOriginMediaStreamTrack(a){this._mediaStreamTrack=this._originMediaStreamTrack=
                    a;this._updatePlayerSource()}_destroy(){this._isDestroyed=!0;h.info("[track-".concat(this.getTrackId(),"] is destroyed"));this.stop()}}class zd extends ol{constructor(a,b,d){super(a,b,d);this.trackMediaType="video";$c(a).then(([a,b])=>{this._videoHeight=b;this._videoWidth=a}).catch(rg)}get isPlaying(){return!!this._player}getStats(){cd(()=>{h.warning("[deprecated] RemoteVideoTrack.getStats will be removed in the future, use AgoraRTCClient.getRemoteVideoStats instead")},"remoteVideoTrackGetStatsWarning");
                    return gc(this,K.GET_STATS)||mf({},hg)}play(a,b={}){let d=t.reportApiInvoke(null,{tag:D.TRACER,name:y.REMOTE_VIDEO_TRACK_PLAY,options:[this.getTrackId(),"string"==typeof a?a:"HTMLElement",b]});if("string"==typeof a){let b=document.getElementById(a);var e;b?a=b:(h.warning(n(e="[track-".concat(this.getTrackId(),'] can not find "#')).call(e,a,'" element, use document.body')),a=document.body)}h.debug("[track-".concat(this.getTrackId(),"] start video playback"),z(b));a=mf({fit:"cover"},b,{trackId:this.getTrackId(),
                    element:a});this._player?this._player.updateConfig(a):(this._player=new il(a),this._player.updateVideoTrack(this._mediaStreamTrack),this._player.onFirstVideoFrameDecoded=()=>{this.emit(ve.FIRST_FRAME_DECODED)});this._player.play();d.onSuccess()}stop(){let a=t.reportApiInvoke(null,{tag:D.TRACER,name:y.REMOTE_VIDEO_TRACK_STOP,options:[this.getTrackId()]});if(!this._player)return a.onSuccess();this._player.destroy();this._player=void 0;h.debug("[track-".concat(this.getTrackId(),"] stop video playback"));
                    a.onSuccess()}getCurrentFrameData(){return this._player?this._player.getCurrentFrame():new ImageData(2,2)}_updatePlayerSource(){h.debug("[track-".concat(this.getTrackId(),"] update player source track"));this._player&&this._player.updateVideoTrack(this._mediaStreamTrack)}}class Ad extends ol{constructor(a,b,d){super(a,b,d);this.trackMediaType="audio";this._useAudioElement=!1;this._source=new Xk(a,!0);this._source.once(lb.RECEIVE_TRACK_BUFFER,()=>{this.emit(ve.FIRST_FRAME_DECODED)});fa.webAudioWithAEC||
                (this._useAudioElement=!0)}get isPlaying(){return this._useAudioElement?ob.isPlaying(this.getTrackId()):this._source.isPlayed}setAudioFrameCallback(a,b=4096){if(!a)return this._source.removeAllListeners(lb.ON_AUDIO_BUFFER),void this._source.stopGetAudioBuffer();this._source.startGetAudioBuffer(b);this._source.removeAllListeners(lb.ON_AUDIO_BUFFER);this._source.on(lb.ON_AUDIO_BUFFER,b=>a(b))}setVolume(a){let b=t.reportApiInvoke(null,{tag:D.TRACER,name:y.REMOTE_AUDIO_SET_VOLUME,options:[this.getTrackId(),
                        a]},300);this._useAudioElement?ob.setVolume(this.getTrackId(),a):this._source.setVolume(a/100);b.onSuccess()}async setPlaybackDevice(a){let b=t.reportApiInvoke(null,{tag:D.TRACER,name:y.REMOTE_AUDIO_SET_OUTPUT_DEVICE,options:[this.getTrackId(),a]});if(!this._useAudioElement)throw new m(l.NOT_SUPPORTED,"your browser does not support setting the audio output device");try{await ob.setSinkID(this.getTrackId(),a)}catch(d){throw b.onError(d),d;}b.onSuccess()}getVolumeLevel(){return this._source.getAudioLevel()}getStats(){cd(()=>
                {h.warning("[deprecated] RemoteAudioTrack.getStats will be removed in the future, use AgoraRTCClient.getRemoteAudioStats instead")},"remoteAudioTrackGetStatsWarning");return gc(this,K.GET_STATS)||mf({},gg)}play(){let a=t.reportApiInvoke(null,{tag:D.TRACER,name:y.REMOTE_AUDIO_TRACK_PLAY,options:[this.getTrackId()]});h.debug("[".concat(this.getTrackId(),"] start audio playback"));this._useAudioElement?(h.debug("[track-".concat(this.getTrackId(),"] use audio element to play")),ob.play(this._mediaStreamTrack,
                    this.getTrackId())):this._source.play();a.onSuccess()}stop(){let a=t.reportApiInvoke(null,{tag:D.TRACER,name:y.REMOTE_AUDIO_TRACK_STOP,options:[this.getTrackId()]});h.debug("[".concat(this.getTrackId(),"] stop audio playback"));this._useAudioElement?ob.stop(this.getTrackId()):this._source.stop();a.onSuccess()}_destroy(){super._destroy();this._source.destroy()}_isFreeze(){return this._source.isFreeze}_updatePlayerSource(){h.debug("[track-".concat(this.getTrackId(),"] update player source track"));
                    this._source.updateTrack(this._mediaStreamTrack);this._useAudioElement&&ob.updateTrack(this.getTrackId(),this._mediaStreamTrack)}}class cq extends hl{constructor(a,b,d,e){super(d,a.uid);this.type="sub";this.unusedTracks=[];this.onTrack=a=>{var b,d;if("audio"===a.kind&&!this.subscribeOptions.audio||"video"===a.kind&&!this.subscribeOptions.video)return this.unusedTracks.push(a),void h.debug(n(d="[".concat(this.connectionId,"] unused ontrack event, kind: ")).call(d,a.kind));h.debug(n(b="[".concat(this.connectionId,
                    "] emit pc ontrack after subscribe ")).call(b,a.kind),a);b="audio"===a.kind?this.user._audioTrack:this.user._videoTrack;var e,f;b?b._updateOriginMediaStreamTrack(a):"audio"===a.kind?(this.user._audioTrack=new Ad(a,this.getUserId(),this.user._uintid),h.info(n(e="[".concat(this.connectionId,"] create remote audio track: ")).call(e,this.user._audioTrack.getTrackId())),this.bindTrackEvents(this.user._audioTrack)):(this.user._videoTrack=new zd(a,this.getUserId(),this.user._uintid),h.info(n(f="[".concat(this.connectionId,
                    "] create remote video track: ")).call(f,this.user._videoTrack.getTrackId())),this.bindTrackEvents(this.user._videoTrack))};this.handleGetRemoteAudioStats=a=>{a(this.statsCollector.getRemoteAudioTrackStats(this.connectionId))};this.handleGetRemoteVideoStats=a=>{a(this.statsCollector.getRemoteVideoTrackStats(this.connectionId))};this.handleGetSessionID=a=>{a(this.joinInfo.sid)};this.user=a;this.statsCollector=b;this.statsCollector.addRemoteConnection(this);this.subscribeOptions=e}async startP2PConnection(){return new u(async(a,
b)=>{let d=e=>{if("connected"===e&&(t.subscribe(this.joinInfo.sid,{lts:this.startTime,succ:!0,video:this.subscribeOptions.video,audio:this.subscribeOptions.audio,peerid:this.user.uid,ec:null,subscribeRequestid:this.ID,p2pid:this.pc.ID}),this.off(G.CONNECTION_STATE_CHANGE,d),a()),"disconnected"===e){if(this.off(G.CONNECTION_STATE_CHANGE,d),this.disconnectedReason)return b(this.disconnectedReason);b(new m(l.OPERATION_ABORTED,"subscribe abort"))}};if(this.on(G.CONNECTION_STATE_CHANGE,d),this.disconnectedReason=
                    void 0,this.connectionState="connecting",this.startTime=v(),!this.subscribeOptions)return void b(new m(l.UNEXPECTED_ERROR,"no subscribe options"));let e=new MediaStream,f=new u(a=>{this.pc.onTrack=(b,d)=>{var f,g;if("audio"===b.kind&&!this.subscribeOptions.audio||"video"===b.kind&&!this.subscribeOptions.video)return this.unusedTracks.push(b),void h.debug(n(g="[".concat(this.connectionId,"] unused ontrack event ")).call(g,b.kind));e.addTrack(b);g={audio:0<e.getAudioTracks().length,video:0<e.getVideoTracks().length};
                    h.debug(n(f="[".concat(this.connectionId,"] subscribe ontrack: ")).call(f,b.kind),d,b);a:{b=this.subscribeOptions;var k,l;d=sd(k=S(g)).call(k);k=sd(l=S(b)).call(l);for(l=0;l<d.length;l+=1){if(d[l]!==k[l]){g=!1;break a}if(g[d[l]]!==b[d[l]]){g=!1;break a}}g=!0}g&&(this.pc.onTrack=this.onTrack,h.debug("[".concat(this.connectionId,"] get all subscribed tracks")),a(e))}});try{let a=ki(await this.pc.createOfferSDP());await this.pc.setOfferSDP(a);h.debug("[".concat(this.connectionId,"] create and set offer success"));
                    let b=await Ma(this,G.NEED_ANSWER,{messageType:"OFFER",sdp:a,offererSessionId:104,retry:!0});await this.pc.setAnswerSDP(ki(b.sdp));h.debug("[".concat(this.connectionId,"] set answer success"));let d=await u.all([f,this.icePromise]),e=d[0].getAudioTracks()[0],l=d[0].getVideoTracks()[0];var g,k;e&&(this.user._audioTrack?this.user._audioTrack._updateOriginMediaStreamTrack(e):(this.user._audioTrack=new Ad(e,this.getUserId(),this.user._uintid),h.info(n(g="[".concat(this.connectionId,"] create remote audio track: ")).call(g,
                        this.user._audioTrack.getTrackId())),this.bindTrackEvents(this.user._audioTrack)));l&&(this.user._videoTrack?this.user._videoTrack._updateOriginMediaStreamTrack(l):(this.user._videoTrack=new zd(l,this.getUserId(),this.user._uintid),h.info(n(k="[".concat(this.connectionId,"] create remote video track: ")).call(k,this.user._videoTrack.getTrackId())),this.bindTrackEvents(this.user._videoTrack)));this.connectionState="connected";this.startUploadStats()}catch(q){this.off(G.CONNECTION_STATE_CHANGE,d),this.connectionState=
                    "disconnected",t.subscribe(this.joinInfo.sid,{lts:this.startTime,succ:!1,video:this.subscribeOptions.video,audio:this.subscribeOptions.audio,peerid:this.user.uid,ec:q.code,subscribeRequestid:this.ID,p2pid:this.pc.ID}),b(q)}})}async closeP2PConnection(a){"disconnected"!==this.connectionState&&(this.stopUploadStats(),this.statsCollector.removeConnection(this.connectionId),this.connectionState="disconnected",await this.setSubscribeOptions({audio:!1,video:!1}),await this.closePC(a),this.removeAllListeners())}getNetworkQuality(){var a=
                    this.pc.getStats();if(!a.audioRecv[0]&&!a.videoRecv[0])return 1;var b=gc(this,G.NEED_SIGNAL_RTT),d=a.rtt;b=(d&&b?(d+b)/2:d||b)||0;d=a.audioRecv[0]?a.audioRecv[0].jitterMs:void 0;a=a.recvPacketLossRate;let e=70*a/50+.3*b/1500;d&&(e=60*a/50+.2*b/1500+.2*d/400);return.1>e?1:.17>e?2:.36>e?3:.59>e?4:5}uploadStats(a){let b=this.user.audioTrack?Kl(a,this.user.audioTrack):void 0,d=this.user.videoTrack?Jl(a,this.user.videoTrack):void 0;b&&cb(()=>this.emit(G.NEED_UPLOAD,wb.SUBSCRIBE_STATS,b));d&&cb(()=>this.emit(G.NEED_UPLOAD,
                    wb.SUBSCRIBE_STATS,d))}uploadSlowStats(a){}uploadRelatedStats(a,b){let d=!0===this.pc._statsFilter.videoIsReady,e=Nl(a,this.getUserId(),this.user.audioTrack),f=Ml(d,a,this.getUserId(),b,this.user.videoTrack);e&&cb(()=>{this.emit(G.NEED_UPLOAD,wb.SUBSCRIBE_RELATED_STATS,e)});f&&cb(()=>{this.emit(G.NEED_UPLOAD,wb.SUBSCRIBE_RELATED_STATS,f)})}emitOnTrackFromUnusedTracks(){if(this.subscribeOptions){var a=this.subscribeOptions.video;if(this.subscribeOptions.audio){var b;let a=U(b=this.unusedTracks).call(b,
                    a=>"audio"===a.kind&&"live"===a.readyState);bd(this.unusedTracks,a);a&&this.onTrack(a)}if(a){var d;a=U(d=this.unusedTracks).call(d,a=>"video"===a.kind&&"live"===a.readyState);bd(this.unusedTracks,a);a&&this.onTrack(a)}}}async setSubscribeOptions(a){var b,d,e,f;if(a.audio!==this.subscribeOptions.audio||a.video!==this.subscribeOptions.video){if("connecting"===this.connectionState)try{await this.createWaitConnectionConnectedPromise()}catch(g){throw new m(l.OPERATION_ABORTED,"can not update subscribe options, operation abort");
                }a.audio===this.subscribeOptions.audio&&a.video===this.subscribeOptions.video||(h.debug(n(b=n(d=n(e=n(f="[".concat(this.connectionId,"] update subscribe options [a: ")).call(f,this.subscribeOptions.audio,", v: ")).call(e,this.subscribeOptions.video,"] -> [a: ")).call(d,a.audio,", v: ")).call(b,a.video,"]")),this.subscribeOptions=a,!a.audio&&this.user._audioTrack&&(this.unusedTracks.push(this.user._audioTrack._originMediaStreamTrack),this.user._audioTrack._destroy(),this.unbindTrackEvents(this.user._audioTrack),
                    this.user._audioTrack=void 0),!a.video&&this.user._videoTrack&&(this.unusedTracks.push(this.user._videoTrack._originMediaStreamTrack),this.user._videoTrack._destroy(),this.unbindTrackEvents(this.user._videoTrack),this.user._videoTrack=void 0),this.emitOnTrackFromUnusedTracks())}}createPC(){this.pc=new fl({turnServer:this.joinInfo.turnServer});this.pc.onFirstAudioDecoded=()=>{t.firstRemoteFrame(this.joinInfo.sid,Ea.FIRST_AUDIO_DECODE,sa.FIRST_AUDIO_DECODE,{peer:this.user._uintid,subscribeElapse:v()-
                        this.startTime,subscribeRequestid:this.ID,p2pid:this.pc.ID})};this.pc.onFirstAudioReceived=()=>{t.firstRemoteFrame(this.joinInfo.sid,Ea.FIRST_AUDIO_RECEIVED,sa.FIRST_AUDIO_RECEIVED,{peer:this.user._uintid,subscribeElapse:v()-this.startTime,subscribeRequestid:this.ID,p2pid:this.pc.ID})};this.pc.onFirstVideoDecoded=(a,b)=>{t.firstRemoteFrame(this.joinInfo.sid,Ea.FIRST_VIDEO_DECODE,sa.FIRST_VIDEO_DECODE,{peer:this.user._uintid,videowidth:a,videoheight:b,subscribeElapse:v()-this.startTime,subscribeRequestid:this.ID,
                    p2pid:this.pc.ID})};this.pc.onFirstVideoReceived=()=>{t.firstRemoteFrame(this.joinInfo.sid,Ea.FIRST_VIDEO_RECEIVED,sa.FIRST_VIDEO_RECEIVED,{peer:this.user._uintid,subscribeElapse:v()-this.startTime,subscribeRequestid:this.ID,p2pid:this.pc.ID})};this.updateICEPromise()}async closePC(a){return(this.pc.audioTrack&&this.pc.audioTrack.stop(),this.pc.videoTrack&&this.pc.videoTrack.stop(),this.pc.onTrack=void 0,this.pc.onICEConnectionStateChange=void 0,this.pc.close(),a)?!1:await Ma(this,G.NEED_UNSUB)}onPCDisconnected(a){t.subscribe(this.joinInfo.sid,
                    {lts:this.startTime,succ:!1,video:this.subscribeOptions.video,audio:this.subscribeOptions.audio,peerid:this.user.uid,ec:a.code,subscribeRequestid:this.ID,p2pid:this.pc.ID})}bindTrackEvents(a){a instanceof Ad?a.addListener(K.GET_STATS,this.handleGetRemoteAudioStats):a instanceof zd&&a.addListener(K.GET_STATS,this.handleGetRemoteVideoStats)}unbindTrackEvents(a){a instanceof Ad?a.off(K.GET_STATS,this.handleGetRemoteAudioStats):a instanceof zd&&a.off(K.GET_STATS,this.handleGetRemoteVideoStats)}}class dq extends Ya{constructor(a,
b,d,e){super();this.reconnectMode="retry";this.commandReqId=this.reqId=0;this.handleWebSocketOpen=()=>{this.reconnectMode="retry";this.startPingPong()};this.handleWebSocketMessage=a=>{if(a.data){a=JSON.parse(a.data);var b;a.requestId?this.emit(n(b="@".concat(a.requestId,"-")).call(b,a.sid),a):this.serviceMode===na.INJECT?this.emit(mb.INJECT_STREAM_STATUS,a):(t.workerEvent(this.spec.sid,{actionType:"status",serverCode:a.code,workerType:this.serviceMode===na.TRANSCODE?1:2}),this.emit(mb.PUBLISH_STREAM_STATUS,
                    a))}};this.spec=b;this.token=a;this.serviceMode=e;this.websocket=new sg("live-streaming",d);this.websocket.on(T.CONNECTED,this.handleWebSocketOpen);this.websocket.on(T.ON_MESSAGE,this.handleWebSocketMessage);this.websocket.on(T.REQUEST_NEW_URLS,(a,b)=>{Ma(this,mb.REQUEST_NEW_ADDRESS).then(a).catch(b)});this.websocket.on(T.RECONNECTING,()=>{this.websocket.reconnectMode=this.reconnectMode})}init(a){return this.websocket.init(a)}async request(a,b,d,e){this.reqId+=1;"request"===a&&(this.commandReqId+=
                    1);let f=this.commandReqId,g=this.reqId;if(!g||!this.websocket)throw new m(l.UNEXPECTED_ERROR);var k=nf({command:a,sdkVersion:"4.2.1"===db?"0.0.1":db,seq:g,requestId:g,allocate:d,cname:this.spec.cname,appId:this.spec.appId,sid:this.spec.sid,uid:this.spec.uid.toString(),ts:Math.floor(v()/1E3)},b);if("closed"===this.websocket.state)throw new m(l.WS_DISCONNECT);let h=()=>new u((a,b)=>{this.websocket.once(T.CLOSED,()=>b(new m(l.WS_ABORT)));this.websocket.once(T.CONNECTED,a)});"connected"!==this.websocket.state&&
                await h();k.clientRequest&&(k.clientRequest.workerToken=this.token);let p=new u((a,b)=>{var d;const e=()=>{b(new m(l.WS_ABORT))};this.websocket.once(T.RECONNECTING,e);this.websocket.once(T.CLOSED,e);this.once(n(d="@".concat(g,"-")).call(d,this.spec.sid),b=>{a(b)})});e&&t.workerEvent(this.spec.sid,nf({},e,{requestId:f,actionType:"request",payload:z(b.clientRequest),serverCode:0,code:0}));let r=v();this.websocket.sendMessage(k);k=null;try{k=await p}catch(Ia){if("closed"===this.websocket.state)throw Ia;
                    return await h(),await this.request(a,b,d)}return e&&t.workerEvent(this.spec.sid,nf({},e,{requestId:f,actionType:"response",payload:z(k.serverResponse),serverCode:k.code,success:200===k.code,responseTime:v()-r})),200!==k.code&&this.handleResponseError(k),k}tryNextAddress(){this.reconnectMode="tryNext";this.websocket.reconnect("tryNext")}close(){let a="4.2.1"===db?"0.0.1":db;this.reqId+=1;"connected"===this.websocket.state?(this.websocket.sendMessage({command:"request",appId:this.spec.appId,cname:this.spec.cname,
                    uid:this.spec.uid.toString(),sdkVersion:a,sid:this.spec.sid,seq:this.reqId,ts:Math.floor(v()/1E3),requestId:this.reqId,clientRequest:{command:"DestroyWorker"}}),this.websocket.close(!1,!0)):this.websocket.close(!1);this.pingpongTimer&&(window.clearInterval(this.pingpongTimer),this.pingpongTimer=void 0)}handleResponseError(a){switch(a.code){case ka.LIVE_STREAM_RESPONSE_ALREADY_EXISTS_STREAM:return void h.warning("live stream response already exists stream");case ka.LIVE_STREAM_RESPONSE_TRANSCODING_PARAMETER_ERROR:case ka.LIVE_STREAM_RESPONSE_BAD_STREAM:case ka.LIVE_STREAM_RESPONSE_WM_PARAMETER_ERROR:return(new m(l.LIVE_STREAMING_INVALID_ARGUMENT,
                    "",{code:a.code})).throw();case ka.LIVE_STREAM_RESPONSE_WM_WORKER_NOT_EXIST:if("UnpublishStream"===a.serverResponse.command||"UninjectStream"===a.serverResponse.command)break;throw new m(l.LIVE_STREAMING_INTERNAL_SERVER_ERROR,"live stream response wm worker not exist",{retry:!0});case ka.LIVE_STREAM_RESPONSE_NOT_AUTHORIZED:return(new m(l.LIVE_STREAMING_PUBLISH_STREAM_NOT_AUTHORIZED,"",{code:a.code})).throw();case ka.LIVE_STREAM_RESPONSE_FAILED_LOAD_IMAGE:var b=new m(l.LIVE_STREAMING_WARN_FAILED_LOAD_IMAGE);
                    return this.emit(mb.WARNING,b,a.serverResponse.url);case ka.LIVE_STREAM_RESPONSE_REQUEST_TOO_OFTEN:return b=new m(l.LIVE_STREAMING_WARN_FREQUENT_REQUEST),this.emit(mb.WARNING,b,a.serverResponse.url);case ka.LIVE_STREAM_RESPONSE_NOT_FOUND_PUBLISH:throw new m(l.LIVE_STREAMING_INTERNAL_SERVER_ERROR,"live stream response wm worker not exist",{retry:!0});case ka.LIVE_STREAM_RESPONSE_NOT_SUPPORTED:return(new m(l.LIVE_STREAMING_TRANSCODING_NOT_SUPPORTED,"",{code:a.code})).throw();case ka.LIVE_STREAM_RESPONSE_MAX_STREAM_NUM:return b=
                    new m(l.LIVE_STREAMING_WARN_STREAM_NUM_REACH_LIMIT),this.emit(mb.WARNING,b,a.serverResponse.url);case ka.LIVE_STREAM_RESPONSE_INTERNAL_SERVER_ERROR:return(new m(l.LIVE_STREAMING_INTERNAL_SERVER_ERROR,"",{code:a.code})).throw();case ka.LIVE_STREAM_RESPONSE_RESOURCE_LIMIT:throw new m(l.LIVE_STREAMING_INTERNAL_SERVER_ERROR,"live stream resource limit",{retry:!0,changeAddress:!0});case ka.LIVE_STREAM_RESPONSE_WORKER_LOST:case ka.LIVE_STREAM_RESPONSE_WORKER_QUIT:if("UnpublishStream"===a.serverResponse.command||
                    "UninjectStream"===a.serverResponse.command)break;throw new m(l.LIVE_STREAMING_INTERNAL_SERVER_ERROR,"error fail send message",{retry:!0,changeAddress:!0});case ka.ERROR_FAIL_SEND_MESSAGE:if("UnpublishStream"===a.serverResponse.command||"UninjectStream"===a.serverResponse.command)break;if("UpdateTranscoding"===a.serverResponse.command||"ControlStream"===a.serverResponse.command)return(new m(l.LIVE_STREAMING_INTERNAL_SERVER_ERROR,"error fail send message",{code:a.code})).throw();throw new m(l.LIVE_STREAMING_INTERNAL_SERVER_ERROR,
                    "error fail send message",{retry:!0,changeAddress:!0});case ka.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN:case ka.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT:case ka.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE:case ka.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH:return(new m(l.LIVE_STREAMING_CDN_ERROR,"",{code:a.code})).throw()}}startPingPong(){this.pingpongTimer&&window.clearInterval(this.pingpongTimer);this.pingpongTimer=window.setInterval(()=>{"connected"===this.websocket.state&&this.request("ping",{}).catch(rg)},
                    6E3)}}class eq extends Ya{constructor(a,b=Pa,d=Pa){super();this.retryTimeout=1E4;this.streamingTasks=new Z;this.isStartingStreamingTask=!1;this.taskMutex=new cc("live-streaming");this.cancelToken=Fb.CancelToken.source();this.injectConfig=Zb({},kp);this.injectLoopTimes=0;this.lastTaskId=1;this.statusError=new Z;this.spec=a;this.httpRetryConfig=d;this.wsRetryConfig=b}async setTranscodingConfig(a){var b;let d=Zb({},jp,{},a);var e,f;66!==d.videoCodecProfile&&77!==d.videoCodecProfile&&100!==d.videoCodecProfile&&
                (h.debug(n(e="[".concat(this.spec.clientId,"] set transcoding config, fix video codec profile: ")).call(e,d.videoCodecProfile," -> 100")),d.videoCodecProfile=100);(d.transcodingUsers||(d.transcodingUsers=d.userConfigs),d.transcodingUsers)&&(d.transcodingUsers=A(f=d.transcodingUsers).call(f,a=>Zb({},ip,{},a,{zOrder:a.zOrder?a.zOrder+1:1})));Bl(d);a=[];var g,k;d.images&&a.push(...A(g=d.images).call(g,a=>Zb({},ig,{},a,{zOrder:255})));(d.backgroundImage&&(a.push(Zb({},ig,{},d.backgroundImage,{zOrder:0})),
                    delete d.backgroundImage),d.watermark&&(a.push(Zb({},ig,{},d.watermark,{zOrder:255})),delete d.watermark),d.images=a,d.transcodingUsers)&&(d.userConfigs=A(k=d.transcodingUsers).call(k,a=>Zb({},a)),d.userCount=d.transcodingUsers.length,delete d.transcodingUsers);g=A(b=d.userConfigs||[]).call(b,a=>"number"==typeof a.uid?u.resolve(a.uid):ci(a.uid,this.spec,this.cancelToken.token,this.httpRetryConfig));b=await u.all(g);if(r(b).call(b,(a,b)=>{d.userConfigs&&d.userConfigs[b]&&(d.userConfigs[b].uid=a)}),
                    this.transcodingConfig=d,this.connection)try{var l,m,p;let a=await this.connection.request("request",{clientRequest:{command:"UpdateTranscoding",transcodingConfig:this.transcodingConfig}},!1,{command:"UpdateTranscoding",workerType:1,requestByUser:!0,tid:A(l=Ob(sc(m=this.streamingTasks).call(m))).call(l,a=>a.taskId).join("#")});h.debug(n(p="[".concat(this.spec.clientId,"] update live transcoding config success, code: ")).call(p,a.code,", config:"),z(this.transcodingConfig))}catch(x){var t;if(!x.data||
                    !x.data.retry)throw x;x.data.changeAddress&&this.connection.tryNextAddress();r(t=this.streamingTasks).call(t,a=>{h.warning("[".concat(this.spec.clientId,"] live streaming receive error"),x.toString(),"try to republish",a.url);this.startLiveStreamingTask(a.url,a.mode,x).then(()=>{var b;h.debug(n(b="[".concat(this.spec.clientId,"] live streaming republish ")).call(b,a.url," success"))}).catch(b=>{h.error("[".concat(this.spec.clientId,"] live streaming republish failed"),a.url,b.toString());this.onLiveStreamError&&
                this.onLiveStreamError(a.url,b)})})}}setInjectStreamConfig(a,b){this.injectConfig=ab({},this.injectConfig,a);this.injectLoopTimes=b}async startLiveStreamingTask(a,b,d){var e,f,g,k;if(U(e=Ob(sc(f=this.streamingTasks).call(f))).call(e,a=>a.mode===na.INJECT)&&b===na.INJECT)return(new m(l.LIVE_STREAMING_TASK_CONFLICT,"inject stream over limit")).throw();if(!this.transcodingConfig&&b===na.TRANSCODE)throw new m(l.INVALID_OPERATION,"[LiveStreaming] no transcoding config found, can not start transcoding streaming task");
                    e={command:"PublishStream",ts:v(),url:a,uid:this.spec.uid.toString(),autoDestroyTime:30};h.debug(n(g=n(k="[".concat(this.spec.clientId,"] start live streaming ")).call(k,a,", mode: ")).call(g,b));g=await this.taskMutex.lock();if(!this.connection&&d)return void g();if(this.streamingTasks.get(a)&&!d)return g(),(new m(l.LIVE_STREAMING_TASK_CONFLICT)).throw();try{this.connection||(this.connection=await this.connect(b))}catch(B){throw g(),B;}switch(b){case na.TRANSCODE:e.transcodingConfig=Zb({},this.transcodingConfig);
                        break;case na.INJECT:e={cname:this.spec.cname,command:"InjectStream",sid:this.spec.sid,transcodingConfig:this.injectConfig,ts:v(),url:a,loopTimes:this.injectLoopTimes}}this.uapResponse&&this.uapResponse.vid&&(e.vid=this.uapResponse.vid);this.isStartingStreamingTask=!0;k=this.lastTaskId++;try{var q;let f=new u((b,e)=>{Db(this.retryTimeout).then(()=>{if(d)return e(d);const b=this.statusError.get(a);return b?(this.statusError.delete(a),e(b)):void 0})}),l=await u.race([this.connection.request("request",
                        {clientRequest:e},!0,{url:a,command:"PublishStream",workerType:b===na.TRANSCODE?1:2,requestByUser:!d,tid:k.toString()}),f]);this.isStartingStreamingTask=!1;h.debug(n(q="[".concat(this.spec.clientId,"] live streaming started, code: ")).call(q,l.code));this.streamingTasks.set(a,{clientRequest:e,mode:b,url:a,taskId:k});g()}catch(B){if(g(),this.isStartingStreamingTask=!1,!B.data||!B.data.retry||d)throw B;return B.data.changeAddress?(this.connection.tryNextAddress(),await this.startLiveStreamingTask(a,
                        b,B)):await this.startLiveStreamingTask(a,b,B)}}stopLiveStreamingTask(a){return new u((b,d)=>{let e=this.streamingTasks.get(a);if(!e||!this.connection)return(new m(l.UNEXPECTED_ERROR,"can not find streaming task to stop")).throw();let f=e.mode;e.abortTask=()=>{h.debug("[".concat(this.spec.clientId,"] stop live streaming success(worker exception)"));this.streamingTasks.delete(a);b()};this.connection.request("request",{clientRequest:{command:f===na.INJECT?"UninjectStream":"UnpublishStream",url:e.url}},
                    !1,{url:a,command:"UnPublishStream",workerType:f===na.TRANSCODE?1:2,requestByUser:!0,tid:(this.lastTaskId++).toString()}).then(d=>{var e;h.debug(n(e="[".concat(this.spec.clientId,"] stop live streaming success, code: ")).call(e,d.code));this.streamingTasks.delete(a);0===this.streamingTasks.size&&f!==na.INJECT&&(this.connection&&this.connection.close(),this.connection=void 0);b();f===na.INJECT&&this.onInjectStatusChange&&this.onInjectStatusChange(5,this.spec.uid,a)}).catch(d)})}async controlInjectStream(a,
b,d,e){let f=this.streamingTasks.get(a);if(!f||!this.connection||f.mode!==na.INJECT)throw new m(l.INVALID_OPERATION,"can not find inject stream task to control");return(await this.connection.request("request",{clientRequest:{command:"ControlStream",url:a,control:b,audioVolume:d,position:e}})).serverResponse}resetAllTask(){var a;let b=Ob(sc(a=this.streamingTasks).call(a));this.terminate();for(let a of b)this.startLiveStreamingTask(a.url,a.mode).catch(b=>{this.onLiveStreamError&&this.onLiveStreamError(a.url,
                    b)})}terminate(){this.cancelToken&&this.cancelToken.cancel();this.streamingTasks=new Z;this.isStartingStreamingTask=!1;this.statusError=new Z;this.cancelToken=Fb.CancelToken.source();this.uapResponse=void 0;this.connection&&this.connection.close();this.connection=void 0}async connect(a){if(this.connection)throw new m(l.UNEXPECTED_ERROR,"live streaming connection has already connected");let b=await Ma(this,Rc.REQUEST_WORKER_MANAGER_LIST,a);return this.uapResponse=b,this.connection=new dq(b.workerToken,
                    this.spec,this.wsRetryConfig,a),this.connection.on(mb.WARNING,(a,b)=>this.onLiveStreamWarning&&this.onLiveStreamWarning(b,a)),this.connection.on(mb.PUBLISH_STREAM_STATUS,a=>this.handlePublishStreamServer(a)),this.connection.on(mb.INJECT_STREAM_STATUS,a=>this.handleInjectStreamServerStatus(a)),this.connection.on(mb.REQUEST_NEW_ADDRESS,(b,e)=>{if(!this.connection)return e(new m(l.UNEXPECTED_ERROR,"can not get new live streaming address list"));Ma(this,Rc.REQUEST_WORKER_MANAGER_LIST,a).then(a=>{this.uapResponse=
                    a;b(a.addressList)}).catch(e)}),await this.connection.init(b.addressList),this.connection}handlePublishStreamServer(a){var b=a.serverStatus&&a.serverStatus.url;if(!b)throw new m(l.LIVE_STREAMING_INTERNAL_SERVER_ERROR,"empty url",{code:a.code});let d=this.streamingTasks.get(b);switch(a.code){case ka.PUBLISH_STREAM_STATUS_ERROR_PUBLISH_BROKEN:case ka.PUBLISH_STREAM_STATUS_ERROR_RTMP_CONNECT:case ka.PUBLISH_STREAM_STATUS_ERROR_RTMP_HANDSHAKE:case ka.PUBLISH_STREAM_STATUS_ERROR_RTMP_PUBLISH:{let e=new m(l.LIVE_STREAMING_CDN_ERROR,
                    "",{code:a.code});if(d)return h.error(e.toString()),this.onLiveStreamError&&this.onLiveStreamError(b,e);if(!this.isStartingStreamingTask)break;this.statusError.set(b,e)}case ka.LIVE_STREAM_RESPONSE_WORKER_LOST:case ka.LIVE_STREAM_RESPONSE_WORKER_QUIT:var e;if(this.connection){this.connection.tryNextAddress();b=Ob(sc(e=this.streamingTasks).call(e));for(let d of b)d.abortTask?d.abortTask():(h.warning("[".concat(this.spec.clientId,"] publish stream status code"),a.code,"try to republish",d.url),this.startLiveStreamingTask(d.url,
                    d.mode,new m(l.LIVE_STREAMING_INTERNAL_SERVER_ERROR,"",{code:a.code})).then(()=>{h.debug("[".concat(this.spec.clientId,"] republish live stream success"),d.url)}).catch(a=>{h.error(a.toString());this.onLiveStreamError&&this.onLiveStreamError(d.url,a)}))}}}handleInjectStreamServerStatus(a){let b=Number(a.uid),d=a.serverStatus&&a.serverStatus.url;switch(a.code){case 200:return void(this.onInjectStatusChange&&this.onInjectStatusChange(0,b,d));case 451:return this.onInjectStatusChange&&this.onInjectStatusChange(1,
                    b,d),void this.streamingTasks.delete(d);case 453:return this.onInjectStatusChange&&this.onInjectStatusChange(2,b,d),void this.streamingTasks.delete(d);case 470:return this.onInjectStatusChange&&this.onInjectStatusChange(10,b,d),void this.streamingTasks.delete(d);case 499:return this.onInjectStatusChange&&this.onInjectStatusChange(3,b,d),void this.streamingTasks.delete(d);default:return void h.debug("inject stream server status",a)}}hasUrl(a){return this.streamingTasks.has(a)}}class qi{constructor(){this.destChannelMediaInfos=
                    new Z}setSrcChannelInfo(a){Eh(a);this.srcChannelMediaInfo=a}addDestChannelInfo(a){Eh(a);this.destChannelMediaInfos.set(a.channelName,a)}removeDestChannelInfo(a){Le(a);this.destChannelMediaInfos.delete(a)}getSrcChannelMediaInfo(){return this.srcChannelMediaInfo}getDestChannelMediaInfo(){return this.destChannelMediaInfos}}class fq extends Ya{constructor(a,b,d){super();this.requestId=1;this.onOpen=()=>{this.emit("open");this.startHeartBeatCheck()};this.onClose=a=>{this.emit("close");this.dispose()};
                    this.onMessage=a=>{a=JSON.parse(a.data);if(!a||"serverResponse"!==a.command||!a.requestId)return a&&"serverStatus"===a.command&&a.serverStatus&&a.serverStatus.command?(this.emit("status",a.serverStatus),void this.emit(a.serverStatus.command,a.serverStatus)):void 0;this.emit("req_".concat(a.requestId),a)};this.joinInfo=a;this.clientId=b;this.ws=new sg("cross-channel-".concat(this.clientId),d);this.ws.on(T.RECONNECTING,()=>{this.ws.reconnectMode="retry";this.emit("reconnecting")});this.ws.on(T.CONNECTED,
                        this.onOpen);this.ws.on(T.ON_MESSAGE,this.onMessage);this.ws.on(T.CLOSED,this.onClose)}isConnect(){return"connected"===this.ws.state}sendMessage(a){let b=this.requestId++;return a.requestId=b,a.seq=b,this.ws.sendMessage(a),b}waitStatus(a){return new u((b,d)=>{let e=window.setTimeout(()=>{d(new m(l.TIMEOUT,"wait status timeout, status: ".concat(a)))},5E3);this.once(a,f=>{window.clearTimeout(e);f.state&&0!==f.state?d(new m(l.CROSS_CHANNEL_WAIT_STATUS_ERROR,"wait status error, status: ".concat(a))):
                    b()});this.once("dispose",()=>{window.clearTimeout(e);d(new m(l.WS_ABORT))})})}async request(a){if("closed"===this.ws.state)throw new m(l.WS_DISCONNECT);let b=()=>new u((a,b)=>{this.ws.once(T.CLOSED,()=>b(new m(l.WS_ABORT)));this.ws.once(T.CONNECTED,a)});"connected"!==this.ws.state&&await b();let d=this.sendMessage(a);a=await new u((a,b)=>{const e=()=>{b(new m(l.WS_ABORT))};this.ws.once(T.RECONNECTING,e);this.ws.once(T.CLOSED,e);this.once("req_".concat(d),a);Db(3E3).then(()=>{this.removeAllListeners("req_".concat(d));
                    this.ws.off(T.RECONNECTING,e);this.ws.off(T.CLOSED,e);b(new m(l.TIMEOUT,"cross channel ws request timeout"))})});if(!a||200!==a.code)throw new m(l.CROSS_CHANNEL_SERVER_ERROR_RESPONSE,"response: ".concat(z(a)));return a}async connect(a){this.ws.removeAllListeners(T.REQUEST_NEW_URLS);this.ws.on(T.REQUEST_NEW_URLS,b=>{b(a)});await this.ws.init(a)}dispose(){this.clearHeartBeatCheck();this.emit("dispose");this.removeAllListeners();this.ws.close()}sendPing(a){let b=this.requestId++;return a.requestId=b,
                    this.ws.sendMessage(a),b}startHeartBeatCheck(){this.heartBeatTimer=window.setInterval(()=>{this.sendPing({command:"ping",appId:this.joinInfo.appId,cname:this.joinInfo.cname,uid:this.joinInfo.uid.toString(),sid:this.joinInfo.sid,ts:+new Date,requestId:0})},3E3)}clearHeartBeatCheck(){window.clearInterval(this.heartBeatTimer);this.heartBeatTimer=void 0}}class gq extends Ya{constructor(a,b,d,e){super();this.cancelToken=Fb.CancelToken.source();this.requestId=0;this._state="RELAY_STATE_IDLE";this.errorCode=
                    "RELAY_OK";this.onStatus=a=>{var b;h.debug(n(b="[".concat(this.clientId,"] ChannelMediaStatus: ")).call(b,z(a)));a&&a.command&&("onAudioPacketReceived"===a.command&&this.emit("event","PACKET_RECEIVED_AUDIO_FROM_SRC"),"onVideoPacketReceived"===a.command&&this.emit("event","PACKET_RECEIVED_VIDEO_FROM_SRC"),"onSrcTokenPrivilegeDidExpire"===a.command&&(this.errorCode="SRC_TOKEN_EXPIRED",this.state="RELAY_STATE_FAILURE"),"onDestTokenPrivilegeDidExpire"===a.command&&(this.errorCode="DEST_TOKEN_EXPIRED",
                    this.state="RELAY_STATE_FAILURE"))};this.onReconnect=async()=>{h.debug("[".concat(this.clientId,"] ChannelMediaSocket disconnect, reconnecting"));this.emit("event","NETWORK_DISCONNECTED");this.state="RELAY_STATE_IDLE";this.prevChannelMediaConfig&&this.sendStartRelayMessage(this.prevChannelMediaConfig).catch(a=>{"RELAY_STATE_IDLE"!==this.state&&(h.error("auto restart channel media relay failed",a.toString()),this.errorCode="SERVER_CONNECTION_LOST",this.state="RELAY_STATE_FAILURE")})};this.joinInfo=
                    a;this.clientId=b;this.signal=new fq(this.joinInfo,this.clientId,d);this.httpRetryConfig=e}set state(a){a!==this._state&&("RELAY_STATE_FAILURE"!==a&&(this.errorCode="RELAY_OK"),this.emit("state",a,this.errorCode),this._state=a)}get state(){return this._state}async startChannelMediaRelay(a){if("RELAY_STATE_IDLE"!==this.state)throw new m(l.INVALID_OPERATION);this.state="RELAY_STATE_CONNECTING";await this.connect();h.debug("[".concat(this.clientId,"] startChannelMediaRelay: connect success"));try{await this.sendStartRelayMessage(a)}catch(b){if(b.data&&
                    b.data.serverResponse&&"SetSourceChannel"===b.data.serverResponse.command)throw new m(l.CROSS_CHANNEL_FAILED_JOIN_SRC);if(b.data&&b.data.serverResponse&&"SetDestChannelStatus"===b.serverResponse.command)throw new m(l.CROSS_CHANNEL_FAILED_JOIN_DEST);if(b.data&&b.data.serverResponse&&"StartPacketTransfer"===b.serverResponse.command)throw new m(l.CROSS_CHANNEL_FAILED_PACKET_SENT_TO_DEST);throw b;}this.prevChannelMediaConfig=a}async updateChannelMediaRelay(a){if("RELAY_STATE_RUNNING"!==this.state)throw new m(l.INVALID_OPERATION);
                    await this.sendUpdateMessage(a);this.prevChannelMediaConfig=a}async stopChannelMediaRelay(){await this.sendStopRelayMessage();h.debug("[".concat(this.clientId,"] stopChannelMediaRelay: send stop message success"));this.state="RELAY_STATE_IDLE";this.dispose()}dispose(){h.debug("[".concat(this.clientId,"] disposeChannelMediaRelay"));this.cancelToken.cancel();this.cancelToken=Fb.CancelToken.source();this.state="RELAY_STATE_IDLE";this.emit("dispose");this.signal.dispose();this.prevChannelMediaConfig=
                    void 0}async connect(){let a=await qm(this.joinInfo,this.cancelToken.token,this.httpRetryConfig);this.workerToken=a.workerToken;await this.signal.connect(a.addressList);this.emit("event","NETWORK_CONNECTED");this.signal.on("status",this.onStatus);this.signal.on("reconnecting",this.onReconnect)}async sendStartRelayMessage(a){var b=this.genMessage(Ga.StopPacketTransfer);await this.signal.request(b);await this.signal.waitStatus("Normal Quit");h.debug("[".concat(this.clientId,"] startChannelMediaRelay: StopPacketTransfer success"));
                    b=this.genMessage(Ga.SetSdkProfile,a);await this.signal.request(b);h.debug("[".concat(this.clientId,"] startChannelMediaRelay: SetSdkProfile success"));b=this.genMessage(Ga.SetSourceChannel,a);await this.signal.request(b);await this.signal.waitStatus("SetSourceChannelStatus");this.emit("event","PACKET_JOINED_SRC_CHANNEL");h.debug("[".concat(this.clientId,"] startChannelMediaRelay: SetSourceChannel success"));b=this.genMessage(Ga.SetSourceUserId,a);await this.signal.request(b);h.debug("[".concat(this.clientId,
                        "] startChannelMediaRelay: SetSourceUserId success"));b=this.genMessage(Ga.SetDestChannel,a);await this.signal.request(b);await this.signal.waitStatus("SetDestChannelStatus");this.emit("event","PACKET_JOINED_DEST_CHANNEL");h.debug("[".concat(this.clientId,"] startChannelMediaRelay: SetDestChannel success"));a=this.genMessage(Ga.StartPacketTransfer,a);await this.signal.request(a);this.emit("event","PACKET_SENT_TO_DEST_CHANNEL");this.state="RELAY_STATE_RUNNING";h.debug("[".concat(this.clientId,"] startChannelMediaRelay: StartPacketTransfer success"))}async sendUpdateMessage(a){a=
                    this.genMessage(Ga.UpdateDestChannel,a);await this.signal.request(a);this.emit("event","PACKET_UPDATE_DEST_CHANNEL");h.debug("[".concat(this.clientId,"] sendUpdateMessage: UpdateDestChannel success"))}async sendStopRelayMessage(){let a=this.genMessage(Ga.StopPacketTransfer);await this.signal.request(a);h.debug("[".concat(this.clientId,"] sendStopRelayMessage: StopPacketTransfer success"))}genMessage(a,b){let d=[],e=[],f=[];this.requestId+=1;let g={appId:this.joinInfo.appId,cname:this.joinInfo.cname,
                    uid:this.joinInfo.uid.toString(),sdkVersion:db,sid:this.joinInfo.sid,ts:v(),requestId:this.requestId,seq:this.requestId,allocate:!0,clientRequest:{}};"4.2.1"===g.sdkVersion&&(g.sdkVersion="0.0.1");let k=null,h=null;switch(a){case Ga.SetSdkProfile:return g.clientRequest={command:"SetSdkProfile",type:"multi_channel"},g;case Ga.SetSourceChannel:if(h=b&&b.getSrcChannelMediaInfo(),!h)throw new m(l.UNEXPECTED_ERROR,"can not find source config");return g.clientRequest={command:"SetSourceChannel",uid:"0",
                    channelName:h.channelName,token:h.token||this.joinInfo.appId},g;case Ga.SetSourceUserId:if(h=b&&b.getSrcChannelMediaInfo(),!h)throw new m(l.UNEXPECTED_ERROR,"can not find source config");return g.clientRequest={command:"SetSourceUserId",uid:h.uid+""},g;case Ga.SetDestChannel:if(k=b&&b.getDestChannelMediaInfo(),!k)throw new m(l.UNEXPECTED_ERROR,"can not find dest config");return r(k).call(k,a=>{d.push(a.channelName);e.push(a.uid+"");f.push(a.token||this.joinInfo.appId)}),g.clientRequest={command:"SetDestChannel",
                    channelName:d,uid:e,token:f},g;case Ga.StartPacketTransfer:return g.clientRequest={command:"StartPacketTransfer"},g;case Ga.Reconnect:return g.clientRequest={command:"Reconnect"},g;case Ga.StopPacketTransfer:return g.clientRequest={command:"StopPacketTransfer"},g;case Ga.UpdateDestChannel:if(k=b&&b.getDestChannelMediaInfo(),!k)throw new m(l.UNEXPECTED_ERROR,"can not find dest config");return r(k).call(k,a=>{d.push(a.channelName);e.push(a.uid+"");f.push(a.token||this.joinInfo.appId)}),g.clientRequest=
                    {command:"UpdateDestChannel",channelName:d,uid:e,token:f},g}return g}}class hq{constructor(a,b){this._trust_stream_added_state_=this._trust_video_mute_state_=this._trust_audio_mute_state_=this._trust_video_enabled_state_=this._trust_audio_enabled_state_=this._trust_in_room_=!0;this._video_muted_=this._audio_muted_=!1;this._video_enabled_=this._audio_enabled_=!0;this._video_added_=this._audio_added_=!1;this.uid=a;this._uintid=b}get hasVideo(){return this._video_enabled_&&!this._video_muted_&&this._video_added_}get hasAudio(){return this._audio_enabled_&&
                    !this._audio_muted_&&this._audio_added_}get audioTrack(){if(this.hasAudio)return this._audioTrack}get videoTrack(){if(this.hasVideo)return this._videoTrack}}class iq extends Ya{constructor(a){var b,d,e,f;super();this._users=[];this._sessionId=null;this._bindEnabledTracks=[];this._leaveMutex=new cc("client-leave");this._publishMutex=new cc("client-publish");this._subscribeMutex=new Z;this._remoteStream=new Z;this._encryptionMode="none";this._encryptionSecret=null;this._turnServer={servers:[],mode:"auto"};
                    this._cloudProxyServerMode="disabled";this._isDualStreamEnabled=!1;this._streamFallbackTypeCacheMap=new Z;this._remoteStreamTypeCacheMap=new Z;this._axiosCancelSource=Fb.CancelToken.source();this._networkQualitySensitivity="normal";this._handleLocalTrackEnable=(a,b,d)=>{this.publish(a,!1).then(b).catch(d)};this._handleLocalTrackDisable=(a,b,d)=>{this.unpublish(a,!1).then(b).catch(d)};this._handleUserOnline=a=>{var b;this.isStringUID&&"string"!=typeof a.uid&&h.error("[".concat(this._clientId,"] StringUID is Mixed with UintUID"));
                        let d=U(b=this._users).call(b,b=>b.uid===a.uid);d?d._trust_in_room_=!0:(b=new hq(a.uid,a.uint_id||a.uid),this._users.push(b),h.debug("[".concat(this._clientId,"] user online"),a.uid),this.emit(P.USER_JOINED,b))};this._handleUserOffline=a=>{var b;let d=U(b=this._users).call(b,b=>b.uid===a.uid);d&&(this._handleRemoveStream(a),bd(this._users,d),this._remoteStreamTypeCacheMap.delete(d.uid),this._streamFallbackTypeCacheMap.delete(d.uid),h.debug("[".concat(this._clientId,"] user offline"),a.uid,"reason:",
                        a.reason),this.emit(P.USER_LEAVED,d,a.reason))};this._handleAddAudioOrVideoStream=(a,b,d)=>{var e,f,g;let k=U(e=this._users).call(e,a=>a.uid===b);if(!k)return void h.error("[".concat(this._clientId,"] can not find target user!(on_add_stream)"));h.debug(n(f=n(g="[".concat(this._clientId,"] stream added with uid ")).call(g,b,", type ")).call(f,a));e="audio"===a?k.hasAudio:k.hasVideo;var l,q;(k._uintid||(k._uintid=d||b),k._trust_stream_added_state_=!0,"audio"===a?k._audio_added_=!0:k._video_added_=!0,
                    ("audio"===a?k.hasAudio:k.hasVideo)&&!e)&&(h.info(n(l=n(q="[".concat(this._clientId,"] remote user ")).call(q,k.uid," published ")).call(l,a)),this.emit(P.USER_PUBLISHED,k,a));"video"===a?t.onGatewayStream(this._sessionId,Ea.ON_ADD_VIDEO_STREAM,sa.ON_ADD_VIDEO_STREAM,{peer:d||b}):t.onGatewayStream(this._sessionId,Ea.ON_ADD_AUDIO_STREAM,sa.ON_ADD_AUDIO_STREAM,{peer:d||b});(a=this._remoteStream.get(b))&&a.readyToReconnect&&"connecting"===a.connectionState&&a.reconnectPC().catch(a=>{h.error("[".concat(this._clientId,
                        "] resubscribe error"),a.toString())})};this._handleRemoveStream=a=>{var b,d;let e=U(b=this._users).call(b,b=>b.uid===a.uid);if(!e)return void h.warning("[".concat(this._clientId,"] can not find target user!(on_remove_stream)"));h.debug(n(d="[".concat(this._clientId,"] stream removed with uid ")).call(d,a.uid));b=()=>{};e.hasAudio&&e.hasVideo?b=()=>{var a,b;h.info(n(a="[".concat(this._clientId,"] remote user ")).call(a,e.uid," unpublished audio track"));this.emit(P.USER_UNPUBLISHED,e,"audio");h.info(n(b=
                        "[".concat(this._clientId,"] remote user ")).call(b,e.uid," unpublished video track"));this.emit(P.USER_UNPUBLISHED,e,"video")}:e.hasVideo?b=()=>{var a;h.info(n(a="[".concat(this._clientId,"] remote user ")).call(a,e.uid," unpublished video track"));this.emit(P.USER_UNPUBLISHED,e,"video")}:e.hasAudio&&(b=()=>{var a;h.info(n(a="[".concat(this._clientId,"] remote user ")).call(a,e.uid," unpublished audio track"));this.emit(P.USER_UNPUBLISHED,e,"audio")});e._trust_stream_added_state_=!0;e._audio_added_=
                        !1;e._video_added_=!1;(d=this._remoteStream.get(e.uid))&&(d.closeP2PConnection(),this._remoteStream.delete(e.uid));t.onGatewayStream(this._sessionId,Ea.ON_REMOVE_STREAM,sa.ON_REMOVE_STREAM,{peer:a.uint_id||a.uid});b()};this._handleSetStreamLocalEnable=(a,b,d)=>{var e,f,g,k,l,q;let m=U(e=this._users).call(e,a=>a.uid===b);if(!m)return void h.error("[".concat(this._clientId,"] can not find target user!(disable_local)"));h.debug(n(f=n(g=n(k="[".concat(this._clientId,"] local ")).call(k,a," ")).call(g,
                        d?"enabled":"disabled"," with uid ")).call(f,b));e="audio"===a?m.hasAudio:m.hasVideo;if("audio"===a){m._trust_audio_enabled_state_=!0;var p=m._audio_enabled_;if(m._audio_enabled_=d,m._audio_enabled_===p)return;var r,t;d=m._audio_enabled_?"enable-local-audio":"disable-local-audio";h.debug(n(r=n(t="[".concat(this._clientId,"] user-info-updated, uid: ")).call(t,b,", msg: ")).call(r,d));this.emit(P.USER_INFO_UPDATED,b,d)}else{m._trust_video_enabled_state_=!0;r=m._video_enabled_;if(m._video_enabled_=d,
                    m._video_enabled_===r)return;var u;d=m._video_enabled_?"enable-local-video":"disable-local-video";h.debug(n(p=n(u="[".concat(this._clientId,"] user-info-update, uid: ")).call(u,b,", msg: ")).call(p,d));this.emit(P.USER_INFO_UPDATED,b,d)}d="audio"===a?m.hasAudio:m.hasVideo;if(e!==d){var v,w;if(!e&&d)return h.info(n(v=n(w="[".concat(this._clientId,"] remote user ")).call(w,b," published ")).call(v,a)),void this.emit(P.USER_PUBLISHED,m,a);if(v=this._remoteStream.get(b))w=Dc({},v.subscribeOptions),w.audio=
                        !!m.hasAudio&&w.audio,w.video=!!m.hasVideo&&w.video,w.audio||w.video?v.setSubscribeOptions(w):(v.closeP2PConnection().catch(a=>{h.warning("close sub pc error",a)}),this._remoteStream.delete(m.uid));h.info(n(l=n(q="[".concat(this._clientId,"] remote user ")).call(q,m.uid," unpublished ")).call(l,a));this.emit(P.USER_UNPUBLISHED,m,a)}};this._handleMuteStream=(a,b,d)=>{var e,f,g;h.debug("[".concat(this._clientId,"] receive mute message"),a,b,d);let k=U(e=this._users).call(e,b=>b.uid===a);var l;if(!k)return void h.warning(n(l=
                        "[".concat(this._clientId,"] can not find remote user, ignore mute event, uid: ")).call(l,a));e="audio"===b?k.hasAudio:k.hasVideo;if("audio"===b){k._trust_audio_mute_state_=!0;var q=k._audio_muted_;if(k._audio_muted_=d,k._audio_muted_===q)return;var m,p;d=k._audio_muted_?"mute-audio":"unmute-audio";h.debug(n(m=n(p="[".concat(this._clientId,"] user-info-update, uid: ")).call(p,a,", msg: ")).call(m,d));this.emit(P.USER_INFO_UPDATED,a,d)}else{k._trust_video_mute_state_=!0;m=k._video_muted_;if(k._video_muted_=
                        d,k._video_muted_===m)return;var r;d=k._video_muted_?"mute-video":"unmute-video";h.debug(n(q=n(r="[".concat(this._clientId,"] user-info-update, uid: ")).call(r,a,", msg: ")).call(q,d));this.emit(P.USER_INFO_UPDATED,a,d)}d="audio"===b?k.hasAudio:k.hasVideo;if(e!==d){var t,u;if(!e&&d)return h.info(n(t=n(u="[".concat(this._clientId,"] remote user ")).call(u,a," published ")).call(t,b)),void this.emit(P.USER_PUBLISHED,k,b);if(t=this._remoteStream.get(a))u=Dc({},t.subscribeOptions),u.audio=!!k.hasAudio&&
                        u.audio,u.video=!!k.hasVideo&&u.video,"video"===b&&t.pc._statsFilter.setVideoIsReady(!1),u.audio||u.video?t.setSubscribeOptions(u):(t.closeP2PConnection().catch(a=>{h.warning("close sub pc error",a)}),this._remoteStream.delete(k.uid));h.info(n(f=n(g="[".concat(this._clientId,"] remote user ")).call(g,a," unpublished ")).call(f,b));this.emit(P.USER_UNPUBLISHED,k,b)}};this._handleP2PLost=a=>{h.debug("[".concat(this._clientId,"] receive p2p lost"),a);let b=null;if(this._highStream&&this._highStream.pc.ID===
                        a.p2pid)b=this._highStream;else if(this._lowStream&&this._lowStream.pc.ID===a.p2pid)b=this._lowStream;else{var d;r(d=this._remoteStream).call(d,d=>{d.pc.ID===a.p2pid&&(b=d)})}b?b.emit(G.GATEWAY_P2P_LOST,a.p2pid):h.warning("P2PLost stream not found",a)};this._handleTokenWillExpire=()=>{h.debug("[".concat(this._clientId,"] received message onTokenPrivilegeWillExpire"));this.emit(P.ON_TOKEN_PRIVILEGE_WILL_EXPIRE)};this._handleBeforeUnload=a=>{void 0!==a.returnValue&&""!==a.returnValue||(this.leave(),
                        h.info("[".concat(this._clientId,"] auto leave onbeforeunload")))};this._handleUpdateNetworkQuality=()=>{var a;if("normal"!==this._networkQualitySensitivity){if(navigator&&void 0!==navigator.onLine&&!navigator.onLine)return void this.emit(P.NETWORK_QUALITY,{downlinkNetworkQuality:6,uplinkNetworkQuality:6});var b={downlinkNetworkQuality:0,uplinkNetworkQuality:0};this._highStream&&!this._highStream.detecting&&(b.uplinkNetworkQuality=this._highStream.getNetworkQuality());var d=0;r(a=this._remoteStream).call(a,
                        a=>d+=a.getNetworkQuality());0<this._remoteStream.size&&(b.downlinkNetworkQuality=Math.round(d/this._remoteStream.size));this.emit(P.NETWORK_QUALITY,b)}};this._codec=a.codec;this._mode=a.mode;a.proxyServer&&(this._proxyServer=a.proxyServer,t.setProxyServer(this._proxyServer),h.setProxyServer(this._proxyServer));a.turnServer&&(this._turnServer=Dc({},this._turnServer,{mode:"manual"},a.turnServer));this._clientId=pa(5,"client-");h.info(n(b=n(d=n(e=n(f="[".concat(this._clientId,"] Initializing AgoraRTC client v")).call(f,
                        db," build: ")).call(e,"v4.2.1-0-gf505b57(12/23/2020, 5:25:33 PM)",", mode: ")).call(d,this._mode,", codec: ")).call(b,this._codec));this._statsCollector=new Zc(this._clientId);this._statsCollector.onStatsException=(a,b,d)=>{var e,f,g;h.debug(n(e=n(f=n(g="[".concat(this._clientId,"] receive exception msg, code: ")).call(g,a,", msg: ")).call(f,b,", uid: ")).call(e,d));this.emit(P.EXCEPTION,{code:a,msg:b,uid:d})};this._statsCollector.onUploadPublishDuration=(a,b,d,e)=>{var f;let g=U(f=this._users).call(f,
                        b=>b.uid===a);g&&t.peerPublishStatus(this._sessionId,{subscribeElapse:e,audioPublishDuration:b,videoPublishDuration:d,peer:g._uintid})};this._gateway=new Hp({clientId:this._clientId,mode:this._mode,codec:this._codec,websocketRetryConfig:a.websocketRetryConfig||Pa,httpRetryConfig:a.httpRetryConfig||Pa,forceWaitGatewayResponse:void 0===a.forceWaitGatewayResponse||a.forceWaitGatewayResponse,statsCollector:this._statsCollector,role:a.role});this._config=a;this._configDistribute=new Ip(this);this._handleGatewayEvents();
                    kk.push(this)}get connectionState(){return this._gateway.state}get remoteUsers(){return this._users}get localTracks(){return this._highStream?this._highStream.getAllTracks():[]}get uid(){return this._uid}get channelName(){return this._channelName}get isStringUID(){return!!this._joinInfo&&!!this._joinInfo.stringUid}async join(a,b,d,e,f){var g;let k=t.reportApiInvoke(this._sessionId,{name:y.JOIN,options:[a,b,d,e],tag:D.TRACER});try{if(!d&&null!==d)throw new m(l.INVALID_PARAMS,"Invalid token: ".concat(d,
                    ". If you don not use token, set it to null"));d&&La(d,"token",1,2047);Le(b);e&&Me(e);f&&La(f,"optionalInfo",1,2047)}catch(x){throw k.onError(x),x;}if(h.info(n(g="[".concat(this._clientId,"] start join channel ")).call(g,b)),this._leaveMutex.isLocked)h.debug("[".concat(this._clientId,"] join: waiting leave operation")),(await this._leaveMutex.lock())(),h.debug("[".concat(this._clientId,"] join: continue"));if("DISCONNECTED"!==this.connectionState)throw a=new m(l.INVALID_OPERATION,"[".concat(this._clientId,
                    "] Client already in connecting/connected state")),k.onError(a),a;this._sessionId||(this._sessionId=pa(32,"").toUpperCase());this._gateway.state="CONNECTING";let q={clientId:this._clientId,appId:a,sid:this._sessionId,cname:b,uid:"string"!=typeof e?e:null,turnServer:this._turnServer,proxyServer:this._proxyServer,token:d||a,cloudProxyServer:this._cloudProxyServerMode,optionalInfo:f};"string"==typeof e&&(q.stringUid=e,this._uintUid?(q.uid=this._uintUid,this._uintUid=void 0):q.uid=0);"none"!==this._encryptionMode&&
                this._encryptionSecret&&(q.aesmode=this._encryptionMode,q.aespassword=this._encryptionSecret);t.sessionInit(this._sessionId,{lts:(new Date).getTime(),cname:b,appid:a,mode:this._mode});Ec(()=>{"CONNECTING"===this.connectionState&&t.joinChannelTimeout(this._sessionId,5)},5E3);try{var p;if(await om(q,this._axiosCancelSource.token,this._config.httpRetryConfig||Pa),q.stringUid&&!q.uid){var r;let a=await ci(q.stringUid,q,this._axiosCancelSource.token,this._config.httpRetryConfig||Pa);h.debug(n(r="getUserAccount Success ".concat(q.stringUid,
                    " => ")).call(r,a));q.uid=a}let e=await bi(q,this._axiosCancelSource.token,this._config.httpRetryConfig||Pa);var u;q.proxyServer&&(e.gatewayInfo.gatewayAddrs=A(u=e.gatewayInfo.gatewayAddrs).call(u,a=>{var b,d;a=a.split(":");return n(b=n(d="".concat(q.proxyServer,"/ws/?h=")).call(d,a[0],"&p=")).call(b,a[1])}));this._configDistribute.updateConfig(this._clientId,e.configDistribute);this._key=d||a;this._joinInfo=Dc({},q,{cid:e.gatewayInfo.cid,uid:q.uid?q.uid:e.gatewayInfo.uid,vid:e.gatewayInfo.vid,apResponse:e.gatewayInfo.res,
                    uni_lbs_ip:e.gatewayInfo.uni_lbs_ip,gatewayAddrs:e.gatewayInfo.gatewayAddrs});let f=await this._gateway.join(this._joinInfo,this._key);return k.onSuccess(f),this._appId=a,this._channelName=q.cname,this._uid=f,this._networkQualityInterval&&window.clearInterval(this._networkQualityInterval),this._networkQualityInterval=window.setInterval(this._handleUpdateNetworkQuality,2E3),window.addEventListener("beforeunload",this._handleBeforeUnload),h.info(n(p="[".concat(this._clientId,"] Joining channel success: ")).call(p,
                    b)),f}catch(x){throw h.error("[".concat(this._clientId,"] Joining channel failed, rollback"),x),x.code!==l.OPERATION_ABORTED&&(this._gateway.state="DISCONNECTED",this._reset()),k.onError(x),x;}}async leave(){let a=t.reportApiInvoke(this._sessionId,{name:y.LEAVE,options:[],tag:D.TRACER});h.info("[".concat(this._clientId,"] Leaving channel"));window.removeEventListener("beforeunload",this._handleBeforeUnload);this._reset();let b=await this._leaveMutex.lock();if("DISCONNECTED"===this.connectionState)return h.info("[".concat(this._clientId,
                    "] Leaving channel repeated, success")),b(),a.onSuccess();await this._gateway.leave("CONNECTED"!==this.connectionState);h.info("[".concat(this._clientId,"] Leaving channel success"));b();a.onSuccess()}async publish(a,b=!0){var d,e;ec(a)||(a=[a]);let f=t.reportApiInvoke(this._sessionId,{name:y.PUBLISH,options:A(a).call(a,a=>a?Object(a).toString():"null"),tag:D.TRACER});if(0===a.length)return a=new m(l.INVALID_PARAMS,"track list is empty"),f.onError(a),a.throw();if("live"===this._mode&&"audience"===
                    this._gateway.role)return a=new m(l.INVALID_OPERATION,"audience can not publish stream"),f.onError(a),a.throw();for(let d of a){if(!(d instanceof ye))return a=new m(l.INVALID_PARAMS,"pamameter is not local track"),f.onError(a),a.throw();if(!d._enabled&&b)return a=new m(l.TRACK_IS_DISABLED,"can not publish a disabled track: ".concat(d.getTrackId())),f.onError(a),a.throw()}h.info(n(d="[".concat(this._clientId,"] Publishing tracks, id ")).call(d,A(a).call(a,a=>"".concat(a.getTrackId()," "))));b&&r(a).call(a,
                    a=>{var b;-1===E(b=this._bindEnabledTracks).call(b,a)&&(a.addListener(K.NEED_ADD_TRACK,this._handleLocalTrackEnable),a.addListener(K.NEED_REMOVE_TRACK,this._handleLocalTrackDisable),this._bindEnabledTracks.push(a))});d=await this._publishMutex.lock();try{let b=await this._publishHighStream(a),e=(b.audioTrack,b.videoTrack);this._isDualStreamEnabled&&e&&!this._lowStream&&await this._publishLowStream(e);d();f.onSuccess()}catch(g){throw d(),b&&r(a).call(a,a=>{var b,d;let e=E(b=this._bindEnabledTracks).call(b,
                    a);-1!==e&&(a.off(K.NEED_ADD_TRACK,this._handleLocalTrackEnable),a.off(K.NEED_REMOVE_TRACK,this._handleLocalTrackDisable),Ja(d=this._bindEnabledTracks).call(d,e,1))}),f.onError(g),h.error("[".concat(this._clientId,"] publish error"),g.toString()),g;}h.info(n(e="[".concat(this._clientId,"] Publish success, id ")).call(e,A(a).call(a,a=>"".concat(a.getTrackId()," "))))}async unpublish(a,b=!0){var d,e,f;if(!this._highStream)return void h.warning("[".concat(this._clientId,"] Could not find tracks to unpublish"));
                    var g=this._highStream.getAllTracks();a?ec(a)||(a=[a]):a=this._highStream.getAllTracks();g=Rl(g,a);let k=t.reportApiInvoke(this._sessionId,{name:y.UNPUBLISH,options:A(a).call(a,a=>a.getTrackId()),tag:D.TRACER});h.info(n(d=n(e="[".concat(this._clientId,"] Unpublish tracks, tracks ")).call(e,A(a).call(a,a=>"".concat(a.getTrackId()," ")),", isClosePC: ")).call(d,g));d=g?void 0:await this._publishMutex.lock();if(!this._highStream)return h.warning("[".concat(this._clientId,"] Could not find tracks to unpublish")),
                        void(d&&d());try{this._lowStream&&0<O(a).call(a,a=>"video"===a.trackMediaType).length&&(await this._lowStream.closeP2PConnection(),this._lowStream=void 0),g?await this._highStream.closeP2PConnection():await this._highStream.removeTracks(a,b),d&&d()}catch(q){if(q.code!==l.OPERATION_ABORTED)throw k.onError(q),h.error("[".concat(this._clientId,"] unpublish error"),q.toString()),d&&d(),q;h.debug("[".concat(this._clientId,"] ignore unpub operation abort"));d&&d()}this._highStream&&"disconnected"===this._highStream.connectionState&&
                    (this._highStream=void 0,this._lowStream=void 0);b&&r(a).call(a,a=>{var b,d;let e=E(b=this._bindEnabledTracks).call(b,a);-1!==e&&(a.off(K.NEED_ADD_TRACK,this._handleLocalTrackEnable),a.off(K.NEED_REMOVE_TRACK,this._handleLocalTrackDisable),Ja(d=this._bindEnabledTracks).call(d,e,1))});h.info(n(f="[".concat(this._clientId,"] Unpublish success,tracks ")).call(f,A(a).call(a,a=>"".concat(a.getTrackId()))));k.onSuccess()}async subscribe(a,b){var d,e,f,g;bb(b,"mediaType",["audio","video"]);let k=t.reportApiInvoke(this._sessionId,
                    {name:y.SUBSCRIBE,options:[a.uid,b],tag:D.TRACER});if(!this._joinInfo)throw b=new m(l.INVALID_OPERATION,"Can't subscribe stream, not joined"),k.onError(b),b;if("CONNECTED"!==this.connectionState&&"RECONNECTING"!==this.connectionState)throw b=new m(l.INVALID_OPERATION,"Can't subscribe stream in ".concat(this.connectionState," state")),k.onError(b),b;if(!U(d=this._users).call(d,b=>b===a)){var q;b=new m(l.INVALID_REMOTE_USER,"user is not in the channel");throw h.error(n(q="[".concat(this._clientId,"] can not subscribe ")).call(q,
                    a.uid,", this user is not in the channel")),k.onError(b),b;}if(!a.hasAudio&&!a.hasVideo){var p;b=new m(l.INVALID_REMOTE_USER,"user is not published");throw h.error(n(p="[".concat(this._clientId,"] can not subscribe ")).call(p,a.uid,", user is not published")),k.onError(b),b;}q={audio:"audio"===b,video:"video"===b};if(!a.hasAudio&&q.audio||!a.hasVideo&&q.video){var r,u;var x=new m(l.REMOTE_USER_IS_NOT_PUBLISHED);throw h.error(n(r=n(u="[".concat(this._clientId,"] can not subscribe ")).call(u,a.uid,
                    " with mediaType ")).call(r,b,", remote track is not published")),k.onError(x),x;}(r=this._subscribeMutex.get(a.uid))||(r=new cc("sub-".concat(a.uid)),this._subscribeMutex.set(a.uid,r));h.info(n(e=n(f="[".concat(this._clientId,"] subscribe user ")).call(f,a.uid,", mediaType: ")).call(e,b));e=await r.lock();f=this._remoteStream.get(a.uid);try{if(f)q.audio=q.audio||f.subscribeOptions.audio,q.video=q.video||f.subscribeOptions.video,await this._gateway.subscribeChange(f,q);else{f=new cq(a,this._statsCollector,
                    this._joinInfo,q);this._remoteStream.set(a.uid,f);try{await this._gateway.subscribe(f)}catch(Ha){throw this._remoteStream.delete(a.uid),Ha;}f.on(G.CONNECTION_STATE_CHANGE,(b,d)=>{"connecting"===b?this.emit(P.MEDIA_RECONNECT_START,a.uid):"connected"===b&&this.emit(P.MEDIA_RECONNECT_END,a.uid)})}e()}catch(Ha){var v;throw k.onError(Ha),e(),h.error(n(v="[".concat(this._clientId,"] subscribe user ")).call(v,a.uid," error"),Ha),Ha;}h.info(n(x=n(g="[".concat(this._clientId,"] subscribe success user ")).call(g,
                    a.uid,", mediaType: ")).call(x,b));this._defaultStreamFallbackType&&this.setStreamFallbackOption(a.uid,this._defaultStreamFallbackType).catch(a=>{h.warning("[".concat(this._clientId,"] auto set fallback failed"),a)});b="audio"===b?a.audioTrack:a.videoTrack;return b?(k.onSuccess(b.getTrackId()),b):(b=new m(l.UNEXPECTED_ERROR,"can not find remote track in user object"),k.onError(b),b.throw())}async unsubscribe(a,b){var d,e,f,g,k;b&&bb(b,"mediaType",["audio","video"]);let q=t.reportApiInvoke(this._sessionId,
                    {name:y.UNSUBSCRIBE,options:[a.uid,b],tag:D.TRACER});if(!U(d=this._users).call(d,b=>b===a)){var p;b=new m(l.INVALID_REMOTE_USER,"user is not in the channel");throw h.error(n(p="[".concat(this._clientId,"] can not subscribe ")).call(p,a.uid,", user is not in the channel")),q.onError(b),b;}h.info(n(e=n(f="[".concat(this._clientId,"] unsubscribe uid: ")).call(f,a.uid,", mediaType: ")).call(e,b));(p=this._subscribeMutex.get(a.uid))||(p=new cc("sub-".concat(a.uid)),this._subscribeMutex.set(a.uid,p));p=
                    await p.lock();d=this._remoteStream.get(a.uid);var r;if(!d)return h.warning(n(r="[".concat(this._clientId,"]: you have not subscribe the remote user ")).call(r,a.uid)),q.onSuccess(),void p();r=Dc({},d.subscribeOptions);"audio"===b?r.audio=!1:("video"===b||(r.audio=!1),r.video=!1);try{r.audio||r.video?await this._gateway.subscribeChange(d,r):(await d.closeP2PConnection(),this._remoteStream.delete(a.uid)),p()}catch(x){var u;if(x.code!==l.OPERATION_ABORTED)throw q.onError(x),p(),h.error(n(u="[".concat(this._clientId,
                    "] unsubscribe user ")).call(u,a.uid," error"),x.toString()),x;p();h.debug("[".concat(this._clientId,"] ignore unsub operation abort"))}h.info(n(g=n(k="[".concat(this._clientId,"] unsubscribe success uid: ")).call(k,a.uid,", mediaType: ")).call(g,b));q.onSuccess()}setLowStreamParameter(a){if(!a)throw new m(l.INVALID_PARAMS);null==a.width||W(a.width,"streamParameter.width");null==a.height||W(a.height,"streamParameter.height");null==a.framerate||W(a.framerate,"streamParameter.framerate");null==a.bitrate||
                W(a.bitrate,"streamParameter.bitrate");let b=t.reportApiInvoke(this._sessionId,{name:y.SET_LOW_STREAM_PARAMETER,options:[a],tag:D.TRACER});(!a.width&&a.height||a.width&&!a.height)&&h.warning("[".concat(this._clientId,"] The width and height parameters take effect only when both are set"));h.info("[".concat(this._clientId,"] set low stream parameter to"),z(a));this._lowStreamParameter=a;b.onSuccess()}async enableDualStream(){let a=t.reportApiInvoke(this._sessionId,{name:y.ENABLE_DUAL_STREAM,options:[],
                    tag:D.TRACER});if(!fa.supportDualStream){t.streamSwitch(this._sessionId,{lts:v(),isdual:!0,succ:!1});var b=new m(l.NOT_SUPPORTED,"Your browser is not support dual stream");throw a.onError(b),b;}if(this._isDualStreamEnabled)throw b=new m(l.INVALID_OPERATION,"Dual stream is already enabled"),a.onError(b),b;if(this._highStream&&"connected"===this._highStream.connectionState&&this._highStream.videoTrack)try{await this._publishLowStream(this._highStream.videoTrack)}catch(d){throw t.streamSwitch(this._sessionId,
                    {lts:v(),isdual:!0,succ:!1}),a.onError(d),d;}this._isDualStreamEnabled=!0;t.streamSwitch(this._sessionId,{lts:v(),isdual:!0,succ:!0});h.info("[".concat(this._clientId,"] enable dual stream"));a.onSuccess()}async disableDualStream(){let a=t.reportApiInvoke(this._sessionId,{name:y.DISABLE_DUAL_STREAM,options:[],tag:D.TRACER});if(this._lowStream)try{await this._lowStream.closeP2PConnection()}catch(b){throw t.streamSwitch(this._sessionId,{lts:v(),isdual:!1,succ:!1}),a.onError(b),b;}this._lowStream=void 0;
                    this._isDualStreamEnabled=!1;this._highStream&&(this._highStream.lowStreamConnection=void 0);t.streamSwitch(this._sessionId,{lts:v(),isdual:!1,succ:!0});h.info("[".concat(this._clientId,"] disable dual stream"));a.onSuccess()}async setClientRole(a){bb(a,"role",["audience","host"]);let b=t.reportApiInvoke(this._sessionId,{name:y.SET_CLIENT_ROLE,options:[a],tag:D.TRACER});if("rtc"===this._mode)return h.warning("rtc mode can not use setClientRole"),a=new m(l.INVALID_OPERATION,"rtc mode can not use setClientRole"),
                    b.onError(a),a.throw();try{var d;if("audience"===a&&this._highStream)throw new m(l.INVALID_OPERATION,"can not set client role to audience when publishing stream");await this._gateway.setClientRole(a);h.info(n(d="[".concat(this._clientId,"] set client role to ")).call(d,a));b.onSuccess()}catch(e){throw b.onError(e),e;}}setProxyServer(a){La(a,"proxyServer");let b=t.reportApiInvoke(this._sessionId,{name:y.SET_PROXY_SERVER,options:[a],tag:D.TRACER});if("DISCONNECTED"!==this.connectionState)throw new m(l.INVALID_OPERATION,
                    "Set proxy server before join channel");if("disabled"!==this._cloudProxyServerMode)throw new m(l.INVALID_OPERATION,"You have already set the proxy");this._proxyServer=a;t.setProxyServer(this._proxyServer);h.setProxyServer(this._proxyServer);b.onSuccess()}setTurnServer(a){ec(a)||(a=[a]);r(a).call(a,a=>Dh(a));let b=t.reportApiInvoke(this._sessionId,{name:y.SET_TURN_SERVER,options:a,tag:D.TRACER});if("DISCONNECTED"!==this.connectionState)throw new m(l.INVALID_OPERATION,"Set turn server before join channel");
                    if("disabled"!==this._cloudProxyServerMode)throw new m(l.INVALID_OPERATION,"You have already set the proxy");this._turnServer={servers:a,mode:"manual"};h.info("[".concat(this._clientId,"] Set turnserver."));b.onSuccess()}startProxyServer(a){let b=t.reportApiInvoke(this._sessionId,{name:y.START_PROXY_SERVER,options:[],tag:D.TRACER});if("DISCONNECTED"!==this.connectionState)throw a=new m(l.INVALID_OPERATION,"Start proxy server before join channel"),b.onError(a),a;if(this._proxyServer||"manual"===this._turnServer.mode)throw a=
                    new m(l.INVALID_OPERATION,"You have already set the proxy"),b.onError(a),a;let d=[1,2,3,4];if(void 0===a&&(a=1),a&&-1===E(d).call(d,a))throw a=new m(l.INVALID_PARAMS,"proxy server mode must be ".concat(d.join("|"))),b.onError(a),a;this._cloudProxyServerMode=2===a?"443only":3===a?"proxy3":4===a?"proxy4":"normal";h.info("[".concat(this._clientId,"] set cloud proxy server mode to"),this._cloudProxyServerMode);b.onSuccess()}stopProxyServer(){let a=t.reportApiInvoke(this._sessionId,{name:y.STOP_PROXY_SERVER,
                    options:[],tag:D.TRACER});if("DISCONNECTED"!==this.connectionState)throw new m(l.INVALID_OPERATION,"Stop proxy server after leave channel");t.setProxyServer();h.setProxyServer();this._cloudProxyServerMode="disabled";h.info("[".concat(this._clientId,"] set cloud proxy server mode to"),this._cloudProxyServerMode);this._proxyServer=void 0;this._turnServer={mode:"auto",servers:[]};a.onSuccess()}async setRemoteVideoStreamType(a,b){var d,e;bb(b,"streamType",[0,1]);let f=t.reportApiInvoke(this._sessionId,
                    {name:y.SET_REMOTE_VIDEO_STREAM_TYPE,options:[a,b],tag:D.TRACER});try{await this._gateway.setRemoteVideoStreamType(a,b)}catch(g){throw f.onError(g),h.error("[".concat(this._clientId,"] set remote video stream type error"),g.toString()),g;}h.info(n(d=n(e="[".concat(this._clientId,"] set remote ")).call(e,a," video stream type to ")).call(d,b));this._remoteStreamTypeCacheMap.set(a,b);f.onSuccess()}async setStreamFallbackOption(a,b){var d,e;bb(b,"fallbackType",[0,1,2]);let f=t.reportApiInvoke(this._sessionId,
                    {name:y.SET_STREAM_FALLBACK_OPTION,options:["too long to show",b],tag:D.TRACER});try{await this._gateway.setStreamFallbackOption(a,b)}catch(g){throw f.onError(g),h.error("[".concat(this._clientId,"] set stream fallback option"),g.toString()),g;}h.info(n(d=n(e="[".concat(this._clientId,"] set remote ")).call(e,a," stream fallback type to ")).call(d,b));this._streamFallbackTypeCacheMap.set(a,b);f.onSuccess()}setEncryptionConfig(a,b){bb(a,"encryptionMode",["aes-128-xts","aes-256-xts","aes-128-ecb","sm4-128-ecb",
                    "none"]);La(b,"secret");/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*,.<>?/:;'"|{}\[\]])(?=.{8,})/.test(b)||h.warning("The secret is not strong:\n      The secret must contain at least 1 lowercase alphabetical character,\n      The secret must contain at least 1 uppercase alphabetical character,\n      The secret must contain at least 1 numeric character,\n      The secret must contain at least one special character,\n      The secret must be eight characters or longer.\n      ");let d=t.reportApiInvoke(this._sessionId,
                    {name:y.SET_ENCRYPTION_CONFIG,options:[a],tag:D.TRACER});this._encryptionMode=a;this._encryptionSecret=b;d.onSuccess()}async renewToken(a){La(a,"token",1,2047);let b=t.reportApiInvoke(this._sessionId,{name:y.RENEW_TOKEN,options:[a],tag:D.TRACER});if(!this._key)return a=new m(l.INVALID_OPERATION,"renewToken should not be called before user join"),b.onError(a),a.throw();this._key=a;try{await this._gateway.renewToken(a)}catch(d){throw b.onError(d),h.error("[".concat(this._clientId,"] renewToken failed"),
                    d.toString()),d;}h.debug("[".concat(this._clientId,"] renewToken success"));b.onSuccess()}enableAudioVolumeIndicator(){let a=t.reportApiInvoke(this._sessionId,{name:y.ENABLE_AUDIO_VOLUME_INDICATOR,options:[],tag:D.TRACER});if(this._audioVolumeIndicationInterval)return h.warning("you have already enabled audio volume indicator!"),a.onSuccess();this._audioVolumeIndicationInterval=window.setInterval(()=>{var a,d,e;let f=sd(a=A(d=Ob(sc(e=this._remoteStream).call(e))).call(d,a=>({level:a.user.audioTrack?
                        100*a.user.audioTrack._source.getAudioAvgLevel():0,uid:a.getUserId()}))).call(a,(a,b)=>a.level-b.level);this._highStream&&this._highStream.audioTrack&&(f.push({level:100*this._highStream.audioTrack._source.getAudioAvgLevel(),uid:this._highStream._userId}),f=sd(f).call(f,(a,b)=>a.level-b.level));this.emit(P.VOLUME_INDICATOR,f)},w.AUDIO_VOLUME_INDICATION_INTERVAL||2E3);a.onSuccess()}getRTCStats(){let a=this._statsCollector.getRTCStats(),b=this._gateway.getInChannelInfo();return a.Duration=Math.round(b.duration/
                    1E3),a}startLiveStreaming(a,b){let d=t.reportApiInvoke(this._sessionId,{name:y.START_LIVE_STREAMING,options:[a,b],tag:D.TRACER});if(!b){if("h264"!==this._codec)return a=new m(l.LIVE_STREAMING_INVALID_RAW_STREAM,"raw streaming is only support h264"),d.onError(a),u.reject(a);if(!this._highStream)return a=new m(l.LIVE_STREAMING_INVALID_RAW_STREAM,"can not find stream to raw streaming"),d.onError(a),u.reject(a)}if(this._liveRawStreamingClient&&this._liveRawStreamingClient.hasUrl(a)||this._liveTranscodeStreamingClient&&
                    this._liveTranscodeStreamingClient.hasUrl(a))return a=new m(l.LIVE_STREAMING_TASK_CONFLICT),d.onError(a),u.reject(a);b=b?na.TRANSCODE:na.RAW;return this._createLiveStreamingClient(b).startLiveStreamingTask(a,b).then(()=>d.onSuccess()).catch(a=>{throw d.onError(a),a;})}setLiveTranscoding(a){let b=t.reportApiInvoke(this._sessionId,{name:y.SET_LIVE_TRANSCODING,options:[a],tag:D.TRACER});return this._createLiveStreamingClient(na.TRANSCODE).setTranscodingConfig(a).then(()=>b.onSuccess()).catch(a=>{throw b.onError(a),
                    a;})}stopLiveStreaming(a){var b;let d=t.reportApiInvoke(this._sessionId,{name:y.STOP_LIVE_STREAMING,options:[a],tag:D.TRACER}),e=O(b=[this._liveRawStreamingClient,this._liveTranscodeStreamingClient]).call(b,b=>b&&b.hasUrl(a));return e.length?u.all(A(e).call(e,b=>b&&b.stopLiveStreamingTask(a))).then(()=>d.onSuccess()).catch(a=>{throw d.onError(a),a;}):(b=new m(l.INVALID_PARAMS,"can not find live streaming url to stop"),d.onError(b),u.reject(b))}async addInjectStreamUrl(a,b){let d=t.reportApiInvoke(this._sessionId,
                    {name:y.ADD_INJECT_STREAM_URL,options:[a,b],tag:D.TRACER});try{if(!this._joinInfo)throw new m(l.INVALID_OPERATION,"can not addInjectStreamUrl, no joininfo");let d=this._createLiveStreamingClient(na.INJECT);d.setInjectStreamConfig(b,0);await d.startLiveStreamingTask(a,na.INJECT)}catch(e){throw d.onError(e),e;}d.onSuccess()}async removeInjectStreamUrl(){let a=t.reportApiInvoke(this._sessionId,{name:y.REMOVE_INJECT_STREAM_URL,options:[],tag:D.TRACER});try{var b,d;let a=this._createLiveStreamingClient(na.INJECT),
                    f=U(b=Ob(sc(d=a.streamingTasks).call(d))).call(b,a=>a.mode===na.INJECT);if(!this._joinInfo||!f)throw new m(l.INVALID_OPERATION,"can remove addInjectStreamUrl, no joininfo or inject task");await a.stopLiveStreamingTask(f.url)}catch(e){throw a.onError(e),e;}a.onSuccess()}async startChannelMediaRelay(a){let b=t.reportApiInvoke(this._sessionId,{name:y.START_CHANNEL_MEDIA_RELAY,options:[a],tag:D.TRACER});try{pi(a),await this._createChannelMediaRelayClient().startChannelMediaRelay(a)}catch(d){return b.onError(d),
                    d.throw()}b.onSuccess()}async updateChannelMediaRelay(a){let b=t.reportApiInvoke(this._sessionId,{name:y.UPDATE_CHANNEL_MEDIA_RELAY,options:[a],tag:D.TRACER});try{pi(a),await this._createChannelMediaRelayClient().updateChannelMediaRelay(a)}catch(d){return b.onError(d),d.throw()}b.onSuccess()}async stopChannelMediaRelay(){let a=t.reportApiInvoke(this._sessionId,{name:y.STOP_CHANNEL_MEDIA_RELAY,options:[],tag:D.TRACER});try{await this._createChannelMediaRelayClient().stopChannelMediaRelay()}catch(b){return a.onError(b),
                    b.throw()}a.onSuccess()}sendStreamMessage(a){if(!this._joinInfo)throw new m(l.INVALID_OPERATION,"can not send data stream, not joined");"string"==typeof a&&(a=(new TextEncoder).encode(a));if(1024<(new Blob([a])).size)throw new m(l.INVALID_PARAMS,"stream message out of range.");return this._gateway.signal.request(ca.DATA_STREAM,{payload:Ye(a)})}sendMetadata(a){if(!this._joinInfo)throw new m(l.INVALID_OPERATION,"can not send metadata, not joined");if(1024<(new Blob([a])).size)throw new m(l.METADATA_OUT_OF_RANGE);
                    return this._gateway.signal.request(ca.SEND_METADATA,{session_id:this._joinInfo.sid,metadata:Ye(a)})}async sendCustomReportMessage(a){ec(a)||(a=[a]);r(a).call(a,Al);let b=t.reportApiInvoke(this._sessionId,{name:y.SEND_CUSTOM_REPORT_MESSAGE,options:[],tag:D.TRACER});if(!this._joinInfo)return a=new m(l.INVALID_OPERATION,"can not send custom report, not joined"),b.onError(a),a.throw();await t.sendCustomReportMessage(this._joinInfo.sid,a)}getLocalAudioStats(){return this._highStream?this._statsCollector.getLocalAudioTrackStats(this._highStream.connectionId):
                    te}getRemoteAudioStats(){var a;let b={};return r(a=this._remoteStream).call(a,(a,e)=>{b[e]=this._statsCollector.getRemoteAudioTrackStats(a.connectionId)}),b}getLocalVideoStats(){return this._highStream?this._statsCollector.getLocalVideoTrackStats(this._highStream.connectionId):ue}getRemoteVideoStats(){var a;let b={};return r(a=this._remoteStream).call(a,(a,e)=>{b[e]=this._statsCollector.getRemoteVideoTrackStats(a.connectionId)}),b}getRemoteNetworkQuality(){var a;let b={};return r(a=this._remoteStream).call(a,
                    (a,e)=>{b[e]=this._statsCollector.getRemoteNetworkQualityStats(a.connectionId)}),b}_reset(){var a,b,d;h.debug("[".concat(this._clientId,"] reset client"));this._axiosCancelSource.cancel();this._axiosCancelSource=Fb.CancelToken.source();this._streamFallbackTypeCacheMap=new Z;this._remoteStreamTypeCacheMap=new Z;this._defaultStreamFallbackType=this._proxyServer=this._joinInfo=void 0;this._sessionId=null;this._statsCollector.reset();this._channelName=this._uid=this._appId=this._key=void 0;r(a=this._users).call(a,
                    a=>{a.audioTrack&&(a.audioTrack.stop(),a.audioTrack._isDestroyed=!0);a.videoTrack&&(a.videoTrack.stop(),a.videoTrack._isDestroyed=!0)});this._users=[];this._audioVolumeIndicationInterval&&(window.clearInterval(this._audioVolumeIndicationInterval),this._audioVolumeIndicationInterval=void 0);this._highStream&&(this._highStream.closeP2PConnection(!0),this._highStream=void 0);r(b=this._bindEnabledTracks).call(b,a=>{a.off(K.NEED_ADD_TRACK,this._handleLocalTrackEnable);a.off(K.NEED_REMOVE_TRACK,this._handleLocalTrackDisable)});
                    this._bindEnabledTracks=[];this._lowStream&&(this._lowStream.closeP2PConnection(!0),this._lowStream=void 0);r(d=this._remoteStream).call(d,a=>{a.closeP2PConnection(!0)});this._remoteStream=new Z;this._publishMutex=new cc("client-publish");this._subscribeMutex=new Z;this._networkQualityInterval&&(window.clearInterval(this._networkQualityInterval),this._networkQualityInterval=void 0);this._injectStreamingClient&&(this._injectStreamingClient.terminate(),this._injectStreamingClient.removeAllListeners(),
                        this._injectStreamingClient=void 0);this._liveRawStreamingClient&&(this._liveRawStreamingClient.terminate(),this._liveRawStreamingClient.removeAllListeners(),this._liveRawStreamingClient=void 0);this._liveTranscodeStreamingClient&&(this._liveTranscodeStreamingClient.terminate(),this._liveTranscodeStreamingClient.removeAllListeners(),this._liveTranscodeStreamingClient=void 0);this._channelMediaRelayClient&&(this._channelMediaRelayClient.dispose(),this._channelMediaRelayClient=void 0)}_renewSession(){var a,
                    b;let d=pa(32,"").toUpperCase();h.debug(n(a=n(b="[".concat(this._clientId,"] renewSession ")).call(b,this._sessionId," => ")).call(a,d));this._sessionId=d;this._joinInfo&&(this._joinInfo.sid=d);this._gateway.joinInfo&&(this._gateway.joinInfo.sid=d)}async _publishHighStream(a){if(!this._joinInfo)throw new m(l.INVALID_OPERATION,"Can't publish stream, haven't joined yet!");if("CONNECTED"!==this.connectionState&&"RECONNECTING"!==this.connectionState)throw new m(l.INVALID_OPERATION,"can not publish stream in ".concat(this.connectionState,
                    " state"));if("auto"===this._turnServer.mode&&w.FORCE_TURN&&!w.TURN_ENABLE_TCP&&!w.TURN_ENABLE_UDP)throw new m(l.UNEXPECTED_ERROR,"force TURN With No TURN Configuration");if(h.debug("[".concat(this._clientId,"] publish high stream")),this._highStream)return await this._highStream.addTracks(a),this._highStream;this._highStream=new nl(this._statsCollector,this._joinInfo,this._codec);await this._highStream.addTracks(a);try{await this._gateway.publish(this._highStream,"high")}catch(b){throw this._highStream=
                    void 0,b;}return this._highStream.on(G.CONNECTION_STATE_CHANGE,(a,d)=>{this._highStream&&("connected"===a?this.emit(P.MEDIA_RECONNECT_END,this._highStream.getUserId()):"connecting"===a&&this.emit(P.MEDIA_RECONNECT_START,this._highStream.getUserId()))}),this._highStream}async _publishLowStream(a){if(!this._joinInfo)throw new m(l.INVALID_OPERATION,"Can't publish stream, haven't joined yet!");if("CONNECTED"!==this.connectionState&&"RECONNECTING"!==this.connectionState)throw new m(l.INVALID_OPERATION,
                    "can not publish stream in ".concat(this.connectionState," state"));if(!this._highStream||"connected"!==this._highStream.connectionState)throw new m(l.UNEXPECTED_ERROR,"Could not find high stream");if(this._lowStream)return(new m(l.UNEXPECTED_ERROR,"[".concat(this._clientId,"] Can't publish low stream when stream already publish"))).throw();h.debug("[".concat(this._clientId,"] publish low stream"));this._lowStream=new nl(this._statsCollector,this._joinInfo,this._codec,!0);this._lowStream.lowStreamParameter=
                    this._lowStreamParameter;await this._lowStream.addTracks([a]);try{await this._gateway.publish(this._lowStream,"low")}catch(b){throw this._lowStream=void 0,b;}this._highStream.lowStreamConnection=this._lowStream}_createLiveStreamingClient(a){if(!this._joinInfo||!this._appId)return(new m(l.INVALID_OPERATION,"can not create live streaming client, please join channel first")).throw();let b=()=>new eq(this._joinInfo,this._config.websocketRetryConfig||Pa,this._config.httpRetryConfig||Pa),d=a=>{a.onLiveStreamError=
                    (a,b)=>{t.reportApiInvoke(this._sessionId,{name:y.ON_LIVE_STREAM_ERROR,options:[a,b],tag:D.TRACER}).onSuccess();this.emit(P.LIVE_STREAMING_ERROR,a,b)};a.onLiveStreamWarning=(a,b)=>{t.reportApiInvoke(this._sessionId,{name:y.ON_LIVE_STREAM_WARNING,options:[a,b],tag:D.TRACER}).onSuccess();this.emit(P.LIVE_STREAMING_WARNING,a,b)};a.on(Rc.REQUEST_WORKER_MANAGER_LIST,(a,b,d)=>{if(!this._joinInfo)return d(new m(l.INVALID_OPERATION,"can not find join info to get worker manager"));ei(a,this._joinInfo,this._axiosCancelSource.token,
                    Pa).then(b).catch(d)})};switch(a){case na.RAW:return this._liveRawStreamingClient||(this._liveRawStreamingClient=b(),d(this._liveRawStreamingClient)),this._liveRawStreamingClient;case na.TRANSCODE:return this._liveTranscodeStreamingClient||(this._liveTranscodeStreamingClient=b(),d(this._liveTranscodeStreamingClient)),this._liveTranscodeStreamingClient;case na.INJECT:return this._injectStreamingClient||(this._injectStreamingClient=b(),this._injectStreamingClient.on(Rc.REQUEST_WORKER_MANAGER_LIST,(a,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         b,d)=>{if(!this._joinInfo)return d(new m(l.INVALID_OPERATION,"can not find join info to get worker manager"));ei(a,this._joinInfo,this._axiosCancelSource.token,Pa).then(b).catch(d)}),this._injectStreamingClient.onInjectStatusChange=(a,b,d)=>{this.emit(P.INJECT_STREAM_STATUS,a,b,d)}),this._injectStreamingClient}}_createChannelMediaRelayClient(){return this._joinInfo?(this._channelMediaRelayClient||(this._channelMediaRelayClient=new gq(this._joinInfo,this._clientId,this._config.websocketRetryConfig||
                    Pa,this._config.httpRetryConfig||Pa),this._channelMediaRelayClient.on("state",a=>{"RELAY_STATE_FAILURE"===a&&this._channelMediaRelayClient&&this._channelMediaRelayClient.dispose();this.emit(P.CHANNEL_MEDIA_RELAY_STATE,a)}),this._channelMediaRelayClient.on("event",a=>{this.emit(P.CHANNEL_MEDIA_RELAY_EVENT,a)})),this._channelMediaRelayClient):(new m(l.INVALID_OPERATION,"can not create channel media relay client, please join channel first")).throw()}_handleGatewayEvents(){this._gateway.on(ya.DISCONNECT_P2P,
                    ()=>{var a;h.debug("[".concat(this._clientId,"] start full reconnect"));this._highStream&&"disconnected"!==this._highStream.connectionState&&(h.debug("[".concat(this._clientId,"] ready to reconnect high stream")),this._highStream.readyToReconnectPC());this._lowStream&&"disconnected"!==this._lowStream.connectionState&&(h.debug("[".concat(this._clientId,"] ready to reconnect low stream")),this._lowStream.readyToReconnectPC());r(a=this._remoteStream).call(a,(a,d)=>{var b;h.debug(n(b="[".concat(this._clientId,
                        "] ready to reconnect remote stream ")).call(b,d));a.readyToReconnectPC()})});this._gateway.on(ya.CONNECTION_STATE_CHANGE,(a,b,d)=>{var e,f;let g=()=>{this.emit(P.CONNECTION_STATE_CHANGE,a,b,d)};if(h.info(n(e=n(f="[".concat(this._clientId,"] connection state change: ")).call(f,b," -> ")).call(e,a)),"DISCONNECTED"===a)return this._reset(),this._renewSession(),void g();var k,l;if("RECONNECTING"===a)this._highStream&&"connecting"===this._highStream.connectionState&&(h.debug("[".concat(this._clientId,
                    "] ready to reconnect high stream")),this._highStream.readyToReconnectPC()),this._lowStream&&"connecting"===this._lowStream.connectionState&&(h.debug("[".concat(this._clientId,"] ready to reconnect low stream")),this._lowStream.readyToReconnectPC()),r(k=this._remoteStream).call(k,(a,b)=>{var d;"connecting"===a.connectionState&&(h.debug(n(d="[".concat(this._clientId,"] ready to reconnect remote stream ")).call(d,b)),a.readyToReconnectPC())}),r(l=this._users).call(l,a=>{a._trust_in_room_=!1;a._trust_audio_enabled_state_=
                    !1;a._trust_video_enabled_state_=!1;a._trust_audio_mute_state_=!1;a._trust_video_mute_state_=!1;a._trust_stream_added_state_=!1}),this._userOfflineTimeout&&window.clearTimeout(this._userOfflineTimeout),this._streamRemovedTimeout&&window.clearTimeout(this._streamRemovedTimeout),this._streamRemovedTimeout=this._userOfflineTimeout=void 0;else if("CONNECTED"===a){var m,p;r(m=this._streamFallbackTypeCacheMap).call(m,(a,b)=>{this._gateway.setStreamFallbackOption(b,a).catch(a=>h.warning("[".concat(this._clientId,
                    "] auto set stream fallback option failed"),a))});r(p=this._remoteStreamTypeCacheMap).call(p,(a,b)=>{this._gateway.setRemoteVideoStreamType(b,a).catch(a=>h.warning("[".concat(this._clientId,"] auto set remote stream type failed"),a))});this._highStream&&"connecting"===this._highStream.connectionState?this._highStream.reconnectPC().then(()=>{this._lowStream&&"connecting"===this._lowStream.connectionState&&this._lowStream.reconnectPC().catch(a=>{h.error("[".concat(this._clientId,"] republish low stream error"),
                    a.toString());this.emit(P.ERROR,{reason:a})})}).catch(a=>{h.error("[".concat(this._clientId,"] republish high stream error"),a.toString());this.emit(P.ERROR,{reason:a})}):this._lowStream&&"connecting"===this._lowStream.connectionState&&this._lowStream.reconnectPC().catch(a=>{h.error("[".concat(this._clientId,"] republish low stream error"),a.toString());this.emit(P.ERROR,{reason:a})});this._userOfflineTimeout=window.setTimeout(()=>{var a;if("CONNECTED"===this.connectionState){this._userOfflineTimeout=
                    void 0;var b=O(a=this._users).call(a,a=>!a._trust_in_room_);r(b).call(b,a=>{var b;h.debug(n(b="[".concat(this._clientId,"] user offline timeout, emit user offline ")).call(b,a.uid));this._handleUserOffline({uid:a.uid})})}},3E3);this._streamRemovedTimeout=window.setTimeout(()=>{var a;"CONNECTED"===this.connectionState&&(this._streamRemovedTimeout=void 0,r(a=this._users).call(a,a=>{var b,d,e,f,g;a._trust_audio_mute_state_||(h.debug(n(b="[".concat(this._clientId,"] auto dispatch audio unmute event ")).call(b,
                    a.uid)),this._handleMuteStream(a.uid,"audio",!1));a._trust_video_mute_state_||(h.debug(n(d="[".concat(this._clientId,"] auto dispatch video unmute event ")).call(d,a.uid)),this._handleMuteStream(a.uid,"video",!1));a._trust_audio_enabled_state_||(h.debug(n(e="[".concat(this._clientId,"] auto dispatch enable local audio ")).call(e,a.uid)),this._handleSetStreamLocalEnable("audio",a.uid,!0));!a._trust_video_enabled_state_&&a._video_enabled_&&(h.debug(n(f="[".concat(this._clientId,"] auto dispatch enable local video ")).call(f,
                    a.uid)),this._handleSetStreamLocalEnable("video",a.uid,!0));a._trust_stream_added_state_||(h.debug(n(g="[".concat(this._clientId,"] auto dispatch stream remove ")).call(g,a.uid)),this._handleRemoveStream({uid:a.uid,uint_id:a._uintid}))}))},1E3)}g()});this._gateway.on(ya.REQUEST_NEW_GATEWAY_LIST,(a,b)=>{if(!this._joinInfo)return b(new m(l.UNEXPECTED_ERROR,"can not recover, no join info"));bi(this._joinInfo,this._axiosCancelSource.token,this._config.httpRetryConfig||Pa).then(b=>{var d;this._joinInfo&&
                (this._joinInfo.apResponse=b.gatewayInfo.res);a(A(d=b.gatewayInfo.gatewayAddrs).call(d,a=>"wss://".concat(a)))}).catch(b)});this._gateway.on(ya.NETWORK_QUALITY,a=>{"normal"===this._networkQualitySensitivity&&this.emit(P.NETWORK_QUALITY,a)});this._gateway.on(ya.STREAM_TYPE_CHANGE,(a,b)=>{this.emit(P.STREAM_TYPE_CHANGED,a,b);t.reportApiInvoke(this._sessionId,{name:y.STREAM_TYPE_CHANGE,options:[a,b],tag:D.TRACER}).onSuccess(z({uid:a,streamType:b}))});this._gateway.on(ya.IS_P2P_DISCONNECTED,a=>{var b,
                    d,e;let f=[];return this._highStream&&f.push(this._highStream),r(b=this._remoteStream).call(b,a=>f.push(a)),0===f.length||0===O(f).call(f,a=>"connected"===a.connectionState).length?a(!0):(h.debug(n(d="[".concat(this._clientId,"] ")).call(d,A(e=O(f).call(f,a=>"connected"===a.connectionState)).call(e,a=>a.connectionId)," is connected")),void a(!1))});this._gateway.on(ya.NEED_RENEW_SESSION,()=>{this._renewSession()});this._gateway.signal.on(Y.ON_USER_ONLINE,this._handleUserOnline);this._gateway.signal.on(Y.ON_USER_OFFLINE,
                    this._handleUserOffline);this._gateway.signal.on(Y.ON_ADD_AUDIO_STREAM,a=>this._handleAddAudioOrVideoStream("audio",a.uid,a.uint_id));this._gateway.signal.on(Y.ON_ADD_VIDEO_STREAM,a=>this._handleAddAudioOrVideoStream("video",a.uid,a.uint_id));this._gateway.signal.on(Y.ON_REMOVE_STREAM,this._handleRemoveStream);this._gateway.signal.on(Y.ON_P2P_LOST,this._handleP2PLost);this._gateway.signal.on(Y.MUTE_AUDIO,a=>this._handleMuteStream(a.uid,"audio",!0));this._gateway.signal.on(Y.UNMUTE_AUDIO,a=>this._handleMuteStream(a.uid,
                    "audio",!1));this._gateway.signal.on(Y.MUTE_VIDEO,a=>this._handleMuteStream(a.uid,"video",!0));this._gateway.signal.on(Y.UNMUTE_VIDEO,a=>this._handleMuteStream(a.uid,"video",!1));this._gateway.signal.on(Y.RECEIVE_METADATA,a=>{let b=Nh(a.metadata);this.emit(P.RECEIVE_METADATA,a.uid,b)});this._gateway.signal.on(Y.ON_DATA_STREAM,a=>{a.seq&&delete a.seq;a.payload=Nh(a.payload);this.emit(P.STREAM_MESSAGE,a.uid,a.payload);this.onStreamMessage&&this.onStreamMessage(a)});this._gateway.signal.on(Y.ON_CRYPT_ERROR,
                    ()=>{cd(()=>{h.warning("[".concat(this._clientId,"] on crypt error"));this.emit(P.CRYPT_ERROR)},this._sessionId)});this._gateway.signal.on(Y.ON_TOKEN_PRIVILEGE_WILL_EXPIRE,this._handleTokenWillExpire);this._gateway.signal.on(Y.ON_TOKEN_PRIVILEGE_DID_EXPIRE,()=>{h.warning("[".concat(this._clientId,"] received message onTokenPrivilegeDidExpire, please get new token and join again"));this._reset();this._gateway.leave(!0);this.emit(P.ON_TOKEN_PRIVILEGE_DID_EXPIRE)});this._gateway.signal.on(Y.ON_STREAM_FALLBACK_UPDATE,
                    a=>{var b,d;h.debug(n(b=n(d="[".concat(this._clientId,"] stream fallback peerId: ")).call(d,a.stream_id,", attr: ")).call(b,a.stream_type));this.emit(P.STREAM_FALLBACK,a.stream_id,1===a.stream_type?"fallback":"recover")});this._gateway.signal.on(Y.ENABLE_LOCAL_VIDEO,a=>{this._handleSetStreamLocalEnable("video",a.uid,!0)});this._gateway.signal.on(Y.DISABLE_LOCAL_VIDEO,a=>{this._handleSetStreamLocalEnable("video",a.uid,!1)});this._gateway.signal.on(N.REQUEST_TIMEOUT,(a,b)=>{if(this._joinInfo)switch(a){case ca.PUBLISH:var d;
                    if(!b)break;a="high"===b.stream_type?this._highStream:this._lowStream;if(!a)break;"offer"===b.state&&t.publish(this._joinInfo.sid,{lts:a.startTime,succ:!1,ec:l.TIMEOUT,audio:b.audio,video:b.video,p2pid:b.p2p_id,publishRequestid:a.ID,screenshare:!(!a.videoTrack||-1===E(d=a.videoTrack._hints).call(d,nb.SCREEN_TRACK)),audioName:a.audioTrack&&a.audioTrack.getTrackLabel(),videoName:a.videoTrack&&a.videoTrack.getTrackLabel()});break;case ca.SUBSCRIBE:(d=this._remoteStream.get(b.stream_id))&&b&&t.subscribe(this._joinInfo.sid,
                    {lts:d.startTime,succ:!1,ec:l.TIMEOUT,audio:!!b.audio,video:!!b.video,peerid:b.stream_id,subscribeRequestid:d.ID,p2pid:d.pc.ID})}})}}class jq extends Wk{constructor(a,b={}){super();this.currentLoopCount=this.pausePlayTime=this.startPlayOffset=this.startPlayTime=0;this._currentState="stopped";this.audioBuffer=a;this.options=b;this.startPlayOffset=this.options.startPlayTime||0}set currentState(a){a!==this._currentState&&(this._currentState=a,this.emit(lb.AUDIO_SOURCE_STATE_CHANGE,this._currentState))}get currentState(){return this._currentState}createWebAudioDiagram(){return this.context.createGain()}get duration(){return this.audioBuffer.duration}get currentTime(){return"stopped"===
                this.currentState?0:"paused"===this.currentState?this.pausePlayTime:(this.context.currentTime-this.startPlayTime+this.startPlayOffset)%this.audioBuffer.duration}updateOptions(a){"stopped"===this.currentState?(this.options=a,this.startPlayOffset=this.options.startPlayTime||0):h.warning("can not set audio source options")}startProcessAudioBuffer(){this.sourceNode&&this.stopProcessAudioBuffer();this.sourceNode=this.createSourceNode();this.startSourceNode();this.currentState="playing"}pauseProcessAudioBuffer(){this.sourceNode&&
                "playing"===this.currentState&&(this.pausePlayTime=this.currentTime,this.sourceNode.onended=null,this.sourceNode.stop(),this.sourceNode.buffer=null,this.sourceNode=this.createSourceNode(),this.currentState="paused")}seekAudioBuffer(a){this.sourceNode&&(this.sourceNode.onended=null,"playing"===this.currentState&&this.sourceNode.stop(),this.sourceNode=this.createSourceNode(),"playing"===this.currentState?(this.startPlayOffset=a,this.startSourceNode()):"paused"===this.currentState&&(this.pausePlayTime=
                    a))}resumeProcessAudioBuffer(){"paused"===this.currentState&&this.sourceNode&&(this.startPlayOffset=this.pausePlayTime,this.pausePlayTime=0,this.startSourceNode(),this.currentState="playing")}stopProcessAudioBuffer(){if(this.sourceNode){this.sourceNode.onended=null;try{this.sourceNode.stop()}catch(a){}this.reset()}}startSourceNode(){var a;this.sourceNode&&this.sourceNode.buffer&&(this.sourceNode.start(0,this.startPlayOffset),this.startPlayTime=this.context.currentTime,this.sourceNode.onended=Ba(a=
                    this.handleSourceNodeEnded).call(a,this))}createSourceNode(){let a=this.context.createBufferSource();return a.buffer=this.audioBuffer,a.loop=!!this.options.loop,a.connect(this.outputNode),a}handleSourceNodeEnded(){if(this.currentLoopCount+=1,this.options.cycle&&this.options.cycle>this.currentLoopCount)return this.startPlayOffset=0,this.sourceNode=void 0,void this.startProcessAudioBuffer();this.reset()}reset(){this.startPlayOffset=this.options.startPlayTime||0;this.currentState="stopped";this.sourceNode&&
                (this.sourceNode.disconnect(),this.sourceNode=void 0);this.currentLoopCount=0}}let si=new Z;var kq=ha.setInterval;let pl=qa().name;Xb("PROCESS_ID",function(){var a,b,d,e;return n(a=n(b=n(d=n(e="process-".concat(pa(8,""),"-")).call(e,pa(4,""),"-")).call(d,pa(4,""),"-")).call(b,pa(4,""),"-")).call(a,pa(12,""))}());(function(){let a=qa();fa.getDisplayMedia=!(!navigator.mediaDevices||!navigator.mediaDevices.getDisplayMedia);fa.getStreamFromExtension=a.name===ea.CHROME&&34<Number(a.version);if(window.RTCRtpTransceiver&&
                    "currentDirection"in RTCRtpTransceiver.prototype){var b=new RTCPeerConnection;var d=!1;try{b.addTransceiver("audio"),d=!0}catch(e){}b=(b.close(),d)}else b=!1;fa.supportUnifiedPlan=b;fa.supportMinBitrate=a.name===ea.CHROME||a.name===ea.EDGE;b=qa();b=!!(window.RTCRtpSender&&window.RTCRtpSender.prototype.setParameters&&window.RTCRtpSender.prototype.getParameters)&&(!!We()||b.name===ea.SAFARI||b.name===ea.FIREFOX&&64<=Number(b.version));fa.supportSetRtpSenderParameters=b;a.name!==ea.SAFARI&&qa().name!==
                ea.WECHAT||(fa.supportDualStream=!1);b=qa();b=!(b.name===ea.SAFARI&&12>Number(b.version));fa.webAudioMediaStreamDest=b;fa.supportReplaceTrack=!!window.RTCRtpSender&&"function"==typeof RTCRtpSender.prototype.replaceTrack;fa.supportWebGL="undefined"!=typeof WebGLRenderingContext;fa.supportRequestFrame=!!window.CanvasCaptureMediaStreamTrack;We()||(fa.webAudioWithAEC=!0);b=qa();b=(b.os===X.WIN_10||b.os===X.WIN_81||b.os===X.WIN_7||b.os===X.LINUX||b.os===X.MAC_OS||b.os===X.MAC_OS_X)&&b.name===ea.CHROME&&
                    74<=Number(b.version);fa.supportShareAudio=b;h.info("browser compatibility",z(fa),z(a))})();let yb={VERSION:db,BUILD:"v4.2.1-0-gf505b57(12/23/2020, 5:25:33 PM)",setParameter:Xb,getSupportedCodec:async function(a){let b=null;a?(b=new el({}),b.addStream(a)):b=new fl({});{a=await b.createOfferSDP();let d={video:[],audio:[]};a=(a.match(/ VP8/i)&&d.video.push("VP8"),a.match(/ H264/i)&&d.video.push("H264"),a.match(/ opus/i)&&d.audio.push("OPUS"),d)}return b.close(),a},checkSystemRequirements:function(){let a=
                        t.reportApiInvoke(null,{name:y.CHECK_SYSTEM_REQUIREMENTS,options:[],tag:D.TRACER});var b=navigator.mediaDevices&&navigator.mediaDevices.getUserMedia,d=window.WebSocket;b=window.RTCPeerConnection&&b&&d;d=!1;let e=qa();e.name===ea.CHROME&&58<=Number(e.version)&&e.os!==X.IOS&&(d=!0);e.name===ea.FIREFOX&&56<=Number(e.version)&&(d=!0);e.name===ea.OPERA&&45<=Number(e.version)&&(d=!0);e.name===ea.SAFARI&&11<=Number(e.version)&&(d=!0);qa().name!==ea.WECHAT&&qa().name!==ea.QQ||e.os===X.IOS||(d=!0);h.debug("checkSystemRequirements, api:",
                        b,"browser",d);b=b&&d;return a.onSuccess(b),b},getDevices:function(a){return gb.enumerateDevices(!0,!0,a)},getMicrophones:function(a){return gb.getRecordingDevices(a)},getCameras:function(a){return gb.getCamerasDevices(a)},getElectronScreenSources:Ph,getPlaybackDevices:function(a){return gb.getSpeakers(a)},createClient:function(a={codec:"vp8",mode:"rtc"}){let b=t.reportApiInvoke(null,{name:y.CREATE_CLIENT,options:[a],tag:D.TRACER});try{bb(a.codec,"config.codec",["vp8","h264"]),bb(a.mode,"config.mode",
                        ["rtc","live"]),void 0!==a.proxyServer&&La(a.proxyServer,"config.proxyServer",1,1E4),void 0!==a.turnServer&&Dh(a.turnServer),void 0!==a.httpRetryConfig&&Ch(a.httpRetryConfig),void 0!==a.websocketRetryConfig&&Ch(a.websocketRetryConfig)}catch(d){throw b.onError(d),d;}return b.onSuccess(),new iq(Dc({forceWaitGatewayResponse:!0},a,{role:"rtc"===a.mode?"host":a.role}))},createCameraVideoTrack:async function(a={}){let b=t.reportApiInvoke(null,{tag:D.TRACER,name:y.CREATE_CAM_VIDEO_TRACK,options:[of({},a)]}),
                        d=kf(a);var e=pa(8,"track-");let f=null;h.info("start create camera video track with config",z(a),"trackId",e);try{f=(await Eb({video:d},e)).getVideoTracks()[0]||null}catch(g){throw b.onError(g),g;}if(!f)return e=new m(l.UNEXPECTED_ERROR,"can not find track in media stream"),b.onError(e),e.throw();a.optimizationMode&&pf(e,f,a,a.encoderConfig&&vc(a.encoderConfig));a=new ml(f,a,d,a.optimizationMode,e);return b.onSuccess(a.getTrackId()),h.info("create camera video success, trackId:",e),a},createCustomVideoTrack:function(a){let b=
                        t.reportApiInvoke(null,{tag:D.TRACER,name:y.CREATE_CUSTOM_VIDEO_TRACK,options:[a]}),d=new $a(a.mediaStreamTrack,{bitrateMax:a.bitrateMax,bitrateMin:a.bitrateMin},a.optimizationMode);return b.onSuccess(d.getTrackId()),h.info("create custom video track success with config",a,"trackId",d.getTrackId()),d},createScreenVideoTrack:async function(a={},b="disable"){let d=t.reportApiInvoke(null,{tag:D.TRACER,name:y.CREATE_SCREEN_VIDEO_TRACK,options:[of({},a),b]});a.encoderConfig?"string"==typeof a.encoderConfig||
                        a.encoderConfig.width&&a.encoderConfig.height||(a.encoderConfig.width={max:1920},a.encoderConfig.height={max:1080}):a.encoderConfig="1080p_2";var e={};a.screenSourceType&&(e.mediaSource=a.screenSourceType);a.extensionId&&Yc()&&(e.extensionId=a.extensionId);a.electronScreenSourceId&&(e.sourceId=a.electronScreenSourceId);var f=a.encoderConfig?Ie(a.encoderConfig):null;f=(e.mandatory={chromeMediaSource:"desktop",maxWidth:f?f.width:void 0,maxHeight:f?f.height:void 0},f&&f.frameRate&&("number"==typeof f.frameRate?
                        (e.mandatory.maxFrameRate=f.frameRate,e.mandatory.minFrameRate=f.frameRate):(e.mandatory.maxFrameRate=f.frameRate.max||f.frameRate.ideal||f.frameRate.exact||void 0,e.mandatory.minFrameRate=f.frameRate.min||f.frameRate.ideal||f.frameRate.exact||void 0),e.frameRate=f.frameRate),f&&f.width&&(e.width=f.width),f&&f.height&&(e.height=f.height),e);let g=pa(8,"track-"),k=null;e=null;let n=fa;if(!n.supportShareAudio&&"enable"===b)return a=new m(l.NOT_SUPPORTED,"your browser or platform is not support share-screen with audio"),
                        d.onError(a),a.throw();h.info("start create screen video track with config",a,"withAudio",b,"trackId",g);try{let a=await Eb({screen:f,screenAudio:"auto"===b?n.supportShareAudio:"enable"===b},g);k=a.getVideoTracks()[0]||null;e=a.getAudioTracks()[0]||null}catch(B){throw d.onError(B),B;}if(!k)return a=new m(l.UNEXPECTED_ERROR,"can not find track in media stream"),d.onError(a),a.throw();if(!e&&"enable"===b)return k&&k.stop(),a=new m(l.SHARE_AUDIO_NOT_ALLOWED),d.onError(a),a.throw();a.optimizationMode||
                    (a.optimizationMode="detail");a.optimizationMode&&(pf(g,k,a,a.encoderConfig&&Ie(a.encoderConfig)),a.encoderConfig&&"string"!=typeof a.encoderConfig&&(a.encoderConfig.bitrateMin=a.encoderConfig.bitrateMax));a=new $a(k,a.encoderConfig?Ie(a.encoderConfig):{},a.optimizationMode,g);if(a._hints.push(nb.SCREEN_TRACK),!e)return d.onSuccess(a.getTrackId()),h.info("create screen video track success","video:",a.getTrackId()),a;b=new Za(e);return d.onSuccess([a.getTrackId(),b.getTrackId()]),h.info("create screen video track success",
                        "video:",a.getTrackId(),"audio:",b.getTrackId()),[a,b]},createMicrophoneAndCameraTracks:async function(a={},b={}){var d,e,f;let g=t.reportApiInvoke(null,{tag:D.TRACER,name:y.CREATE_MIC_AND_CAM_TRACKS,options:[a,b]}),k=kf(b),p=ii(a),r=pa(8,"track-"),u=pa(8,"track-"),v=null,w=null;h.info(n(d=n(e=n(f="start create camera video track(".concat(u,") and microphone audio track(")).call(f,r,") with config, audio: ")).call(e,z(a),", video: ")).call(d,z(b)));try{var A;let a=await Eb({audio:p,video:k},n(A="".concat(r,
                        "-")).call(A,u));v=a.getAudioTracks()[0];w=a.getVideoTracks()[0]}catch(la){throw g.onError(la),la;}if(!v||!w){var C=new m(l.UNEXPECTED_ERROR,"can not find tracks in media stream");return g.onError(C),C.throw()}b.optimizationMode&&pf(u,w,b,b.encoderConfig&&vc(b.encoderConfig));a=new tg(v,a,p,r);b=new ml(w,b,k,b.optimizationMode,u);return g.onSuccess([a.getTrackId(),b.getTrackId()]),h.info(n(C="create camera video track(".concat(u,") and microphone audio track(")).call(C,r,") success")),[a,b]},createMicrophoneAudioTrack:async function(a=
{}){let b=t.reportApiInvoke(null,{tag:D.TRACER,name:y.CREATE_MIC_AUDIO_TRACK,options:[a]}),d=ii(a);var e=pa(8,"track-");let f=null;h.info("start create microphone audio track with config",z(a),"trackId",e);try{f=(await Eb({audio:d},e)).getAudioTracks()[0]||null}catch(g){throw b.onError(g),g;}if(!f)return e=new m(l.UNEXPECTED_ERROR,"can not find track in media stream"),b.onError(e),e.throw();a=new tg(f,a,d,e);return b.onSuccess(a.getTrackId()),h.info("create microphone audio track success, trackId:",
                        e),a},createCustomAudioTrack:function(a){let b=t.reportApiInvoke(null,{tag:D.TRACER,name:y.CREATE_CUSTOM_AUDIO_TRACK,options:[a]}),d=new Za(a.mediaStreamTrack,a.encoderConfig?Fd(a.encoderConfig):{});return h.info("create custom audio track success with config",a,"trackId",d.getTrackId()),b.onSuccess(d.getTrackId()),d},createBufferSourceAudioTrack:async function(a){let b=t.reportApiInvoke(null,{tag:D.TRACER,name:y.CREATE_BUFFER_AUDIO_TRACK,options:[a]}),d=pa(8,"track-");h.info("start create buffer source audio track with config",
                        z(a),"trackId",d);let e=a.source;if(!(a.source instanceof AudioBuffer))try{a.source=await xm(a.source,a.cacheOnlineFile)}catch(g){return b.onError(g),g.throw()}let f=new jq(a.source);a=new Gp(e,f,a.encoderConfig?Fd(a.encoderConfig):{},d);return h.info("create buffer source audio track success, trackId:",d),b.onSuccess(a.getTrackId()),a},setLogLevel:function(a){h.setLogLevel(a)},enableLogUpload:function(){h.enableLogUpload()},disableLogUpload:function(){h.disableLogUpload()},createChannelMediaRelayConfiguration:function(){return new qi},
                    checkAudioTrackIsActive:async function(a,b=5E3){let d=t.reportApiInvoke(null,{tag:D.TRACER,name:y.CHECK_AUDIO_TRACK_IS_ACTIVE,options:[b]});if(!(a instanceof Za||a instanceof Ad)){var e=new m(l.INVALID_TRACK,"the parameter is not a audio track");return d.onError(e),e.throw()}b&&1E3>b&&(b=1E3);let f=a instanceof Za?a.getTrackLabel():"remote_track",g=e=a.getVolumeLevel(),k=e,p=v();return new u(e=>{let l=kq(()=>{var m=a.getVolumeLevel();g=m>g?m:g;k=m<k?m:k;m=1E-4<g-k;var q=v()-p;if(m||q>b){var r;clearInterval(l);
                        q={duration:q,deviceLabel:f,maxVolumeLevel:g,result:m};h.info(n(r="[track-".concat(a.getTrackId(),"] check audio track active completed. ")).call(r,z(q)));d.onSuccess(q);e(m)}},200)})},checkVideoTrackIsActive:async function(a,b=5E3){var d;let e=t.reportApiInvoke(null,{tag:D.TRACER,name:y.CHECK_VIDEO_TRACK_IS_ACTIVE,options:[b]});if(!(a instanceof $a||a instanceof zd))return a=new m(l.INVALID_TRACK,"the parameter is not a video track"),e.onError(a),a.throw();b&&1E3>b&&(b=1E3);var f=a instanceof $a?
                        a.getTrackLabel():"remote_track",g=a.getMediaStreamTrack();let k=document.createElement("video");k.style.width="1px";k.style.height="1px";k.setAttribute("muted","");k.muted=!0;k.setAttribute("playsinline","");k.controls=!1;pl===ea.SAFARI&&(k.style.opacity="0.01",k.style.position="fixed",k.style.left="0",k.style.top="0",document.body.appendChild(k));k.srcObject=new MediaStream([g]);k.play();let p=document.createElement("canvas");p.width=160;p.height=120;let r=g=0;try{let a=v();g=await ym(k,b,p,4);
                        r=v()-a}catch(L){throw e.onError(L),L;}pl===ea.SAFARI&&(k.pause(),k.remove());k.srcObject=null;b=4<g;f={duration:r,changedPicNum:g,deviceLabel:f,result:b};return h.info(n(d="[track-".concat(a.getTrackId(),"] check video track active completed. ")).call(d,z(f))),e.onSuccess(f),b},setArea:function(a){var b;"string"==typeof a&&(a=[a]);r(a).call(a,a=>{if(!Aa(Ak).call(Ak,a))throw new m(l.INVALID_PARAMS,"invalid area code");});Xb("AREAS",a);let d=Jp(a);A(b=S(d)).call(b,a=>{Xb(a,"LOG_UPLOAD_SERVER"===a||
                    "EVENT_REPORT_DOMAIN"===a||"EVENT_REPORT_BACKUP_DOMAIN"===a?d[a][0]:d[a])});h.debug("set area success:",a.join(","))}};return gb.on(Ub.CAMERA_DEVICE_CHANGED,a=>{h.info("camera device changed",z(a));yb.onCameraChanged&&yb.onCameraChanged(a)}),gb.on(Ub.RECORDING_DEVICE_CHANGED,a=>{h.info("microphone device changed",z(a));yb.onMicrophoneChanged&&yb.onMicrophoneChanged(a)}),gb.on(Ub.PLAYOUT_DEVICE_CHANGED,a=>{h.debug("playout device changed",z(a));yb.onPlaybackDeviceChanged&&yb.onPlaybackDeviceChanged(a)}),
                    ob.onAutoplayFailed=()=>{h.info("detect audio element autoplay failed");yb.onAudioAutoplayFailed&&yb.onAudioAutoplayFailed()},ed.on("autoplay-failed",()=>{h.info("detect webaudio autoplay failed");yb.onAudioAutoplayFailed&&yb.onAudioAutoplayFailed()}),yb})


        }).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    },{"_process":159}],7:[function(require,module,exports){
        var asn1 = exports;

        asn1.bignum = require('bn.js');

        asn1.define = require('./asn1/api').define;
        asn1.base = require('./asn1/base');
        asn1.constants = require('./asn1/constants');
        asn1.decoders = require('./asn1/decoders');
        asn1.encoders = require('./asn1/encoders');

    },{"./asn1/api":8,"./asn1/base":10,"./asn1/constants":14,"./asn1/decoders":16,"./asn1/encoders":19,"bn.js":22}],8:[function(require,module,exports){
        var asn1 = require('../asn1');
        var inherits = require('inherits');

        var api = exports;

        api.define = function define(name, body) {
            return new Entity(name, body);
        };

        function Entity(name, body) {
            this.name = name;
            this.body = body;

            this.decoders = {};
            this.encoders = {};
        };

        Entity.prototype._createNamed = function createNamed(base) {
            var named;
            try {
                named = require('vm').runInThisContext(
                    '(function ' + this.name + '(entity) {\n' +
                    '  this._initNamed(entity);\n' +
                    '})'
                );
            } catch (e) {
                named = function (entity) {
                    this._initNamed(entity);
                };
            }
            inherits(named, base);
            named.prototype._initNamed = function initnamed(entity) {
                base.call(this, entity);
            };

            return new named(this);
        };

        Entity.prototype._getDecoder = function _getDecoder(enc) {
            enc = enc || 'der';
            // Lazily create decoder
            if (!this.decoders.hasOwnProperty(enc))
                this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
            return this.decoders[enc];
        };

        Entity.prototype.decode = function decode(data, enc, options) {
            return this._getDecoder(enc).decode(data, options);
        };

        Entity.prototype._getEncoder = function _getEncoder(enc) {
            enc = enc || 'der';
            // Lazily create encoder
            if (!this.encoders.hasOwnProperty(enc))
                this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
            return this.encoders[enc];
        };

        Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
            return this._getEncoder(enc).encode(data, reporter);
        };

    },{"../asn1":7,"inherits":140,"vm":197}],9:[function(require,module,exports){
        var inherits = require('inherits');
        var Reporter = require('../base').Reporter;
        var Buffer = require('buffer').Buffer;

        function DecoderBuffer(base, options) {
            Reporter.call(this, options);
            if (!Buffer.isBuffer(base)) {
                this.error('Input not Buffer');
                return;
            }

            this.base = base;
            this.offset = 0;
            this.length = base.length;
        }
        inherits(DecoderBuffer, Reporter);
        exports.DecoderBuffer = DecoderBuffer;

        DecoderBuffer.prototype.save = function save() {
            return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
        };

        DecoderBuffer.prototype.restore = function restore(save) {
            // Return skipped data
            var res = new DecoderBuffer(this.base);
            res.offset = save.offset;
            res.length = this.offset;

            this.offset = save.offset;
            Reporter.prototype.restore.call(this, save.reporter);

            return res;
        };

        DecoderBuffer.prototype.isEmpty = function isEmpty() {
            return this.offset === this.length;
        };

        DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
            if (this.offset + 1 <= this.length)
                return this.base.readUInt8(this.offset++, true);
            else
                return this.error(fail || 'DecoderBuffer overrun');
        }

        DecoderBuffer.prototype.skip = function skip(bytes, fail) {
            if (!(this.offset + bytes <= this.length))
                return this.error(fail || 'DecoderBuffer overrun');

            var res = new DecoderBuffer(this.base);

            // Share reporter state
            res._reporterState = this._reporterState;

            res.offset = this.offset;
            res.length = this.offset + bytes;
            this.offset += bytes;
            return res;
        }

        DecoderBuffer.prototype.raw = function raw(save) {
            return this.base.slice(save ? save.offset : this.offset, this.length);
        }

        function EncoderBuffer(value, reporter) {
            if (Array.isArray(value)) {
                this.length = 0;
                this.value = value.map(function(item) {
                    if (!(item instanceof EncoderBuffer))
                        item = new EncoderBuffer(item, reporter);
                    this.length += item.length;
                    return item;
                }, this);
            } else if (typeof value === 'number') {
                if (!(0 <= value && value <= 0xff))
                    return reporter.error('non-byte EncoderBuffer value');
                this.value = value;
                this.length = 1;
            } else if (typeof value === 'string') {
                this.value = value;
                this.length = Buffer.byteLength(value);
            } else if (Buffer.isBuffer(value)) {
                this.value = value;
                this.length = value.length;
            } else {
                return reporter.error('Unsupported type: ' + typeof value);
            }
        }
        exports.EncoderBuffer = EncoderBuffer;

        EncoderBuffer.prototype.join = function join(out, offset) {
            if (!out)
                out = new Buffer(this.length);
            if (!offset)
                offset = 0;

            if (this.length === 0)
                return out;

            if (Array.isArray(this.value)) {
                this.value.forEach(function(item) {
                    item.join(out, offset);
                    offset += item.length;
                });
            } else {
                if (typeof this.value === 'number')
                    out[offset] = this.value;
                else if (typeof this.value === 'string')
                    out.write(this.value, offset);
                else if (Buffer.isBuffer(this.value))
                    this.value.copy(out, offset);
                offset += this.length;
            }

            return out;
        };

    },{"../base":10,"buffer":68,"inherits":140}],10:[function(require,module,exports){
        var base = exports;

        base.Reporter = require('./reporter').Reporter;
        base.DecoderBuffer = require('./buffer').DecoderBuffer;
        base.EncoderBuffer = require('./buffer').EncoderBuffer;
        base.Node = require('./node');

    },{"./buffer":9,"./node":11,"./reporter":12}],11:[function(require,module,exports){
        var Reporter = require('../base').Reporter;
        var EncoderBuffer = require('../base').EncoderBuffer;
        var DecoderBuffer = require('../base').DecoderBuffer;
        var assert = require('minimalistic-assert');

// Supported tags
        var tags = [
            'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
            'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',
            'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
            'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
        ];

// Public methods list
        var methods = [
            'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
            'any', 'contains'
        ].concat(tags);

// Overrided methods list
        var overrided = [
            '_peekTag', '_decodeTag', '_use',
            '_decodeStr', '_decodeObjid', '_decodeTime',
            '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

            '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
            '_encodeNull', '_encodeInt', '_encodeBool'
        ];

        function Node(enc, parent) {
            var state = {};
            this._baseState = state;

            state.enc = enc;

            state.parent = parent || null;
            state.children = null;

            // State
            state.tag = null;
            state.args = null;
            state.reverseArgs = null;
            state.choice = null;
            state.optional = false;
            state.any = false;
            state.obj = false;
            state.use = null;
            state.useDecoder = null;
            state.key = null;
            state['default'] = null;
            state.explicit = null;
            state.implicit = null;
            state.contains = null;

            // Should create new instance on each method
            if (!state.parent) {
                state.children = [];
                this._wrap();
            }
        }
        module.exports = Node;

        var stateProps = [
            'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
            'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
            'implicit', 'contains'
        ];

        Node.prototype.clone = function clone() {
            var state = this._baseState;
            var cstate = {};
            stateProps.forEach(function(prop) {
                cstate[prop] = state[prop];
            });
            var res = new this.constructor(cstate.parent);
            res._baseState = cstate;
            return res;
        };

        Node.prototype._wrap = function wrap() {
            var state = this._baseState;
            methods.forEach(function(method) {
                this[method] = function _wrappedMethod() {
                    var clone = new this.constructor(this);
                    state.children.push(clone);
                    return clone[method].apply(clone, arguments);
                };
            }, this);
        };

        Node.prototype._init = function init(body) {
            var state = this._baseState;

            assert(state.parent === null);
            body.call(this);

            // Filter children
            state.children = state.children.filter(function(child) {
                return child._baseState.parent === this;
            }, this);
            assert.equal(state.children.length, 1, 'Root node can have only one child');
        };

        Node.prototype._useArgs = function useArgs(args) {
            var state = this._baseState;

            // Filter children and args
            var children = args.filter(function(arg) {
                return arg instanceof this.constructor;
            }, this);
            args = args.filter(function(arg) {
                return !(arg instanceof this.constructor);
            }, this);

            if (children.length !== 0) {
                assert(state.children === null);
                state.children = children;

                // Replace parent to maintain backward link
                children.forEach(function(child) {
                    child._baseState.parent = this;
                }, this);
            }
            if (args.length !== 0) {
                assert(state.args === null);
                state.args = args;
                state.reverseArgs = args.map(function(arg) {
                    if (typeof arg !== 'object' || arg.constructor !== Object)
                        return arg;

                    var res = {};
                    Object.keys(arg).forEach(function(key) {
                        if (key == (key | 0))
                            key |= 0;
                        var value = arg[key];
                        res[value] = key;
                    });
                    return res;
                });
            }
        };

//
// Overrided methods
//

        overrided.forEach(function(method) {
            Node.prototype[method] = function _overrided() {
                var state = this._baseState;
                throw new Error(method + ' not implemented for encoding: ' + state.enc);
            };
        });

//
// Public methods
//

        tags.forEach(function(tag) {
            Node.prototype[tag] = function _tagMethod() {
                var state = this._baseState;
                var args = Array.prototype.slice.call(arguments);

                assert(state.tag === null);
                state.tag = tag;

                this._useArgs(args);

                return this;
            };
        });

        Node.prototype.use = function use(item) {
            assert(item);
            var state = this._baseState;

            assert(state.use === null);
            state.use = item;

            return this;
        };

        Node.prototype.optional = function optional() {
            var state = this._baseState;

            state.optional = true;

            return this;
        };

        Node.prototype.def = function def(val) {
            var state = this._baseState;

            assert(state['default'] === null);
            state['default'] = val;
            state.optional = true;

            return this;
        };

        Node.prototype.explicit = function explicit(num) {
            var state = this._baseState;

            assert(state.explicit === null && state.implicit === null);
            state.explicit = num;

            return this;
        };

        Node.prototype.implicit = function implicit(num) {
            var state = this._baseState;

            assert(state.explicit === null && state.implicit === null);
            state.implicit = num;

            return this;
        };

        Node.prototype.obj = function obj() {
            var state = this._baseState;
            var args = Array.prototype.slice.call(arguments);

            state.obj = true;

            if (args.length !== 0)
                this._useArgs(args);

            return this;
        };

        Node.prototype.key = function key(newKey) {
            var state = this._baseState;

            assert(state.key === null);
            state.key = newKey;

            return this;
        };

        Node.prototype.any = function any() {
            var state = this._baseState;

            state.any = true;

            return this;
        };

        Node.prototype.choice = function choice(obj) {
            var state = this._baseState;

            assert(state.choice === null);
            state.choice = obj;
            this._useArgs(Object.keys(obj).map(function(key) {
                return obj[key];
            }));

            return this;
        };

        Node.prototype.contains = function contains(item) {
            var state = this._baseState;

            assert(state.use === null);
            state.contains = item;

            return this;
        };

//
// Decoding
//

        Node.prototype._decode = function decode(input, options) {
            var state = this._baseState;

            // Decode root node
            if (state.parent === null)
                return input.wrapResult(state.children[0]._decode(input, options));

            var result = state['default'];
            var present = true;

            var prevKey = null;
            if (state.key !== null)
                prevKey = input.enterKey(state.key);

            // Check if tag is there
            if (state.optional) {
                var tag = null;
                if (state.explicit !== null)
                    tag = state.explicit;
                else if (state.implicit !== null)
                    tag = state.implicit;
                else if (state.tag !== null)
                    tag = state.tag;

                if (tag === null && !state.any) {
                    // Trial and Error
                    var save = input.save();
                    try {
                        if (state.choice === null)
                            this._decodeGeneric(state.tag, input, options);
                        else
                            this._decodeChoice(input, options);
                        present = true;
                    } catch (e) {
                        present = false;
                    }
                    input.restore(save);
                } else {
                    present = this._peekTag(input, tag, state.any);

                    if (input.isError(present))
                        return present;
                }
            }

            // Push object on stack
            var prevObj;
            if (state.obj && present)
                prevObj = input.enterObject();

            if (present) {
                // Unwrap explicit values
                if (state.explicit !== null) {
                    var explicit = this._decodeTag(input, state.explicit);
                    if (input.isError(explicit))
                        return explicit;
                    input = explicit;
                }

                var start = input.offset;

                // Unwrap implicit and normal values
                if (state.use === null && state.choice === null) {
                    if (state.any)
                        var save = input.save();
                    var body = this._decodeTag(
                        input,
                        state.implicit !== null ? state.implicit : state.tag,
                        state.any
                    );
                    if (input.isError(body))
                        return body;

                    if (state.any)
                        result = input.raw(save);
                    else
                        input = body;
                }

                if (options && options.track && state.tag !== null)
                    options.track(input.path(), start, input.length, 'tagged');

                if (options && options.track && state.tag !== null)
                    options.track(input.path(), input.offset, input.length, 'content');

                // Select proper method for tag
                if (state.any)
                    result = result;
                else if (state.choice === null)
                    result = this._decodeGeneric(state.tag, input, options);
                else
                    result = this._decodeChoice(input, options);

                if (input.isError(result))
                    return result;

                // Decode children
                if (!state.any && state.choice === null && state.children !== null) {
                    state.children.forEach(function decodeChildren(child) {
                        // NOTE: We are ignoring errors here, to let parser continue with other
                        // parts of encoded data
                        child._decode(input, options);
                    });
                }

                // Decode contained/encoded by schema, only in bit or octet strings
                if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
                    var data = new DecoderBuffer(result);
                    result = this._getUse(state.contains, input._reporterState.obj)
                        ._decode(data, options);
                }
            }

            // Pop object
            if (state.obj && present)
                result = input.leaveObject(prevObj);

            // Set key
            if (state.key !== null && (result !== null || present === true))
                input.leaveKey(prevKey, state.key, result);
            else if (prevKey !== null)
                input.exitKey(prevKey);

            return result;
        };

        Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
            var state = this._baseState;

            if (tag === 'seq' || tag === 'set')
                return null;
            if (tag === 'seqof' || tag === 'setof')
                return this._decodeList(input, tag, state.args[0], options);
            else if (/str$/.test(tag))
                return this._decodeStr(input, tag, options);
            else if (tag === 'objid' && state.args)
                return this._decodeObjid(input, state.args[0], state.args[1], options);
            else if (tag === 'objid')
                return this._decodeObjid(input, null, null, options);
            else if (tag === 'gentime' || tag === 'utctime')
                return this._decodeTime(input, tag, options);
            else if (tag === 'null_')
                return this._decodeNull(input, options);
            else if (tag === 'bool')
                return this._decodeBool(input, options);
            else if (tag === 'objDesc')
                return this._decodeStr(input, tag, options);
            else if (tag === 'int' || tag === 'enum')
                return this._decodeInt(input, state.args && state.args[0], options);

            if (state.use !== null) {
                return this._getUse(state.use, input._reporterState.obj)
                    ._decode(input, options);
            } else {
                return input.error('unknown tag: ' + tag);
            }
        };

        Node.prototype._getUse = function _getUse(entity, obj) {

            var state = this._baseState;
            // Create altered use decoder if implicit is set
            state.useDecoder = this._use(entity, obj);
            assert(state.useDecoder._baseState.parent === null);
            state.useDecoder = state.useDecoder._baseState.children[0];
            if (state.implicit !== state.useDecoder._baseState.implicit) {
                state.useDecoder = state.useDecoder.clone();
                state.useDecoder._baseState.implicit = state.implicit;
            }
            return state.useDecoder;
        };

        Node.prototype._decodeChoice = function decodeChoice(input, options) {
            var state = this._baseState;
            var result = null;
            var match = false;

            Object.keys(state.choice).some(function(key) {
                var save = input.save();
                var node = state.choice[key];
                try {
                    var value = node._decode(input, options);
                    if (input.isError(value))
                        return false;

                    result = { type: key, value: value };
                    match = true;
                } catch (e) {
                    input.restore(save);
                    return false;
                }
                return true;
            }, this);

            if (!match)
                return input.error('Choice not matched');

            return result;
        };

//
// Encoding
//

        Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
            return new EncoderBuffer(data, this.reporter);
        };

        Node.prototype._encode = function encode(data, reporter, parent) {
            var state = this._baseState;
            if (state['default'] !== null && state['default'] === data)
                return;

            var result = this._encodeValue(data, reporter, parent);
            if (result === undefined)
                return;

            if (this._skipDefault(result, reporter, parent))
                return;

            return result;
        };

        Node.prototype._encodeValue = function encode(data, reporter, parent) {
            var state = this._baseState;

            // Decode root node
            if (state.parent === null)
                return state.children[0]._encode(data, reporter || new Reporter());

            var result = null;

            // Set reporter to share it with a child class
            this.reporter = reporter;

            // Check if data is there
            if (state.optional && data === undefined) {
                if (state['default'] !== null)
                    data = state['default']
                else
                    return;
            }

            // Encode children first
            var content = null;
            var primitive = false;
            if (state.any) {
                // Anything that was given is translated to buffer
                result = this._createEncoderBuffer(data);
            } else if (state.choice) {
                result = this._encodeChoice(data, reporter);
            } else if (state.contains) {
                content = this._getUse(state.contains, parent)._encode(data, reporter);
                primitive = true;
            } else if (state.children) {
                content = state.children.map(function(child) {
                    if (child._baseState.tag === 'null_')
                        return child._encode(null, reporter, data);

                    if (child._baseState.key === null)
                        return reporter.error('Child should have a key');
                    var prevKey = reporter.enterKey(child._baseState.key);

                    if (typeof data !== 'object')
                        return reporter.error('Child expected, but input is not object');

                    var res = child._encode(data[child._baseState.key], reporter, data);
                    reporter.leaveKey(prevKey);

                    return res;
                }, this).filter(function(child) {
                    return child;
                });
                content = this._createEncoderBuffer(content);
            } else {
                if (state.tag === 'seqof' || state.tag === 'setof') {
                    // TODO(indutny): this should be thrown on DSL level
                    if (!(state.args && state.args.length === 1))
                        return reporter.error('Too many args for : ' + state.tag);

                    if (!Array.isArray(data))
                        return reporter.error('seqof/setof, but data is not Array');

                    var child = this.clone();
                    child._baseState.implicit = null;
                    content = this._createEncoderBuffer(data.map(function(item) {
                        var state = this._baseState;

                        return this._getUse(state.args[0], data)._encode(item, reporter);
                    }, child));
                } else if (state.use !== null) {
                    result = this._getUse(state.use, parent)._encode(data, reporter);
                } else {
                    content = this._encodePrimitive(state.tag, data);
                    primitive = true;
                }
            }

            // Encode data itself
            var result;
            if (!state.any && state.choice === null) {
                var tag = state.implicit !== null ? state.implicit : state.tag;
                var cls = state.implicit === null ? 'universal' : 'context';

                if (tag === null) {
                    if (state.use === null)
                        reporter.error('Tag could be omitted only for .use()');
                } else {
                    if (state.use === null)
                        result = this._encodeComposite(tag, primitive, cls, content);
                }
            }

            // Wrap in explicit
            if (state.explicit !== null)
                result = this._encodeComposite(state.explicit, false, 'context', result);

            return result;
        };

        Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
            var state = this._baseState;

            var node = state.choice[data.type];
            if (!node) {
                assert(
                    false,
                    data.type + ' not found in ' +
                    JSON.stringify(Object.keys(state.choice)));
            }
            return node._encode(data.value, reporter);
        };

        Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
            var state = this._baseState;

            if (/str$/.test(tag))
                return this._encodeStr(data, tag);
            else if (tag === 'objid' && state.args)
                return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
            else if (tag === 'objid')
                return this._encodeObjid(data, null, null);
            else if (tag === 'gentime' || tag === 'utctime')
                return this._encodeTime(data, tag);
            else if (tag === 'null_')
                return this._encodeNull();
            else if (tag === 'int' || tag === 'enum')
                return this._encodeInt(data, state.args && state.reverseArgs[0]);
            else if (tag === 'bool')
                return this._encodeBool(data);
            else if (tag === 'objDesc')
                return this._encodeStr(data, tag);
            else
                throw new Error('Unsupported tag: ' + tag);
        };

        Node.prototype._isNumstr = function isNumstr(str) {
            return /^[0-9 ]*$/.test(str);
        };

        Node.prototype._isPrintstr = function isPrintstr(str) {
            return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
        };

    },{"../base":10,"minimalistic-assert":145}],12:[function(require,module,exports){
        var inherits = require('inherits');

        function Reporter(options) {
            this._reporterState = {
                obj: null,
                path: [],
                options: options || {},
                errors: []
            };
        }
        exports.Reporter = Reporter;

        Reporter.prototype.isError = function isError(obj) {
            return obj instanceof ReporterError;
        };

        Reporter.prototype.save = function save() {
            var state = this._reporterState;

            return { obj: state.obj, pathLen: state.path.length };
        };

        Reporter.prototype.restore = function restore(data) {
            var state = this._reporterState;

            state.obj = data.obj;
            state.path = state.path.slice(0, data.pathLen);
        };

        Reporter.prototype.enterKey = function enterKey(key) {
            return this._reporterState.path.push(key);
        };

        Reporter.prototype.exitKey = function exitKey(index) {
            var state = this._reporterState;

            state.path = state.path.slice(0, index - 1);
        };

        Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
            var state = this._reporterState;

            this.exitKey(index);
            if (state.obj !== null)
                state.obj[key] = value;
        };

        Reporter.prototype.path = function path() {
            return this._reporterState.path.join('/');
        };

        Reporter.prototype.enterObject = function enterObject() {
            var state = this._reporterState;

            var prev = state.obj;
            state.obj = {};
            return prev;
        };

        Reporter.prototype.leaveObject = function leaveObject(prev) {
            var state = this._reporterState;

            var now = state.obj;
            state.obj = prev;
            return now;
        };

        Reporter.prototype.error = function error(msg) {
            var err;
            var state = this._reporterState;

            var inherited = msg instanceof ReporterError;
            if (inherited) {
                err = msg;
            } else {
                err = new ReporterError(state.path.map(function(elem) {
                    return '[' + JSON.stringify(elem) + ']';
                }).join(''), msg.message || msg, msg.stack);
            }

            if (!state.options.partial)
                throw err;

            if (!inherited)
                state.errors.push(err);

            return err;
        };

        Reporter.prototype.wrapResult = function wrapResult(result) {
            var state = this._reporterState;
            if (!state.options.partial)
                return result;

            return {
                result: this.isError(result) ? null : result,
                errors: state.errors
            };
        };

        function ReporterError(path, msg) {
            this.path = path;
            this.rethrow(msg);
        };
        inherits(ReporterError, Error);

        ReporterError.prototype.rethrow = function rethrow(msg) {
            this.message = msg + ' at: ' + (this.path || '(shallow)');
            if (Error.captureStackTrace)
                Error.captureStackTrace(this, ReporterError);

            if (!this.stack) {
                try {
                    // IE only adds stack when thrown
                    throw new Error(this.message);
                } catch (e) {
                    this.stack = e.stack;
                }
            }
            return this;
        };

    },{"inherits":140}],13:[function(require,module,exports){
        var constants = require('../constants');

        exports.tagClass = {
            0: 'universal',
            1: 'application',
            2: 'context',
            3: 'private'
        };
        exports.tagClassByName = constants._reverse(exports.tagClass);

        exports.tag = {
            0x00: 'end',
            0x01: 'bool',
            0x02: 'int',
            0x03: 'bitstr',
            0x04: 'octstr',
            0x05: 'null_',
            0x06: 'objid',
            0x07: 'objDesc',
            0x08: 'external',
            0x09: 'real',
            0x0a: 'enum',
            0x0b: 'embed',
            0x0c: 'utf8str',
            0x0d: 'relativeOid',
            0x10: 'seq',
            0x11: 'set',
            0x12: 'numstr',
            0x13: 'printstr',
            0x14: 't61str',
            0x15: 'videostr',
            0x16: 'ia5str',
            0x17: 'utctime',
            0x18: 'gentime',
            0x19: 'graphstr',
            0x1a: 'iso646str',
            0x1b: 'genstr',
            0x1c: 'unistr',
            0x1d: 'charstr',
            0x1e: 'bmpstr'
        };
        exports.tagByName = constants._reverse(exports.tag);

    },{"../constants":14}],14:[function(require,module,exports){
        var constants = exports;

// Helper
        constants._reverse = function reverse(map) {
            var res = {};

            Object.keys(map).forEach(function(key) {
                // Convert key to integer if it is stringified
                if ((key | 0) == key)
                    key = key | 0;

                var value = map[key];
                res[value] = key;
            });

            return res;
        };

        constants.der = require('./der');

    },{"./der":13}],15:[function(require,module,exports){
        var inherits = require('inherits');

        var asn1 = require('../../asn1');
        var base = asn1.base;
        var bignum = asn1.bignum;

// Import DER constants
        var der = asn1.constants.der;

        function DERDecoder(entity) {
            this.enc = 'der';
            this.name = entity.name;
            this.entity = entity;

            // Construct base tree
            this.tree = new DERNode();
            this.tree._init(entity.body);
        };
        module.exports = DERDecoder;

        DERDecoder.prototype.decode = function decode(data, options) {
            if (!(data instanceof base.DecoderBuffer))
                data = new base.DecoderBuffer(data, options);

            return this.tree._decode(data, options);
        };

// Tree methods

        function DERNode(parent) {
            base.Node.call(this, 'der', parent);
        }
        inherits(DERNode, base.Node);

        DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
            if (buffer.isEmpty())
                return false;

            var state = buffer.save();
            var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
            if (buffer.isError(decodedTag))
                return decodedTag;

            buffer.restore(state);

            return decodedTag.tag === tag || decodedTag.tagStr === tag ||
                (decodedTag.tagStr + 'of') === tag || any;
        };

        DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
            var decodedTag = derDecodeTag(buffer,
                'Failed to decode tag of "' + tag + '"');
            if (buffer.isError(decodedTag))
                return decodedTag;

            var len = derDecodeLen(buffer,
                decodedTag.primitive,
                'Failed to get length of "' + tag + '"');

            // Failure
            if (buffer.isError(len))
                return len;

            if (!any &&
                decodedTag.tag !== tag &&
                decodedTag.tagStr !== tag &&
                decodedTag.tagStr + 'of' !== tag) {
                return buffer.error('Failed to match tag: "' + tag + '"');
            }

            if (decodedTag.primitive || len !== null)
                return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

            // Indefinite length... find END tag
            var state = buffer.save();
            var res = this._skipUntilEnd(
                buffer,
                'Failed to skip indefinite length body: "' + this.tag + '"');
            if (buffer.isError(res))
                return res;

            len = buffer.offset - state.offset;
            buffer.restore(state);
            return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
        };

        DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
            while (true) {
                var tag = derDecodeTag(buffer, fail);
                if (buffer.isError(tag))
                    return tag;
                var len = derDecodeLen(buffer, tag.primitive, fail);
                if (buffer.isError(len))
                    return len;

                var res;
                if (tag.primitive || len !== null)
                    res = buffer.skip(len)
                else
                    res = this._skipUntilEnd(buffer, fail);

                // Failure
                if (buffer.isError(res))
                    return res;

                if (tag.tagStr === 'end')
                    break;
            }
        };

        DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,
                                                            options) {
            var result = [];
            while (!buffer.isEmpty()) {
                var possibleEnd = this._peekTag(buffer, 'end');
                if (buffer.isError(possibleEnd))
                    return possibleEnd;

                var res = decoder.decode(buffer, 'der', options);
                if (buffer.isError(res) && possibleEnd)
                    break;
                result.push(res);
            }
            return result;
        };

        DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
            if (tag === 'bitstr') {
                var unused = buffer.readUInt8();
                if (buffer.isError(unused))
                    return unused;
                return { unused: unused, data: buffer.raw() };
            } else if (tag === 'bmpstr') {
                var raw = buffer.raw();
                if (raw.length % 2 === 1)
                    return buffer.error('Decoding of string type: bmpstr length mismatch');

                var str = '';
                for (var i = 0; i < raw.length / 2; i++) {
                    str += String.fromCharCode(raw.readUInt16BE(i * 2));
                }
                return str;
            } else if (tag === 'numstr') {
                var numstr = buffer.raw().toString('ascii');
                if (!this._isNumstr(numstr)) {
                    return buffer.error('Decoding of string type: ' +
                        'numstr unsupported characters');
                }
                return numstr;
            } else if (tag === 'octstr') {
                return buffer.raw();
            } else if (tag === 'objDesc') {
                return buffer.raw();
            } else if (tag === 'printstr') {
                var printstr = buffer.raw().toString('ascii');
                if (!this._isPrintstr(printstr)) {
                    return buffer.error('Decoding of string type: ' +
                        'printstr unsupported characters');
                }
                return printstr;
            } else if (/str$/.test(tag)) {
                return buffer.raw().toString();
            } else {
                return buffer.error('Decoding of string type: ' + tag + ' unsupported');
            }
        };

        DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
            var result;
            var identifiers = [];
            var ident = 0;
            while (!buffer.isEmpty()) {
                var subident = buffer.readUInt8();
                ident <<= 7;
                ident |= subident & 0x7f;
                if ((subident & 0x80) === 0) {
                    identifiers.push(ident);
                    ident = 0;
                }
            }
            if (subident & 0x80)
                identifiers.push(ident);

            var first = (identifiers[0] / 40) | 0;
            var second = identifiers[0] % 40;

            if (relative)
                result = identifiers;
            else
                result = [first, second].concat(identifiers.slice(1));

            if (values) {
                var tmp = values[result.join(' ')];
                if (tmp === undefined)
                    tmp = values[result.join('.')];
                if (tmp !== undefined)
                    result = tmp;
            }

            return result;
        };

        DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
            var str = buffer.raw().toString();
            if (tag === 'gentime') {
                var year = str.slice(0, 4) | 0;
                var mon = str.slice(4, 6) | 0;
                var day = str.slice(6, 8) | 0;
                var hour = str.slice(8, 10) | 0;
                var min = str.slice(10, 12) | 0;
                var sec = str.slice(12, 14) | 0;
            } else if (tag === 'utctime') {
                var year = str.slice(0, 2) | 0;
                var mon = str.slice(2, 4) | 0;
                var day = str.slice(4, 6) | 0;
                var hour = str.slice(6, 8) | 0;
                var min = str.slice(8, 10) | 0;
                var sec = str.slice(10, 12) | 0;
                if (year < 70)
                    year = 2000 + year;
                else
                    year = 1900 + year;
            } else {
                return buffer.error('Decoding ' + tag + ' time is not supported yet');
            }

            return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
        };

        DERNode.prototype._decodeNull = function decodeNull(buffer) {
            return null;
        };

        DERNode.prototype._decodeBool = function decodeBool(buffer) {
            var res = buffer.readUInt8();
            if (buffer.isError(res))
                return res;
            else
                return res !== 0;
        };

        DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
            // Bigint, return as it is (assume big endian)
            var raw = buffer.raw();
            var res = new bignum(raw);

            if (values)
                res = values[res.toString(10)] || res;

            return res;
        };

        DERNode.prototype._use = function use(entity, obj) {
            if (typeof entity === 'function')
                entity = entity(obj);
            return entity._getDecoder('der').tree;
        };

// Utility methods

        function derDecodeTag(buf, fail) {
            var tag = buf.readUInt8(fail);
            if (buf.isError(tag))
                return tag;

            var cls = der.tagClass[tag >> 6];
            var primitive = (tag & 0x20) === 0;

            // Multi-octet tag - load
            if ((tag & 0x1f) === 0x1f) {
                var oct = tag;
                tag = 0;
                while ((oct & 0x80) === 0x80) {
                    oct = buf.readUInt8(fail);
                    if (buf.isError(oct))
                        return oct;

                    tag <<= 7;
                    tag |= oct & 0x7f;
                }
            } else {
                tag &= 0x1f;
            }
            var tagStr = der.tag[tag];

            return {
                cls: cls,
                primitive: primitive,
                tag: tag,
                tagStr: tagStr
            };
        }

        function derDecodeLen(buf, primitive, fail) {
            var len = buf.readUInt8(fail);
            if (buf.isError(len))
                return len;

            // Indefinite form
            if (!primitive && len === 0x80)
                return null;

            // Definite form
            if ((len & 0x80) === 0) {
                // Short form
                return len;
            }

            // Long form
            var num = len & 0x7f;
            if (num > 4)
                return buf.error('length octect is too long');

            len = 0;
            for (var i = 0; i < num; i++) {
                len <<= 8;
                var j = buf.readUInt8(fail);
                if (buf.isError(j))
                    return j;
                len |= j;
            }

            return len;
        }

    },{"../../asn1":7,"inherits":140}],16:[function(require,module,exports){
        var decoders = exports;

        decoders.der = require('./der');
        decoders.pem = require('./pem');

    },{"./der":15,"./pem":17}],17:[function(require,module,exports){
        var inherits = require('inherits');
        var Buffer = require('buffer').Buffer;

        var DERDecoder = require('./der');

        function PEMDecoder(entity) {
            DERDecoder.call(this, entity);
            this.enc = 'pem';
        };
        inherits(PEMDecoder, DERDecoder);
        module.exports = PEMDecoder;

        PEMDecoder.prototype.decode = function decode(data, options) {
            var lines = data.toString().split(/[\r\n]+/g);

            var label = options.label.toUpperCase();

            var re = /^-----(BEGIN|END) ([^-]+)-----$/;
            var start = -1;
            var end = -1;
            for (var i = 0; i < lines.length; i++) {
                var match = lines[i].match(re);
                if (match === null)
                    continue;

                if (match[2] !== label)
                    continue;

                if (start === -1) {
                    if (match[1] !== 'BEGIN')
                        break;
                    start = i;
                } else {
                    if (match[1] !== 'END')
                        break;
                    end = i;
                    break;
                }
            }
            if (start === -1 || end === -1)
                throw new Error('PEM section not found for: ' + label);

            var base64 = lines.slice(start + 1, end).join('');
            // Remove excessive symbols
            base64.replace(/[^a-z0-9\+\/=]+/gi, '');

            var input = new Buffer(base64, 'base64');
            return DERDecoder.prototype.decode.call(this, input, options);
        };

    },{"./der":15,"buffer":68,"inherits":140}],18:[function(require,module,exports){
        var inherits = require('inherits');
        var Buffer = require('buffer').Buffer;

        var asn1 = require('../../asn1');
        var base = asn1.base;

// Import DER constants
        var der = asn1.constants.der;

        function DEREncoder(entity) {
            this.enc = 'der';
            this.name = entity.name;
            this.entity = entity;

            // Construct base tree
            this.tree = new DERNode();
            this.tree._init(entity.body);
        };
        module.exports = DEREncoder;

        DEREncoder.prototype.encode = function encode(data, reporter) {
            return this.tree._encode(data, reporter).join();
        };

// Tree methods

        function DERNode(parent) {
            base.Node.call(this, 'der', parent);
        }
        inherits(DERNode, base.Node);

        DERNode.prototype._encodeComposite = function encodeComposite(tag,
                                                                      primitive,
                                                                      cls,
                                                                      content) {
            var encodedTag = encodeTag(tag, primitive, cls, this.reporter);

            // Short form
            if (content.length < 0x80) {
                var header = new Buffer(2);
                header[0] = encodedTag;
                header[1] = content.length;
                return this._createEncoderBuffer([ header, content ]);
            }

            // Long form
            // Count octets required to store length
            var lenOctets = 1;
            for (var i = content.length; i >= 0x100; i >>= 8)
                lenOctets++;

            var header = new Buffer(1 + 1 + lenOctets);
            header[0] = encodedTag;
            header[1] = 0x80 | lenOctets;

            for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
                header[i] = j & 0xff;

            return this._createEncoderBuffer([ header, content ]);
        };

        DERNode.prototype._encodeStr = function encodeStr(str, tag) {
            if (tag === 'bitstr') {
                return this._createEncoderBuffer([ str.unused | 0, str.data ]);
            } else if (tag === 'bmpstr') {
                var buf = new Buffer(str.length * 2);
                for (var i = 0; i < str.length; i++) {
                    buf.writeUInt16BE(str.charCodeAt(i), i * 2);
                }
                return this._createEncoderBuffer(buf);
            } else if (tag === 'numstr') {
                if (!this._isNumstr(str)) {
                    return this.reporter.error('Encoding of string type: numstr supports ' +
                        'only digits and space');
                }
                return this._createEncoderBuffer(str);
            } else if (tag === 'printstr') {
                if (!this._isPrintstr(str)) {
                    return this.reporter.error('Encoding of string type: printstr supports ' +
                        'only latin upper and lower case letters, ' +
                        'digits, space, apostrophe, left and rigth ' +
                        'parenthesis, plus sign, comma, hyphen, ' +
                        'dot, slash, colon, equal sign, ' +
                        'question mark');
                }
                return this._createEncoderBuffer(str);
            } else if (/str$/.test(tag)) {
                return this._createEncoderBuffer(str);
            } else if (tag === 'objDesc') {
                return this._createEncoderBuffer(str);
            } else {
                return this.reporter.error('Encoding of string type: ' + tag +
                    ' unsupported');
            }
        };

        DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
            if (typeof id === 'string') {
                if (!values)
                    return this.reporter.error('string objid given, but no values map found');
                if (!values.hasOwnProperty(id))
                    return this.reporter.error('objid not found in values map');
                id = values[id].split(/[\s\.]+/g);
                for (var i = 0; i < id.length; i++)
                    id[i] |= 0;
            } else if (Array.isArray(id)) {
                id = id.slice();
                for (var i = 0; i < id.length; i++)
                    id[i] |= 0;
            }

            if (!Array.isArray(id)) {
                return this.reporter.error('objid() should be either array or string, ' +
                    'got: ' + JSON.stringify(id));
            }

            if (!relative) {
                if (id[1] >= 40)
                    return this.reporter.error('Second objid identifier OOB');
                id.splice(0, 2, id[0] * 40 + id[1]);
            }

            // Count number of octets
            var size = 0;
            for (var i = 0; i < id.length; i++) {
                var ident = id[i];
                for (size++; ident >= 0x80; ident >>= 7)
                    size++;
            }

            var objid = new Buffer(size);
            var offset = objid.length - 1;
            for (var i = id.length - 1; i >= 0; i--) {
                var ident = id[i];
                objid[offset--] = ident & 0x7f;
                while ((ident >>= 7) > 0)
                    objid[offset--] = 0x80 | (ident & 0x7f);
            }

            return this._createEncoderBuffer(objid);
        };

        function two(num) {
            if (num < 10)
                return '0' + num;
            else
                return num;
        }

        DERNode.prototype._encodeTime = function encodeTime(time, tag) {
            var str;
            var date = new Date(time);

            if (tag === 'gentime') {
                str = [
                    two(date.getFullYear()),
                    two(date.getUTCMonth() + 1),
                    two(date.getUTCDate()),
                    two(date.getUTCHours()),
                    two(date.getUTCMinutes()),
                    two(date.getUTCSeconds()),
                    'Z'
                ].join('');
            } else if (tag === 'utctime') {
                str = [
                    two(date.getFullYear() % 100),
                    two(date.getUTCMonth() + 1),
                    two(date.getUTCDate()),
                    two(date.getUTCHours()),
                    two(date.getUTCMinutes()),
                    two(date.getUTCSeconds()),
                    'Z'
                ].join('');
            } else {
                this.reporter.error('Encoding ' + tag + ' time is not supported yet');
            }

            return this._encodeStr(str, 'octstr');
        };

        DERNode.prototype._encodeNull = function encodeNull() {
            return this._createEncoderBuffer('');
        };

        DERNode.prototype._encodeInt = function encodeInt(num, values) {
            if (typeof num === 'string') {
                if (!values)
                    return this.reporter.error('String int or enum given, but no values map');
                if (!values.hasOwnProperty(num)) {
                    return this.reporter.error('Values map doesn\'t contain: ' +
                        JSON.stringify(num));
                }
                num = values[num];
            }

            // Bignum, assume big endian
            if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
                var numArray = num.toArray();
                if (!num.sign && numArray[0] & 0x80) {
                    numArray.unshift(0);
                }
                num = new Buffer(numArray);
            }

            if (Buffer.isBuffer(num)) {
                var size = num.length;
                if (num.length === 0)
                    size++;

                var out = new Buffer(size);
                num.copy(out);
                if (num.length === 0)
                    out[0] = 0
                return this._createEncoderBuffer(out);
            }

            if (num < 0x80)
                return this._createEncoderBuffer(num);

            if (num < 0x100)
                return this._createEncoderBuffer([0, num]);

            var size = 1;
            for (var i = num; i >= 0x100; i >>= 8)
                size++;

            var out = new Array(size);
            for (var i = out.length - 1; i >= 0; i--) {
                out[i] = num & 0xff;
                num >>= 8;
            }
            if(out[0] & 0x80) {
                out.unshift(0);
            }

            return this._createEncoderBuffer(new Buffer(out));
        };

        DERNode.prototype._encodeBool = function encodeBool(value) {
            return this._createEncoderBuffer(value ? 0xff : 0);
        };

        DERNode.prototype._use = function use(entity, obj) {
            if (typeof entity === 'function')
                entity = entity(obj);
            return entity._getEncoder('der').tree;
        };

        DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
            var state = this._baseState;
            var i;
            if (state['default'] === null)
                return false;

            var data = dataBuffer.join();
            if (state.defaultBuffer === undefined)
                state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

            if (data.length !== state.defaultBuffer.length)
                return false;

            for (i=0; i < data.length; i++)
                if (data[i] !== state.defaultBuffer[i])
                    return false;

            return true;
        };

// Utility methods

        function encodeTag(tag, primitive, cls, reporter) {
            var res;

            if (tag === 'seqof')
                tag = 'seq';
            else if (tag === 'setof')
                tag = 'set';

            if (der.tagByName.hasOwnProperty(tag))
                res = der.tagByName[tag];
            else if (typeof tag === 'number' && (tag | 0) === tag)
                res = tag;
            else
                return reporter.error('Unknown tag: ' + tag);

            if (res >= 0x1f)
                return reporter.error('Multi-octet tag encoding unsupported');

            if (!primitive)
                res |= 0x20;

            res |= (der.tagClassByName[cls || 'universal'] << 6);

            return res;
        }

    },{"../../asn1":7,"buffer":68,"inherits":140}],19:[function(require,module,exports){
        var encoders = exports;

        encoders.der = require('./der');
        encoders.pem = require('./pem');

    },{"./der":18,"./pem":20}],20:[function(require,module,exports){
        var inherits = require('inherits');

        var DEREncoder = require('./der');

        function PEMEncoder(entity) {
            DEREncoder.call(this, entity);
            this.enc = 'pem';
        };
        inherits(PEMEncoder, DEREncoder);
        module.exports = PEMEncoder;

        PEMEncoder.prototype.encode = function encode(data, options) {
            var buf = DEREncoder.prototype.encode.call(this, data);

            var p = buf.toString('base64');
            var out = [ '-----BEGIN ' + options.label + '-----' ];
            for (var i = 0; i < p.length; i += 64)
                out.push(p.slice(i, i + 64));
            out.push('-----END ' + options.label + '-----');
            return out.join('\n');
        };

    },{"./der":18,"inherits":140}],21:[function(require,module,exports){
        'use strict'

        exports.byteLength = byteLength
        exports.toByteArray = toByteArray
        exports.fromByteArray = fromByteArray

        var lookup = []
        var revLookup = []
        var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

        var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
        for (var i = 0, len = code.length; i < len; ++i) {
            lookup[i] = code[i]
            revLookup[code.charCodeAt(i)] = i
        }

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
        revLookup['-'.charCodeAt(0)] = 62
        revLookup['_'.charCodeAt(0)] = 63

        function getLens (b64) {
            var len = b64.length

            if (len % 4 > 0) {
                throw new Error('Invalid string. Length must be a multiple of 4')
            }

            // Trim off extra bytes after placeholder bytes are found
            // See: https://github.com/beatgammit/base64-js/issues/42
            var validLen = b64.indexOf('=')
            if (validLen === -1) validLen = len

            var placeHoldersLen = validLen === len
                ? 0
                : 4 - (validLen % 4)

            return [validLen, placeHoldersLen]
        }

// base64 is 4/3 + up to two characters of the original data
        function byteLength (b64) {
            var lens = getLens(b64)
            var validLen = lens[0]
            var placeHoldersLen = lens[1]
            return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
        }

        function _byteLength (b64, validLen, placeHoldersLen) {
            return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
        }

        function toByteArray (b64) {
            var tmp
            var lens = getLens(b64)
            var validLen = lens[0]
            var placeHoldersLen = lens[1]

            var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

            var curByte = 0

            // if there are placeholders, only get up to the last complete 4 chars
            var len = placeHoldersLen > 0
                ? validLen - 4
                : validLen

            var i
            for (i = 0; i < len; i += 4) {
                tmp =
                    (revLookup[b64.charCodeAt(i)] << 18) |
                    (revLookup[b64.charCodeAt(i + 1)] << 12) |
                    (revLookup[b64.charCodeAt(i + 2)] << 6) |
                    revLookup[b64.charCodeAt(i + 3)]
                arr[curByte++] = (tmp >> 16) & 0xFF
                arr[curByte++] = (tmp >> 8) & 0xFF
                arr[curByte++] = tmp & 0xFF
            }

            if (placeHoldersLen === 2) {
                tmp =
                    (revLookup[b64.charCodeAt(i)] << 2) |
                    (revLookup[b64.charCodeAt(i + 1)] >> 4)
                arr[curByte++] = tmp & 0xFF
            }

            if (placeHoldersLen === 1) {
                tmp =
                    (revLookup[b64.charCodeAt(i)] << 10) |
                    (revLookup[b64.charCodeAt(i + 1)] << 4) |
                    (revLookup[b64.charCodeAt(i + 2)] >> 2)
                arr[curByte++] = (tmp >> 8) & 0xFF
                arr[curByte++] = tmp & 0xFF
            }

            return arr
        }

        function tripletToBase64 (num) {
            return lookup[num >> 18 & 0x3F] +
                lookup[num >> 12 & 0x3F] +
                lookup[num >> 6 & 0x3F] +
                lookup[num & 0x3F]
        }

        function encodeChunk (uint8, start, end) {
            var tmp
            var output = []
            for (var i = start; i < end; i += 3) {
                tmp =
                    ((uint8[i] << 16) & 0xFF0000) +
                    ((uint8[i + 1] << 8) & 0xFF00) +
                    (uint8[i + 2] & 0xFF)
                output.push(tripletToBase64(tmp))
            }
            return output.join('')
        }

        function fromByteArray (uint8) {
            var tmp
            var len = uint8.length
            var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
            var parts = []
            var maxChunkLength = 16383 // must be multiple of 3

            // go through the array every three bytes, we'll deal with trailing stuff later
            for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
                parts.push(encodeChunk(
                    uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
                ))
            }

            // pad the end with zeros, but make sure to not forget the extra bytes
            if (extraBytes === 1) {
                tmp = uint8[len - 1]
                parts.push(
                    lookup[tmp >> 2] +
                    lookup[(tmp << 4) & 0x3F] +
                    '=='
                )
            } else if (extraBytes === 2) {
                tmp = (uint8[len - 2] << 8) + uint8[len - 1]
                parts.push(
                    lookup[tmp >> 10] +
                    lookup[(tmp >> 4) & 0x3F] +
                    lookup[(tmp << 2) & 0x3F] +
                    '='
                )
            }

            return parts.join('')
        }

    },{}],22:[function(require,module,exports){
        (function (module, exports) {
            'use strict';

            // Utils
            function assert (val, msg) {
                if (!val) throw new Error(msg || 'Assertion failed');
            }

            // Could use `inherits` module, but don't want to move from single file
            // architecture yet.
            function inherits (ctor, superCtor) {
                ctor.super_ = superCtor;
                var TempCtor = function () {};
                TempCtor.prototype = superCtor.prototype;
                ctor.prototype = new TempCtor();
                ctor.prototype.constructor = ctor;
            }

            // BN

            function BN (number, base, endian) {
                if (BN.isBN(number)) {
                    return number;
                }

                this.negative = 0;
                this.words = null;
                this.length = 0;

                // Reduction context
                this.red = null;

                if (number !== null) {
                    if (base === 'le' || base === 'be') {
                        endian = base;
                        base = 10;
                    }

                    this._init(number || 0, base || 10, endian || 'be');
                }
            }
            if (typeof module === 'object') {
                module.exports = BN;
            } else {
                exports.BN = BN;
            }

            BN.BN = BN;
            BN.wordSize = 26;

            var Buffer;
            try {
                Buffer = require('buffer').Buffer;
            } catch (e) {
            }

            BN.isBN = function isBN (num) {
                if (num instanceof BN) {
                    return true;
                }

                return num !== null && typeof num === 'object' &&
                    num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
            };

            BN.max = function max (left, right) {
                if (left.cmp(right) > 0) return left;
                return right;
            };

            BN.min = function min (left, right) {
                if (left.cmp(right) < 0) return left;
                return right;
            };

            BN.prototype._init = function init (number, base, endian) {
                if (typeof number === 'number') {
                    return this._initNumber(number, base, endian);
                }

                if (typeof number === 'object') {
                    return this._initArray(number, base, endian);
                }

                if (base === 'hex') {
                    base = 16;
                }
                assert(base === (base | 0) && base >= 2 && base <= 36);

                number = number.toString().replace(/\s+/g, '');
                var start = 0;
                if (number[0] === '-') {
                    start++;
                }

                if (base === 16) {
                    this._parseHex(number, start);
                } else {
                    this._parseBase(number, base, start);
                }

                if (number[0] === '-') {
                    this.negative = 1;
                }

                this.strip();

                if (endian !== 'le') return;

                this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initNumber = function _initNumber (number, base, endian) {
                if (number < 0) {
                    this.negative = 1;
                    number = -number;
                }
                if (number < 0x4000000) {
                    this.words = [ number & 0x3ffffff ];
                    this.length = 1;
                } else if (number < 0x10000000000000) {
                    this.words = [
                        number & 0x3ffffff,
                        (number / 0x4000000) & 0x3ffffff
                    ];
                    this.length = 2;
                } else {
                    assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
                    this.words = [
                        number & 0x3ffffff,
                        (number / 0x4000000) & 0x3ffffff,
                        1
                    ];
                    this.length = 3;
                }

                if (endian !== 'le') return;

                // Reverse the bytes
                this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initArray = function _initArray (number, base, endian) {
                // Perhaps a Uint8Array
                assert(typeof number.length === 'number');
                if (number.length <= 0) {
                    this.words = [ 0 ];
                    this.length = 1;
                    return this;
                }

                this.length = Math.ceil(number.length / 3);
                this.words = new Array(this.length);
                for (var i = 0; i < this.length; i++) {
                    this.words[i] = 0;
                }

                var j, w;
                var off = 0;
                if (endian === 'be') {
                    for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
                        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
                        this.words[j] |= (w << off) & 0x3ffffff;
                        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                        off += 24;
                        if (off >= 26) {
                            off -= 26;
                            j++;
                        }
                    }
                } else if (endian === 'le') {
                    for (i = 0, j = 0; i < number.length; i += 3) {
                        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
                        this.words[j] |= (w << off) & 0x3ffffff;
                        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                        off += 24;
                        if (off >= 26) {
                            off -= 26;
                            j++;
                        }
                    }
                }
                return this.strip();
            };

            function parseHex (str, start, end) {
                var r = 0;
                var len = Math.min(str.length, end);
                for (var i = start; i < len; i++) {
                    var c = str.charCodeAt(i) - 48;

                    r <<= 4;

                    // 'a' - 'f'
                    if (c >= 49 && c <= 54) {
                        r |= c - 49 + 0xa;

                        // 'A' - 'F'
                    } else if (c >= 17 && c <= 22) {
                        r |= c - 17 + 0xa;

                        // '0' - '9'
                    } else {
                        r |= c & 0xf;
                    }
                }
                return r;
            }

            BN.prototype._parseHex = function _parseHex (number, start) {
                // Create possibly bigger array to ensure that it fits the number
                this.length = Math.ceil((number.length - start) / 6);
                this.words = new Array(this.length);
                for (var i = 0; i < this.length; i++) {
                    this.words[i] = 0;
                }

                var j, w;
                // Scan 24-bit chunks and add them to the number
                var off = 0;
                for (i = number.length - 6, j = 0; i >= start; i -= 6) {
                    w = parseHex(number, i, i + 6);
                    this.words[j] |= (w << off) & 0x3ffffff;
                    // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
                    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
                    off += 24;
                    if (off >= 26) {
                        off -= 26;
                        j++;
                    }
                }
                if (i + 6 !== start) {
                    w = parseHex(number, start, i + 6);
                    this.words[j] |= (w << off) & 0x3ffffff;
                    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
                }
                this.strip();
            };

            function parseBase (str, start, end, mul) {
                var r = 0;
                var len = Math.min(str.length, end);
                for (var i = start; i < len; i++) {
                    var c = str.charCodeAt(i) - 48;

                    r *= mul;

                    // 'a'
                    if (c >= 49) {
                        r += c - 49 + 0xa;

                        // 'A'
                    } else if (c >= 17) {
                        r += c - 17 + 0xa;

                        // '0' - '9'
                    } else {
                        r += c;
                    }
                }
                return r;
            }

            BN.prototype._parseBase = function _parseBase (number, base, start) {
                // Initialize as zero
                this.words = [ 0 ];
                this.length = 1;

                // Find length of limb in base
                for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
                    limbLen++;
                }
                limbLen--;
                limbPow = (limbPow / base) | 0;

                var total = number.length - start;
                var mod = total % limbLen;
                var end = Math.min(total, total - mod) + start;

                var word = 0;
                for (var i = start; i < end; i += limbLen) {
                    word = parseBase(number, i, i + limbLen, base);

                    this.imuln(limbPow);
                    if (this.words[0] + word < 0x4000000) {
                        this.words[0] += word;
                    } else {
                        this._iaddn(word);
                    }
                }

                if (mod !== 0) {
                    var pow = 1;
                    word = parseBase(number, i, number.length, base);

                    for (i = 0; i < mod; i++) {
                        pow *= base;
                    }

                    this.imuln(pow);
                    if (this.words[0] + word < 0x4000000) {
                        this.words[0] += word;
                    } else {
                        this._iaddn(word);
                    }
                }
            };

            BN.prototype.copy = function copy (dest) {
                dest.words = new Array(this.length);
                for (var i = 0; i < this.length; i++) {
                    dest.words[i] = this.words[i];
                }
                dest.length = this.length;
                dest.negative = this.negative;
                dest.red = this.red;
            };

            BN.prototype.clone = function clone () {
                var r = new BN(null);
                this.copy(r);
                return r;
            };

            BN.prototype._expand = function _expand (size) {
                while (this.length < size) {
                    this.words[this.length++] = 0;
                }
                return this;
            };

            // Remove leading `0` from `this`
            BN.prototype.strip = function strip () {
                while (this.length > 1 && this.words[this.length - 1] === 0) {
                    this.length--;
                }
                return this._normSign();
            };

            BN.prototype._normSign = function _normSign () {
                // -0 = 0
                if (this.length === 1 && this.words[0] === 0) {
                    this.negative = 0;
                }
                return this;
            };

            BN.prototype.inspect = function inspect () {
                return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
            };

            /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

            var zeros = [
                '',
                '0',
                '00',
                '000',
                '0000',
                '00000',
                '000000',
                '0000000',
                '00000000',
                '000000000',
                '0000000000',
                '00000000000',
                '000000000000',
                '0000000000000',
                '00000000000000',
                '000000000000000',
                '0000000000000000',
                '00000000000000000',
                '000000000000000000',
                '0000000000000000000',
                '00000000000000000000',
                '000000000000000000000',
                '0000000000000000000000',
                '00000000000000000000000',
                '000000000000000000000000',
                '0000000000000000000000000'
            ];

            var groupSizes = [
                0, 0,
                25, 16, 12, 11, 10, 9, 8,
                8, 7, 7, 7, 7, 6, 6,
                6, 6, 6, 6, 6, 5, 5,
                5, 5, 5, 5, 5, 5, 5,
                5, 5, 5, 5, 5, 5, 5
            ];

            var groupBases = [
                0, 0,
                33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
                43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
                16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
                6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
                24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
            ];

            BN.prototype.toString = function toString (base, padding) {
                base = base || 10;
                padding = padding | 0 || 1;

                var out;
                if (base === 16 || base === 'hex') {
                    out = '';
                    var off = 0;
                    var carry = 0;
                    for (var i = 0; i < this.length; i++) {
                        var w = this.words[i];
                        var word = (((w << off) | carry) & 0xffffff).toString(16);
                        carry = (w >>> (24 - off)) & 0xffffff;
                        if (carry !== 0 || i !== this.length - 1) {
                            out = zeros[6 - word.length] + word + out;
                        } else {
                            out = word + out;
                        }
                        off += 2;
                        if (off >= 26) {
                            off -= 26;
                            i--;
                        }
                    }
                    if (carry !== 0) {
                        out = carry.toString(16) + out;
                    }
                    while (out.length % padding !== 0) {
                        out = '0' + out;
                    }
                    if (this.negative !== 0) {
                        out = '-' + out;
                    }
                    return out;
                }

                if (base === (base | 0) && base >= 2 && base <= 36) {
                    // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
                    var groupSize = groupSizes[base];
                    // var groupBase = Math.pow(base, groupSize);
                    var groupBase = groupBases[base];
                    out = '';
                    var c = this.clone();
                    c.negative = 0;
                    while (!c.isZero()) {
                        var r = c.modn(groupBase).toString(base);
                        c = c.idivn(groupBase);

                        if (!c.isZero()) {
                            out = zeros[groupSize - r.length] + r + out;
                        } else {
                            out = r + out;
                        }
                    }
                    if (this.isZero()) {
                        out = '0' + out;
                    }
                    while (out.length % padding !== 0) {
                        out = '0' + out;
                    }
                    if (this.negative !== 0) {
                        out = '-' + out;
                    }
                    return out;
                }

                assert(false, 'Base should be between 2 and 36');
            };

            BN.prototype.toNumber = function toNumber () {
                var ret = this.words[0];
                if (this.length === 2) {
                    ret += this.words[1] * 0x4000000;
                } else if (this.length === 3 && this.words[2] === 0x01) {
                    // NOTE: at this stage it is known that the top bit is set
                    ret += 0x10000000000000 + (this.words[1] * 0x4000000);
                } else if (this.length > 2) {
                    assert(false, 'Number can only safely store up to 53 bits');
                }
                return (this.negative !== 0) ? -ret : ret;
            };

            BN.prototype.toJSON = function toJSON () {
                return this.toString(16);
            };

            BN.prototype.toBuffer = function toBuffer (endian, length) {
                assert(typeof Buffer !== 'undefined');
                return this.toArrayLike(Buffer, endian, length);
            };

            BN.prototype.toArray = function toArray (endian, length) {
                return this.toArrayLike(Array, endian, length);
            };

            BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
                var byteLength = this.byteLength();
                var reqLength = length || Math.max(1, byteLength);
                assert(byteLength <= reqLength, 'byte array longer than desired length');
                assert(reqLength > 0, 'Requested array length <= 0');

                this.strip();
                var littleEndian = endian === 'le';
                var res = new ArrayType(reqLength);

                var b, i;
                var q = this.clone();
                if (!littleEndian) {
                    // Assume big-endian
                    for (i = 0; i < reqLength - byteLength; i++) {
                        res[i] = 0;
                    }

                    for (i = 0; !q.isZero(); i++) {
                        b = q.andln(0xff);
                        q.iushrn(8);

                        res[reqLength - i - 1] = b;
                    }
                } else {
                    for (i = 0; !q.isZero(); i++) {
                        b = q.andln(0xff);
                        q.iushrn(8);

                        res[i] = b;
                    }

                    for (; i < reqLength; i++) {
                        res[i] = 0;
                    }
                }

                return res;
            };

            if (Math.clz32) {
                BN.prototype._countBits = function _countBits (w) {
                    return 32 - Math.clz32(w);
                };
            } else {
                BN.prototype._countBits = function _countBits (w) {
                    var t = w;
                    var r = 0;
                    if (t >= 0x1000) {
                        r += 13;
                        t >>>= 13;
                    }
                    if (t >= 0x40) {
                        r += 7;
                        t >>>= 7;
                    }
                    if (t >= 0x8) {
                        r += 4;
                        t >>>= 4;
                    }
                    if (t >= 0x02) {
                        r += 2;
                        t >>>= 2;
                    }
                    return r + t;
                };
            }

            BN.prototype._zeroBits = function _zeroBits (w) {
                // Short-cut
                if (w === 0) return 26;

                var t = w;
                var r = 0;
                if ((t & 0x1fff) === 0) {
                    r += 13;
                    t >>>= 13;
                }
                if ((t & 0x7f) === 0) {
                    r += 7;
                    t >>>= 7;
                }
                if ((t & 0xf) === 0) {
                    r += 4;
                    t >>>= 4;
                }
                if ((t & 0x3) === 0) {
                    r += 2;
                    t >>>= 2;
                }
                if ((t & 0x1) === 0) {
                    r++;
                }
                return r;
            };

            // Return number of used bits in a BN
            BN.prototype.bitLength = function bitLength () {
                var w = this.words[this.length - 1];
                var hi = this._countBits(w);
                return (this.length - 1) * 26 + hi;
            };

            function toBitArray (num) {
                var w = new Array(num.bitLength());

                for (var bit = 0; bit < w.length; bit++) {
                    var off = (bit / 26) | 0;
                    var wbit = bit % 26;

                    w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
                }

                return w;
            }

            // Number of trailing zero bits
            BN.prototype.zeroBits = function zeroBits () {
                if (this.isZero()) return 0;

                var r = 0;
                for (var i = 0; i < this.length; i++) {
                    var b = this._zeroBits(this.words[i]);
                    r += b;
                    if (b !== 26) break;
                }
                return r;
            };

            BN.prototype.byteLength = function byteLength () {
                return Math.ceil(this.bitLength() / 8);
            };

            BN.prototype.toTwos = function toTwos (width) {
                if (this.negative !== 0) {
                    return this.abs().inotn(width).iaddn(1);
                }
                return this.clone();
            };

            BN.prototype.fromTwos = function fromTwos (width) {
                if (this.testn(width - 1)) {
                    return this.notn(width).iaddn(1).ineg();
                }
                return this.clone();
            };

            BN.prototype.isNeg = function isNeg () {
                return this.negative !== 0;
            };

            // Return negative clone of `this`
            BN.prototype.neg = function neg () {
                return this.clone().ineg();
            };

            BN.prototype.ineg = function ineg () {
                if (!this.isZero()) {
                    this.negative ^= 1;
                }

                return this;
            };

            // Or `num` with `this` in-place
            BN.prototype.iuor = function iuor (num) {
                while (this.length < num.length) {
                    this.words[this.length++] = 0;
                }

                for (var i = 0; i < num.length; i++) {
                    this.words[i] = this.words[i] | num.words[i];
                }

                return this.strip();
            };

            BN.prototype.ior = function ior (num) {
                assert((this.negative | num.negative) === 0);
                return this.iuor(num);
            };

            // Or `num` with `this`
            BN.prototype.or = function or (num) {
                if (this.length > num.length) return this.clone().ior(num);
                return num.clone().ior(this);
            };

            BN.prototype.uor = function uor (num) {
                if (this.length > num.length) return this.clone().iuor(num);
                return num.clone().iuor(this);
            };

            // And `num` with `this` in-place
            BN.prototype.iuand = function iuand (num) {
                // b = min-length(num, this)
                var b;
                if (this.length > num.length) {
                    b = num;
                } else {
                    b = this;
                }

                for (var i = 0; i < b.length; i++) {
                    this.words[i] = this.words[i] & num.words[i];
                }

                this.length = b.length;

                return this.strip();
            };

            BN.prototype.iand = function iand (num) {
                assert((this.negative | num.negative) === 0);
                return this.iuand(num);
            };

            // And `num` with `this`
            BN.prototype.and = function and (num) {
                if (this.length > num.length) return this.clone().iand(num);
                return num.clone().iand(this);
            };

            BN.prototype.uand = function uand (num) {
                if (this.length > num.length) return this.clone().iuand(num);
                return num.clone().iuand(this);
            };

            // Xor `num` with `this` in-place
            BN.prototype.iuxor = function iuxor (num) {
                // a.length > b.length
                var a;
                var b;
                if (this.length > num.length) {
                    a = this;
                    b = num;
                } else {
                    a = num;
                    b = this;
                }

                for (var i = 0; i < b.length; i++) {
                    this.words[i] = a.words[i] ^ b.words[i];
                }

                if (this !== a) {
                    for (; i < a.length; i++) {
                        this.words[i] = a.words[i];
                    }
                }

                this.length = a.length;

                return this.strip();
            };

            BN.prototype.ixor = function ixor (num) {
                assert((this.negative | num.negative) === 0);
                return this.iuxor(num);
            };

            // Xor `num` with `this`
            BN.prototype.xor = function xor (num) {
                if (this.length > num.length) return this.clone().ixor(num);
                return num.clone().ixor(this);
            };

            BN.prototype.uxor = function uxor (num) {
                if (this.length > num.length) return this.clone().iuxor(num);
                return num.clone().iuxor(this);
            };

            // Not ``this`` with ``width`` bitwidth
            BN.prototype.inotn = function inotn (width) {
                assert(typeof width === 'number' && width >= 0);

                var bytesNeeded = Math.ceil(width / 26) | 0;
                var bitsLeft = width % 26;

                // Extend the buffer with leading zeroes
                this._expand(bytesNeeded);

                if (bitsLeft > 0) {
                    bytesNeeded--;
                }

                // Handle complete words
                for (var i = 0; i < bytesNeeded; i++) {
                    this.words[i] = ~this.words[i] & 0x3ffffff;
                }

                // Handle the residue
                if (bitsLeft > 0) {
                    this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
                }

                // And remove leading zeroes
                return this.strip();
            };

            BN.prototype.notn = function notn (width) {
                return this.clone().inotn(width);
            };

            // Set `bit` of `this`
            BN.prototype.setn = function setn (bit, val) {
                assert(typeof bit === 'number' && bit >= 0);

                var off = (bit / 26) | 0;
                var wbit = bit % 26;

                this._expand(off + 1);

                if (val) {
                    this.words[off] = this.words[off] | (1 << wbit);
                } else {
                    this.words[off] = this.words[off] & ~(1 << wbit);
                }

                return this.strip();
            };

            // Add `num` to `this` in-place
            BN.prototype.iadd = function iadd (num) {
                var r;

                // negative + positive
                if (this.negative !== 0 && num.negative === 0) {
                    this.negative = 0;
                    r = this.isub(num);
                    this.negative ^= 1;
                    return this._normSign();

                    // positive + negative
                } else if (this.negative === 0 && num.negative !== 0) {
                    num.negative = 0;
                    r = this.isub(num);
                    num.negative = 1;
                    return r._normSign();
                }

                // a.length > b.length
                var a, b;
                if (this.length > num.length) {
                    a = this;
                    b = num;
                } else {
                    a = num;
                    b = this;
                }

                var carry = 0;
                for (var i = 0; i < b.length; i++) {
                    r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
                    this.words[i] = r & 0x3ffffff;
                    carry = r >>> 26;
                }
                for (; carry !== 0 && i < a.length; i++) {
                    r = (a.words[i] | 0) + carry;
                    this.words[i] = r & 0x3ffffff;
                    carry = r >>> 26;
                }

                this.length = a.length;
                if (carry !== 0) {
                    this.words[this.length] = carry;
                    this.length++;
                    // Copy the rest of the words
                } else if (a !== this) {
                    for (; i < a.length; i++) {
                        this.words[i] = a.words[i];
                    }
                }

                return this;
            };

            // Add `num` to `this`
            BN.prototype.add = function add (num) {
                var res;
                if (num.negative !== 0 && this.negative === 0) {
                    num.negative = 0;
                    res = this.sub(num);
                    num.negative ^= 1;
                    return res;
                } else if (num.negative === 0 && this.negative !== 0) {
                    this.negative = 0;
                    res = num.sub(this);
                    this.negative = 1;
                    return res;
                }

                if (this.length > num.length) return this.clone().iadd(num);

                return num.clone().iadd(this);
            };

            // Subtract `num` from `this` in-place
            BN.prototype.isub = function isub (num) {
                // this - (-num) = this + num
                if (num.negative !== 0) {
                    num.negative = 0;
                    var r = this.iadd(num);
                    num.negative = 1;
                    return r._normSign();

                    // -this - num = -(this + num)
                } else if (this.negative !== 0) {
                    this.negative = 0;
                    this.iadd(num);
                    this.negative = 1;
                    return this._normSign();
                }

                // At this point both numbers are positive
                var cmp = this.cmp(num);

                // Optimization - zeroify
                if (cmp === 0) {
                    this.negative = 0;
                    this.length = 1;
                    this.words[0] = 0;
                    return this;
                }

                // a > b
                var a, b;
                if (cmp > 0) {
                    a = this;
                    b = num;
                } else {
                    a = num;
                    b = this;
                }

                var carry = 0;
                for (var i = 0; i < b.length; i++) {
                    r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
                    carry = r >> 26;
                    this.words[i] = r & 0x3ffffff;
                }
                for (; carry !== 0 && i < a.length; i++) {
                    r = (a.words[i] | 0) + carry;
                    carry = r >> 26;
                    this.words[i] = r & 0x3ffffff;
                }

                // Copy rest of the words
                if (carry === 0 && i < a.length && a !== this) {
                    for (; i < a.length; i++) {
                        this.words[i] = a.words[i];
                    }
                }

                this.length = Math.max(this.length, i);

                if (a !== this) {
                    this.negative = 1;
                }

                return this.strip();
            };

            // Subtract `num` from `this`
            BN.prototype.sub = function sub (num) {
                return this.clone().isub(num);
            };

            function smallMulTo (self, num, out) {
                out.negative = num.negative ^ self.negative;
                var len = (self.length + num.length) | 0;
                out.length = len;
                len = (len - 1) | 0;

                // Peel one iteration (compiler can't do it, because of code complexity)
                var a = self.words[0] | 0;
                var b = num.words[0] | 0;
                var r = a * b;

                var lo = r & 0x3ffffff;
                var carry = (r / 0x4000000) | 0;
                out.words[0] = lo;

                for (var k = 1; k < len; k++) {
                    // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                    // note that ncarry could be >= 0x3ffffff
                    var ncarry = carry >>> 26;
                    var rword = carry & 0x3ffffff;
                    var maxJ = Math.min(k, num.length - 1);
                    for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                        var i = (k - j) | 0;
                        a = self.words[i] | 0;
                        b = num.words[j] | 0;
                        r = a * b + rword;
                        ncarry += (r / 0x4000000) | 0;
                        rword = r & 0x3ffffff;
                    }
                    out.words[k] = rword | 0;
                    carry = ncarry | 0;
                }
                if (carry !== 0) {
                    out.words[k] = carry | 0;
                } else {
                    out.length--;
                }

                return out.strip();
            }

            // TODO(indutny): it may be reasonable to omit it for users who don't need
            // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
            // multiplication (like elliptic secp256k1).
            var comb10MulTo = function comb10MulTo (self, num, out) {
                var a = self.words;
                var b = num.words;
                var o = out.words;
                var c = 0;
                var lo;
                var mid;
                var hi;
                var a0 = a[0] | 0;
                var al0 = a0 & 0x1fff;
                var ah0 = a0 >>> 13;
                var a1 = a[1] | 0;
                var al1 = a1 & 0x1fff;
                var ah1 = a1 >>> 13;
                var a2 = a[2] | 0;
                var al2 = a2 & 0x1fff;
                var ah2 = a2 >>> 13;
                var a3 = a[3] | 0;
                var al3 = a3 & 0x1fff;
                var ah3 = a3 >>> 13;
                var a4 = a[4] | 0;
                var al4 = a4 & 0x1fff;
                var ah4 = a4 >>> 13;
                var a5 = a[5] | 0;
                var al5 = a5 & 0x1fff;
                var ah5 = a5 >>> 13;
                var a6 = a[6] | 0;
                var al6 = a6 & 0x1fff;
                var ah6 = a6 >>> 13;
                var a7 = a[7] | 0;
                var al7 = a7 & 0x1fff;
                var ah7 = a7 >>> 13;
                var a8 = a[8] | 0;
                var al8 = a8 & 0x1fff;
                var ah8 = a8 >>> 13;
                var a9 = a[9] | 0;
                var al9 = a9 & 0x1fff;
                var ah9 = a9 >>> 13;
                var b0 = b[0] | 0;
                var bl0 = b0 & 0x1fff;
                var bh0 = b0 >>> 13;
                var b1 = b[1] | 0;
                var bl1 = b1 & 0x1fff;
                var bh1 = b1 >>> 13;
                var b2 = b[2] | 0;
                var bl2 = b2 & 0x1fff;
                var bh2 = b2 >>> 13;
                var b3 = b[3] | 0;
                var bl3 = b3 & 0x1fff;
                var bh3 = b3 >>> 13;
                var b4 = b[4] | 0;
                var bl4 = b4 & 0x1fff;
                var bh4 = b4 >>> 13;
                var b5 = b[5] | 0;
                var bl5 = b5 & 0x1fff;
                var bh5 = b5 >>> 13;
                var b6 = b[6] | 0;
                var bl6 = b6 & 0x1fff;
                var bh6 = b6 >>> 13;
                var b7 = b[7] | 0;
                var bl7 = b7 & 0x1fff;
                var bh7 = b7 >>> 13;
                var b8 = b[8] | 0;
                var bl8 = b8 & 0x1fff;
                var bh8 = b8 >>> 13;
                var b9 = b[9] | 0;
                var bl9 = b9 & 0x1fff;
                var bh9 = b9 >>> 13;

                out.negative = self.negative ^ num.negative;
                out.length = 19;
                /* k = 0 */
                lo = Math.imul(al0, bl0);
                mid = Math.imul(al0, bh0);
                mid = (mid + Math.imul(ah0, bl0)) | 0;
                hi = Math.imul(ah0, bh0);
                var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
                w0 &= 0x3ffffff;
                /* k = 1 */
                lo = Math.imul(al1, bl0);
                mid = Math.imul(al1, bh0);
                mid = (mid + Math.imul(ah1, bl0)) | 0;
                hi = Math.imul(ah1, bh0);
                lo = (lo + Math.imul(al0, bl1)) | 0;
                mid = (mid + Math.imul(al0, bh1)) | 0;
                mid = (mid + Math.imul(ah0, bl1)) | 0;
                hi = (hi + Math.imul(ah0, bh1)) | 0;
                var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
                w1 &= 0x3ffffff;
                /* k = 2 */
                lo = Math.imul(al2, bl0);
                mid = Math.imul(al2, bh0);
                mid = (mid + Math.imul(ah2, bl0)) | 0;
                hi = Math.imul(ah2, bh0);
                lo = (lo + Math.imul(al1, bl1)) | 0;
                mid = (mid + Math.imul(al1, bh1)) | 0;
                mid = (mid + Math.imul(ah1, bl1)) | 0;
                hi = (hi + Math.imul(ah1, bh1)) | 0;
                lo = (lo + Math.imul(al0, bl2)) | 0;
                mid = (mid + Math.imul(al0, bh2)) | 0;
                mid = (mid + Math.imul(ah0, bl2)) | 0;
                hi = (hi + Math.imul(ah0, bh2)) | 0;
                var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
                w2 &= 0x3ffffff;
                /* k = 3 */
                lo = Math.imul(al3, bl0);
                mid = Math.imul(al3, bh0);
                mid = (mid + Math.imul(ah3, bl0)) | 0;
                hi = Math.imul(ah3, bh0);
                lo = (lo + Math.imul(al2, bl1)) | 0;
                mid = (mid + Math.imul(al2, bh1)) | 0;
                mid = (mid + Math.imul(ah2, bl1)) | 0;
                hi = (hi + Math.imul(ah2, bh1)) | 0;
                lo = (lo + Math.imul(al1, bl2)) | 0;
                mid = (mid + Math.imul(al1, bh2)) | 0;
                mid = (mid + Math.imul(ah1, bl2)) | 0;
                hi = (hi + Math.imul(ah1, bh2)) | 0;
                lo = (lo + Math.imul(al0, bl3)) | 0;
                mid = (mid + Math.imul(al0, bh3)) | 0;
                mid = (mid + Math.imul(ah0, bl3)) | 0;
                hi = (hi + Math.imul(ah0, bh3)) | 0;
                var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
                w3 &= 0x3ffffff;
                /* k = 4 */
                lo = Math.imul(al4, bl0);
                mid = Math.imul(al4, bh0);
                mid = (mid + Math.imul(ah4, bl0)) | 0;
                hi = Math.imul(ah4, bh0);
                lo = (lo + Math.imul(al3, bl1)) | 0;
                mid = (mid + Math.imul(al3, bh1)) | 0;
                mid = (mid + Math.imul(ah3, bl1)) | 0;
                hi = (hi + Math.imul(ah3, bh1)) | 0;
                lo = (lo + Math.imul(al2, bl2)) | 0;
                mid = (mid + Math.imul(al2, bh2)) | 0;
                mid = (mid + Math.imul(ah2, bl2)) | 0;
                hi = (hi + Math.imul(ah2, bh2)) | 0;
                lo = (lo + Math.imul(al1, bl3)) | 0;
                mid = (mid + Math.imul(al1, bh3)) | 0;
                mid = (mid + Math.imul(ah1, bl3)) | 0;
                hi = (hi + Math.imul(ah1, bh3)) | 0;
                lo = (lo + Math.imul(al0, bl4)) | 0;
                mid = (mid + Math.imul(al0, bh4)) | 0;
                mid = (mid + Math.imul(ah0, bl4)) | 0;
                hi = (hi + Math.imul(ah0, bh4)) | 0;
                var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
                w4 &= 0x3ffffff;
                /* k = 5 */
                lo = Math.imul(al5, bl0);
                mid = Math.imul(al5, bh0);
                mid = (mid + Math.imul(ah5, bl0)) | 0;
                hi = Math.imul(ah5, bh0);
                lo = (lo + Math.imul(al4, bl1)) | 0;
                mid = (mid + Math.imul(al4, bh1)) | 0;
                mid = (mid + Math.imul(ah4, bl1)) | 0;
                hi = (hi + Math.imul(ah4, bh1)) | 0;
                lo = (lo + Math.imul(al3, bl2)) | 0;
                mid = (mid + Math.imul(al3, bh2)) | 0;
                mid = (mid + Math.imul(ah3, bl2)) | 0;
                hi = (hi + Math.imul(ah3, bh2)) | 0;
                lo = (lo + Math.imul(al2, bl3)) | 0;
                mid = (mid + Math.imul(al2, bh3)) | 0;
                mid = (mid + Math.imul(ah2, bl3)) | 0;
                hi = (hi + Math.imul(ah2, bh3)) | 0;
                lo = (lo + Math.imul(al1, bl4)) | 0;
                mid = (mid + Math.imul(al1, bh4)) | 0;
                mid = (mid + Math.imul(ah1, bl4)) | 0;
                hi = (hi + Math.imul(ah1, bh4)) | 0;
                lo = (lo + Math.imul(al0, bl5)) | 0;
                mid = (mid + Math.imul(al0, bh5)) | 0;
                mid = (mid + Math.imul(ah0, bl5)) | 0;
                hi = (hi + Math.imul(ah0, bh5)) | 0;
                var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
                w5 &= 0x3ffffff;
                /* k = 6 */
                lo = Math.imul(al6, bl0);
                mid = Math.imul(al6, bh0);
                mid = (mid + Math.imul(ah6, bl0)) | 0;
                hi = Math.imul(ah6, bh0);
                lo = (lo + Math.imul(al5, bl1)) | 0;
                mid = (mid + Math.imul(al5, bh1)) | 0;
                mid = (mid + Math.imul(ah5, bl1)) | 0;
                hi = (hi + Math.imul(ah5, bh1)) | 0;
                lo = (lo + Math.imul(al4, bl2)) | 0;
                mid = (mid + Math.imul(al4, bh2)) | 0;
                mid = (mid + Math.imul(ah4, bl2)) | 0;
                hi = (hi + Math.imul(ah4, bh2)) | 0;
                lo = (lo + Math.imul(al3, bl3)) | 0;
                mid = (mid + Math.imul(al3, bh3)) | 0;
                mid = (mid + Math.imul(ah3, bl3)) | 0;
                hi = (hi + Math.imul(ah3, bh3)) | 0;
                lo = (lo + Math.imul(al2, bl4)) | 0;
                mid = (mid + Math.imul(al2, bh4)) | 0;
                mid = (mid + Math.imul(ah2, bl4)) | 0;
                hi = (hi + Math.imul(ah2, bh4)) | 0;
                lo = (lo + Math.imul(al1, bl5)) | 0;
                mid = (mid + Math.imul(al1, bh5)) | 0;
                mid = (mid + Math.imul(ah1, bl5)) | 0;
                hi = (hi + Math.imul(ah1, bh5)) | 0;
                lo = (lo + Math.imul(al0, bl6)) | 0;
                mid = (mid + Math.imul(al0, bh6)) | 0;
                mid = (mid + Math.imul(ah0, bl6)) | 0;
                hi = (hi + Math.imul(ah0, bh6)) | 0;
                var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
                w6 &= 0x3ffffff;
                /* k = 7 */
                lo = Math.imul(al7, bl0);
                mid = Math.imul(al7, bh0);
                mid = (mid + Math.imul(ah7, bl0)) | 0;
                hi = Math.imul(ah7, bh0);
                lo = (lo + Math.imul(al6, bl1)) | 0;
                mid = (mid + Math.imul(al6, bh1)) | 0;
                mid = (mid + Math.imul(ah6, bl1)) | 0;
                hi = (hi + Math.imul(ah6, bh1)) | 0;
                lo = (lo + Math.imul(al5, bl2)) | 0;
                mid = (mid + Math.imul(al5, bh2)) | 0;
                mid = (mid + Math.imul(ah5, bl2)) | 0;
                hi = (hi + Math.imul(ah5, bh2)) | 0;
                lo = (lo + Math.imul(al4, bl3)) | 0;
                mid = (mid + Math.imul(al4, bh3)) | 0;
                mid = (mid + Math.imul(ah4, bl3)) | 0;
                hi = (hi + Math.imul(ah4, bh3)) | 0;
                lo = (lo + Math.imul(al3, bl4)) | 0;
                mid = (mid + Math.imul(al3, bh4)) | 0;
                mid = (mid + Math.imul(ah3, bl4)) | 0;
                hi = (hi + Math.imul(ah3, bh4)) | 0;
                lo = (lo + Math.imul(al2, bl5)) | 0;
                mid = (mid + Math.imul(al2, bh5)) | 0;
                mid = (mid + Math.imul(ah2, bl5)) | 0;
                hi = (hi + Math.imul(ah2, bh5)) | 0;
                lo = (lo + Math.imul(al1, bl6)) | 0;
                mid = (mid + Math.imul(al1, bh6)) | 0;
                mid = (mid + Math.imul(ah1, bl6)) | 0;
                hi = (hi + Math.imul(ah1, bh6)) | 0;
                lo = (lo + Math.imul(al0, bl7)) | 0;
                mid = (mid + Math.imul(al0, bh7)) | 0;
                mid = (mid + Math.imul(ah0, bl7)) | 0;
                hi = (hi + Math.imul(ah0, bh7)) | 0;
                var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
                w7 &= 0x3ffffff;
                /* k = 8 */
                lo = Math.imul(al8, bl0);
                mid = Math.imul(al8, bh0);
                mid = (mid + Math.imul(ah8, bl0)) | 0;
                hi = Math.imul(ah8, bh0);
                lo = (lo + Math.imul(al7, bl1)) | 0;
                mid = (mid + Math.imul(al7, bh1)) | 0;
                mid = (mid + Math.imul(ah7, bl1)) | 0;
                hi = (hi + Math.imul(ah7, bh1)) | 0;
                lo = (lo + Math.imul(al6, bl2)) | 0;
                mid = (mid + Math.imul(al6, bh2)) | 0;
                mid = (mid + Math.imul(ah6, bl2)) | 0;
                hi = (hi + Math.imul(ah6, bh2)) | 0;
                lo = (lo + Math.imul(al5, bl3)) | 0;
                mid = (mid + Math.imul(al5, bh3)) | 0;
                mid = (mid + Math.imul(ah5, bl3)) | 0;
                hi = (hi + Math.imul(ah5, bh3)) | 0;
                lo = (lo + Math.imul(al4, bl4)) | 0;
                mid = (mid + Math.imul(al4, bh4)) | 0;
                mid = (mid + Math.imul(ah4, bl4)) | 0;
                hi = (hi + Math.imul(ah4, bh4)) | 0;
                lo = (lo + Math.imul(al3, bl5)) | 0;
                mid = (mid + Math.imul(al3, bh5)) | 0;
                mid = (mid + Math.imul(ah3, bl5)) | 0;
                hi = (hi + Math.imul(ah3, bh5)) | 0;
                lo = (lo + Math.imul(al2, bl6)) | 0;
                mid = (mid + Math.imul(al2, bh6)) | 0;
                mid = (mid + Math.imul(ah2, bl6)) | 0;
                hi = (hi + Math.imul(ah2, bh6)) | 0;
                lo = (lo + Math.imul(al1, bl7)) | 0;
                mid = (mid + Math.imul(al1, bh7)) | 0;
                mid = (mid + Math.imul(ah1, bl7)) | 0;
                hi = (hi + Math.imul(ah1, bh7)) | 0;
                lo = (lo + Math.imul(al0, bl8)) | 0;
                mid = (mid + Math.imul(al0, bh8)) | 0;
                mid = (mid + Math.imul(ah0, bl8)) | 0;
                hi = (hi + Math.imul(ah0, bh8)) | 0;
                var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
                w8 &= 0x3ffffff;
                /* k = 9 */
                lo = Math.imul(al9, bl0);
                mid = Math.imul(al9, bh0);
                mid = (mid + Math.imul(ah9, bl0)) | 0;
                hi = Math.imul(ah9, bh0);
                lo = (lo + Math.imul(al8, bl1)) | 0;
                mid = (mid + Math.imul(al8, bh1)) | 0;
                mid = (mid + Math.imul(ah8, bl1)) | 0;
                hi = (hi + Math.imul(ah8, bh1)) | 0;
                lo = (lo + Math.imul(al7, bl2)) | 0;
                mid = (mid + Math.imul(al7, bh2)) | 0;
                mid = (mid + Math.imul(ah7, bl2)) | 0;
                hi = (hi + Math.imul(ah7, bh2)) | 0;
                lo = (lo + Math.imul(al6, bl3)) | 0;
                mid = (mid + Math.imul(al6, bh3)) | 0;
                mid = (mid + Math.imul(ah6, bl3)) | 0;
                hi = (hi + Math.imul(ah6, bh3)) | 0;
                lo = (lo + Math.imul(al5, bl4)) | 0;
                mid = (mid + Math.imul(al5, bh4)) | 0;
                mid = (mid + Math.imul(ah5, bl4)) | 0;
                hi = (hi + Math.imul(ah5, bh4)) | 0;
                lo = (lo + Math.imul(al4, bl5)) | 0;
                mid = (mid + Math.imul(al4, bh5)) | 0;
                mid = (mid + Math.imul(ah4, bl5)) | 0;
                hi = (hi + Math.imul(ah4, bh5)) | 0;
                lo = (lo + Math.imul(al3, bl6)) | 0;
                mid = (mid + Math.imul(al3, bh6)) | 0;
                mid = (mid + Math.imul(ah3, bl6)) | 0;
                hi = (hi + Math.imul(ah3, bh6)) | 0;
                lo = (lo + Math.imul(al2, bl7)) | 0;
                mid = (mid + Math.imul(al2, bh7)) | 0;
                mid = (mid + Math.imul(ah2, bl7)) | 0;
                hi = (hi + Math.imul(ah2, bh7)) | 0;
                lo = (lo + Math.imul(al1, bl8)) | 0;
                mid = (mid + Math.imul(al1, bh8)) | 0;
                mid = (mid + Math.imul(ah1, bl8)) | 0;
                hi = (hi + Math.imul(ah1, bh8)) | 0;
                lo = (lo + Math.imul(al0, bl9)) | 0;
                mid = (mid + Math.imul(al0, bh9)) | 0;
                mid = (mid + Math.imul(ah0, bl9)) | 0;
                hi = (hi + Math.imul(ah0, bh9)) | 0;
                var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
                w9 &= 0x3ffffff;
                /* k = 10 */
                lo = Math.imul(al9, bl1);
                mid = Math.imul(al9, bh1);
                mid = (mid + Math.imul(ah9, bl1)) | 0;
                hi = Math.imul(ah9, bh1);
                lo = (lo + Math.imul(al8, bl2)) | 0;
                mid = (mid + Math.imul(al8, bh2)) | 0;
                mid = (mid + Math.imul(ah8, bl2)) | 0;
                hi = (hi + Math.imul(ah8, bh2)) | 0;
                lo = (lo + Math.imul(al7, bl3)) | 0;
                mid = (mid + Math.imul(al7, bh3)) | 0;
                mid = (mid + Math.imul(ah7, bl3)) | 0;
                hi = (hi + Math.imul(ah7, bh3)) | 0;
                lo = (lo + Math.imul(al6, bl4)) | 0;
                mid = (mid + Math.imul(al6, bh4)) | 0;
                mid = (mid + Math.imul(ah6, bl4)) | 0;
                hi = (hi + Math.imul(ah6, bh4)) | 0;
                lo = (lo + Math.imul(al5, bl5)) | 0;
                mid = (mid + Math.imul(al5, bh5)) | 0;
                mid = (mid + Math.imul(ah5, bl5)) | 0;
                hi = (hi + Math.imul(ah5, bh5)) | 0;
                lo = (lo + Math.imul(al4, bl6)) | 0;
                mid = (mid + Math.imul(al4, bh6)) | 0;
                mid = (mid + Math.imul(ah4, bl6)) | 0;
                hi = (hi + Math.imul(ah4, bh6)) | 0;
                lo = (lo + Math.imul(al3, bl7)) | 0;
                mid = (mid + Math.imul(al3, bh7)) | 0;
                mid = (mid + Math.imul(ah3, bl7)) | 0;
                hi = (hi + Math.imul(ah3, bh7)) | 0;
                lo = (lo + Math.imul(al2, bl8)) | 0;
                mid = (mid + Math.imul(al2, bh8)) | 0;
                mid = (mid + Math.imul(ah2, bl8)) | 0;
                hi = (hi + Math.imul(ah2, bh8)) | 0;
                lo = (lo + Math.imul(al1, bl9)) | 0;
                mid = (mid + Math.imul(al1, bh9)) | 0;
                mid = (mid + Math.imul(ah1, bl9)) | 0;
                hi = (hi + Math.imul(ah1, bh9)) | 0;
                var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
                w10 &= 0x3ffffff;
                /* k = 11 */
                lo = Math.imul(al9, bl2);
                mid = Math.imul(al9, bh2);
                mid = (mid + Math.imul(ah9, bl2)) | 0;
                hi = Math.imul(ah9, bh2);
                lo = (lo + Math.imul(al8, bl3)) | 0;
                mid = (mid + Math.imul(al8, bh3)) | 0;
                mid = (mid + Math.imul(ah8, bl3)) | 0;
                hi = (hi + Math.imul(ah8, bh3)) | 0;
                lo = (lo + Math.imul(al7, bl4)) | 0;
                mid = (mid + Math.imul(al7, bh4)) | 0;
                mid = (mid + Math.imul(ah7, bl4)) | 0;
                hi = (hi + Math.imul(ah7, bh4)) | 0;
                lo = (lo + Math.imul(al6, bl5)) | 0;
                mid = (mid + Math.imul(al6, bh5)) | 0;
                mid = (mid + Math.imul(ah6, bl5)) | 0;
                hi = (hi + Math.imul(ah6, bh5)) | 0;
                lo = (lo + Math.imul(al5, bl6)) | 0;
                mid = (mid + Math.imul(al5, bh6)) | 0;
                mid = (mid + Math.imul(ah5, bl6)) | 0;
                hi = (hi + Math.imul(ah5, bh6)) | 0;
                lo = (lo + Math.imul(al4, bl7)) | 0;
                mid = (mid + Math.imul(al4, bh7)) | 0;
                mid = (mid + Math.imul(ah4, bl7)) | 0;
                hi = (hi + Math.imul(ah4, bh7)) | 0;
                lo = (lo + Math.imul(al3, bl8)) | 0;
                mid = (mid + Math.imul(al3, bh8)) | 0;
                mid = (mid + Math.imul(ah3, bl8)) | 0;
                hi = (hi + Math.imul(ah3, bh8)) | 0;
                lo = (lo + Math.imul(al2, bl9)) | 0;
                mid = (mid + Math.imul(al2, bh9)) | 0;
                mid = (mid + Math.imul(ah2, bl9)) | 0;
                hi = (hi + Math.imul(ah2, bh9)) | 0;
                var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
                w11 &= 0x3ffffff;
                /* k = 12 */
                lo = Math.imul(al9, bl3);
                mid = Math.imul(al9, bh3);
                mid = (mid + Math.imul(ah9, bl3)) | 0;
                hi = Math.imul(ah9, bh3);
                lo = (lo + Math.imul(al8, bl4)) | 0;
                mid = (mid + Math.imul(al8, bh4)) | 0;
                mid = (mid + Math.imul(ah8, bl4)) | 0;
                hi = (hi + Math.imul(ah8, bh4)) | 0;
                lo = (lo + Math.imul(al7, bl5)) | 0;
                mid = (mid + Math.imul(al7, bh5)) | 0;
                mid = (mid + Math.imul(ah7, bl5)) | 0;
                hi = (hi + Math.imul(ah7, bh5)) | 0;
                lo = (lo + Math.imul(al6, bl6)) | 0;
                mid = (mid + Math.imul(al6, bh6)) | 0;
                mid = (mid + Math.imul(ah6, bl6)) | 0;
                hi = (hi + Math.imul(ah6, bh6)) | 0;
                lo = (lo + Math.imul(al5, bl7)) | 0;
                mid = (mid + Math.imul(al5, bh7)) | 0;
                mid = (mid + Math.imul(ah5, bl7)) | 0;
                hi = (hi + Math.imul(ah5, bh7)) | 0;
                lo = (lo + Math.imul(al4, bl8)) | 0;
                mid = (mid + Math.imul(al4, bh8)) | 0;
                mid = (mid + Math.imul(ah4, bl8)) | 0;
                hi = (hi + Math.imul(ah4, bh8)) | 0;
                lo = (lo + Math.imul(al3, bl9)) | 0;
                mid = (mid + Math.imul(al3, bh9)) | 0;
                mid = (mid + Math.imul(ah3, bl9)) | 0;
                hi = (hi + Math.imul(ah3, bh9)) | 0;
                var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
                w12 &= 0x3ffffff;
                /* k = 13 */
                lo = Math.imul(al9, bl4);
                mid = Math.imul(al9, bh4);
                mid = (mid + Math.imul(ah9, bl4)) | 0;
                hi = Math.imul(ah9, bh4);
                lo = (lo + Math.imul(al8, bl5)) | 0;
                mid = (mid + Math.imul(al8, bh5)) | 0;
                mid = (mid + Math.imul(ah8, bl5)) | 0;
                hi = (hi + Math.imul(ah8, bh5)) | 0;
                lo = (lo + Math.imul(al7, bl6)) | 0;
                mid = (mid + Math.imul(al7, bh6)) | 0;
                mid = (mid + Math.imul(ah7, bl6)) | 0;
                hi = (hi + Math.imul(ah7, bh6)) | 0;
                lo = (lo + Math.imul(al6, bl7)) | 0;
                mid = (mid + Math.imul(al6, bh7)) | 0;
                mid = (mid + Math.imul(ah6, bl7)) | 0;
                hi = (hi + Math.imul(ah6, bh7)) | 0;
                lo = (lo + Math.imul(al5, bl8)) | 0;
                mid = (mid + Math.imul(al5, bh8)) | 0;
                mid = (mid + Math.imul(ah5, bl8)) | 0;
                hi = (hi + Math.imul(ah5, bh8)) | 0;
                lo = (lo + Math.imul(al4, bl9)) | 0;
                mid = (mid + Math.imul(al4, bh9)) | 0;
                mid = (mid + Math.imul(ah4, bl9)) | 0;
                hi = (hi + Math.imul(ah4, bh9)) | 0;
                var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
                w13 &= 0x3ffffff;
                /* k = 14 */
                lo = Math.imul(al9, bl5);
                mid = Math.imul(al9, bh5);
                mid = (mid + Math.imul(ah9, bl5)) | 0;
                hi = Math.imul(ah9, bh5);
                lo = (lo + Math.imul(al8, bl6)) | 0;
                mid = (mid + Math.imul(al8, bh6)) | 0;
                mid = (mid + Math.imul(ah8, bl6)) | 0;
                hi = (hi + Math.imul(ah8, bh6)) | 0;
                lo = (lo + Math.imul(al7, bl7)) | 0;
                mid = (mid + Math.imul(al7, bh7)) | 0;
                mid = (mid + Math.imul(ah7, bl7)) | 0;
                hi = (hi + Math.imul(ah7, bh7)) | 0;
                lo = (lo + Math.imul(al6, bl8)) | 0;
                mid = (mid + Math.imul(al6, bh8)) | 0;
                mid = (mid + Math.imul(ah6, bl8)) | 0;
                hi = (hi + Math.imul(ah6, bh8)) | 0;
                lo = (lo + Math.imul(al5, bl9)) | 0;
                mid = (mid + Math.imul(al5, bh9)) | 0;
                mid = (mid + Math.imul(ah5, bl9)) | 0;
                hi = (hi + Math.imul(ah5, bh9)) | 0;
                var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
                w14 &= 0x3ffffff;
                /* k = 15 */
                lo = Math.imul(al9, bl6);
                mid = Math.imul(al9, bh6);
                mid = (mid + Math.imul(ah9, bl6)) | 0;
                hi = Math.imul(ah9, bh6);
                lo = (lo + Math.imul(al8, bl7)) | 0;
                mid = (mid + Math.imul(al8, bh7)) | 0;
                mid = (mid + Math.imul(ah8, bl7)) | 0;
                hi = (hi + Math.imul(ah8, bh7)) | 0;
                lo = (lo + Math.imul(al7, bl8)) | 0;
                mid = (mid + Math.imul(al7, bh8)) | 0;
                mid = (mid + Math.imul(ah7, bl8)) | 0;
                hi = (hi + Math.imul(ah7, bh8)) | 0;
                lo = (lo + Math.imul(al6, bl9)) | 0;
                mid = (mid + Math.imul(al6, bh9)) | 0;
                mid = (mid + Math.imul(ah6, bl9)) | 0;
                hi = (hi + Math.imul(ah6, bh9)) | 0;
                var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
                w15 &= 0x3ffffff;
                /* k = 16 */
                lo = Math.imul(al9, bl7);
                mid = Math.imul(al9, bh7);
                mid = (mid + Math.imul(ah9, bl7)) | 0;
                hi = Math.imul(ah9, bh7);
                lo = (lo + Math.imul(al8, bl8)) | 0;
                mid = (mid + Math.imul(al8, bh8)) | 0;
                mid = (mid + Math.imul(ah8, bl8)) | 0;
                hi = (hi + Math.imul(ah8, bh8)) | 0;
                lo = (lo + Math.imul(al7, bl9)) | 0;
                mid = (mid + Math.imul(al7, bh9)) | 0;
                mid = (mid + Math.imul(ah7, bl9)) | 0;
                hi = (hi + Math.imul(ah7, bh9)) | 0;
                var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
                w16 &= 0x3ffffff;
                /* k = 17 */
                lo = Math.imul(al9, bl8);
                mid = Math.imul(al9, bh8);
                mid = (mid + Math.imul(ah9, bl8)) | 0;
                hi = Math.imul(ah9, bh8);
                lo = (lo + Math.imul(al8, bl9)) | 0;
                mid = (mid + Math.imul(al8, bh9)) | 0;
                mid = (mid + Math.imul(ah8, bl9)) | 0;
                hi = (hi + Math.imul(ah8, bh9)) | 0;
                var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
                w17 &= 0x3ffffff;
                /* k = 18 */
                lo = Math.imul(al9, bl9);
                mid = Math.imul(al9, bh9);
                mid = (mid + Math.imul(ah9, bl9)) | 0;
                hi = Math.imul(ah9, bh9);
                var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
                w18 &= 0x3ffffff;
                o[0] = w0;
                o[1] = w1;
                o[2] = w2;
                o[3] = w3;
                o[4] = w4;
                o[5] = w5;
                o[6] = w6;
                o[7] = w7;
                o[8] = w8;
                o[9] = w9;
                o[10] = w10;
                o[11] = w11;
                o[12] = w12;
                o[13] = w13;
                o[14] = w14;
                o[15] = w15;
                o[16] = w16;
                o[17] = w17;
                o[18] = w18;
                if (c !== 0) {
                    o[19] = c;
                    out.length++;
                }
                return out;
            };

            // Polyfill comb
            if (!Math.imul) {
                comb10MulTo = smallMulTo;
            }

            function bigMulTo (self, num, out) {
                out.negative = num.negative ^ self.negative;
                out.length = self.length + num.length;

                var carry = 0;
                var hncarry = 0;
                for (var k = 0; k < out.length - 1; k++) {
                    // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                    // note that ncarry could be >= 0x3ffffff
                    var ncarry = hncarry;
                    hncarry = 0;
                    var rword = carry & 0x3ffffff;
                    var maxJ = Math.min(k, num.length - 1);
                    for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                        var i = k - j;
                        var a = self.words[i] | 0;
                        var b = num.words[j] | 0;
                        var r = a * b;

                        var lo = r & 0x3ffffff;
                        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
                        lo = (lo + rword) | 0;
                        rword = lo & 0x3ffffff;
                        ncarry = (ncarry + (lo >>> 26)) | 0;

                        hncarry += ncarry >>> 26;
                        ncarry &= 0x3ffffff;
                    }
                    out.words[k] = rword;
                    carry = ncarry;
                    ncarry = hncarry;
                }
                if (carry !== 0) {
                    out.words[k] = carry;
                } else {
                    out.length--;
                }

                return out.strip();
            }

            function jumboMulTo (self, num, out) {
                var fftm = new FFTM();
                return fftm.mulp(self, num, out);
            }

            BN.prototype.mulTo = function mulTo (num, out) {
                var res;
                var len = this.length + num.length;
                if (this.length === 10 && num.length === 10) {
                    res = comb10MulTo(this, num, out);
                } else if (len < 63) {
                    res = smallMulTo(this, num, out);
                } else if (len < 1024) {
                    res = bigMulTo(this, num, out);
                } else {
                    res = jumboMulTo(this, num, out);
                }

                return res;
            };

            // Cooley-Tukey algorithm for FFT
            // slightly revisited to rely on looping instead of recursion

            function FFTM (x, y) {
                this.x = x;
                this.y = y;
            }

            FFTM.prototype.makeRBT = function makeRBT (N) {
                var t = new Array(N);
                var l = BN.prototype._countBits(N) - 1;
                for (var i = 0; i < N; i++) {
                    t[i] = this.revBin(i, l, N);
                }

                return t;
            };

            // Returns binary-reversed representation of `x`
            FFTM.prototype.revBin = function revBin (x, l, N) {
                if (x === 0 || x === N - 1) return x;

                var rb = 0;
                for (var i = 0; i < l; i++) {
                    rb |= (x & 1) << (l - i - 1);
                    x >>= 1;
                }

                return rb;
            };

            // Performs "tweedling" phase, therefore 'emulating'
            // behaviour of the recursive algorithm
            FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
                for (var i = 0; i < N; i++) {
                    rtws[i] = rws[rbt[i]];
                    itws[i] = iws[rbt[i]];
                }
            };

            FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
                this.permute(rbt, rws, iws, rtws, itws, N);

                for (var s = 1; s < N; s <<= 1) {
                    var l = s << 1;

                    var rtwdf = Math.cos(2 * Math.PI / l);
                    var itwdf = Math.sin(2 * Math.PI / l);

                    for (var p = 0; p < N; p += l) {
                        var rtwdf_ = rtwdf;
                        var itwdf_ = itwdf;

                        for (var j = 0; j < s; j++) {
                            var re = rtws[p + j];
                            var ie = itws[p + j];

                            var ro = rtws[p + j + s];
                            var io = itws[p + j + s];

                            var rx = rtwdf_ * ro - itwdf_ * io;

                            io = rtwdf_ * io + itwdf_ * ro;
                            ro = rx;

                            rtws[p + j] = re + ro;
                            itws[p + j] = ie + io;

                            rtws[p + j + s] = re - ro;
                            itws[p + j + s] = ie - io;

                            /* jshint maxdepth : false */
                            if (j !== l) {
                                rx = rtwdf * rtwdf_ - itwdf * itwdf_;

                                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                                rtwdf_ = rx;
                            }
                        }
                    }
                }
            };

            FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
                var N = Math.max(m, n) | 1;
                var odd = N & 1;
                var i = 0;
                for (N = N / 2 | 0; N; N = N >>> 1) {
                    i++;
                }

                return 1 << i + 1 + odd;
            };

            FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
                if (N <= 1) return;

                for (var i = 0; i < N / 2; i++) {
                    var t = rws[i];

                    rws[i] = rws[N - i - 1];
                    rws[N - i - 1] = t;

                    t = iws[i];

                    iws[i] = -iws[N - i - 1];
                    iws[N - i - 1] = -t;
                }
            };

            FFTM.prototype.normalize13b = function normalize13b (ws, N) {
                var carry = 0;
                for (var i = 0; i < N / 2; i++) {
                    var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
                        Math.round(ws[2 * i] / N) +
                        carry;

                    ws[i] = w & 0x3ffffff;

                    if (w < 0x4000000) {
                        carry = 0;
                    } else {
                        carry = w / 0x4000000 | 0;
                    }
                }

                return ws;
            };

            FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
                var carry = 0;
                for (var i = 0; i < len; i++) {
                    carry = carry + (ws[i] | 0);

                    rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
                    rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
                }

                // Pad with zeroes
                for (i = 2 * len; i < N; ++i) {
                    rws[i] = 0;
                }

                assert(carry === 0);
                assert((carry & ~0x1fff) === 0);
            };

            FFTM.prototype.stub = function stub (N) {
                var ph = new Array(N);
                for (var i = 0; i < N; i++) {
                    ph[i] = 0;
                }

                return ph;
            };

            FFTM.prototype.mulp = function mulp (x, y, out) {
                var N = 2 * this.guessLen13b(x.length, y.length);

                var rbt = this.makeRBT(N);

                var _ = this.stub(N);

                var rws = new Array(N);
                var rwst = new Array(N);
                var iwst = new Array(N);

                var nrws = new Array(N);
                var nrwst = new Array(N);
                var niwst = new Array(N);

                var rmws = out.words;
                rmws.length = N;

                this.convert13b(x.words, x.length, rws, N);
                this.convert13b(y.words, y.length, nrws, N);

                this.transform(rws, _, rwst, iwst, N, rbt);
                this.transform(nrws, _, nrwst, niwst, N, rbt);

                for (var i = 0; i < N; i++) {
                    var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                    iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
                    rwst[i] = rx;
                }

                this.conjugate(rwst, iwst, N);
                this.transform(rwst, iwst, rmws, _, N, rbt);
                this.conjugate(rmws, _, N);
                this.normalize13b(rmws, N);

                out.negative = x.negative ^ y.negative;
                out.length = x.length + y.length;
                return out.strip();
            };

            // Multiply `this` by `num`
            BN.prototype.mul = function mul (num) {
                var out = new BN(null);
                out.words = new Array(this.length + num.length);
                return this.mulTo(num, out);
            };

            // Multiply employing FFT
            BN.prototype.mulf = function mulf (num) {
                var out = new BN(null);
                out.words = new Array(this.length + num.length);
                return jumboMulTo(this, num, out);
            };

            // In-place Multiplication
            BN.prototype.imul = function imul (num) {
                return this.clone().mulTo(num, this);
            };

            BN.prototype.imuln = function imuln (num) {
                assert(typeof num === 'number');
                assert(num < 0x4000000);

                // Carry
                var carry = 0;
                for (var i = 0; i < this.length; i++) {
                    var w = (this.words[i] | 0) * num;
                    var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
                    carry >>= 26;
                    carry += (w / 0x4000000) | 0;
                    // NOTE: lo is 27bit maximum
                    carry += lo >>> 26;
                    this.words[i] = lo & 0x3ffffff;
                }

                if (carry !== 0) {
                    this.words[i] = carry;
                    this.length++;
                }

                return this;
            };

            BN.prototype.muln = function muln (num) {
                return this.clone().imuln(num);
            };

            // `this` * `this`
            BN.prototype.sqr = function sqr () {
                return this.mul(this);
            };

            // `this` * `this` in-place
            BN.prototype.isqr = function isqr () {
                return this.imul(this.clone());
            };

            // Math.pow(`this`, `num`)
            BN.prototype.pow = function pow (num) {
                var w = toBitArray(num);
                if (w.length === 0) return new BN(1);

                // Skip leading zeroes
                var res = this;
                for (var i = 0; i < w.length; i++, res = res.sqr()) {
                    if (w[i] !== 0) break;
                }

                if (++i < w.length) {
                    for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
                        if (w[i] === 0) continue;

                        res = res.mul(q);
                    }
                }

                return res;
            };

            // Shift-left in-place
            BN.prototype.iushln = function iushln (bits) {
                assert(typeof bits === 'number' && bits >= 0);
                var r = bits % 26;
                var s = (bits - r) / 26;
                var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
                var i;

                if (r !== 0) {
                    var carry = 0;

                    for (i = 0; i < this.length; i++) {
                        var newCarry = this.words[i] & carryMask;
                        var c = ((this.words[i] | 0) - newCarry) << r;
                        this.words[i] = c | carry;
                        carry = newCarry >>> (26 - r);
                    }

                    if (carry) {
                        this.words[i] = carry;
                        this.length++;
                    }
                }

                if (s !== 0) {
                    for (i = this.length - 1; i >= 0; i--) {
                        this.words[i + s] = this.words[i];
                    }

                    for (i = 0; i < s; i++) {
                        this.words[i] = 0;
                    }

                    this.length += s;
                }

                return this.strip();
            };

            BN.prototype.ishln = function ishln (bits) {
                // TODO(indutny): implement me
                assert(this.negative === 0);
                return this.iushln(bits);
            };

            // Shift-right in-place
            // NOTE: `hint` is a lowest bit before trailing zeroes
            // NOTE: if `extended` is present - it will be filled with destroyed bits
            BN.prototype.iushrn = function iushrn (bits, hint, extended) {
                assert(typeof bits === 'number' && bits >= 0);
                var h;
                if (hint) {
                    h = (hint - (hint % 26)) / 26;
                } else {
                    h = 0;
                }

                var r = bits % 26;
                var s = Math.min((bits - r) / 26, this.length);
                var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
                var maskedWords = extended;

                h -= s;
                h = Math.max(0, h);

                // Extended mode, copy masked part
                if (maskedWords) {
                    for (var i = 0; i < s; i++) {
                        maskedWords.words[i] = this.words[i];
                    }
                    maskedWords.length = s;
                }

                if (s === 0) {
                    // No-op, we should not move anything at all
                } else if (this.length > s) {
                    this.length -= s;
                    for (i = 0; i < this.length; i++) {
                        this.words[i] = this.words[i + s];
                    }
                } else {
                    this.words[0] = 0;
                    this.length = 1;
                }

                var carry = 0;
                for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
                    var word = this.words[i] | 0;
                    this.words[i] = (carry << (26 - r)) | (word >>> r);
                    carry = word & mask;
                }

                // Push carried bits as a mask
                if (maskedWords && carry !== 0) {
                    maskedWords.words[maskedWords.length++] = carry;
                }

                if (this.length === 0) {
                    this.words[0] = 0;
                    this.length = 1;
                }

                return this.strip();
            };

            BN.prototype.ishrn = function ishrn (bits, hint, extended) {
                // TODO(indutny): implement me
                assert(this.negative === 0);
                return this.iushrn(bits, hint, extended);
            };

            // Shift-left
            BN.prototype.shln = function shln (bits) {
                return this.clone().ishln(bits);
            };

            BN.prototype.ushln = function ushln (bits) {
                return this.clone().iushln(bits);
            };

            // Shift-right
            BN.prototype.shrn = function shrn (bits) {
                return this.clone().ishrn(bits);
            };

            BN.prototype.ushrn = function ushrn (bits) {
                return this.clone().iushrn(bits);
            };

            // Test if n bit is set
            BN.prototype.testn = function testn (bit) {
                assert(typeof bit === 'number' && bit >= 0);
                var r = bit % 26;
                var s = (bit - r) / 26;
                var q = 1 << r;

                // Fast case: bit is much higher than all existing words
                if (this.length <= s) return false;

                // Check bit and return
                var w = this.words[s];

                return !!(w & q);
            };

            // Return only lowers bits of number (in-place)
            BN.prototype.imaskn = function imaskn (bits) {
                assert(typeof bits === 'number' && bits >= 0);
                var r = bits % 26;
                var s = (bits - r) / 26;

                assert(this.negative === 0, 'imaskn works only with positive numbers');

                if (this.length <= s) {
                    return this;
                }

                if (r !== 0) {
                    s++;
                }
                this.length = Math.min(s, this.length);

                if (r !== 0) {
                    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
                    this.words[this.length - 1] &= mask;
                }

                return this.strip();
            };

            // Return only lowers bits of number
            BN.prototype.maskn = function maskn (bits) {
                return this.clone().imaskn(bits);
            };

            // Add plain number `num` to `this`
            BN.prototype.iaddn = function iaddn (num) {
                assert(typeof num === 'number');
                assert(num < 0x4000000);
                if (num < 0) return this.isubn(-num);

                // Possible sign change
                if (this.negative !== 0) {
                    if (this.length === 1 && (this.words[0] | 0) < num) {
                        this.words[0] = num - (this.words[0] | 0);
                        this.negative = 0;
                        return this;
                    }

                    this.negative = 0;
                    this.isubn(num);
                    this.negative = 1;
                    return this;
                }

                // Add without checks
                return this._iaddn(num);
            };

            BN.prototype._iaddn = function _iaddn (num) {
                this.words[0] += num;

                // Carry
                for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
                    this.words[i] -= 0x4000000;
                    if (i === this.length - 1) {
                        this.words[i + 1] = 1;
                    } else {
                        this.words[i + 1]++;
                    }
                }
                this.length = Math.max(this.length, i + 1);

                return this;
            };

            // Subtract plain number `num` from `this`
            BN.prototype.isubn = function isubn (num) {
                assert(typeof num === 'number');
                assert(num < 0x4000000);
                if (num < 0) return this.iaddn(-num);

                if (this.negative !== 0) {
                    this.negative = 0;
                    this.iaddn(num);
                    this.negative = 1;
                    return this;
                }

                this.words[0] -= num;

                if (this.length === 1 && this.words[0] < 0) {
                    this.words[0] = -this.words[0];
                    this.negative = 1;
                } else {
                    // Carry
                    for (var i = 0; i < this.length && this.words[i] < 0; i++) {
                        this.words[i] += 0x4000000;
                        this.words[i + 1] -= 1;
                    }
                }

                return this.strip();
            };

            BN.prototype.addn = function addn (num) {
                return this.clone().iaddn(num);
            };

            BN.prototype.subn = function subn (num) {
                return this.clone().isubn(num);
            };

            BN.prototype.iabs = function iabs () {
                this.negative = 0;

                return this;
            };

            BN.prototype.abs = function abs () {
                return this.clone().iabs();
            };

            BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
                var len = num.length + shift;
                var i;

                this._expand(len);

                var w;
                var carry = 0;
                for (i = 0; i < num.length; i++) {
                    w = (this.words[i + shift] | 0) + carry;
                    var right = (num.words[i] | 0) * mul;
                    w -= right & 0x3ffffff;
                    carry = (w >> 26) - ((right / 0x4000000) | 0);
                    this.words[i + shift] = w & 0x3ffffff;
                }
                for (; i < this.length - shift; i++) {
                    w = (this.words[i + shift] | 0) + carry;
                    carry = w >> 26;
                    this.words[i + shift] = w & 0x3ffffff;
                }

                if (carry === 0) return this.strip();

                // Subtraction overflow
                assert(carry === -1);
                carry = 0;
                for (i = 0; i < this.length; i++) {
                    w = -(this.words[i] | 0) + carry;
                    carry = w >> 26;
                    this.words[i] = w & 0x3ffffff;
                }
                this.negative = 1;

                return this.strip();
            };

            BN.prototype._wordDiv = function _wordDiv (num, mode) {
                var shift = this.length - num.length;

                var a = this.clone();
                var b = num;

                // Normalize
                var bhi = b.words[b.length - 1] | 0;
                var bhiBits = this._countBits(bhi);
                shift = 26 - bhiBits;
                if (shift !== 0) {
                    b = b.ushln(shift);
                    a.iushln(shift);
                    bhi = b.words[b.length - 1] | 0;
                }

                // Initialize quotient
                var m = a.length - b.length;
                var q;

                if (mode !== 'mod') {
                    q = new BN(null);
                    q.length = m + 1;
                    q.words = new Array(q.length);
                    for (var i = 0; i < q.length; i++) {
                        q.words[i] = 0;
                    }
                }

                var diff = a.clone()._ishlnsubmul(b, 1, m);
                if (diff.negative === 0) {
                    a = diff;
                    if (q) {
                        q.words[m] = 1;
                    }
                }

                for (var j = m - 1; j >= 0; j--) {
                    var qj = (a.words[b.length + j] | 0) * 0x4000000 +
                        (a.words[b.length + j - 1] | 0);

                    // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
                    // (0x7ffffff)
                    qj = Math.min((qj / bhi) | 0, 0x3ffffff);

                    a._ishlnsubmul(b, qj, j);
                    while (a.negative !== 0) {
                        qj--;
                        a.negative = 0;
                        a._ishlnsubmul(b, 1, j);
                        if (!a.isZero()) {
                            a.negative ^= 1;
                        }
                    }
                    if (q) {
                        q.words[j] = qj;
                    }
                }
                if (q) {
                    q.strip();
                }
                a.strip();

                // Denormalize
                if (mode !== 'div' && shift !== 0) {
                    a.iushrn(shift);
                }

                return {
                    div: q || null,
                    mod: a
                };
            };

            // NOTE: 1) `mode` can be set to `mod` to request mod only,
            //       to `div` to request div only, or be absent to
            //       request both div & mod
            //       2) `positive` is true if unsigned mod is requested
            BN.prototype.divmod = function divmod (num, mode, positive) {
                assert(!num.isZero());

                if (this.isZero()) {
                    return {
                        div: new BN(0),
                        mod: new BN(0)
                    };
                }

                var div, mod, res;
                if (this.negative !== 0 && num.negative === 0) {
                    res = this.neg().divmod(num, mode);

                    if (mode !== 'mod') {
                        div = res.div.neg();
                    }

                    if (mode !== 'div') {
                        mod = res.mod.neg();
                        if (positive && mod.negative !== 0) {
                            mod.iadd(num);
                        }
                    }

                    return {
                        div: div,
                        mod: mod
                    };
                }

                if (this.negative === 0 && num.negative !== 0) {
                    res = this.divmod(num.neg(), mode);

                    if (mode !== 'mod') {
                        div = res.div.neg();
                    }

                    return {
                        div: div,
                        mod: res.mod
                    };
                }

                if ((this.negative & num.negative) !== 0) {
                    res = this.neg().divmod(num.neg(), mode);

                    if (mode !== 'div') {
                        mod = res.mod.neg();
                        if (positive && mod.negative !== 0) {
                            mod.isub(num);
                        }
                    }

                    return {
                        div: res.div,
                        mod: mod
                    };
                }

                // Both numbers are positive at this point

                // Strip both numbers to approximate shift value
                if (num.length > this.length || this.cmp(num) < 0) {
                    return {
                        div: new BN(0),
                        mod: this
                    };
                }

                // Very short reduction
                if (num.length === 1) {
                    if (mode === 'div') {
                        return {
                            div: this.divn(num.words[0]),
                            mod: null
                        };
                    }

                    if (mode === 'mod') {
                        return {
                            div: null,
                            mod: new BN(this.modn(num.words[0]))
                        };
                    }

                    return {
                        div: this.divn(num.words[0]),
                        mod: new BN(this.modn(num.words[0]))
                    };
                }

                return this._wordDiv(num, mode);
            };

            // Find `this` / `num`
            BN.prototype.div = function div (num) {
                return this.divmod(num, 'div', false).div;
            };

            // Find `this` % `num`
            BN.prototype.mod = function mod (num) {
                return this.divmod(num, 'mod', false).mod;
            };

            BN.prototype.umod = function umod (num) {
                return this.divmod(num, 'mod', true).mod;
            };

            // Find Round(`this` / `num`)
            BN.prototype.divRound = function divRound (num) {
                var dm = this.divmod(num);

                // Fast case - exact division
                if (dm.mod.isZero()) return dm.div;

                var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

                var half = num.ushrn(1);
                var r2 = num.andln(1);
                var cmp = mod.cmp(half);

                // Round down
                if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

                // Round up
                return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
            };

            BN.prototype.modn = function modn (num) {
                assert(num <= 0x3ffffff);
                var p = (1 << 26) % num;

                var acc = 0;
                for (var i = this.length - 1; i >= 0; i--) {
                    acc = (p * acc + (this.words[i] | 0)) % num;
                }

                return acc;
            };

            // In-place division by number
            BN.prototype.idivn = function idivn (num) {
                assert(num <= 0x3ffffff);

                var carry = 0;
                for (var i = this.length - 1; i >= 0; i--) {
                    var w = (this.words[i] | 0) + carry * 0x4000000;
                    this.words[i] = (w / num) | 0;
                    carry = w % num;
                }

                return this.strip();
            };

            BN.prototype.divn = function divn (num) {
                return this.clone().idivn(num);
            };

            BN.prototype.egcd = function egcd (p) {
                assert(p.negative === 0);
                assert(!p.isZero());

                var x = this;
                var y = p.clone();

                if (x.negative !== 0) {
                    x = x.umod(p);
                } else {
                    x = x.clone();
                }

                // A * x + B * y = x
                var A = new BN(1);
                var B = new BN(0);

                // C * x + D * y = y
                var C = new BN(0);
                var D = new BN(1);

                var g = 0;

                while (x.isEven() && y.isEven()) {
                    x.iushrn(1);
                    y.iushrn(1);
                    ++g;
                }

                var yp = y.clone();
                var xp = x.clone();

                while (!x.isZero()) {
                    for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
                    if (i > 0) {
                        x.iushrn(i);
                        while (i-- > 0) {
                            if (A.isOdd() || B.isOdd()) {
                                A.iadd(yp);
                                B.isub(xp);
                            }

                            A.iushrn(1);
                            B.iushrn(1);
                        }
                    }

                    for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
                    if (j > 0) {
                        y.iushrn(j);
                        while (j-- > 0) {
                            if (C.isOdd() || D.isOdd()) {
                                C.iadd(yp);
                                D.isub(xp);
                            }

                            C.iushrn(1);
                            D.iushrn(1);
                        }
                    }

                    if (x.cmp(y) >= 0) {
                        x.isub(y);
                        A.isub(C);
                        B.isub(D);
                    } else {
                        y.isub(x);
                        C.isub(A);
                        D.isub(B);
                    }
                }

                return {
                    a: C,
                    b: D,
                    gcd: y.iushln(g)
                };
            };

            // This is reduced incarnation of the binary EEA
            // above, designated to invert members of the
            // _prime_ fields F(p) at a maximal speed
            BN.prototype._invmp = function _invmp (p) {
                assert(p.negative === 0);
                assert(!p.isZero());

                var a = this;
                var b = p.clone();

                if (a.negative !== 0) {
                    a = a.umod(p);
                } else {
                    a = a.clone();
                }

                var x1 = new BN(1);
                var x2 = new BN(0);

                var delta = b.clone();

                while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
                    for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
                    if (i > 0) {
                        a.iushrn(i);
                        while (i-- > 0) {
                            if (x1.isOdd()) {
                                x1.iadd(delta);
                            }

                            x1.iushrn(1);
                        }
                    }

                    for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
                    if (j > 0) {
                        b.iushrn(j);
                        while (j-- > 0) {
                            if (x2.isOdd()) {
                                x2.iadd(delta);
                            }

                            x2.iushrn(1);
                        }
                    }

                    if (a.cmp(b) >= 0) {
                        a.isub(b);
                        x1.isub(x2);
                    } else {
                        b.isub(a);
                        x2.isub(x1);
                    }
                }

                var res;
                if (a.cmpn(1) === 0) {
                    res = x1;
                } else {
                    res = x2;
                }

                if (res.cmpn(0) < 0) {
                    res.iadd(p);
                }

                return res;
            };

            BN.prototype.gcd = function gcd (num) {
                if (this.isZero()) return num.abs();
                if (num.isZero()) return this.abs();

                var a = this.clone();
                var b = num.clone();
                a.negative = 0;
                b.negative = 0;

                // Remove common factor of two
                for (var shift = 0; a.isEven() && b.isEven(); shift++) {
                    a.iushrn(1);
                    b.iushrn(1);
                }

                do {
                    while (a.isEven()) {
                        a.iushrn(1);
                    }
                    while (b.isEven()) {
                        b.iushrn(1);
                    }

                    var r = a.cmp(b);
                    if (r < 0) {
                        // Swap `a` and `b` to make `a` always bigger than `b`
                        var t = a;
                        a = b;
                        b = t;
                    } else if (r === 0 || b.cmpn(1) === 0) {
                        break;
                    }

                    a.isub(b);
                } while (true);

                return b.iushln(shift);
            };

            // Invert number in the field F(num)
            BN.prototype.invm = function invm (num) {
                return this.egcd(num).a.umod(num);
            };

            BN.prototype.isEven = function isEven () {
                return (this.words[0] & 1) === 0;
            };

            BN.prototype.isOdd = function isOdd () {
                return (this.words[0] & 1) === 1;
            };

            // And first word and num
            BN.prototype.andln = function andln (num) {
                return this.words[0] & num;
            };

            // Increment at the bit position in-line
            BN.prototype.bincn = function bincn (bit) {
                assert(typeof bit === 'number');
                var r = bit % 26;
                var s = (bit - r) / 26;
                var q = 1 << r;

                // Fast case: bit is much higher than all existing words
                if (this.length <= s) {
                    this._expand(s + 1);
                    this.words[s] |= q;
                    return this;
                }

                // Add bit and propagate, if needed
                var carry = q;
                for (var i = s; carry !== 0 && i < this.length; i++) {
                    var w = this.words[i] | 0;
                    w += carry;
                    carry = w >>> 26;
                    w &= 0x3ffffff;
                    this.words[i] = w;
                }
                if (carry !== 0) {
                    this.words[i] = carry;
                    this.length++;
                }
                return this;
            };

            BN.prototype.isZero = function isZero () {
                return this.length === 1 && this.words[0] === 0;
            };

            BN.prototype.cmpn = function cmpn (num) {
                var negative = num < 0;

                if (this.negative !== 0 && !negative) return -1;
                if (this.negative === 0 && negative) return 1;

                this.strip();

                var res;
                if (this.length > 1) {
                    res = 1;
                } else {
                    if (negative) {
                        num = -num;
                    }

                    assert(num <= 0x3ffffff, 'Number is too big');

                    var w = this.words[0] | 0;
                    res = w === num ? 0 : w < num ? -1 : 1;
                }
                if (this.negative !== 0) return -res | 0;
                return res;
            };

            // Compare two numbers and return:
            // 1 - if `this` > `num`
            // 0 - if `this` == `num`
            // -1 - if `this` < `num`
            BN.prototype.cmp = function cmp (num) {
                if (this.negative !== 0 && num.negative === 0) return -1;
                if (this.negative === 0 && num.negative !== 0) return 1;

                var res = this.ucmp(num);
                if (this.negative !== 0) return -res | 0;
                return res;
            };

            // Unsigned comparison
            BN.prototype.ucmp = function ucmp (num) {
                // At this point both numbers have the same sign
                if (this.length > num.length) return 1;
                if (this.length < num.length) return -1;

                var res = 0;
                for (var i = this.length - 1; i >= 0; i--) {
                    var a = this.words[i] | 0;
                    var b = num.words[i] | 0;

                    if (a === b) continue;
                    if (a < b) {
                        res = -1;
                    } else if (a > b) {
                        res = 1;
                    }
                    break;
                }
                return res;
            };

            BN.prototype.gtn = function gtn (num) {
                return this.cmpn(num) === 1;
            };

            BN.prototype.gt = function gt (num) {
                return this.cmp(num) === 1;
            };

            BN.prototype.gten = function gten (num) {
                return this.cmpn(num) >= 0;
            };

            BN.prototype.gte = function gte (num) {
                return this.cmp(num) >= 0;
            };

            BN.prototype.ltn = function ltn (num) {
                return this.cmpn(num) === -1;
            };

            BN.prototype.lt = function lt (num) {
                return this.cmp(num) === -1;
            };

            BN.prototype.lten = function lten (num) {
                return this.cmpn(num) <= 0;
            };

            BN.prototype.lte = function lte (num) {
                return this.cmp(num) <= 0;
            };

            BN.prototype.eqn = function eqn (num) {
                return this.cmpn(num) === 0;
            };

            BN.prototype.eq = function eq (num) {
                return this.cmp(num) === 0;
            };

            //
            // A reduce context, could be using montgomery or something better, depending
            // on the `m` itself.
            //
            BN.red = function red (num) {
                return new Red(num);
            };

            BN.prototype.toRed = function toRed (ctx) {
                assert(!this.red, 'Already a number in reduction context');
                assert(this.negative === 0, 'red works only with positives');
                return ctx.convertTo(this)._forceRed(ctx);
            };

            BN.prototype.fromRed = function fromRed () {
                assert(this.red, 'fromRed works only with numbers in reduction context');
                return this.red.convertFrom(this);
            };

            BN.prototype._forceRed = function _forceRed (ctx) {
                this.red = ctx;
                return this;
            };

            BN.prototype.forceRed = function forceRed (ctx) {
                assert(!this.red, 'Already a number in reduction context');
                return this._forceRed(ctx);
            };

            BN.prototype.redAdd = function redAdd (num) {
                assert(this.red, 'redAdd works only with red numbers');
                return this.red.add(this, num);
            };

            BN.prototype.redIAdd = function redIAdd (num) {
                assert(this.red, 'redIAdd works only with red numbers');
                return this.red.iadd(this, num);
            };

            BN.prototype.redSub = function redSub (num) {
                assert(this.red, 'redSub works only with red numbers');
                return this.red.sub(this, num);
            };

            BN.prototype.redISub = function redISub (num) {
                assert(this.red, 'redISub works only with red numbers');
                return this.red.isub(this, num);
            };

            BN.prototype.redShl = function redShl (num) {
                assert(this.red, 'redShl works only with red numbers');
                return this.red.shl(this, num);
            };

            BN.prototype.redMul = function redMul (num) {
                assert(this.red, 'redMul works only with red numbers');
                this.red._verify2(this, num);
                return this.red.mul(this, num);
            };

            BN.prototype.redIMul = function redIMul (num) {
                assert(this.red, 'redMul works only with red numbers');
                this.red._verify2(this, num);
                return this.red.imul(this, num);
            };

            BN.prototype.redSqr = function redSqr () {
                assert(this.red, 'redSqr works only with red numbers');
                this.red._verify1(this);
                return this.red.sqr(this);
            };

            BN.prototype.redISqr = function redISqr () {
                assert(this.red, 'redISqr works only with red numbers');
                this.red._verify1(this);
                return this.red.isqr(this);
            };

            // Square root over p
            BN.prototype.redSqrt = function redSqrt () {
                assert(this.red, 'redSqrt works only with red numbers');
                this.red._verify1(this);
                return this.red.sqrt(this);
            };

            BN.prototype.redInvm = function redInvm () {
                assert(this.red, 'redInvm works only with red numbers');
                this.red._verify1(this);
                return this.red.invm(this);
            };

            // Return negative clone of `this` % `red modulo`
            BN.prototype.redNeg = function redNeg () {
                assert(this.red, 'redNeg works only with red numbers');
                this.red._verify1(this);
                return this.red.neg(this);
            };

            BN.prototype.redPow = function redPow (num) {
                assert(this.red && !num.red, 'redPow(normalNum)');
                this.red._verify1(this);
                return this.red.pow(this, num);
            };

            // Prime numbers with efficient reduction
            var primes = {
                k256: null,
                p224: null,
                p192: null,
                p25519: null
            };

            // Pseudo-Mersenne prime
            function MPrime (name, p) {
                // P = 2 ^ N - K
                this.name = name;
                this.p = new BN(p, 16);
                this.n = this.p.bitLength();
                this.k = new BN(1).iushln(this.n).isub(this.p);

                this.tmp = this._tmp();
            }

            MPrime.prototype._tmp = function _tmp () {
                var tmp = new BN(null);
                tmp.words = new Array(Math.ceil(this.n / 13));
                return tmp;
            };

            MPrime.prototype.ireduce = function ireduce (num) {
                // Assumes that `num` is less than `P^2`
                // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
                var r = num;
                var rlen;

                do {
                    this.split(r, this.tmp);
                    r = this.imulK(r);
                    r = r.iadd(this.tmp);
                    rlen = r.bitLength();
                } while (rlen > this.n);

                var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
                if (cmp === 0) {
                    r.words[0] = 0;
                    r.length = 1;
                } else if (cmp > 0) {
                    r.isub(this.p);
                } else {
                    if (r.strip !== undefined) {
                        // r is BN v4 instance
                        r.strip();
                    } else {
                        // r is BN v5 instance
                        r._strip();
                    }
                }

                return r;
            };

            MPrime.prototype.split = function split (input, out) {
                input.iushrn(this.n, 0, out);
            };

            MPrime.prototype.imulK = function imulK (num) {
                return num.imul(this.k);
            };

            function K256 () {
                MPrime.call(
                    this,
                    'k256',
                    'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
            }
            inherits(K256, MPrime);

            K256.prototype.split = function split (input, output) {
                // 256 = 9 * 26 + 22
                var mask = 0x3fffff;

                var outLen = Math.min(input.length, 9);
                for (var i = 0; i < outLen; i++) {
                    output.words[i] = input.words[i];
                }
                output.length = outLen;

                if (input.length <= 9) {
                    input.words[0] = 0;
                    input.length = 1;
                    return;
                }

                // Shift by 9 limbs
                var prev = input.words[9];
                output.words[output.length++] = prev & mask;

                for (i = 10; i < input.length; i++) {
                    var next = input.words[i] | 0;
                    input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
                    prev = next;
                }
                prev >>>= 22;
                input.words[i - 10] = prev;
                if (prev === 0 && input.length > 10) {
                    input.length -= 10;
                } else {
                    input.length -= 9;
                }
            };

            K256.prototype.imulK = function imulK (num) {
                // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
                num.words[num.length] = 0;
                num.words[num.length + 1] = 0;
                num.length += 2;

                // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
                var lo = 0;
                for (var i = 0; i < num.length; i++) {
                    var w = num.words[i] | 0;
                    lo += w * 0x3d1;
                    num.words[i] = lo & 0x3ffffff;
                    lo = w * 0x40 + ((lo / 0x4000000) | 0);
                }

                // Fast length reduction
                if (num.words[num.length - 1] === 0) {
                    num.length--;
                    if (num.words[num.length - 1] === 0) {
                        num.length--;
                    }
                }
                return num;
            };

            function P224 () {
                MPrime.call(
                    this,
                    'p224',
                    'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
            }
            inherits(P224, MPrime);

            function P192 () {
                MPrime.call(
                    this,
                    'p192',
                    'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
            }
            inherits(P192, MPrime);

            function P25519 () {
                // 2 ^ 255 - 19
                MPrime.call(
                    this,
                    '25519',
                    '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
            }
            inherits(P25519, MPrime);

            P25519.prototype.imulK = function imulK (num) {
                // K = 0x13
                var carry = 0;
                for (var i = 0; i < num.length; i++) {
                    var hi = (num.words[i] | 0) * 0x13 + carry;
                    var lo = hi & 0x3ffffff;
                    hi >>>= 26;

                    num.words[i] = lo;
                    carry = hi;
                }
                if (carry !== 0) {
                    num.words[num.length++] = carry;
                }
                return num;
            };

            // Exported mostly for testing purposes, use plain name instead
            BN._prime = function prime (name) {
                // Cached version of prime
                if (primes[name]) return primes[name];

                var prime;
                if (name === 'k256') {
                    prime = new K256();
                } else if (name === 'p224') {
                    prime = new P224();
                } else if (name === 'p192') {
                    prime = new P192();
                } else if (name === 'p25519') {
                    prime = new P25519();
                } else {
                    throw new Error('Unknown prime ' + name);
                }
                primes[name] = prime;

                return prime;
            };

            //
            // Base reduction engine
            //
            function Red (m) {
                if (typeof m === 'string') {
                    var prime = BN._prime(m);
                    this.m = prime.p;
                    this.prime = prime;
                } else {
                    assert(m.gtn(1), 'modulus must be greater than 1');
                    this.m = m;
                    this.prime = null;
                }
            }

            Red.prototype._verify1 = function _verify1 (a) {
                assert(a.negative === 0, 'red works only with positives');
                assert(a.red, 'red works only with red numbers');
            };

            Red.prototype._verify2 = function _verify2 (a, b) {
                assert((a.negative | b.negative) === 0, 'red works only with positives');
                assert(a.red && a.red === b.red,
                    'red works only with red numbers');
            };

            Red.prototype.imod = function imod (a) {
                if (this.prime) return this.prime.ireduce(a)._forceRed(this);
                return a.umod(this.m)._forceRed(this);
            };

            Red.prototype.neg = function neg (a) {
                if (a.isZero()) {
                    return a.clone();
                }

                return this.m.sub(a)._forceRed(this);
            };

            Red.prototype.add = function add (a, b) {
                this._verify2(a, b);

                var res = a.add(b);
                if (res.cmp(this.m) >= 0) {
                    res.isub(this.m);
                }
                return res._forceRed(this);
            };

            Red.prototype.iadd = function iadd (a, b) {
                this._verify2(a, b);

                var res = a.iadd(b);
                if (res.cmp(this.m) >= 0) {
                    res.isub(this.m);
                }
                return res;
            };

            Red.prototype.sub = function sub (a, b) {
                this._verify2(a, b);

                var res = a.sub(b);
                if (res.cmpn(0) < 0) {
                    res.iadd(this.m);
                }
                return res._forceRed(this);
            };

            Red.prototype.isub = function isub (a, b) {
                this._verify2(a, b);

                var res = a.isub(b);
                if (res.cmpn(0) < 0) {
                    res.iadd(this.m);
                }
                return res;
            };

            Red.prototype.shl = function shl (a, num) {
                this._verify1(a);
                return this.imod(a.ushln(num));
            };

            Red.prototype.imul = function imul (a, b) {
                this._verify2(a, b);
                return this.imod(a.imul(b));
            };

            Red.prototype.mul = function mul (a, b) {
                this._verify2(a, b);
                return this.imod(a.mul(b));
            };

            Red.prototype.isqr = function isqr (a) {
                return this.imul(a, a.clone());
            };

            Red.prototype.sqr = function sqr (a) {
                return this.mul(a, a);
            };

            Red.prototype.sqrt = function sqrt (a) {
                if (a.isZero()) return a.clone();

                var mod3 = this.m.andln(3);
                assert(mod3 % 2 === 1);

                // Fast case
                if (mod3 === 3) {
                    var pow = this.m.add(new BN(1)).iushrn(2);
                    return this.pow(a, pow);
                }

                // Tonelli-Shanks algorithm (Totally unoptimized and slow)
                //
                // Find Q and S, that Q * 2 ^ S = (P - 1)
                var q = this.m.subn(1);
                var s = 0;
                while (!q.isZero() && q.andln(1) === 0) {
                    s++;
                    q.iushrn(1);
                }
                assert(!q.isZero());

                var one = new BN(1).toRed(this);
                var nOne = one.redNeg();

                // Find quadratic non-residue
                // NOTE: Max is such because of generalized Riemann hypothesis.
                var lpow = this.m.subn(1).iushrn(1);
                var z = this.m.bitLength();
                z = new BN(2 * z * z).toRed(this);

                while (this.pow(z, lpow).cmp(nOne) !== 0) {
                    z.redIAdd(nOne);
                }

                var c = this.pow(z, q);
                var r = this.pow(a, q.addn(1).iushrn(1));
                var t = this.pow(a, q);
                var m = s;
                while (t.cmp(one) !== 0) {
                    var tmp = t;
                    for (var i = 0; tmp.cmp(one) !== 0; i++) {
                        tmp = tmp.redSqr();
                    }
                    assert(i < m);
                    var b = this.pow(c, new BN(1).iushln(m - i - 1));

                    r = r.redMul(b);
                    c = b.redSqr();
                    t = t.redMul(c);
                    m = i;
                }

                return r;
            };

            Red.prototype.invm = function invm (a) {
                var inv = a._invmp(this.m);
                if (inv.negative !== 0) {
                    inv.negative = 0;
                    return this.imod(inv).redNeg();
                } else {
                    return this.imod(inv);
                }
            };

            Red.prototype.pow = function pow (a, num) {
                if (num.isZero()) return new BN(1).toRed(this);
                if (num.cmpn(1) === 0) return a.clone();

                var windowSize = 4;
                var wnd = new Array(1 << windowSize);
                wnd[0] = new BN(1).toRed(this);
                wnd[1] = a;
                for (var i = 2; i < wnd.length; i++) {
                    wnd[i] = this.mul(wnd[i - 1], a);
                }

                var res = wnd[0];
                var current = 0;
                var currentLen = 0;
                var start = num.bitLength() % 26;
                if (start === 0) {
                    start = 26;
                }

                for (i = num.length - 1; i >= 0; i--) {
                    var word = num.words[i];
                    for (var j = start - 1; j >= 0; j--) {
                        var bit = (word >> j) & 1;
                        if (res !== wnd[0]) {
                            res = this.sqr(res);
                        }

                        if (bit === 0 && current === 0) {
                            currentLen = 0;
                            continue;
                        }

                        current <<= 1;
                        current |= bit;
                        currentLen++;
                        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

                        res = this.mul(res, wnd[current]);
                        currentLen = 0;
                        current = 0;
                    }
                    start = 26;
                }

                return res;
            };

            Red.prototype.convertTo = function convertTo (num) {
                var r = num.umod(this.m);

                return r === num ? r.clone() : r;
            };

            Red.prototype.convertFrom = function convertFrom (num) {
                var res = num.clone();
                res.red = null;
                return res;
            };

            //
            // Montgomery method engine
            //

            BN.mont = function mont (num) {
                return new Mont(num);
            };

            function Mont (m) {
                Red.call(this, m);

                this.shift = this.m.bitLength();
                if (this.shift % 26 !== 0) {
                    this.shift += 26 - (this.shift % 26);
                }

                this.r = new BN(1).iushln(this.shift);
                this.r2 = this.imod(this.r.sqr());
                this.rinv = this.r._invmp(this.m);

                this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
                this.minv = this.minv.umod(this.r);
                this.minv = this.r.sub(this.minv);
            }
            inherits(Mont, Red);

            Mont.prototype.convertTo = function convertTo (num) {
                return this.imod(num.ushln(this.shift));
            };

            Mont.prototype.convertFrom = function convertFrom (num) {
                var r = this.imod(num.mul(this.rinv));
                r.red = null;
                return r;
            };

            Mont.prototype.imul = function imul (a, b) {
                if (a.isZero() || b.isZero()) {
                    a.words[0] = 0;
                    a.length = 1;
                    return a;
                }

                var t = a.imul(b);
                var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
                var u = t.isub(c).iushrn(this.shift);
                var res = u;

                if (u.cmp(this.m) >= 0) {
                    res = u.isub(this.m);
                } else if (u.cmpn(0) < 0) {
                    res = u.iadd(this.m);
                }

                return res._forceRed(this);
            };

            Mont.prototype.mul = function mul (a, b) {
                if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

                var t = a.mul(b);
                var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
                var u = t.isub(c).iushrn(this.shift);
                var res = u;
                if (u.cmp(this.m) >= 0) {
                    res = u.isub(this.m);
                } else if (u.cmpn(0) < 0) {
                    res = u.iadd(this.m);
                }

                return res._forceRed(this);
            };

            Mont.prototype.invm = function invm (a) {
                // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
                var res = this.imod(a._invmp(this.m).mul(this.r2));
                return res._forceRed(this);
            };
        })(typeof module === 'undefined' || module, this);

    },{"buffer":24}],23:[function(require,module,exports){
        var r;

        module.exports = function rand(len) {
            if (!r)
                r = new Rand(null);

            return r.generate(len);
        };

        function Rand(rand) {
            this.rand = rand;
        }
        module.exports.Rand = Rand;

        Rand.prototype.generate = function generate(len) {
            return this._rand(len);
        };

// Emulate crypto API using randy
        Rand.prototype._rand = function _rand(n) {
            if (this.rand.getBytes)
                return this.rand.getBytes(n);

            var res = new Uint8Array(n);
            for (var i = 0; i < res.length; i++)
                res[i] = this.rand.getByte();
            return res;
        };

        if (typeof self === 'object') {
            if (self.crypto && self.crypto.getRandomValues) {
                // Modern browsers
                Rand.prototype._rand = function _rand(n) {
                    var arr = new Uint8Array(n);
                    self.crypto.getRandomValues(arr);
                    return arr;
                };
            } else if (self.msCrypto && self.msCrypto.getRandomValues) {
                // IE
                Rand.prototype._rand = function _rand(n) {
                    var arr = new Uint8Array(n);
                    self.msCrypto.getRandomValues(arr);
                    return arr;
                };

                // Safari's WebWorkers do not have `crypto`
            } else if (typeof window === 'object') {
                // Old junk
                Rand.prototype._rand = function() {
                    throw new Error('Not implemented yet');
                };
            }
        } else {
            // Node.js or Web worker with no crypto support
            try {
                var crypto = require('crypto');
                if (typeof crypto.randomBytes !== 'function')
                    throw new Error('Not supported');

                Rand.prototype._rand = function _rand(n) {
                    return crypto.randomBytes(n);
                };
            } catch (e) {
            }
        }

    },{"crypto":24}],24:[function(require,module,exports){

    },{}],25:[function(require,module,exports){
// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

        var Buffer = require('safe-buffer').Buffer

        function asUInt32Array (buf) {
            if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)

            var len = (buf.length / 4) | 0
            var out = new Array(len)

            for (var i = 0; i < len; i++) {
                out[i] = buf.readUInt32BE(i * 4)
            }

            return out
        }

        function scrubVec (v) {
            for (var i = 0; i < v.length; v++) {
                v[i] = 0
            }
        }

        function cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {
            var SUB_MIX0 = SUB_MIX[0]
            var SUB_MIX1 = SUB_MIX[1]
            var SUB_MIX2 = SUB_MIX[2]
            var SUB_MIX3 = SUB_MIX[3]

            var s0 = M[0] ^ keySchedule[0]
            var s1 = M[1] ^ keySchedule[1]
            var s2 = M[2] ^ keySchedule[2]
            var s3 = M[3] ^ keySchedule[3]
            var t0, t1, t2, t3
            var ksRow = 4

            for (var round = 1; round < nRounds; round++) {
                t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
                t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
                t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
                t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
                s0 = t0
                s1 = t1
                s2 = t2
                s3 = t3
            }

            t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
            t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
            t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
            t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
            t0 = t0 >>> 0
            t1 = t1 >>> 0
            t2 = t2 >>> 0
            t3 = t3 >>> 0

            return [t0, t1, t2, t3]
        }

// AES constants
        var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
        var G = (function () {
            // Compute double table
            var d = new Array(256)
            for (var j = 0; j < 256; j++) {
                if (j < 128) {
                    d[j] = j << 1
                } else {
                    d[j] = (j << 1) ^ 0x11b
                }
            }

            var SBOX = []
            var INV_SBOX = []
            var SUB_MIX = [[], [], [], []]
            var INV_SUB_MIX = [[], [], [], []]

            // Walk GF(2^8)
            var x = 0
            var xi = 0
            for (var i = 0; i < 256; ++i) {
                // Compute sbox
                var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
                sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
                SBOX[x] = sx
                INV_SBOX[sx] = x

                // Compute multiplication
                var x2 = d[x]
                var x4 = d[x2]
                var x8 = d[x4]

                // Compute sub bytes, mix columns tables
                var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
                SUB_MIX[0][x] = (t << 24) | (t >>> 8)
                SUB_MIX[1][x] = (t << 16) | (t >>> 16)
                SUB_MIX[2][x] = (t << 8) | (t >>> 24)
                SUB_MIX[3][x] = t

                // Compute inv sub bytes, inv mix columns tables
                t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
                INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
                INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
                INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
                INV_SUB_MIX[3][sx] = t

                if (x === 0) {
                    x = xi = 1
                } else {
                    x = x2 ^ d[d[d[x8 ^ x2]]]
                    xi ^= d[d[xi]]
                }
            }

            return {
                SBOX: SBOX,
                INV_SBOX: INV_SBOX,
                SUB_MIX: SUB_MIX,
                INV_SUB_MIX: INV_SUB_MIX
            }
        })()

        function AES (key) {
            this._key = asUInt32Array(key)
            this._reset()
        }

        AES.blockSize = 4 * 4
        AES.keySize = 256 / 8
        AES.prototype.blockSize = AES.blockSize
        AES.prototype.keySize = AES.keySize
        AES.prototype._reset = function () {
            var keyWords = this._key
            var keySize = keyWords.length
            var nRounds = keySize + 6
            var ksRows = (nRounds + 1) * 4

            var keySchedule = []
            for (var k = 0; k < keySize; k++) {
                keySchedule[k] = keyWords[k]
            }

            for (k = keySize; k < ksRows; k++) {
                var t = keySchedule[k - 1]

                if (k % keySize === 0) {
                    t = (t << 8) | (t >>> 24)
                    t =
                        (G.SBOX[t >>> 24] << 24) |
                        (G.SBOX[(t >>> 16) & 0xff] << 16) |
                        (G.SBOX[(t >>> 8) & 0xff] << 8) |
                        (G.SBOX[t & 0xff])

                    t ^= RCON[(k / keySize) | 0] << 24
                } else if (keySize > 6 && k % keySize === 4) {
                    t =
                        (G.SBOX[t >>> 24] << 24) |
                        (G.SBOX[(t >>> 16) & 0xff] << 16) |
                        (G.SBOX[(t >>> 8) & 0xff] << 8) |
                        (G.SBOX[t & 0xff])
                }

                keySchedule[k] = keySchedule[k - keySize] ^ t
            }

            var invKeySchedule = []
            for (var ik = 0; ik < ksRows; ik++) {
                var ksR = ksRows - ik
                var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

                if (ik < 4 || ksR <= 4) {
                    invKeySchedule[ik] = tt
                } else {
                    invKeySchedule[ik] =
                        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
                        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
                        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
                        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
                }
            }

            this._nRounds = nRounds
            this._keySchedule = keySchedule
            this._invKeySchedule = invKeySchedule
        }

        AES.prototype.encryptBlockRaw = function (M) {
            M = asUInt32Array(M)
            return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
        }

        AES.prototype.encryptBlock = function (M) {
            var out = this.encryptBlockRaw(M)
            var buf = Buffer.allocUnsafe(16)
            buf.writeUInt32BE(out[0], 0)
            buf.writeUInt32BE(out[1], 4)
            buf.writeUInt32BE(out[2], 8)
            buf.writeUInt32BE(out[3], 12)
            return buf
        }

        AES.prototype.decryptBlock = function (M) {
            M = asUInt32Array(M)

            // swap
            var m1 = M[1]
            M[1] = M[3]
            M[3] = m1

            var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
            var buf = Buffer.allocUnsafe(16)
            buf.writeUInt32BE(out[0], 0)
            buf.writeUInt32BE(out[3], 4)
            buf.writeUInt32BE(out[2], 8)
            buf.writeUInt32BE(out[1], 12)
            return buf
        }

        AES.prototype.scrub = function () {
            scrubVec(this._keySchedule)
            scrubVec(this._invKeySchedule)
            scrubVec(this._key)
        }

        module.exports.AES = AES

    },{"safe-buffer":184}],26:[function(require,module,exports){
        var aes = require('./aes')
        var Buffer = require('safe-buffer').Buffer
        var Transform = require('cipher-base')
        var inherits = require('inherits')
        var GHASH = require('./ghash')
        var xor = require('buffer-xor')
        var incr32 = require('./incr32')

        function xorTest (a, b) {
            var out = 0
            if (a.length !== b.length) out++

            var len = Math.min(a.length, b.length)
            for (var i = 0; i < len; ++i) {
                out += (a[i] ^ b[i])
            }

            return out
        }

        function calcIv (self, iv, ck) {
            if (iv.length === 12) {
                self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
                return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])
            }
            var ghash = new GHASH(ck)
            var len = iv.length
            var toPad = len % 16
            ghash.update(iv)
            if (toPad) {
                toPad = 16 - toPad
                ghash.update(Buffer.alloc(toPad, 0))
            }
            ghash.update(Buffer.alloc(8, 0))
            var ivBits = len * 8
            var tail = Buffer.alloc(8)
            tail.writeUIntBE(ivBits, 0, 8)
            ghash.update(tail)
            self._finID = ghash.state
            var out = Buffer.from(self._finID)
            incr32(out)
            return out
        }
        function StreamCipher (mode, key, iv, decrypt) {
            Transform.call(this)

            var h = Buffer.alloc(4, 0)

            this._cipher = new aes.AES(key)
            var ck = this._cipher.encryptBlock(h)
            this._ghash = new GHASH(ck)
            iv = calcIv(this, iv, ck)

            this._prev = Buffer.from(iv)
            this._cache = Buffer.allocUnsafe(0)
            this._secCache = Buffer.allocUnsafe(0)
            this._decrypt = decrypt
            this._alen = 0
            this._len = 0
            this._mode = mode

            this._authTag = null
            this._called = false
        }

        inherits(StreamCipher, Transform)

        StreamCipher.prototype._update = function (chunk) {
            if (!this._called && this._alen) {
                var rump = 16 - (this._alen % 16)
                if (rump < 16) {
                    rump = Buffer.alloc(rump, 0)
                    this._ghash.update(rump)
                }
            }

            this._called = true
            var out = this._mode.encrypt(this, chunk)
            if (this._decrypt) {
                this._ghash.update(chunk)
            } else {
                this._ghash.update(out)
            }
            this._len += chunk.length
            return out
        }

        StreamCipher.prototype._final = function () {
            if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')

            var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
            if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')

            this._authTag = tag
            this._cipher.scrub()
        }

        StreamCipher.prototype.getAuthTag = function getAuthTag () {
            if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')

            return this._authTag
        }

        StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
            if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')

            this._authTag = tag
        }

        StreamCipher.prototype.setAAD = function setAAD (buf) {
            if (this._called) throw new Error('Attempting to set AAD in unsupported state')

            this._ghash.update(buf)
            this._alen += buf.length
        }

        module.exports = StreamCipher

    },{"./aes":25,"./ghash":30,"./incr32":31,"buffer-xor":69,"cipher-base":70,"inherits":140,"safe-buffer":184}],27:[function(require,module,exports){
        var ciphers = require('./encrypter')
        var deciphers = require('./decrypter')
        var modes = require('./modes/list.json')

        function getCiphers () {
            return Object.keys(modes)
        }

        exports.createCipher = exports.Cipher = ciphers.createCipher
        exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
        exports.createDecipher = exports.Decipher = deciphers.createDecipher
        exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
        exports.listCiphers = exports.getCiphers = getCiphers

    },{"./decrypter":28,"./encrypter":29,"./modes/list.json":39}],28:[function(require,module,exports){
        var AuthCipher = require('./authCipher')
        var Buffer = require('safe-buffer').Buffer
        var MODES = require('./modes')
        var StreamCipher = require('./streamCipher')
        var Transform = require('cipher-base')
        var aes = require('./aes')
        var ebtk = require('evp_bytestokey')
        var inherits = require('inherits')

        function Decipher (mode, key, iv) {
            Transform.call(this)

            this._cache = new Splitter()
            this._last = void 0
            this._cipher = new aes.AES(key)
            this._prev = Buffer.from(iv)
            this._mode = mode
            this._autopadding = true
        }

        inherits(Decipher, Transform)

        Decipher.prototype._update = function (data) {
            this._cache.add(data)
            var chunk
            var thing
            var out = []
            while ((chunk = this._cache.get(this._autopadding))) {
                thing = this._mode.decrypt(this, chunk)
                out.push(thing)
            }
            return Buffer.concat(out)
        }

        Decipher.prototype._final = function () {
            var chunk = this._cache.flush()
            if (this._autopadding) {
                return unpad(this._mode.decrypt(this, chunk))
            } else if (chunk) {
                throw new Error('data not multiple of block length')
            }
        }

        Decipher.prototype.setAutoPadding = function (setTo) {
            this._autopadding = !!setTo
            return this
        }

        function Splitter () {
            this.cache = Buffer.allocUnsafe(0)
        }

        Splitter.prototype.add = function (data) {
            this.cache = Buffer.concat([this.cache, data])
        }

        Splitter.prototype.get = function (autoPadding) {
            var out
            if (autoPadding) {
                if (this.cache.length > 16) {
                    out = this.cache.slice(0, 16)
                    this.cache = this.cache.slice(16)
                    return out
                }
            } else {
                if (this.cache.length >= 16) {
                    out = this.cache.slice(0, 16)
                    this.cache = this.cache.slice(16)
                    return out
                }
            }

            return null
        }

        Splitter.prototype.flush = function () {
            if (this.cache.length) return this.cache
        }

        function unpad (last) {
            var padded = last[15]
            if (padded < 1 || padded > 16) {
                throw new Error('unable to decrypt data')
            }
            var i = -1
            while (++i < padded) {
                if (last[(i + (16 - padded))] !== padded) {
                    throw new Error('unable to decrypt data')
                }
            }
            if (padded === 16) return

            return last.slice(0, 16 - padded)
        }

        function createDecipheriv (suite, password, iv) {
            var config = MODES[suite.toLowerCase()]
            if (!config) throw new TypeError('invalid suite type')

            if (typeof iv === 'string') iv = Buffer.from(iv)
            if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

            if (typeof password === 'string') password = Buffer.from(password)
            if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

            if (config.type === 'stream') {
                return new StreamCipher(config.module, password, iv, true)
            } else if (config.type === 'auth') {
                return new AuthCipher(config.module, password, iv, true)
            }

            return new Decipher(config.module, password, iv)
        }

        function createDecipher (suite, password) {
            var config = MODES[suite.toLowerCase()]
            if (!config) throw new TypeError('invalid suite type')

            var keys = ebtk(password, false, config.key, config.iv)
            return createDecipheriv(suite, keys.key, keys.iv)
        }

        exports.createDecipher = createDecipher
        exports.createDecipheriv = createDecipheriv

    },{"./aes":25,"./authCipher":26,"./modes":38,"./streamCipher":41,"cipher-base":70,"evp_bytestokey":109,"inherits":140,"safe-buffer":184}],29:[function(require,module,exports){
        var MODES = require('./modes')
        var AuthCipher = require('./authCipher')
        var Buffer = require('safe-buffer').Buffer
        var StreamCipher = require('./streamCipher')
        var Transform = require('cipher-base')
        var aes = require('./aes')
        var ebtk = require('evp_bytestokey')
        var inherits = require('inherits')

        function Cipher (mode, key, iv) {
            Transform.call(this)

            this._cache = new Splitter()
            this._cipher = new aes.AES(key)
            this._prev = Buffer.from(iv)
            this._mode = mode
            this._autopadding = true
        }

        inherits(Cipher, Transform)

        Cipher.prototype._update = function (data) {
            this._cache.add(data)
            var chunk
            var thing
            var out = []

            while ((chunk = this._cache.get())) {
                thing = this._mode.encrypt(this, chunk)
                out.push(thing)
            }

            return Buffer.concat(out)
        }

        var PADDING = Buffer.alloc(16, 0x10)

        Cipher.prototype._final = function () {
            var chunk = this._cache.flush()
            if (this._autopadding) {
                chunk = this._mode.encrypt(this, chunk)
                this._cipher.scrub()
                return chunk
            }

            if (!chunk.equals(PADDING)) {
                this._cipher.scrub()
                throw new Error('data not multiple of block length')
            }
        }

        Cipher.prototype.setAutoPadding = function (setTo) {
            this._autopadding = !!setTo
            return this
        }

        function Splitter () {
            this.cache = Buffer.allocUnsafe(0)
        }

        Splitter.prototype.add = function (data) {
            this.cache = Buffer.concat([this.cache, data])
        }

        Splitter.prototype.get = function () {
            if (this.cache.length > 15) {
                var out = this.cache.slice(0, 16)
                this.cache = this.cache.slice(16)
                return out
            }
            return null
        }

        Splitter.prototype.flush = function () {
            var len = 16 - this.cache.length
            var padBuff = Buffer.allocUnsafe(len)

            var i = -1
            while (++i < len) {
                padBuff.writeUInt8(len, i)
            }

            return Buffer.concat([this.cache, padBuff])
        }

        function createCipheriv (suite, password, iv) {
            var config = MODES[suite.toLowerCase()]
            if (!config) throw new TypeError('invalid suite type')

            if (typeof password === 'string') password = Buffer.from(password)
            if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

            if (typeof iv === 'string') iv = Buffer.from(iv)
            if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

            if (config.type === 'stream') {
                return new StreamCipher(config.module, password, iv)
            } else if (config.type === 'auth') {
                return new AuthCipher(config.module, password, iv)
            }

            return new Cipher(config.module, password, iv)
        }

        function createCipher (suite, password) {
            var config = MODES[suite.toLowerCase()]
            if (!config) throw new TypeError('invalid suite type')

            var keys = ebtk(password, false, config.key, config.iv)
            return createCipheriv(suite, keys.key, keys.iv)
        }

        exports.createCipheriv = createCipheriv
        exports.createCipher = createCipher

    },{"./aes":25,"./authCipher":26,"./modes":38,"./streamCipher":41,"cipher-base":70,"evp_bytestokey":109,"inherits":140,"safe-buffer":184}],30:[function(require,module,exports){
        var Buffer = require('safe-buffer').Buffer
        var ZEROES = Buffer.alloc(16, 0)

        function toArray (buf) {
            return [
                buf.readUInt32BE(0),
                buf.readUInt32BE(4),
                buf.readUInt32BE(8),
                buf.readUInt32BE(12)
            ]
        }

        function fromArray (out) {
            var buf = Buffer.allocUnsafe(16)
            buf.writeUInt32BE(out[0] >>> 0, 0)
            buf.writeUInt32BE(out[1] >>> 0, 4)
            buf.writeUInt32BE(out[2] >>> 0, 8)
            buf.writeUInt32BE(out[3] >>> 0, 12)
            return buf
        }

        function GHASH (key) {
            this.h = key
            this.state = Buffer.alloc(16, 0)
            this.cache = Buffer.allocUnsafe(0)
        }

// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
        GHASH.prototype.ghash = function (block) {
            var i = -1
            while (++i < block.length) {
                this.state[i] ^= block[i]
            }
            this._multiply()
        }

        GHASH.prototype._multiply = function () {
            var Vi = toArray(this.h)
            var Zi = [0, 0, 0, 0]
            var j, xi, lsbVi
            var i = -1
            while (++i < 128) {
                xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
                if (xi) {
                    // Z_i+1 = Z_i ^ V_i
                    Zi[0] ^= Vi[0]
                    Zi[1] ^= Vi[1]
                    Zi[2] ^= Vi[2]
                    Zi[3] ^= Vi[3]
                }

                // Store the value of LSB(V_i)
                lsbVi = (Vi[3] & 1) !== 0

                // V_i+1 = V_i >> 1
                for (j = 3; j > 0; j--) {
                    Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
                }
                Vi[0] = Vi[0] >>> 1

                // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
                if (lsbVi) {
                    Vi[0] = Vi[0] ^ (0xe1 << 24)
                }
            }
            this.state = fromArray(Zi)
        }

        GHASH.prototype.update = function (buf) {
            this.cache = Buffer.concat([this.cache, buf])
            var chunk
            while (this.cache.length >= 16) {
                chunk = this.cache.slice(0, 16)
                this.cache = this.cache.slice(16)
                this.ghash(chunk)
            }
        }

        GHASH.prototype.final = function (abl, bl) {
            if (this.cache.length) {
                this.ghash(Buffer.concat([this.cache, ZEROES], 16))
            }

            this.ghash(fromArray([0, abl, 0, bl]))
            return this.state
        }

        module.exports = GHASH

    },{"safe-buffer":184}],31:[function(require,module,exports){
        function incr32 (iv) {
            var len = iv.length
            var item
            while (len--) {
                item = iv.readUInt8(len)
                if (item === 255) {
                    iv.writeUInt8(0, len)
                } else {
                    item++
                    iv.writeUInt8(item, len)
                    break
                }
            }
        }
        module.exports = incr32

    },{}],32:[function(require,module,exports){
        var xor = require('buffer-xor')

        exports.encrypt = function (self, block) {
            var data = xor(block, self._prev)

            self._prev = self._cipher.encryptBlock(data)
            return self._prev
        }

        exports.decrypt = function (self, block) {
            var pad = self._prev

            self._prev = block
            var out = self._cipher.decryptBlock(block)

            return xor(out, pad)
        }

    },{"buffer-xor":69}],33:[function(require,module,exports){
        var Buffer = require('safe-buffer').Buffer
        var xor = require('buffer-xor')

        function encryptStart (self, data, decrypt) {
            var len = data.length
            var out = xor(data, self._cache)
            self._cache = self._cache.slice(len)
            self._prev = Buffer.concat([self._prev, decrypt ? data : out])
            return out
        }

        exports.encrypt = function (self, data, decrypt) {
            var out = Buffer.allocUnsafe(0)
            var len

            while (data.length) {
                if (self._cache.length === 0) {
                    self._cache = self._cipher.encryptBlock(self._prev)
                    self._prev = Buffer.allocUnsafe(0)
                }

                if (self._cache.length <= data.length) {
                    len = self._cache.length
                    out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
                    data = data.slice(len)
                } else {
                    out = Buffer.concat([out, encryptStart(self, data, decrypt)])
                    break
                }
            }

            return out
        }

    },{"buffer-xor":69,"safe-buffer":184}],34:[function(require,module,exports){
        var Buffer = require('safe-buffer').Buffer

        function encryptByte (self, byteParam, decrypt) {
            var pad
            var i = -1
            var len = 8
            var out = 0
            var bit, value
            while (++i < len) {
                pad = self._cipher.encryptBlock(self._prev)
                bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
                value = pad[0] ^ bit
                out += ((value & 0x80) >> (i % 8))
                self._prev = shiftIn(self._prev, decrypt ? bit : value)
            }
            return out
        }

        function shiftIn (buffer, value) {
            var len = buffer.length
            var i = -1
            var out = Buffer.allocUnsafe(buffer.length)
            buffer = Buffer.concat([buffer, Buffer.from([value])])

            while (++i < len) {
                out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
            }

            return out
        }

        exports.encrypt = function (self, chunk, decrypt) {
            var len = chunk.length
            var out = Buffer.allocUnsafe(len)
            var i = -1

            while (++i < len) {
                out[i] = encryptByte(self, chunk[i], decrypt)
            }

            return out
        }

    },{"safe-buffer":184}],35:[function(require,module,exports){
        var Buffer = require('safe-buffer').Buffer

        function encryptByte (self, byteParam, decrypt) {
            var pad = self._cipher.encryptBlock(self._prev)
            var out = pad[0] ^ byteParam

            self._prev = Buffer.concat([
                self._prev.slice(1),
                Buffer.from([decrypt ? byteParam : out])
            ])

            return out
        }

        exports.encrypt = function (self, chunk, decrypt) {
            var len = chunk.length
            var out = Buffer.allocUnsafe(len)
            var i = -1

            while (++i < len) {
                out[i] = encryptByte(self, chunk[i], decrypt)
            }

            return out
        }

    },{"safe-buffer":184}],36:[function(require,module,exports){
        var xor = require('buffer-xor')
        var Buffer = require('safe-buffer').Buffer
        var incr32 = require('../incr32')

        function getBlock (self) {
            var out = self._cipher.encryptBlockRaw(self._prev)
            incr32(self._prev)
            return out
        }

        var blockSize = 16
        exports.encrypt = function (self, chunk) {
            var chunkNum = Math.ceil(chunk.length / blockSize)
            var start = self._cache.length
            self._cache = Buffer.concat([
                self._cache,
                Buffer.allocUnsafe(chunkNum * blockSize)
            ])
            for (var i = 0; i < chunkNum; i++) {
                var out = getBlock(self)
                var offset = start + i * blockSize
                self._cache.writeUInt32BE(out[0], offset + 0)
                self._cache.writeUInt32BE(out[1], offset + 4)
                self._cache.writeUInt32BE(out[2], offset + 8)
                self._cache.writeUInt32BE(out[3], offset + 12)
            }
            var pad = self._cache.slice(0, chunk.length)
            self._cache = self._cache.slice(chunk.length)
            return xor(chunk, pad)
        }

    },{"../incr32":31,"buffer-xor":69,"safe-buffer":184}],37:[function(require,module,exports){
        exports.encrypt = function (self, block) {
            return self._cipher.encryptBlock(block)
        }

        exports.decrypt = function (self, block) {
            return self._cipher.decryptBlock(block)
        }

    },{}],38:[function(require,module,exports){
        var modeModules = {
            ECB: require('./ecb'),
            CBC: require('./cbc'),
            CFB: require('./cfb'),
            CFB8: require('./cfb8'),
            CFB1: require('./cfb1'),
            OFB: require('./ofb'),
            CTR: require('./ctr'),
            GCM: require('./ctr')
        }

        var modes = require('./list.json')

        for (var key in modes) {
            modes[key].module = modeModules[modes[key].mode]
        }

        module.exports = modes

    },{"./cbc":32,"./cfb":33,"./cfb1":34,"./cfb8":35,"./ctr":36,"./ecb":37,"./list.json":39,"./ofb":40}],39:[function(require,module,exports){
        module.exports={
            "aes-128-ecb": {
                "cipher": "AES",
                "key": 128,
                "iv": 0,
                "mode": "ECB",
                "type": "block"
            },
            "aes-192-ecb": {
                "cipher": "AES",
                "key": 192,
                "iv": 0,
                "mode": "ECB",
                "type": "block"
            },
            "aes-256-ecb": {
                "cipher": "AES",
                "key": 256,
                "iv": 0,
                "mode": "ECB",
                "type": "block"
            },
            "aes-128-cbc": {
                "cipher": "AES",
                "key": 128,
                "iv": 16,
                "mode": "CBC",
                "type": "block"
            },
            "aes-192-cbc": {
                "cipher": "AES",
                "key": 192,
                "iv": 16,
                "mode": "CBC",
                "type": "block"
            },
            "aes-256-cbc": {
                "cipher": "AES",
                "key": 256,
                "iv": 16,
                "mode": "CBC",
                "type": "block"
            },
            "aes128": {
                "cipher": "AES",
                "key": 128,
                "iv": 16,
                "mode": "CBC",
                "type": "block"
            },
            "aes192": {
                "cipher": "AES",
                "key": 192,
                "iv": 16,
                "mode": "CBC",
                "type": "block"
            },
            "aes256": {
                "cipher": "AES",
                "key": 256,
                "iv": 16,
                "mode": "CBC",
                "type": "block"
            },
            "aes-128-cfb": {
                "cipher": "AES",
                "key": 128,
                "iv": 16,
                "mode": "CFB",
                "type": "stream"
            },
            "aes-192-cfb": {
                "cipher": "AES",
                "key": 192,
                "iv": 16,
                "mode": "CFB",
                "type": "stream"
            },
            "aes-256-cfb": {
                "cipher": "AES",
                "key": 256,
                "iv": 16,
                "mode": "CFB",
                "type": "stream"
            },
            "aes-128-cfb8": {
                "cipher": "AES",
                "key": 128,
                "iv": 16,
                "mode": "CFB8",
                "type": "stream"
            },
            "aes-192-cfb8": {
                "cipher": "AES",
                "key": 192,
                "iv": 16,
                "mode": "CFB8",
                "type": "stream"
            },
            "aes-256-cfb8": {
                "cipher": "AES",
                "key": 256,
                "iv": 16,
                "mode": "CFB8",
                "type": "stream"
            },
            "aes-128-cfb1": {
                "cipher": "AES",
                "key": 128,
                "iv": 16,
                "mode": "CFB1",
                "type": "stream"
            },
            "aes-192-cfb1": {
                "cipher": "AES",
                "key": 192,
                "iv": 16,
                "mode": "CFB1",
                "type": "stream"
            },
            "aes-256-cfb1": {
                "cipher": "AES",
                "key": 256,
                "iv": 16,
                "mode": "CFB1",
                "type": "stream"
            },
            "aes-128-ofb": {
                "cipher": "AES",
                "key": 128,
                "iv": 16,
                "mode": "OFB",
                "type": "stream"
            },
            "aes-192-ofb": {
                "cipher": "AES",
                "key": 192,
                "iv": 16,
                "mode": "OFB",
                "type": "stream"
            },
            "aes-256-ofb": {
                "cipher": "AES",
                "key": 256,
                "iv": 16,
                "mode": "OFB",
                "type": "stream"
            },
            "aes-128-ctr": {
                "cipher": "AES",
                "key": 128,
                "iv": 16,
                "mode": "CTR",
                "type": "stream"
            },
            "aes-192-ctr": {
                "cipher": "AES",
                "key": 192,
                "iv": 16,
                "mode": "CTR",
                "type": "stream"
            },
            "aes-256-ctr": {
                "cipher": "AES",
                "key": 256,
                "iv": 16,
                "mode": "CTR",
                "type": "stream"
            },
            "aes-128-gcm": {
                "cipher": "AES",
                "key": 128,
                "iv": 12,
                "mode": "GCM",
                "type": "auth"
            },
            "aes-192-gcm": {
                "cipher": "AES",
                "key": 192,
                "iv": 12,
                "mode": "GCM",
                "type": "auth"
            },
            "aes-256-gcm": {
                "cipher": "AES",
                "key": 256,
                "iv": 12,
                "mode": "GCM",
                "type": "auth"
            }
        }

    },{}],40:[function(require,module,exports){
        (function (Buffer){
            var xor = require('buffer-xor')

            function getBlock (self) {
                self._prev = self._cipher.encryptBlock(self._prev)
                return self._prev
            }

            exports.encrypt = function (self, chunk) {
                while (self._cache.length < chunk.length) {
                    self._cache = Buffer.concat([self._cache, getBlock(self)])
                }

                var pad = self._cache.slice(0, chunk.length)
                self._cache = self._cache.slice(chunk.length)
                return xor(chunk, pad)
            }

        }).call(this,require("buffer").Buffer)
    },{"buffer":68,"buffer-xor":69}],41:[function(require,module,exports){
        var aes = require('./aes')
        var Buffer = require('safe-buffer').Buffer
        var Transform = require('cipher-base')
        var inherits = require('inherits')

        function StreamCipher (mode, key, iv, decrypt) {
            Transform.call(this)

            this._cipher = new aes.AES(key)
            this._prev = Buffer.from(iv)
            this._cache = Buffer.allocUnsafe(0)
            this._secCache = Buffer.allocUnsafe(0)
            this._decrypt = decrypt
            this._mode = mode
        }

        inherits(StreamCipher, Transform)

        StreamCipher.prototype._update = function (chunk) {
            return this._mode.encrypt(this, chunk, this._decrypt)
        }

        StreamCipher.prototype._final = function () {
            this._cipher.scrub()
        }

        module.exports = StreamCipher

    },{"./aes":25,"cipher-base":70,"inherits":140,"safe-buffer":184}],42:[function(require,module,exports){
        var DES = require('browserify-des')
        var aes = require('browserify-aes/browser')
        var aesModes = require('browserify-aes/modes')
        var desModes = require('browserify-des/modes')
        var ebtk = require('evp_bytestokey')

        function createCipher (suite, password) {
            suite = suite.toLowerCase()

            var keyLen, ivLen
            if (aesModes[suite]) {
                keyLen = aesModes[suite].key
                ivLen = aesModes[suite].iv
            } else if (desModes[suite]) {
                keyLen = desModes[suite].key * 8
                ivLen = desModes[suite].iv
            } else {
                throw new TypeError('invalid suite type')
            }

            var keys = ebtk(password, false, keyLen, ivLen)
            return createCipheriv(suite, keys.key, keys.iv)
        }

        function createDecipher (suite, password) {
            suite = suite.toLowerCase()

            var keyLen, ivLen
            if (aesModes[suite]) {
                keyLen = aesModes[suite].key
                ivLen = aesModes[suite].iv
            } else if (desModes[suite]) {
                keyLen = desModes[suite].key * 8
                ivLen = desModes[suite].iv
            } else {
                throw new TypeError('invalid suite type')
            }

            var keys = ebtk(password, false, keyLen, ivLen)
            return createDecipheriv(suite, keys.key, keys.iv)
        }

        function createCipheriv (suite, key, iv) {
            suite = suite.toLowerCase()
            if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)
            if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })

            throw new TypeError('invalid suite type')
        }

        function createDecipheriv (suite, key, iv) {
            suite = suite.toLowerCase()
            if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)
            if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })

            throw new TypeError('invalid suite type')
        }

        function getCiphers () {
            return Object.keys(desModes).concat(aes.getCiphers())
        }

        exports.createCipher = exports.Cipher = createCipher
        exports.createCipheriv = exports.Cipheriv = createCipheriv
        exports.createDecipher = exports.Decipher = createDecipher
        exports.createDecipheriv = exports.Decipheriv = createDecipheriv
        exports.listCiphers = exports.getCiphers = getCiphers

    },{"browserify-aes/browser":27,"browserify-aes/modes":38,"browserify-des":43,"browserify-des/modes":44,"evp_bytestokey":109}],43:[function(require,module,exports){
        var CipherBase = require('cipher-base')
        var des = require('des.js')
        var inherits = require('inherits')
        var Buffer = require('safe-buffer').Buffer

        var modes = {
            'des-ede3-cbc': des.CBC.instantiate(des.EDE),
            'des-ede3': des.EDE,
            'des-ede-cbc': des.CBC.instantiate(des.EDE),
            'des-ede': des.EDE,
            'des-cbc': des.CBC.instantiate(des.DES),
            'des-ecb': des.DES
        }
        modes.des = modes['des-cbc']
        modes.des3 = modes['des-ede3-cbc']
        module.exports = DES
        inherits(DES, CipherBase)
        function DES (opts) {
            CipherBase.call(this)
            var modeName = opts.mode.toLowerCase()
            var mode = modes[modeName]
            var type
            if (opts.decrypt) {
                type = 'decrypt'
            } else {
                type = 'encrypt'
            }
            var key = opts.key
            if (!Buffer.isBuffer(key)) {
                key = Buffer.from(key)
            }
            if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
                key = Buffer.concat([key, key.slice(0, 8)])
            }
            var iv = opts.iv
            if (!Buffer.isBuffer(iv)) {
                iv = Buffer.from(iv)
            }
            this._des = mode.create({
                key: key,
                iv: iv,
                type: type
            })
        }
        DES.prototype._update = function (data) {
            return Buffer.from(this._des.update(data))
        }
        DES.prototype._final = function () {
            return Buffer.from(this._des.final())
        }

    },{"cipher-base":70,"des.js":82,"inherits":140,"safe-buffer":184}],44:[function(require,module,exports){
        exports['des-ecb'] = {
            key: 8,
            iv: 0
        }
        exports['des-cbc'] = exports.des = {
            key: 8,
            iv: 8
        }
        exports['des-ede3-cbc'] = exports.des3 = {
            key: 24,
            iv: 8
        }
        exports['des-ede3'] = {
            key: 24,
            iv: 0
        }
        exports['des-ede-cbc'] = {
            key: 16,
            iv: 8
        }
        exports['des-ede'] = {
            key: 16,
            iv: 0
        }

    },{}],45:[function(require,module,exports){
        (function (Buffer){
            var bn = require('bn.js');
            var randomBytes = require('randombytes');
            module.exports = crt;
            function blind(priv) {
                var r = getr(priv);
                var blinder = r.toRed(bn.mont(priv.modulus))
                    .redPow(new bn(priv.publicExponent)).fromRed();
                return {
                    blinder: blinder,
                    unblinder:r.invm(priv.modulus)
                };
            }
            function crt(msg, priv) {
                var blinds = blind(priv);
                var len = priv.modulus.byteLength();
                var mod = bn.mont(priv.modulus);
                var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
                var c1 = blinded.toRed(bn.mont(priv.prime1));
                var c2 = blinded.toRed(bn.mont(priv.prime2));
                var qinv = priv.coefficient;
                var p = priv.prime1;
                var q = priv.prime2;
                var m1 = c1.redPow(priv.exponent1);
                var m2 = c2.redPow(priv.exponent2);
                m1 = m1.fromRed();
                m2 = m2.fromRed();
                var h = m1.isub(m2).imul(qinv).umod(p);
                h.imul(q);
                m2.iadd(h);
                return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));
            }
            crt.getr = getr;
            function getr(priv) {
                var len = priv.modulus.byteLength();
                var r = new bn(randomBytes(len));
                while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {
                    r = new bn(randomBytes(len));
                }
                return r;
            }

        }).call(this,require("buffer").Buffer)
    },{"bn.js":22,"buffer":68,"randombytes":166}],46:[function(require,module,exports){
        module.exports = require('./browser/algorithms.json')

    },{"./browser/algorithms.json":47}],47:[function(require,module,exports){
        module.exports={
            "sha224WithRSAEncryption": {
                "sign": "rsa",
                "hash": "sha224",
                "id": "302d300d06096086480165030402040500041c"
            },
            "RSA-SHA224": {
                "sign": "ecdsa/rsa",
                "hash": "sha224",
                "id": "302d300d06096086480165030402040500041c"
            },
            "sha256WithRSAEncryption": {
                "sign": "rsa",
                "hash": "sha256",
                "id": "3031300d060960864801650304020105000420"
            },
            "RSA-SHA256": {
                "sign": "ecdsa/rsa",
                "hash": "sha256",
                "id": "3031300d060960864801650304020105000420"
            },
            "sha384WithRSAEncryption": {
                "sign": "rsa",
                "hash": "sha384",
                "id": "3041300d060960864801650304020205000430"
            },
            "RSA-SHA384": {
                "sign": "ecdsa/rsa",
                "hash": "sha384",
                "id": "3041300d060960864801650304020205000430"
            },
            "sha512WithRSAEncryption": {
                "sign": "rsa",
                "hash": "sha512",
                "id": "3051300d060960864801650304020305000440"
            },
            "RSA-SHA512": {
                "sign": "ecdsa/rsa",
                "hash": "sha512",
                "id": "3051300d060960864801650304020305000440"
            },
            "RSA-SHA1": {
                "sign": "rsa",
                "hash": "sha1",
                "id": "3021300906052b0e03021a05000414"
            },
            "ecdsa-with-SHA1": {
                "sign": "ecdsa",
                "hash": "sha1",
                "id": ""
            },
            "sha256": {
                "sign": "ecdsa",
                "hash": "sha256",
                "id": ""
            },
            "sha224": {
                "sign": "ecdsa",
                "hash": "sha224",
                "id": ""
            },
            "sha384": {
                "sign": "ecdsa",
                "hash": "sha384",
                "id": ""
            },
            "sha512": {
                "sign": "ecdsa",
                "hash": "sha512",
                "id": ""
            },
            "DSA-SHA": {
                "sign": "dsa",
                "hash": "sha1",
                "id": ""
            },
            "DSA-SHA1": {
                "sign": "dsa",
                "hash": "sha1",
                "id": ""
            },
            "DSA": {
                "sign": "dsa",
                "hash": "sha1",
                "id": ""
            },
            "DSA-WITH-SHA224": {
                "sign": "dsa",
                "hash": "sha224",
                "id": ""
            },
            "DSA-SHA224": {
                "sign": "dsa",
                "hash": "sha224",
                "id": ""
            },
            "DSA-WITH-SHA256": {
                "sign": "dsa",
                "hash": "sha256",
                "id": ""
            },
            "DSA-SHA256": {
                "sign": "dsa",
                "hash": "sha256",
                "id": ""
            },
            "DSA-WITH-SHA384": {
                "sign": "dsa",
                "hash": "sha384",
                "id": ""
            },
            "DSA-SHA384": {
                "sign": "dsa",
                "hash": "sha384",
                "id": ""
            },
            "DSA-WITH-SHA512": {
                "sign": "dsa",
                "hash": "sha512",
                "id": ""
            },
            "DSA-SHA512": {
                "sign": "dsa",
                "hash": "sha512",
                "id": ""
            },
            "DSA-RIPEMD160": {
                "sign": "dsa",
                "hash": "rmd160",
                "id": ""
            },
            "ripemd160WithRSA": {
                "sign": "rsa",
                "hash": "rmd160",
                "id": "3021300906052b2403020105000414"
            },
            "RSA-RIPEMD160": {
                "sign": "rsa",
                "hash": "rmd160",
                "id": "3021300906052b2403020105000414"
            },
            "md5WithRSAEncryption": {
                "sign": "rsa",
                "hash": "md5",
                "id": "3020300c06082a864886f70d020505000410"
            },
            "RSA-MD5": {
                "sign": "rsa",
                "hash": "md5",
                "id": "3020300c06082a864886f70d020505000410"
            }
        }

    },{}],48:[function(require,module,exports){
        module.exports={
            "1.3.132.0.10": "secp256k1",
            "1.3.132.0.33": "p224",
            "1.2.840.10045.3.1.1": "p192",
            "1.2.840.10045.3.1.7": "p256",
            "1.3.132.0.34": "p384",
            "1.3.132.0.35": "p521"
        }

    },{}],49:[function(require,module,exports){
        var Buffer = require('safe-buffer').Buffer
        var createHash = require('create-hash')
        var stream = require('readable-stream')
        var inherits = require('inherits')
        var sign = require('./sign')
        var verify = require('./verify')

        var algorithms = require('./algorithms.json')
        Object.keys(algorithms).forEach(function (key) {
            algorithms[key].id = Buffer.from(algorithms[key].id, 'hex')
            algorithms[key.toLowerCase()] = algorithms[key]
        })

        function Sign (algorithm) {
            stream.Writable.call(this)

            var data = algorithms[algorithm]
            if (!data) throw new Error('Unknown message digest')

            this._hashType = data.hash
            this._hash = createHash(data.hash)
            this._tag = data.id
            this._signType = data.sign
        }
        inherits(Sign, stream.Writable)

        Sign.prototype._write = function _write (data, _, done) {
            this._hash.update(data)
            done()
        }

        Sign.prototype.update = function update (data, enc) {
            if (typeof data === 'string') data = Buffer.from(data, enc)

            this._hash.update(data)
            return this
        }

        Sign.prototype.sign = function signMethod (key, enc) {
            this.end()
            var hash = this._hash.digest()
            var sig = sign(hash, key, this._hashType, this._signType, this._tag)

            return enc ? sig.toString(enc) : sig
        }

        function Verify (algorithm) {
            stream.Writable.call(this)

            var data = algorithms[algorithm]
            if (!data) throw new Error('Unknown message digest')

            this._hash = createHash(data.hash)
            this._tag = data.id
            this._signType = data.sign
        }
        inherits(Verify, stream.Writable)

        Verify.prototype._write = function _write (data, _, done) {
            this._hash.update(data)
            done()
        }

        Verify.prototype.update = function update (data, enc) {
            if (typeof data === 'string') data = Buffer.from(data, enc)

            this._hash.update(data)
            return this
        }

        Verify.prototype.verify = function verifyMethod (key, sig, enc) {
            if (typeof sig === 'string') sig = Buffer.from(sig, enc)

            this.end()
            var hash = this._hash.digest()
            return verify(sig, hash, key, this._signType, this._tag)
        }

        function createSign (algorithm) {
            return new Sign(algorithm)
        }

        function createVerify (algorithm) {
            return new Verify(algorithm)
        }

        module.exports = {
            Sign: createSign,
            Verify: createVerify,
            createSign: createSign,
            createVerify: createVerify
        }

    },{"./algorithms.json":47,"./sign":50,"./verify":51,"create-hash":74,"inherits":140,"readable-stream":67,"safe-buffer":184}],50:[function(require,module,exports){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
        var Buffer = require('safe-buffer').Buffer
        var createHmac = require('create-hmac')
        var crt = require('browserify-rsa')
        var EC = require('elliptic').ec
        var BN = require('bn.js')
        var parseKeys = require('parse-asn1')
        var curves = require('./curves.json')

        function sign (hash, key, hashType, signType, tag) {
            var priv = parseKeys(key)
            if (priv.curve) {
                // rsa keys can be interpreted as ecdsa ones in openssl
                if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
                return ecSign(hash, priv)
            } else if (priv.type === 'dsa') {
                if (signType !== 'dsa') throw new Error('wrong private key type')
                return dsaSign(hash, priv, hashType)
            } else {
                if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
            }
            hash = Buffer.concat([tag, hash])
            var len = priv.modulus.byteLength()
            var pad = [0, 1]
            while (hash.length + pad.length + 1 < len) pad.push(0xff)
            pad.push(0x00)
            var i = -1
            while (++i < hash.length) pad.push(hash[i])

            var out = crt(pad, priv)
            return out
        }

        function ecSign (hash, priv) {
            var curveId = curves[priv.curve.join('.')]
            if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

            var curve = new EC(curveId)
            var key = curve.keyFromPrivate(priv.privateKey)
            var out = key.sign(hash)

            return Buffer.from(out.toDER())
        }

        function dsaSign (hash, priv, algo) {
            var x = priv.params.priv_key
            var p = priv.params.p
            var q = priv.params.q
            var g = priv.params.g
            var r = new BN(0)
            var k
            var H = bits2int(hash, q).mod(q)
            var s = false
            var kv = getKey(x, q, hash, algo)
            while (s === false) {
                k = makeKey(q, kv, algo)
                r = makeR(g, k, p, q)
                s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
                if (s.cmpn(0) === 0) {
                    s = false
                    r = new BN(0)
                }
            }
            return toDER(r, s)
        }

        function toDER (r, s) {
            r = r.toArray()
            s = s.toArray()

            // Pad values
            if (r[0] & 0x80) r = [0].concat(r)
            if (s[0] & 0x80) s = [0].concat(s)

            var total = r.length + s.length + 4
            var res = [0x30, total, 0x02, r.length]
            res = res.concat(r, [0x02, s.length], s)
            return Buffer.from(res)
        }

        function getKey (x, q, hash, algo) {
            x = Buffer.from(x.toArray())
            if (x.length < q.byteLength()) {
                var zeros = Buffer.alloc(q.byteLength() - x.length)
                x = Buffer.concat([zeros, x])
            }
            var hlen = hash.length
            var hbits = bits2octets(hash, q)
            var v = Buffer.alloc(hlen)
            v.fill(1)
            var k = Buffer.alloc(hlen)
            k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest()
            v = createHmac(algo, k).update(v).digest()
            k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest()
            v = createHmac(algo, k).update(v).digest()
            return { k: k, v: v }
        }

        function bits2int (obits, q) {
            var bits = new BN(obits)
            var shift = (obits.length << 3) - q.bitLength()
            if (shift > 0) bits.ishrn(shift)
            return bits
        }

        function bits2octets (bits, q) {
            bits = bits2int(bits, q)
            bits = bits.mod(q)
            var out = Buffer.from(bits.toArray())
            if (out.length < q.byteLength()) {
                var zeros = Buffer.alloc(q.byteLength() - out.length)
                out = Buffer.concat([zeros, out])
            }
            return out
        }

        function makeKey (q, kv, algo) {
            var t
            var k

            do {
                t = Buffer.alloc(0)

                while (t.length * 8 < q.bitLength()) {
                    kv.v = createHmac(algo, kv.k).update(kv.v).digest()
                    t = Buffer.concat([t, kv.v])
                }

                k = bits2int(t, q)
                kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest()
                kv.v = createHmac(algo, kv.k).update(kv.v).digest()
            } while (k.cmp(q) !== -1)

            return k
        }

        function makeR (g, k, p, q) {
            return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
        }

        module.exports = sign
        module.exports.getKey = getKey
        module.exports.makeKey = makeKey

    },{"./curves.json":48,"bn.js":52,"browserify-rsa":45,"create-hmac":76,"elliptic":92,"parse-asn1":151,"safe-buffer":184}],51:[function(require,module,exports){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
        var Buffer = require('safe-buffer').Buffer
        var BN = require('bn.js')
        var EC = require('elliptic').ec
        var parseKeys = require('parse-asn1')
        var curves = require('./curves.json')

        function verify (sig, hash, key, signType, tag) {
            var pub = parseKeys(key)
            if (pub.type === 'ec') {
                // rsa keys can be interpreted as ecdsa ones in openssl
                if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
                return ecVerify(sig, hash, pub)
            } else if (pub.type === 'dsa') {
                if (signType !== 'dsa') throw new Error('wrong public key type')
                return dsaVerify(sig, hash, pub)
            } else {
                if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
            }
            hash = Buffer.concat([tag, hash])
            var len = pub.modulus.byteLength()
            var pad = [1]
            var padNum = 0
            while (hash.length + pad.length + 2 < len) {
                pad.push(0xff)
                padNum++
            }
            pad.push(0x00)
            var i = -1
            while (++i < hash.length) {
                pad.push(hash[i])
            }
            pad = Buffer.from(pad)
            var red = BN.mont(pub.modulus)
            sig = new BN(sig).toRed(red)

            sig = sig.redPow(new BN(pub.publicExponent))
            sig = Buffer.from(sig.fromRed().toArray())
            var out = padNum < 8 ? 1 : 0
            len = Math.min(sig.length, pad.length)
            if (sig.length !== pad.length) out = 1

            i = -1
            while (++i < len) out |= sig[i] ^ pad[i]
            return out === 0
        }

        function ecVerify (sig, hash, pub) {
            var curveId = curves[pub.data.algorithm.curve.join('.')]
            if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

            var curve = new EC(curveId)
            var pubkey = pub.data.subjectPrivateKey.data

            return curve.verify(hash, sig, pubkey)
        }

        function dsaVerify (sig, hash, pub) {
            var p = pub.data.p
            var q = pub.data.q
            var g = pub.data.g
            var y = pub.data.pub_key
            var unpacked = parseKeys.signature.decode(sig, 'der')
            var s = unpacked.s
            var r = unpacked.r
            checkValue(s, q)
            checkValue(r, q)
            var montp = BN.mont(p)
            var w = s.invm(q)
            var v = g.toRed(montp)
                .redPow(new BN(hash).mul(w).mod(q))
                .fromRed()
                .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
                .mod(p)
                .mod(q)
            return v.cmp(r) === 0
        }

        function checkValue (b, q) {
            if (b.cmpn(0) <= 0) throw new Error('invalid sig')
            if (b.cmp(q) >= q) throw new Error('invalid sig')
        }

        module.exports = verify

    },{"./curves.json":48,"bn.js":52,"elliptic":92,"parse-asn1":151,"safe-buffer":184}],52:[function(require,module,exports){
        (function (module, exports) {
            'use strict';

            // Utils
            function assert (val, msg) {
                if (!val) throw new Error(msg || 'Assertion failed');
            }

            // Could use `inherits` module, but don't want to move from single file
            // architecture yet.
            function inherits (ctor, superCtor) {
                ctor.super_ = superCtor;
                var TempCtor = function () {};
                TempCtor.prototype = superCtor.prototype;
                ctor.prototype = new TempCtor();
                ctor.prototype.constructor = ctor;
            }

            // BN

            function BN (number, base, endian) {
                if (BN.isBN(number)) {
                    return number;
                }

                this.negative = 0;
                this.words = null;
                this.length = 0;

                // Reduction context
                this.red = null;

                if (number !== null) {
                    if (base === 'le' || base === 'be') {
                        endian = base;
                        base = 10;
                    }

                    this._init(number || 0, base || 10, endian || 'be');
                }
            }
            if (typeof module === 'object') {
                module.exports = BN;
            } else {
                exports.BN = BN;
            }

            BN.BN = BN;
            BN.wordSize = 26;

            var Buffer;
            try {
                Buffer = require('buffer').Buffer;
            } catch (e) {
            }

            BN.isBN = function isBN (num) {
                if (num instanceof BN) {
                    return true;
                }

                return num !== null && typeof num === 'object' &&
                    num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
            };

            BN.max = function max (left, right) {
                if (left.cmp(right) > 0) return left;
                return right;
            };

            BN.min = function min (left, right) {
                if (left.cmp(right) < 0) return left;
                return right;
            };

            BN.prototype._init = function init (number, base, endian) {
                if (typeof number === 'number') {
                    return this._initNumber(number, base, endian);
                }

                if (typeof number === 'object') {
                    return this._initArray(number, base, endian);
                }

                if (base === 'hex') {
                    base = 16;
                }
                assert(base === (base | 0) && base >= 2 && base <= 36);

                number = number.toString().replace(/\s+/g, '');
                var start = 0;
                if (number[0] === '-') {
                    start++;
                }

                if (base === 16) {
                    this._parseHex(number, start);
                } else {
                    this._parseBase(number, base, start);
                }

                if (number[0] === '-') {
                    this.negative = 1;
                }

                this._strip();

                if (endian !== 'le') return;

                this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initNumber = function _initNumber (number, base, endian) {
                if (number < 0) {
                    this.negative = 1;
                    number = -number;
                }
                if (number < 0x4000000) {
                    this.words = [number & 0x3ffffff];
                    this.length = 1;
                } else if (number < 0x10000000000000) {
                    this.words = [
                        number & 0x3ffffff,
                        (number / 0x4000000) & 0x3ffffff
                    ];
                    this.length = 2;
                } else {
                    assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
                    this.words = [
                        number & 0x3ffffff,
                        (number / 0x4000000) & 0x3ffffff,
                        1
                    ];
                    this.length = 3;
                }

                if (endian !== 'le') return;

                // Reverse the bytes
                this._initArray(this.toArray(), base, endian);
            };

            BN.prototype._initArray = function _initArray (number, base, endian) {
                // Perhaps a Uint8Array
                assert(typeof number.length === 'number');
                if (number.length <= 0) {
                    this.words = [0];
                    this.length = 1;
                    return this;
                }

                this.length = Math.ceil(number.length / 3);
                this.words = new Array(this.length);
                for (var i = 0; i < this.length; i++) {
                    this.words[i] = 0;
                }

                var j, w;
                var off = 0;
                if (endian === 'be') {
                    for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
                        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
                        this.words[j] |= (w << off) & 0x3ffffff;
                        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                        off += 24;
                        if (off >= 26) {
                            off -= 26;
                            j++;
                        }
                    }
                } else if (endian === 'le') {
                    for (i = 0, j = 0; i < number.length; i += 3) {
                        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
                        this.words[j] |= (w << off) & 0x3ffffff;
                        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
                        off += 24;
                        if (off >= 26) {
                            off -= 26;
                            j++;
                        }
                    }
                }
                return this._strip();
            };

            function parseHex (str, start, end) {
                var r = 0;
                var len = Math.min(str.length, end);
                var z = 0;
                for (var i = start; i < len; i++) {
                    var c = str.charCodeAt(i) - 48;

                    r <<= 4;

                    var b;

                    // 'a' - 'f'
                    if (c >= 49 && c <= 54) {
                        b = c - 49 + 0xa;

                        // 'A' - 'F'
                    } else if (c >= 17 && c <= 22) {
                        b = c - 17 + 0xa;

                        // '0' - '9'
                    } else {
                        b = c;
                    }

                    r |= b;
                    z |= b;
                }

                assert(!(z & 0xf0), 'Invalid character in ' + str);
                return r;
            }

            BN.prototype._parseHex = function _parseHex (number, start) {
                // Create possibly bigger array to ensure that it fits the number
                this.length = Math.ceil((number.length - start) / 6);
                this.words = new Array(this.length);
                for (var i = 0; i < this.length; i++) {
                    this.words[i] = 0;
                }

                var j, w;
                // Scan 24-bit chunks and add them to the number
                var off = 0;
                for (i = number.length - 6, j = 0; i >= start; i -= 6) {
                    w = parseHex(number, i, i + 6);
                    this.words[j] |= (w << off) & 0x3ffffff;
                    // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
                    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
                    off += 24;
                    if (off >= 26) {
                        off -= 26;
                        j++;
                    }
                }
                if (i + 6 !== start) {
                    w = parseHex(number, start, i + 6);
                    this.words[j] |= (w << off) & 0x3ffffff;
                    this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
                }
                this._strip();
            };

            function parseBase (str, start, end, mul) {
                var r = 0;
                var b = 0;
                var len = Math.min(str.length, end);
                for (var i = start; i < len; i++) {
                    var c = str.charCodeAt(i) - 48;

                    r *= mul;

                    // 'a'
                    if (c >= 49) {
                        b = c - 49 + 0xa;

                        // 'A'
                    } else if (c >= 17) {
                        b = c - 17 + 0xa;

                        // '0' - '9'
                    } else {
                        b = c;
                    }
                    assert(c >= 0 && b < mul, 'Invalid character');
                    r += b;
                }
                return r;
            }

            BN.prototype._parseBase = function _parseBase (number, base, start) {
                // Initialize as zero
                this.words = [0];
                this.length = 1;

                // Find length of limb in base
                for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
                    limbLen++;
                }
                limbLen--;
                limbPow = (limbPow / base) | 0;

                var total = number.length - start;
                var mod = total % limbLen;
                var end = Math.min(total, total - mod) + start;

                var word = 0;
                for (var i = start; i < end; i += limbLen) {
                    word = parseBase(number, i, i + limbLen, base);

                    this.imuln(limbPow);
                    if (this.words[0] + word < 0x4000000) {
                        this.words[0] += word;
                    } else {
                        this._iaddn(word);
                    }
                }

                if (mod !== 0) {
                    var pow = 1;
                    word = parseBase(number, i, number.length, base);

                    for (i = 0; i < mod; i++) {
                        pow *= base;
                    }

                    this.imuln(pow);
                    if (this.words[0] + word < 0x4000000) {
                        this.words[0] += word;
                    } else {
                        this._iaddn(word);
                    }
                }
            };

            BN.prototype.copy = function copy (dest) {
                dest.words = new Array(this.length);
                for (var i = 0; i < this.length; i++) {
                    dest.words[i] = this.words[i];
                }
                dest.length = this.length;
                dest.negative = this.negative;
                dest.red = this.red;
            };

            function move (dest, src) {
                dest.words = src.words;
                dest.length = src.length;
                dest.negative = src.negative;
                dest.red = src.red;
            }

            BN.prototype._move = function _move (dest) {
                move(dest, this);
            };

            BN.prototype.clone = function clone () {
                var r = new BN(null);
                this.copy(r);
                return r;
            };

            BN.prototype._expand = function _expand (size) {
                while (this.length < size) {
                    this.words[this.length++] = 0;
                }
                return this;
            };

            // Remove leading `0` from `this`
            BN.prototype._strip = function strip () {
                while (this.length > 1 && this.words[this.length - 1] === 0) {
                    this.length--;
                }
                return this._normSign();
            };

            BN.prototype._normSign = function _normSign () {
                // -0 = 0
                if (this.length === 1 && this.words[0] === 0) {
                    this.negative = 0;
                }
                return this;
            };

            // Check Symbol.for because not everywhere where Symbol defined
            // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
            if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {
                BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
            } else {
                BN.prototype.inspect = inspect;
            }

            function inspect () {
                return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
            }

            /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

            var zeros = [
                '',
                '0',
                '00',
                '000',
                '0000',
                '00000',
                '000000',
                '0000000',
                '00000000',
                '000000000',
                '0000000000',
                '00000000000',
                '000000000000',
                '0000000000000',
                '00000000000000',
                '000000000000000',
                '0000000000000000',
                '00000000000000000',
                '000000000000000000',
                '0000000000000000000',
                '00000000000000000000',
                '000000000000000000000',
                '0000000000000000000000',
                '00000000000000000000000',
                '000000000000000000000000',
                '0000000000000000000000000'
            ];

            var groupSizes = [
                0, 0,
                25, 16, 12, 11, 10, 9, 8,
                8, 7, 7, 7, 7, 6, 6,
                6, 6, 6, 6, 6, 5, 5,
                5, 5, 5, 5, 5, 5, 5,
                5, 5, 5, 5, 5, 5, 5
            ];

            var groupBases = [
                0, 0,
                33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
                43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
                16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
                6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
                24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
            ];

            BN.prototype.toString = function toString (base, padding) {
                base = base || 10;
                padding = padding | 0 || 1;

                var out;
                if (base === 16 || base === 'hex') {
                    out = '';
                    var off = 0;
                    var carry = 0;
                    for (var i = 0; i < this.length; i++) {
                        var w = this.words[i];
                        var word = (((w << off) | carry) & 0xffffff).toString(16);
                        carry = (w >>> (24 - off)) & 0xffffff;
                        if (carry !== 0 || i !== this.length - 1) {
                            out = zeros[6 - word.length] + word + out;
                        } else {
                            out = word + out;
                        }
                        off += 2;
                        if (off >= 26) {
                            off -= 26;
                            i--;
                        }
                    }
                    if (carry !== 0) {
                        out = carry.toString(16) + out;
                    }
                    while (out.length % padding !== 0) {
                        out = '0' + out;
                    }
                    if (this.negative !== 0) {
                        out = '-' + out;
                    }
                    return out;
                }

                if (base === (base | 0) && base >= 2 && base <= 36) {
                    // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
                    var groupSize = groupSizes[base];
                    // var groupBase = Math.pow(base, groupSize);
                    var groupBase = groupBases[base];
                    out = '';
                    var c = this.clone();
                    c.negative = 0;
                    while (!c.isZero()) {
                        var r = c.modrn(groupBase).toString(base);
                        c = c.idivn(groupBase);

                        if (!c.isZero()) {
                            out = zeros[groupSize - r.length] + r + out;
                        } else {
                            out = r + out;
                        }
                    }
                    if (this.isZero()) {
                        out = '0' + out;
                    }
                    while (out.length % padding !== 0) {
                        out = '0' + out;
                    }
                    if (this.negative !== 0) {
                        out = '-' + out;
                    }
                    return out;
                }

                assert(false, 'Base should be between 2 and 36');
            };

            BN.prototype.toNumber = function toNumber () {
                var ret = this.words[0];
                if (this.length === 2) {
                    ret += this.words[1] * 0x4000000;
                } else if (this.length === 3 && this.words[2] === 0x01) {
                    // NOTE: at this stage it is known that the top bit is set
                    ret += 0x10000000000000 + (this.words[1] * 0x4000000);
                } else if (this.length > 2) {
                    assert(false, 'Number can only safely store up to 53 bits');
                }
                return (this.negative !== 0) ? -ret : ret;
            };

            BN.prototype.toJSON = function toJSON () {
                return this.toString(16, 2);
            };

            if (Buffer) {
                BN.prototype.toBuffer = function toBuffer (endian, length) {
                    return this.toArrayLike(Buffer, endian, length);
                };
            }

            BN.prototype.toArray = function toArray (endian, length) {
                return this.toArrayLike(Array, endian, length);
            };

            var allocate = function allocate (ArrayType, size) {
                if (ArrayType.allocUnsafe) {
                    return ArrayType.allocUnsafe(size);
                }
                return new ArrayType(size);
            };

            BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
                this._strip();

                var byteLength = this.byteLength();
                var reqLength = length || Math.max(1, byteLength);
                assert(byteLength <= reqLength, 'byte array longer than desired length');
                assert(reqLength > 0, 'Requested array length <= 0');

                var res = allocate(ArrayType, reqLength);
                var postfix = endian === 'le' ? 'LE' : 'BE';
                this['_toArrayLike' + postfix](res, byteLength);
                return res;
            };

            BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {
                var position = 0;
                var carry = 0;

                for (var i = 0, shift = 0; i < this.length; i++) {
                    var word = (this.words[i] << shift) | carry;

                    res[position++] = word & 0xff;
                    if (position < res.length) {
                        res[position++] = (word >> 8) & 0xff;
                    }
                    if (position < res.length) {
                        res[position++] = (word >> 16) & 0xff;
                    }

                    if (shift === 6) {
                        if (position < res.length) {
                            res[position++] = (word >> 24) & 0xff;
                        }
                        carry = 0;
                        shift = 0;
                    } else {
                        carry = word >>> 24;
                        shift += 2;
                    }
                }

                if (position < res.length) {
                    res[position++] = carry;

                    while (position < res.length) {
                        res[position++] = 0;
                    }
                }
            };

            BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {
                var position = res.length - 1;
                var carry = 0;

                for (var i = 0, shift = 0; i < this.length; i++) {
                    var word = (this.words[i] << shift) | carry;

                    res[position--] = word & 0xff;
                    if (position >= 0) {
                        res[position--] = (word >> 8) & 0xff;
                    }
                    if (position >= 0) {
                        res[position--] = (word >> 16) & 0xff;
                    }

                    if (shift === 6) {
                        if (position >= 0) {
                            res[position--] = (word >> 24) & 0xff;
                        }
                        carry = 0;
                        shift = 0;
                    } else {
                        carry = word >>> 24;
                        shift += 2;
                    }
                }

                if (position >= 0) {
                    res[position--] = carry;

                    while (position >= 0) {
                        res[position--] = 0;
                    }
                }
            };

            if (Math.clz32) {
                BN.prototype._countBits = function _countBits (w) {
                    return 32 - Math.clz32(w);
                };
            } else {
                BN.prototype._countBits = function _countBits (w) {
                    var t = w;
                    var r = 0;
                    if (t >= 0x1000) {
                        r += 13;
                        t >>>= 13;
                    }
                    if (t >= 0x40) {
                        r += 7;
                        t >>>= 7;
                    }
                    if (t >= 0x8) {
                        r += 4;
                        t >>>= 4;
                    }
                    if (t >= 0x02) {
                        r += 2;
                        t >>>= 2;
                    }
                    return r + t;
                };
            }

            BN.prototype._zeroBits = function _zeroBits (w) {
                // Short-cut
                if (w === 0) return 26;

                var t = w;
                var r = 0;
                if ((t & 0x1fff) === 0) {
                    r += 13;
                    t >>>= 13;
                }
                if ((t & 0x7f) === 0) {
                    r += 7;
                    t >>>= 7;
                }
                if ((t & 0xf) === 0) {
                    r += 4;
                    t >>>= 4;
                }
                if ((t & 0x3) === 0) {
                    r += 2;
                    t >>>= 2;
                }
                if ((t & 0x1) === 0) {
                    r++;
                }
                return r;
            };

            // Return number of used bits in a BN
            BN.prototype.bitLength = function bitLength () {
                var w = this.words[this.length - 1];
                var hi = this._countBits(w);
                return (this.length - 1) * 26 + hi;
            };

            function toBitArray (num) {
                var w = new Array(num.bitLength());

                for (var bit = 0; bit < w.length; bit++) {
                    var off = (bit / 26) | 0;
                    var wbit = bit % 26;

                    w[bit] = (num.words[off] >>> wbit) & 0x01;
                }

                return w;
            }

            // Number of trailing zero bits
            BN.prototype.zeroBits = function zeroBits () {
                if (this.isZero()) return 0;

                var r = 0;
                for (var i = 0; i < this.length; i++) {
                    var b = this._zeroBits(this.words[i]);
                    r += b;
                    if (b !== 26) break;
                }
                return r;
            };

            BN.prototype.byteLength = function byteLength () {
                return Math.ceil(this.bitLength() / 8);
            };

            BN.prototype.toTwos = function toTwos (width) {
                if (this.negative !== 0) {
                    return this.abs().inotn(width).iaddn(1);
                }
                return this.clone();
            };

            BN.prototype.fromTwos = function fromTwos (width) {
                if (this.testn(width - 1)) {
                    return this.notn(width).iaddn(1).ineg();
                }
                return this.clone();
            };

            BN.prototype.isNeg = function isNeg () {
                return this.negative !== 0;
            };

            // Return negative clone of `this`
            BN.prototype.neg = function neg () {
                return this.clone().ineg();
            };

            BN.prototype.ineg = function ineg () {
                if (!this.isZero()) {
                    this.negative ^= 1;
                }

                return this;
            };

            // Or `num` with `this` in-place
            BN.prototype.iuor = function iuor (num) {
                while (this.length < num.length) {
                    this.words[this.length++] = 0;
                }

                for (var i = 0; i < num.length; i++) {
                    this.words[i] = this.words[i] | num.words[i];
                }

                return this._strip();
            };

            BN.prototype.ior = function ior (num) {
                assert((this.negative | num.negative) === 0);
                return this.iuor(num);
            };

            // Or `num` with `this`
            BN.prototype.or = function or (num) {
                if (this.length > num.length) return this.clone().ior(num);
                return num.clone().ior(this);
            };

            BN.prototype.uor = function uor (num) {
                if (this.length > num.length) return this.clone().iuor(num);
                return num.clone().iuor(this);
            };

            // And `num` with `this` in-place
            BN.prototype.iuand = function iuand (num) {
                // b = min-length(num, this)
                var b;
                if (this.length > num.length) {
                    b = num;
                } else {
                    b = this;
                }

                for (var i = 0; i < b.length; i++) {
                    this.words[i] = this.words[i] & num.words[i];
                }

                this.length = b.length;

                return this._strip();
            };

            BN.prototype.iand = function iand (num) {
                assert((this.negative | num.negative) === 0);
                return this.iuand(num);
            };

            // And `num` with `this`
            BN.prototype.and = function and (num) {
                if (this.length > num.length) return this.clone().iand(num);
                return num.clone().iand(this);
            };

            BN.prototype.uand = function uand (num) {
                if (this.length > num.length) return this.clone().iuand(num);
                return num.clone().iuand(this);
            };

            // Xor `num` with `this` in-place
            BN.prototype.iuxor = function iuxor (num) {
                // a.length > b.length
                var a;
                var b;
                if (this.length > num.length) {
                    a = this;
                    b = num;
                } else {
                    a = num;
                    b = this;
                }

                for (var i = 0; i < b.length; i++) {
                    this.words[i] = a.words[i] ^ b.words[i];
                }

                if (this !== a) {
                    for (; i < a.length; i++) {
                        this.words[i] = a.words[i];
                    }
                }

                this.length = a.length;

                return this._strip();
            };

            BN.prototype.ixor = function ixor (num) {
                assert((this.negative | num.negative) === 0);
                return this.iuxor(num);
            };

            // Xor `num` with `this`
            BN.prototype.xor = function xor (num) {
                if (this.length > num.length) return this.clone().ixor(num);
                return num.clone().ixor(this);
            };

            BN.prototype.uxor = function uxor (num) {
                if (this.length > num.length) return this.clone().iuxor(num);
                return num.clone().iuxor(this);
            };

            // Not ``this`` with ``width`` bitwidth
            BN.prototype.inotn = function inotn (width) {
                assert(typeof width === 'number' && width >= 0);

                var bytesNeeded = Math.ceil(width / 26) | 0;
                var bitsLeft = width % 26;

                // Extend the buffer with leading zeroes
                this._expand(bytesNeeded);

                if (bitsLeft > 0) {
                    bytesNeeded--;
                }

                // Handle complete words
                for (var i = 0; i < bytesNeeded; i++) {
                    this.words[i] = ~this.words[i] & 0x3ffffff;
                }

                // Handle the residue
                if (bitsLeft > 0) {
                    this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
                }

                // And remove leading zeroes
                return this._strip();
            };

            BN.prototype.notn = function notn (width) {
                return this.clone().inotn(width);
            };

            // Set `bit` of `this`
            BN.prototype.setn = function setn (bit, val) {
                assert(typeof bit === 'number' && bit >= 0);

                var off = (bit / 26) | 0;
                var wbit = bit % 26;

                this._expand(off + 1);

                if (val) {
                    this.words[off] = this.words[off] | (1 << wbit);
                } else {
                    this.words[off] = this.words[off] & ~(1 << wbit);
                }

                return this._strip();
            };

            // Add `num` to `this` in-place
            BN.prototype.iadd = function iadd (num) {
                var r;

                // negative + positive
                if (this.negative !== 0 && num.negative === 0) {
                    this.negative = 0;
                    r = this.isub(num);
                    this.negative ^= 1;
                    return this._normSign();

                    // positive + negative
                } else if (this.negative === 0 && num.negative !== 0) {
                    num.negative = 0;
                    r = this.isub(num);
                    num.negative = 1;
                    return r._normSign();
                }

                // a.length > b.length
                var a, b;
                if (this.length > num.length) {
                    a = this;
                    b = num;
                } else {
                    a = num;
                    b = this;
                }

                var carry = 0;
                for (var i = 0; i < b.length; i++) {
                    r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
                    this.words[i] = r & 0x3ffffff;
                    carry = r >>> 26;
                }
                for (; carry !== 0 && i < a.length; i++) {
                    r = (a.words[i] | 0) + carry;
                    this.words[i] = r & 0x3ffffff;
                    carry = r >>> 26;
                }

                this.length = a.length;
                if (carry !== 0) {
                    this.words[this.length] = carry;
                    this.length++;
                    // Copy the rest of the words
                } else if (a !== this) {
                    for (; i < a.length; i++) {
                        this.words[i] = a.words[i];
                    }
                }

                return this;
            };

            // Add `num` to `this`
            BN.prototype.add = function add (num) {
                var res;
                if (num.negative !== 0 && this.negative === 0) {
                    num.negative = 0;
                    res = this.sub(num);
                    num.negative ^= 1;
                    return res;
                } else if (num.negative === 0 && this.negative !== 0) {
                    this.negative = 0;
                    res = num.sub(this);
                    this.negative = 1;
                    return res;
                }

                if (this.length > num.length) return this.clone().iadd(num);

                return num.clone().iadd(this);
            };

            // Subtract `num` from `this` in-place
            BN.prototype.isub = function isub (num) {
                // this - (-num) = this + num
                if (num.negative !== 0) {
                    num.negative = 0;
                    var r = this.iadd(num);
                    num.negative = 1;
                    return r._normSign();

                    // -this - num = -(this + num)
                } else if (this.negative !== 0) {
                    this.negative = 0;
                    this.iadd(num);
                    this.negative = 1;
                    return this._normSign();
                }

                // At this point both numbers are positive
                var cmp = this.cmp(num);

                // Optimization - zeroify
                if (cmp === 0) {
                    this.negative = 0;
                    this.length = 1;
                    this.words[0] = 0;
                    return this;
                }

                // a > b
                var a, b;
                if (cmp > 0) {
                    a = this;
                    b = num;
                } else {
                    a = num;
                    b = this;
                }

                var carry = 0;
                for (var i = 0; i < b.length; i++) {
                    r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
                    carry = r >> 26;
                    this.words[i] = r & 0x3ffffff;
                }
                for (; carry !== 0 && i < a.length; i++) {
                    r = (a.words[i] | 0) + carry;
                    carry = r >> 26;
                    this.words[i] = r & 0x3ffffff;
                }

                // Copy rest of the words
                if (carry === 0 && i < a.length && a !== this) {
                    for (; i < a.length; i++) {
                        this.words[i] = a.words[i];
                    }
                }

                this.length = Math.max(this.length, i);

                if (a !== this) {
                    this.negative = 1;
                }

                return this._strip();
            };

            // Subtract `num` from `this`
            BN.prototype.sub = function sub (num) {
                return this.clone().isub(num);
            };

            function smallMulTo (self, num, out) {
                out.negative = num.negative ^ self.negative;
                var len = (self.length + num.length) | 0;
                out.length = len;
                len = (len - 1) | 0;

                // Peel one iteration (compiler can't do it, because of code complexity)
                var a = self.words[0] | 0;
                var b = num.words[0] | 0;
                var r = a * b;

                var lo = r & 0x3ffffff;
                var carry = (r / 0x4000000) | 0;
                out.words[0] = lo;

                for (var k = 1; k < len; k++) {
                    // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                    // note that ncarry could be >= 0x3ffffff
                    var ncarry = carry >>> 26;
                    var rword = carry & 0x3ffffff;
                    var maxJ = Math.min(k, num.length - 1);
                    for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                        var i = (k - j) | 0;
                        a = self.words[i] | 0;
                        b = num.words[j] | 0;
                        r = a * b + rword;
                        ncarry += (r / 0x4000000) | 0;
                        rword = r & 0x3ffffff;
                    }
                    out.words[k] = rword | 0;
                    carry = ncarry | 0;
                }
                if (carry !== 0) {
                    out.words[k] = carry | 0;
                } else {
                    out.length--;
                }

                return out._strip();
            }

            // TODO(indutny): it may be reasonable to omit it for users who don't need
            // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
            // multiplication (like elliptic secp256k1).
            var comb10MulTo = function comb10MulTo (self, num, out) {
                var a = self.words;
                var b = num.words;
                var o = out.words;
                var c = 0;
                var lo;
                var mid;
                var hi;
                var a0 = a[0] | 0;
                var al0 = a0 & 0x1fff;
                var ah0 = a0 >>> 13;
                var a1 = a[1] | 0;
                var al1 = a1 & 0x1fff;
                var ah1 = a1 >>> 13;
                var a2 = a[2] | 0;
                var al2 = a2 & 0x1fff;
                var ah2 = a2 >>> 13;
                var a3 = a[3] | 0;
                var al3 = a3 & 0x1fff;
                var ah3 = a3 >>> 13;
                var a4 = a[4] | 0;
                var al4 = a4 & 0x1fff;
                var ah4 = a4 >>> 13;
                var a5 = a[5] | 0;
                var al5 = a5 & 0x1fff;
                var ah5 = a5 >>> 13;
                var a6 = a[6] | 0;
                var al6 = a6 & 0x1fff;
                var ah6 = a6 >>> 13;
                var a7 = a[7] | 0;
                var al7 = a7 & 0x1fff;
                var ah7 = a7 >>> 13;
                var a8 = a[8] | 0;
                var al8 = a8 & 0x1fff;
                var ah8 = a8 >>> 13;
                var a9 = a[9] | 0;
                var al9 = a9 & 0x1fff;
                var ah9 = a9 >>> 13;
                var b0 = b[0] | 0;
                var bl0 = b0 & 0x1fff;
                var bh0 = b0 >>> 13;
                var b1 = b[1] | 0;
                var bl1 = b1 & 0x1fff;
                var bh1 = b1 >>> 13;
                var b2 = b[2] | 0;
                var bl2 = b2 & 0x1fff;
                var bh2 = b2 >>> 13;
                var b3 = b[3] | 0;
                var bl3 = b3 & 0x1fff;
                var bh3 = b3 >>> 13;
                var b4 = b[4] | 0;
                var bl4 = b4 & 0x1fff;
                var bh4 = b4 >>> 13;
                var b5 = b[5] | 0;
                var bl5 = b5 & 0x1fff;
                var bh5 = b5 >>> 13;
                var b6 = b[6] | 0;
                var bl6 = b6 & 0x1fff;
                var bh6 = b6 >>> 13;
                var b7 = b[7] | 0;
                var bl7 = b7 & 0x1fff;
                var bh7 = b7 >>> 13;
                var b8 = b[8] | 0;
                var bl8 = b8 & 0x1fff;
                var bh8 = b8 >>> 13;
                var b9 = b[9] | 0;
                var bl9 = b9 & 0x1fff;
                var bh9 = b9 >>> 13;

                out.negative = self.negative ^ num.negative;
                out.length = 19;
                /* k = 0 */
                lo = Math.imul(al0, bl0);
                mid = Math.imul(al0, bh0);
                mid = (mid + Math.imul(ah0, bl0)) | 0;
                hi = Math.imul(ah0, bh0);
                var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
                w0 &= 0x3ffffff;
                /* k = 1 */
                lo = Math.imul(al1, bl0);
                mid = Math.imul(al1, bh0);
                mid = (mid + Math.imul(ah1, bl0)) | 0;
                hi = Math.imul(ah1, bh0);
                lo = (lo + Math.imul(al0, bl1)) | 0;
                mid = (mid + Math.imul(al0, bh1)) | 0;
                mid = (mid + Math.imul(ah0, bl1)) | 0;
                hi = (hi + Math.imul(ah0, bh1)) | 0;
                var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
                w1 &= 0x3ffffff;
                /* k = 2 */
                lo = Math.imul(al2, bl0);
                mid = Math.imul(al2, bh0);
                mid = (mid + Math.imul(ah2, bl0)) | 0;
                hi = Math.imul(ah2, bh0);
                lo = (lo + Math.imul(al1, bl1)) | 0;
                mid = (mid + Math.imul(al1, bh1)) | 0;
                mid = (mid + Math.imul(ah1, bl1)) | 0;
                hi = (hi + Math.imul(ah1, bh1)) | 0;
                lo = (lo + Math.imul(al0, bl2)) | 0;
                mid = (mid + Math.imul(al0, bh2)) | 0;
                mid = (mid + Math.imul(ah0, bl2)) | 0;
                hi = (hi + Math.imul(ah0, bh2)) | 0;
                var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
                w2 &= 0x3ffffff;
                /* k = 3 */
                lo = Math.imul(al3, bl0);
                mid = Math.imul(al3, bh0);
                mid = (mid + Math.imul(ah3, bl0)) | 0;
                hi = Math.imul(ah3, bh0);
                lo = (lo + Math.imul(al2, bl1)) | 0;
                mid = (mid + Math.imul(al2, bh1)) | 0;
                mid = (mid + Math.imul(ah2, bl1)) | 0;
                hi = (hi + Math.imul(ah2, bh1)) | 0;
                lo = (lo + Math.imul(al1, bl2)) | 0;
                mid = (mid + Math.imul(al1, bh2)) | 0;
                mid = (mid + Math.imul(ah1, bl2)) | 0;
                hi = (hi + Math.imul(ah1, bh2)) | 0;
                lo = (lo + Math.imul(al0, bl3)) | 0;
                mid = (mid + Math.imul(al0, bh3)) | 0;
                mid = (mid + Math.imul(ah0, bl3)) | 0;
                hi = (hi + Math.imul(ah0, bh3)) | 0;
                var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
                w3 &= 0x3ffffff;
                /* k = 4 */
                lo = Math.imul(al4, bl0);
                mid = Math.imul(al4, bh0);
                mid = (mid + Math.imul(ah4, bl0)) | 0;
                hi = Math.imul(ah4, bh0);
                lo = (lo + Math.imul(al3, bl1)) | 0;
                mid = (mid + Math.imul(al3, bh1)) | 0;
                mid = (mid + Math.imul(ah3, bl1)) | 0;
                hi = (hi + Math.imul(ah3, bh1)) | 0;
                lo = (lo + Math.imul(al2, bl2)) | 0;
                mid = (mid + Math.imul(al2, bh2)) | 0;
                mid = (mid + Math.imul(ah2, bl2)) | 0;
                hi = (hi + Math.imul(ah2, bh2)) | 0;
                lo = (lo + Math.imul(al1, bl3)) | 0;
                mid = (mid + Math.imul(al1, bh3)) | 0;
                mid = (mid + Math.imul(ah1, bl3)) | 0;
                hi = (hi + Math.imul(ah1, bh3)) | 0;
                lo = (lo + Math.imul(al0, bl4)) | 0;
                mid = (mid + Math.imul(al0, bh4)) | 0;
                mid = (mid + Math.imul(ah0, bl4)) | 0;
                hi = (hi + Math.imul(ah0, bh4)) | 0;
                var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
                w4 &= 0x3ffffff;
                /* k = 5 */
                lo = Math.imul(al5, bl0);
                mid = Math.imul(al5, bh0);
                mid = (mid + Math.imul(ah5, bl0)) | 0;
                hi = Math.imul(ah5, bh0);
                lo = (lo + Math.imul(al4, bl1)) | 0;
                mid = (mid + Math.imul(al4, bh1)) | 0;
                mid = (mid + Math.imul(ah4, bl1)) | 0;
                hi = (hi + Math.imul(ah4, bh1)) | 0;
                lo = (lo + Math.imul(al3, bl2)) | 0;
                mid = (mid + Math.imul(al3, bh2)) | 0;
                mid = (mid + Math.imul(ah3, bl2)) | 0;
                hi = (hi + Math.imul(ah3, bh2)) | 0;
                lo = (lo + Math.imul(al2, bl3)) | 0;
                mid = (mid + Math.imul(al2, bh3)) | 0;
                mid = (mid + Math.imul(ah2, bl3)) | 0;
                hi = (hi + Math.imul(ah2, bh3)) | 0;
                lo = (lo + Math.imul(al1, bl4)) | 0;
                mid = (mid + Math.imul(al1, bh4)) | 0;
                mid = (mid + Math.imul(ah1, bl4)) | 0;
                hi = (hi + Math.imul(ah1, bh4)) | 0;
                lo = (lo + Math.imul(al0, bl5)) | 0;
                mid = (mid + Math.imul(al0, bh5)) | 0;
                mid = (mid + Math.imul(ah0, bl5)) | 0;
                hi = (hi + Math.imul(ah0, bh5)) | 0;
                var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
                w5 &= 0x3ffffff;
                /* k = 6 */
                lo = Math.imul(al6, bl0);
                mid = Math.imul(al6, bh0);
                mid = (mid + Math.imul(ah6, bl0)) | 0;
                hi = Math.imul(ah6, bh0);
                lo = (lo + Math.imul(al5, bl1)) | 0;
                mid = (mid + Math.imul(al5, bh1)) | 0;
                mid = (mid + Math.imul(ah5, bl1)) | 0;
                hi = (hi + Math.imul(ah5, bh1)) | 0;
                lo = (lo + Math.imul(al4, bl2)) | 0;
                mid = (mid + Math.imul(al4, bh2)) | 0;
                mid = (mid + Math.imul(ah4, bl2)) | 0;
                hi = (hi + Math.imul(ah4, bh2)) | 0;
                lo = (lo + Math.imul(al3, bl3)) | 0;
                mid = (mid + Math.imul(al3, bh3)) | 0;
                mid = (mid + Math.imul(ah3, bl3)) | 0;
                hi = (hi + Math.imul(ah3, bh3)) | 0;
                lo = (lo + Math.imul(al2, bl4)) | 0;
                mid = (mid + Math.imul(al2, bh4)) | 0;
                mid = (mid + Math.imul(ah2, bl4)) | 0;
                hi = (hi + Math.imul(ah2, bh4)) | 0;
                lo = (lo + Math.imul(al1, bl5)) | 0;
                mid = (mid + Math.imul(al1, bh5)) | 0;
                mid = (mid + Math.imul(ah1, bl5)) | 0;
                hi = (hi + Math.imul(ah1, bh5)) | 0;
                lo = (lo + Math.imul(al0, bl6)) | 0;
                mid = (mid + Math.imul(al0, bh6)) | 0;
                mid = (mid + Math.imul(ah0, bl6)) | 0;
                hi = (hi + Math.imul(ah0, bh6)) | 0;
                var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
                w6 &= 0x3ffffff;
                /* k = 7 */
                lo = Math.imul(al7, bl0);
                mid = Math.imul(al7, bh0);
                mid = (mid + Math.imul(ah7, bl0)) | 0;
                hi = Math.imul(ah7, bh0);
                lo = (lo + Math.imul(al6, bl1)) | 0;
                mid = (mid + Math.imul(al6, bh1)) | 0;
                mid = (mid + Math.imul(ah6, bl1)) | 0;
                hi = (hi + Math.imul(ah6, bh1)) | 0;
                lo = (lo + Math.imul(al5, bl2)) | 0;
                mid = (mid + Math.imul(al5, bh2)) | 0;
                mid = (mid + Math.imul(ah5, bl2)) | 0;
                hi = (hi + Math.imul(ah5, bh2)) | 0;
                lo = (lo + Math.imul(al4, bl3)) | 0;
                mid = (mid + Math.imul(al4, bh3)) | 0;
                mid = (mid + Math.imul(ah4, bl3)) | 0;
                hi = (hi + Math.imul(ah4, bh3)) | 0;
                lo = (lo + Math.imul(al3, bl4)) | 0;
                mid = (mid + Math.imul(al3, bh4)) | 0;
                mid = (mid + Math.imul(ah3, bl4)) | 0;
                hi = (hi + Math.imul(ah3, bh4)) | 0;
                lo = (lo + Math.imul(al2, bl5)) | 0;
                mid = (mid + Math.imul(al2, bh5)) | 0;
                mid = (mid + Math.imul(ah2, bl5)) | 0;
                hi = (hi + Math.imul(ah2, bh5)) | 0;
                lo = (lo + Math.imul(al1, bl6)) | 0;
                mid = (mid + Math.imul(al1, bh6)) | 0;
                mid = (mid + Math.imul(ah1, bl6)) | 0;
                hi = (hi + Math.imul(ah1, bh6)) | 0;
                lo = (lo + Math.imul(al0, bl7)) | 0;
                mid = (mid + Math.imul(al0, bh7)) | 0;
                mid = (mid + Math.imul(ah0, bl7)) | 0;
                hi = (hi + Math.imul(ah0, bh7)) | 0;
                var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
                w7 &= 0x3ffffff;
                /* k = 8 */
                lo = Math.imul(al8, bl0);
                mid = Math.imul(al8, bh0);
                mid = (mid + Math.imul(ah8, bl0)) | 0;
                hi = Math.imul(ah8, bh0);
                lo = (lo + Math.imul(al7, bl1)) | 0;
                mid = (mid + Math.imul(al7, bh1)) | 0;
                mid = (mid + Math.imul(ah7, bl1)) | 0;
                hi = (hi + Math.imul(ah7, bh1)) | 0;
                lo = (lo + Math.imul(al6, bl2)) | 0;
                mid = (mid + Math.imul(al6, bh2)) | 0;
                mid = (mid + Math.imul(ah6, bl2)) | 0;
                hi = (hi + Math.imul(ah6, bh2)) | 0;
                lo = (lo + Math.imul(al5, bl3)) | 0;
                mid = (mid + Math.imul(al5, bh3)) | 0;
                mid = (mid + Math.imul(ah5, bl3)) | 0;
                hi = (hi + Math.imul(ah5, bh3)) | 0;
                lo = (lo + Math.imul(al4, bl4)) | 0;
                mid = (mid + Math.imul(al4, bh4)) | 0;
                mid = (mid + Math.imul(ah4, bl4)) | 0;
                hi = (hi + Math.imul(ah4, bh4)) | 0;
                lo = (lo + Math.imul(al3, bl5)) | 0;
                mid = (mid + Math.imul(al3, bh5)) | 0;
                mid = (mid + Math.imul(ah3, bl5)) | 0;
                hi = (hi + Math.imul(ah3, bh5)) | 0;
                lo = (lo + Math.imul(al2, bl6)) | 0;
                mid = (mid + Math.imul(al2, bh6)) | 0;
                mid = (mid + Math.imul(ah2, bl6)) | 0;
                hi = (hi + Math.imul(ah2, bh6)) | 0;
                lo = (lo + Math.imul(al1, bl7)) | 0;
                mid = (mid + Math.imul(al1, bh7)) | 0;
                mid = (mid + Math.imul(ah1, bl7)) | 0;
                hi = (hi + Math.imul(ah1, bh7)) | 0;
                lo = (lo + Math.imul(al0, bl8)) | 0;
                mid = (mid + Math.imul(al0, bh8)) | 0;
                mid = (mid + Math.imul(ah0, bl8)) | 0;
                hi = (hi + Math.imul(ah0, bh8)) | 0;
                var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
                w8 &= 0x3ffffff;
                /* k = 9 */
                lo = Math.imul(al9, bl0);
                mid = Math.imul(al9, bh0);
                mid = (mid + Math.imul(ah9, bl0)) | 0;
                hi = Math.imul(ah9, bh0);
                lo = (lo + Math.imul(al8, bl1)) | 0;
                mid = (mid + Math.imul(al8, bh1)) | 0;
                mid = (mid + Math.imul(ah8, bl1)) | 0;
                hi = (hi + Math.imul(ah8, bh1)) | 0;
                lo = (lo + Math.imul(al7, bl2)) | 0;
                mid = (mid + Math.imul(al7, bh2)) | 0;
                mid = (mid + Math.imul(ah7, bl2)) | 0;
                hi = (hi + Math.imul(ah7, bh2)) | 0;
                lo = (lo + Math.imul(al6, bl3)) | 0;
                mid = (mid + Math.imul(al6, bh3)) | 0;
                mid = (mid + Math.imul(ah6, bl3)) | 0;
                hi = (hi + Math.imul(ah6, bh3)) | 0;
                lo = (lo + Math.imul(al5, bl4)) | 0;
                mid = (mid + Math.imul(al5, bh4)) | 0;
                mid = (mid + Math.imul(ah5, bl4)) | 0;
                hi = (hi + Math.imul(ah5, bh4)) | 0;
                lo = (lo + Math.imul(al4, bl5)) | 0;
                mid = (mid + Math.imul(al4, bh5)) | 0;
                mid = (mid + Math.imul(ah4, bl5)) | 0;
                hi = (hi + Math.imul(ah4, bh5)) | 0;
                lo = (lo + Math.imul(al3, bl6)) | 0;
                mid = (mid + Math.imul(al3, bh6)) | 0;
                mid = (mid + Math.imul(ah3, bl6)) | 0;
                hi = (hi + Math.imul(ah3, bh6)) | 0;
                lo = (lo + Math.imul(al2, bl7)) | 0;
                mid = (mid + Math.imul(al2, bh7)) | 0;
                mid = (mid + Math.imul(ah2, bl7)) | 0;
                hi = (hi + Math.imul(ah2, bh7)) | 0;
                lo = (lo + Math.imul(al1, bl8)) | 0;
                mid = (mid + Math.imul(al1, bh8)) | 0;
                mid = (mid + Math.imul(ah1, bl8)) | 0;
                hi = (hi + Math.imul(ah1, bh8)) | 0;
                lo = (lo + Math.imul(al0, bl9)) | 0;
                mid = (mid + Math.imul(al0, bh9)) | 0;
                mid = (mid + Math.imul(ah0, bl9)) | 0;
                hi = (hi + Math.imul(ah0, bh9)) | 0;
                var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
                w9 &= 0x3ffffff;
                /* k = 10 */
                lo = Math.imul(al9, bl1);
                mid = Math.imul(al9, bh1);
                mid = (mid + Math.imul(ah9, bl1)) | 0;
                hi = Math.imul(ah9, bh1);
                lo = (lo + Math.imul(al8, bl2)) | 0;
                mid = (mid + Math.imul(al8, bh2)) | 0;
                mid = (mid + Math.imul(ah8, bl2)) | 0;
                hi = (hi + Math.imul(ah8, bh2)) | 0;
                lo = (lo + Math.imul(al7, bl3)) | 0;
                mid = (mid + Math.imul(al7, bh3)) | 0;
                mid = (mid + Math.imul(ah7, bl3)) | 0;
                hi = (hi + Math.imul(ah7, bh3)) | 0;
                lo = (lo + Math.imul(al6, bl4)) | 0;
                mid = (mid + Math.imul(al6, bh4)) | 0;
                mid = (mid + Math.imul(ah6, bl4)) | 0;
                hi = (hi + Math.imul(ah6, bh4)) | 0;
                lo = (lo + Math.imul(al5, bl5)) | 0;
                mid = (mid + Math.imul(al5, bh5)) | 0;
                mid = (mid + Math.imul(ah5, bl5)) | 0;
                hi = (hi + Math.imul(ah5, bh5)) | 0;
                lo = (lo + Math.imul(al4, bl6)) | 0;
                mid = (mid + Math.imul(al4, bh6)) | 0;
                mid = (mid + Math.imul(ah4, bl6)) | 0;
                hi = (hi + Math.imul(ah4, bh6)) | 0;
                lo = (lo + Math.imul(al3, bl7)) | 0;
                mid = (mid + Math.imul(al3, bh7)) | 0;
                mid = (mid + Math.imul(ah3, bl7)) | 0;
                hi = (hi + Math.imul(ah3, bh7)) | 0;
                lo = (lo + Math.imul(al2, bl8)) | 0;
                mid = (mid + Math.imul(al2, bh8)) | 0;
                mid = (mid + Math.imul(ah2, bl8)) | 0;
                hi = (hi + Math.imul(ah2, bh8)) | 0;
                lo = (lo + Math.imul(al1, bl9)) | 0;
                mid = (mid + Math.imul(al1, bh9)) | 0;
                mid = (mid + Math.imul(ah1, bl9)) | 0;
                hi = (hi + Math.imul(ah1, bh9)) | 0;
                var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
                w10 &= 0x3ffffff;
                /* k = 11 */
                lo = Math.imul(al9, bl2);
                mid = Math.imul(al9, bh2);
                mid = (mid + Math.imul(ah9, bl2)) | 0;
                hi = Math.imul(ah9, bh2);
                lo = (lo + Math.imul(al8, bl3)) | 0;
                mid = (mid + Math.imul(al8, bh3)) | 0;
                mid = (mid + Math.imul(ah8, bl3)) | 0;
                hi = (hi + Math.imul(ah8, bh3)) | 0;
                lo = (lo + Math.imul(al7, bl4)) | 0;
                mid = (mid + Math.imul(al7, bh4)) | 0;
                mid = (mid + Math.imul(ah7, bl4)) | 0;
                hi = (hi + Math.imul(ah7, bh4)) | 0;
                lo = (lo + Math.imul(al6, bl5)) | 0;
                mid = (mid + Math.imul(al6, bh5)) | 0;
                mid = (mid + Math.imul(ah6, bl5)) | 0;
                hi = (hi + Math.imul(ah6, bh5)) | 0;
                lo = (lo + Math.imul(al5, bl6)) | 0;
                mid = (mid + Math.imul(al5, bh6)) | 0;
                mid = (mid + Math.imul(ah5, bl6)) | 0;
                hi = (hi + Math.imul(ah5, bh6)) | 0;
                lo = (lo + Math.imul(al4, bl7)) | 0;
                mid = (mid + Math.imul(al4, bh7)) | 0;
                mid = (mid + Math.imul(ah4, bl7)) | 0;
                hi = (hi + Math.imul(ah4, bh7)) | 0;
                lo = (lo + Math.imul(al3, bl8)) | 0;
                mid = (mid + Math.imul(al3, bh8)) | 0;
                mid = (mid + Math.imul(ah3, bl8)) | 0;
                hi = (hi + Math.imul(ah3, bh8)) | 0;
                lo = (lo + Math.imul(al2, bl9)) | 0;
                mid = (mid + Math.imul(al2, bh9)) | 0;
                mid = (mid + Math.imul(ah2, bl9)) | 0;
                hi = (hi + Math.imul(ah2, bh9)) | 0;
                var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
                w11 &= 0x3ffffff;
                /* k = 12 */
                lo = Math.imul(al9, bl3);
                mid = Math.imul(al9, bh3);
                mid = (mid + Math.imul(ah9, bl3)) | 0;
                hi = Math.imul(ah9, bh3);
                lo = (lo + Math.imul(al8, bl4)) | 0;
                mid = (mid + Math.imul(al8, bh4)) | 0;
                mid = (mid + Math.imul(ah8, bl4)) | 0;
                hi = (hi + Math.imul(ah8, bh4)) | 0;
                lo = (lo + Math.imul(al7, bl5)) | 0;
                mid = (mid + Math.imul(al7, bh5)) | 0;
                mid = (mid + Math.imul(ah7, bl5)) | 0;
                hi = (hi + Math.imul(ah7, bh5)) | 0;
                lo = (lo + Math.imul(al6, bl6)) | 0;
                mid = (mid + Math.imul(al6, bh6)) | 0;
                mid = (mid + Math.imul(ah6, bl6)) | 0;
                hi = (hi + Math.imul(ah6, bh6)) | 0;
                lo = (lo + Math.imul(al5, bl7)) | 0;
                mid = (mid + Math.imul(al5, bh7)) | 0;
                mid = (mid + Math.imul(ah5, bl7)) | 0;
                hi = (hi + Math.imul(ah5, bh7)) | 0;
                lo = (lo + Math.imul(al4, bl8)) | 0;
                mid = (mid + Math.imul(al4, bh8)) | 0;
                mid = (mid + Math.imul(ah4, bl8)) | 0;
                hi = (hi + Math.imul(ah4, bh8)) | 0;
                lo = (lo + Math.imul(al3, bl9)) | 0;
                mid = (mid + Math.imul(al3, bh9)) | 0;
                mid = (mid + Math.imul(ah3, bl9)) | 0;
                hi = (hi + Math.imul(ah3, bh9)) | 0;
                var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
                w12 &= 0x3ffffff;
                /* k = 13 */
                lo = Math.imul(al9, bl4);
                mid = Math.imul(al9, bh4);
                mid = (mid + Math.imul(ah9, bl4)) | 0;
                hi = Math.imul(ah9, bh4);
                lo = (lo + Math.imul(al8, bl5)) | 0;
                mid = (mid + Math.imul(al8, bh5)) | 0;
                mid = (mid + Math.imul(ah8, bl5)) | 0;
                hi = (hi + Math.imul(ah8, bh5)) | 0;
                lo = (lo + Math.imul(al7, bl6)) | 0;
                mid = (mid + Math.imul(al7, bh6)) | 0;
                mid = (mid + Math.imul(ah7, bl6)) | 0;
                hi = (hi + Math.imul(ah7, bh6)) | 0;
                lo = (lo + Math.imul(al6, bl7)) | 0;
                mid = (mid + Math.imul(al6, bh7)) | 0;
                mid = (mid + Math.imul(ah6, bl7)) | 0;
                hi = (hi + Math.imul(ah6, bh7)) | 0;
                lo = (lo + Math.imul(al5, bl8)) | 0;
                mid = (mid + Math.imul(al5, bh8)) | 0;
                mid = (mid + Math.imul(ah5, bl8)) | 0;
                hi = (hi + Math.imul(ah5, bh8)) | 0;
                lo = (lo + Math.imul(al4, bl9)) | 0;
                mid = (mid + Math.imul(al4, bh9)) | 0;
                mid = (mid + Math.imul(ah4, bl9)) | 0;
                hi = (hi + Math.imul(ah4, bh9)) | 0;
                var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
                w13 &= 0x3ffffff;
                /* k = 14 */
                lo = Math.imul(al9, bl5);
                mid = Math.imul(al9, bh5);
                mid = (mid + Math.imul(ah9, bl5)) | 0;
                hi = Math.imul(ah9, bh5);
                lo = (lo + Math.imul(al8, bl6)) | 0;
                mid = (mid + Math.imul(al8, bh6)) | 0;
                mid = (mid + Math.imul(ah8, bl6)) | 0;
                hi = (hi + Math.imul(ah8, bh6)) | 0;
                lo = (lo + Math.imul(al7, bl7)) | 0;
                mid = (mid + Math.imul(al7, bh7)) | 0;
                mid = (mid + Math.imul(ah7, bl7)) | 0;
                hi = (hi + Math.imul(ah7, bh7)) | 0;
                lo = (lo + Math.imul(al6, bl8)) | 0;
                mid = (mid + Math.imul(al6, bh8)) | 0;
                mid = (mid + Math.imul(ah6, bl8)) | 0;
                hi = (hi + Math.imul(ah6, bh8)) | 0;
                lo = (lo + Math.imul(al5, bl9)) | 0;
                mid = (mid + Math.imul(al5, bh9)) | 0;
                mid = (mid + Math.imul(ah5, bl9)) | 0;
                hi = (hi + Math.imul(ah5, bh9)) | 0;
                var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
                w14 &= 0x3ffffff;
                /* k = 15 */
                lo = Math.imul(al9, bl6);
                mid = Math.imul(al9, bh6);
                mid = (mid + Math.imul(ah9, bl6)) | 0;
                hi = Math.imul(ah9, bh6);
                lo = (lo + Math.imul(al8, bl7)) | 0;
                mid = (mid + Math.imul(al8, bh7)) | 0;
                mid = (mid + Math.imul(ah8, bl7)) | 0;
                hi = (hi + Math.imul(ah8, bh7)) | 0;
                lo = (lo + Math.imul(al7, bl8)) | 0;
                mid = (mid + Math.imul(al7, bh8)) | 0;
                mid = (mid + Math.imul(ah7, bl8)) | 0;
                hi = (hi + Math.imul(ah7, bh8)) | 0;
                lo = (lo + Math.imul(al6, bl9)) | 0;
                mid = (mid + Math.imul(al6, bh9)) | 0;
                mid = (mid + Math.imul(ah6, bl9)) | 0;
                hi = (hi + Math.imul(ah6, bh9)) | 0;
                var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
                w15 &= 0x3ffffff;
                /* k = 16 */
                lo = Math.imul(al9, bl7);
                mid = Math.imul(al9, bh7);
                mid = (mid + Math.imul(ah9, bl7)) | 0;
                hi = Math.imul(ah9, bh7);
                lo = (lo + Math.imul(al8, bl8)) | 0;
                mid = (mid + Math.imul(al8, bh8)) | 0;
                mid = (mid + Math.imul(ah8, bl8)) | 0;
                hi = (hi + Math.imul(ah8, bh8)) | 0;
                lo = (lo + Math.imul(al7, bl9)) | 0;
                mid = (mid + Math.imul(al7, bh9)) | 0;
                mid = (mid + Math.imul(ah7, bl9)) | 0;
                hi = (hi + Math.imul(ah7, bh9)) | 0;
                var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
                w16 &= 0x3ffffff;
                /* k = 17 */
                lo = Math.imul(al9, bl8);
                mid = Math.imul(al9, bh8);
                mid = (mid + Math.imul(ah9, bl8)) | 0;
                hi = Math.imul(ah9, bh8);
                lo = (lo + Math.imul(al8, bl9)) | 0;
                mid = (mid + Math.imul(al8, bh9)) | 0;
                mid = (mid + Math.imul(ah8, bl9)) | 0;
                hi = (hi + Math.imul(ah8, bh9)) | 0;
                var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
                w17 &= 0x3ffffff;
                /* k = 18 */
                lo = Math.imul(al9, bl9);
                mid = Math.imul(al9, bh9);
                mid = (mid + Math.imul(ah9, bl9)) | 0;
                hi = Math.imul(ah9, bh9);
                var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
                c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
                w18 &= 0x3ffffff;
                o[0] = w0;
                o[1] = w1;
                o[2] = w2;
                o[3] = w3;
                o[4] = w4;
                o[5] = w5;
                o[6] = w6;
                o[7] = w7;
                o[8] = w8;
                o[9] = w9;
                o[10] = w10;
                o[11] = w11;
                o[12] = w12;
                o[13] = w13;
                o[14] = w14;
                o[15] = w15;
                o[16] = w16;
                o[17] = w17;
                o[18] = w18;
                if (c !== 0) {
                    o[19] = c;
                    out.length++;
                }
                return out;
            };

            // Polyfill comb
            if (!Math.imul) {
                comb10MulTo = smallMulTo;
            }

            function bigMulTo (self, num, out) {
                out.negative = num.negative ^ self.negative;
                out.length = self.length + num.length;

                var carry = 0;
                var hncarry = 0;
                for (var k = 0; k < out.length - 1; k++) {
                    // Sum all words with the same `i + j = k` and accumulate `ncarry`,
                    // note that ncarry could be >= 0x3ffffff
                    var ncarry = hncarry;
                    hncarry = 0;
                    var rword = carry & 0x3ffffff;
                    var maxJ = Math.min(k, num.length - 1);
                    for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
                        var i = k - j;
                        var a = self.words[i] | 0;
                        var b = num.words[j] | 0;
                        var r = a * b;

                        var lo = r & 0x3ffffff;
                        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
                        lo = (lo + rword) | 0;
                        rword = lo & 0x3ffffff;
                        ncarry = (ncarry + (lo >>> 26)) | 0;

                        hncarry += ncarry >>> 26;
                        ncarry &= 0x3ffffff;
                    }
                    out.words[k] = rword;
                    carry = ncarry;
                    ncarry = hncarry;
                }
                if (carry !== 0) {
                    out.words[k] = carry;
                } else {
                    out.length--;
                }

                return out._strip();
            }

            function jumboMulTo (self, num, out) {
                // Temporary disable, see https://github.com/indutny/bn.js/issues/211
                // var fftm = new FFTM();
                // return fftm.mulp(self, num, out);
                return bigMulTo(self, num, out);
            }

            BN.prototype.mulTo = function mulTo (num, out) {
                var res;
                var len = this.length + num.length;
                if (this.length === 10 && num.length === 10) {
                    res = comb10MulTo(this, num, out);
                } else if (len < 63) {
                    res = smallMulTo(this, num, out);
                } else if (len < 1024) {
                    res = bigMulTo(this, num, out);
                } else {
                    res = jumboMulTo(this, num, out);
                }

                return res;
            };

            // Cooley-Tukey algorithm for FFT
            // slightly revisited to rely on looping instead of recursion

            function FFTM (x, y) {
                this.x = x;
                this.y = y;
            }

            FFTM.prototype.makeRBT = function makeRBT (N) {
                var t = new Array(N);
                var l = BN.prototype._countBits(N) - 1;
                for (var i = 0; i < N; i++) {
                    t[i] = this.revBin(i, l, N);
                }

                return t;
            };

            // Returns binary-reversed representation of `x`
            FFTM.prototype.revBin = function revBin (x, l, N) {
                if (x === 0 || x === N - 1) return x;

                var rb = 0;
                for (var i = 0; i < l; i++) {
                    rb |= (x & 1) << (l - i - 1);
                    x >>= 1;
                }

                return rb;
            };

            // Performs "tweedling" phase, therefore 'emulating'
            // behaviour of the recursive algorithm
            FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
                for (var i = 0; i < N; i++) {
                    rtws[i] = rws[rbt[i]];
                    itws[i] = iws[rbt[i]];
                }
            };

            FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
                this.permute(rbt, rws, iws, rtws, itws, N);

                for (var s = 1; s < N; s <<= 1) {
                    var l = s << 1;

                    var rtwdf = Math.cos(2 * Math.PI / l);
                    var itwdf = Math.sin(2 * Math.PI / l);

                    for (var p = 0; p < N; p += l) {
                        var rtwdf_ = rtwdf;
                        var itwdf_ = itwdf;

                        for (var j = 0; j < s; j++) {
                            var re = rtws[p + j];
                            var ie = itws[p + j];

                            var ro = rtws[p + j + s];
                            var io = itws[p + j + s];

                            var rx = rtwdf_ * ro - itwdf_ * io;

                            io = rtwdf_ * io + itwdf_ * ro;
                            ro = rx;

                            rtws[p + j] = re + ro;
                            itws[p + j] = ie + io;

                            rtws[p + j + s] = re - ro;
                            itws[p + j + s] = ie - io;

                            /* jshint maxdepth : false */
                            if (j !== l) {
                                rx = rtwdf * rtwdf_ - itwdf * itwdf_;

                                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                                rtwdf_ = rx;
                            }
                        }
                    }
                }
            };

            FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
                var N = Math.max(m, n) | 1;
                var odd = N & 1;
                var i = 0;
                for (N = N / 2 | 0; N; N = N >>> 1) {
                    i++;
                }

                return 1 << i + 1 + odd;
            };

            FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
                if (N <= 1) return;

                for (var i = 0; i < N / 2; i++) {
                    var t = rws[i];

                    rws[i] = rws[N - i - 1];
                    rws[N - i - 1] = t;

                    t = iws[i];

                    iws[i] = -iws[N - i - 1];
                    iws[N - i - 1] = -t;
                }
            };

            FFTM.prototype.normalize13b = function normalize13b (ws, N) {
                var carry = 0;
                for (var i = 0; i < N / 2; i++) {
                    var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
                        Math.round(ws[2 * i] / N) +
                        carry;

                    ws[i] = w & 0x3ffffff;

                    if (w < 0x4000000) {
                        carry = 0;
                    } else {
                        carry = w / 0x4000000 | 0;
                    }
                }

                return ws;
            };

            FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
                var carry = 0;
                for (var i = 0; i < len; i++) {
                    carry = carry + (ws[i] | 0);

                    rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
                    rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
                }

                // Pad with zeroes
                for (i = 2 * len; i < N; ++i) {
                    rws[i] = 0;
                }

                assert(carry === 0);
                assert((carry & ~0x1fff) === 0);
            };

            FFTM.prototype.stub = function stub (N) {
                var ph = new Array(N);
                for (var i = 0; i < N; i++) {
                    ph[i] = 0;
                }

                return ph;
            };

            FFTM.prototype.mulp = function mulp (x, y, out) {
                var N = 2 * this.guessLen13b(x.length, y.length);

                var rbt = this.makeRBT(N);

                var _ = this.stub(N);

                var rws = new Array(N);
                var rwst = new Array(N);
                var iwst = new Array(N);

                var nrws = new Array(N);
                var nrwst = new Array(N);
                var niwst = new Array(N);

                var rmws = out.words;
                rmws.length = N;

                this.convert13b(x.words, x.length, rws, N);
                this.convert13b(y.words, y.length, nrws, N);

                this.transform(rws, _, rwst, iwst, N, rbt);
                this.transform(nrws, _, nrwst, niwst, N, rbt);

                for (var i = 0; i < N; i++) {
                    var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
                    iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
                    rwst[i] = rx;
                }

                this.conjugate(rwst, iwst, N);
                this.transform(rwst, iwst, rmws, _, N, rbt);
                this.conjugate(rmws, _, N);
                this.normalize13b(rmws, N);

                out.negative = x.negative ^ y.negative;
                out.length = x.length + y.length;
                return out._strip();
            };

            // Multiply `this` by `num`
            BN.prototype.mul = function mul (num) {
                var out = new BN(null);
                out.words = new Array(this.length + num.length);
                return this.mulTo(num, out);
            };

            // Multiply employing FFT
            BN.prototype.mulf = function mulf (num) {
                var out = new BN(null);
                out.words = new Array(this.length + num.length);
                return jumboMulTo(this, num, out);
            };

            // In-place Multiplication
            BN.prototype.imul = function imul (num) {
                return this.clone().mulTo(num, this);
            };

            BN.prototype.imuln = function imuln (num) {
                var isNegNum = num < 0;
                if (isNegNum) num = -num;

                assert(typeof num === 'number');
                assert(num < 0x4000000);

                // Carry
                var carry = 0;
                for (var i = 0; i < this.length; i++) {
                    var w = (this.words[i] | 0) * num;
                    var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
                    carry >>= 26;
                    carry += (w / 0x4000000) | 0;
                    // NOTE: lo is 27bit maximum
                    carry += lo >>> 26;
                    this.words[i] = lo & 0x3ffffff;
                }

                if (carry !== 0) {
                    this.words[i] = carry;
                    this.length++;
                }

                return isNegNum ? this.ineg() : this;
            };

            BN.prototype.muln = function muln (num) {
                return this.clone().imuln(num);
            };

            // `this` * `this`
            BN.prototype.sqr = function sqr () {
                return this.mul(this);
            };

            // `this` * `this` in-place
            BN.prototype.isqr = function isqr () {
                return this.imul(this.clone());
            };

            // Math.pow(`this`, `num`)
            BN.prototype.pow = function pow (num) {
                var w = toBitArray(num);
                if (w.length === 0) return new BN(1);

                // Skip leading zeroes
                var res = this;
                for (var i = 0; i < w.length; i++, res = res.sqr()) {
                    if (w[i] !== 0) break;
                }

                if (++i < w.length) {
                    for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
                        if (w[i] === 0) continue;

                        res = res.mul(q);
                    }
                }

                return res;
            };

            // Shift-left in-place
            BN.prototype.iushln = function iushln (bits) {
                assert(typeof bits === 'number' && bits >= 0);
                var r = bits % 26;
                var s = (bits - r) / 26;
                var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
                var i;

                if (r !== 0) {
                    var carry = 0;

                    for (i = 0; i < this.length; i++) {
                        var newCarry = this.words[i] & carryMask;
                        var c = ((this.words[i] | 0) - newCarry) << r;
                        this.words[i] = c | carry;
                        carry = newCarry >>> (26 - r);
                    }

                    if (carry) {
                        this.words[i] = carry;
                        this.length++;
                    }
                }

                if (s !== 0) {
                    for (i = this.length - 1; i >= 0; i--) {
                        this.words[i + s] = this.words[i];
                    }

                    for (i = 0; i < s; i++) {
                        this.words[i] = 0;
                    }

                    this.length += s;
                }

                return this._strip();
            };

            BN.prototype.ishln = function ishln (bits) {
                // TODO(indutny): implement me
                assert(this.negative === 0);
                return this.iushln(bits);
            };

            // Shift-right in-place
            // NOTE: `hint` is a lowest bit before trailing zeroes
            // NOTE: if `extended` is present - it will be filled with destroyed bits
            BN.prototype.iushrn = function iushrn (bits, hint, extended) {
                assert(typeof bits === 'number' && bits >= 0);
                var h;
                if (hint) {
                    h = (hint - (hint % 26)) / 26;
                } else {
                    h = 0;
                }

                var r = bits % 26;
                var s = Math.min((bits - r) / 26, this.length);
                var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
                var maskedWords = extended;

                h -= s;
                h = Math.max(0, h);

                // Extended mode, copy masked part
                if (maskedWords) {
                    for (var i = 0; i < s; i++) {
                        maskedWords.words[i] = this.words[i];
                    }
                    maskedWords.length = s;
                }

                if (s === 0) {
                    // No-op, we should not move anything at all
                } else if (this.length > s) {
                    this.length -= s;
                    for (i = 0; i < this.length; i++) {
                        this.words[i] = this.words[i + s];
                    }
                } else {
                    this.words[0] = 0;
                    this.length = 1;
                }

                var carry = 0;
                for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
                    var word = this.words[i] | 0;
                    this.words[i] = (carry << (26 - r)) | (word >>> r);
                    carry = word & mask;
                }

                // Push carried bits as a mask
                if (maskedWords && carry !== 0) {
                    maskedWords.words[maskedWords.length++] = carry;
                }

                if (this.length === 0) {
                    this.words[0] = 0;
                    this.length = 1;
                }

                return this._strip();
            };

            BN.prototype.ishrn = function ishrn (bits, hint, extended) {
                // TODO(indutny): implement me
                assert(this.negative === 0);
                return this.iushrn(bits, hint, extended);
            };

            // Shift-left
            BN.prototype.shln = function shln (bits) {
                return this.clone().ishln(bits);
            };

            BN.prototype.ushln = function ushln (bits) {
                return this.clone().iushln(bits);
            };

            // Shift-right
            BN.prototype.shrn = function shrn (bits) {
                return this.clone().ishrn(bits);
            };

            BN.prototype.ushrn = function ushrn (bits) {
                return this.clone().iushrn(bits);
            };

            // Test if n bit is set
            BN.prototype.testn = function testn (bit) {
                assert(typeof bit === 'number' && bit >= 0);
                var r = bit % 26;
                var s = (bit - r) / 26;
                var q = 1 << r;

                // Fast case: bit is much higher than all existing words
                if (this.length <= s) return false;

                // Check bit and return
                var w = this.words[s];

                return !!(w & q);
            };

            // Return only lowers bits of number (in-place)
            BN.prototype.imaskn = function imaskn (bits) {
                assert(typeof bits === 'number' && bits >= 0);
                var r = bits % 26;
                var s = (bits - r) / 26;

                assert(this.negative === 0, 'imaskn works only with positive numbers');

                if (this.length <= s) {
                    return this;
                }

                if (r !== 0) {
                    s++;
                }
                this.length = Math.min(s, this.length);

                if (r !== 0) {
                    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
                    this.words[this.length - 1] &= mask;
                }

                return this._strip();
            };

            // Return only lowers bits of number
            BN.prototype.maskn = function maskn (bits) {
                return this.clone().imaskn(bits);
            };

            // Add plain number `num` to `this`
            BN.prototype.iaddn = function iaddn (num) {
                assert(typeof num === 'number');
                assert(num < 0x4000000);
                if (num < 0) return this.isubn(-num);

                // Possible sign change
                if (this.negative !== 0) {
                    if (this.length === 1 && (this.words[0] | 0) <= num) {
                        this.words[0] = num - (this.words[0] | 0);
                        this.negative = 0;
                        return this;
                    }

                    this.negative = 0;
                    this.isubn(num);
                    this.negative = 1;
                    return this;
                }

                // Add without checks
                return this._iaddn(num);
            };

            BN.prototype._iaddn = function _iaddn (num) {
                this.words[0] += num;

                // Carry
                for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
                    this.words[i] -= 0x4000000;
                    if (i === this.length - 1) {
                        this.words[i + 1] = 1;
                    } else {
                        this.words[i + 1]++;
                    }
                }
                this.length = Math.max(this.length, i + 1);

                return this;
            };

            // Subtract plain number `num` from `this`
            BN.prototype.isubn = function isubn (num) {
                assert(typeof num === 'number');
                assert(num < 0x4000000);
                if (num < 0) return this.iaddn(-num);

                if (this.negative !== 0) {
                    this.negative = 0;
                    this.iaddn(num);
                    this.negative = 1;
                    return this;
                }

                this.words[0] -= num;

                if (this.length === 1 && this.words[0] < 0) {
                    this.words[0] = -this.words[0];
                    this.negative = 1;
                } else {
                    // Carry
                    for (var i = 0; i < this.length && this.words[i] < 0; i++) {
                        this.words[i] += 0x4000000;
                        this.words[i + 1] -= 1;
                    }
                }

                return this._strip();
            };

            BN.prototype.addn = function addn (num) {
                return this.clone().iaddn(num);
            };

            BN.prototype.subn = function subn (num) {
                return this.clone().isubn(num);
            };

            BN.prototype.iabs = function iabs () {
                this.negative = 0;

                return this;
            };

            BN.prototype.abs = function abs () {
                return this.clone().iabs();
            };

            BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
                var len = num.length + shift;
                var i;

                this._expand(len);

                var w;
                var carry = 0;
                for (i = 0; i < num.length; i++) {
                    w = (this.words[i + shift] | 0) + carry;
                    var right = (num.words[i] | 0) * mul;
                    w -= right & 0x3ffffff;
                    carry = (w >> 26) - ((right / 0x4000000) | 0);
                    this.words[i + shift] = w & 0x3ffffff;
                }
                for (; i < this.length - shift; i++) {
                    w = (this.words[i + shift] | 0) + carry;
                    carry = w >> 26;
                    this.words[i + shift] = w & 0x3ffffff;
                }

                if (carry === 0) return this._strip();

                // Subtraction overflow
                assert(carry === -1);
                carry = 0;
                for (i = 0; i < this.length; i++) {
                    w = -(this.words[i] | 0) + carry;
                    carry = w >> 26;
                    this.words[i] = w & 0x3ffffff;
                }
                this.negative = 1;

                return this._strip();
            };

            BN.prototype._wordDiv = function _wordDiv (num, mode) {
                var shift = this.length - num.length;

                var a = this.clone();
                var b = num;

                // Normalize
                var bhi = b.words[b.length - 1] | 0;
                var bhiBits = this._countBits(bhi);
                shift = 26 - bhiBits;
                if (shift !== 0) {
                    b = b.ushln(shift);
                    a.iushln(shift);
                    bhi = b.words[b.length - 1] | 0;
                }

                // Initialize quotient
                var m = a.length - b.length;
                var q;

                if (mode !== 'mod') {
                    q = new BN(null);
                    q.length = m + 1;
                    q.words = new Array(q.length);
                    for (var i = 0; i < q.length; i++) {
                        q.words[i] = 0;
                    }
                }

                var diff = a.clone()._ishlnsubmul(b, 1, m);
                if (diff.negative === 0) {
                    a = diff;
                    if (q) {
                        q.words[m] = 1;
                    }
                }

                for (var j = m - 1; j >= 0; j--) {
                    var qj = (a.words[b.length + j] | 0) * 0x4000000 +
                        (a.words[b.length + j - 1] | 0);

                    // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
                    // (0x7ffffff)
                    qj = Math.min((qj / bhi) | 0, 0x3ffffff);

                    a._ishlnsubmul(b, qj, j);
                    while (a.negative !== 0) {
                        qj--;
                        a.negative = 0;
                        a._ishlnsubmul(b, 1, j);
                        if (!a.isZero()) {
                            a.negative ^= 1;
                        }
                    }
                    if (q) {
                        q.words[j] = qj;
                    }
                }
                if (q) {
                    q._strip();
                }
                a._strip();

                // Denormalize
                if (mode !== 'div' && shift !== 0) {
                    a.iushrn(shift);
                }

                return {
                    div: q || null,
                    mod: a
                };
            };

            // NOTE: 1) `mode` can be set to `mod` to request mod only,
            //       to `div` to request div only, or be absent to
            //       request both div & mod
            //       2) `positive` is true if unsigned mod is requested
            BN.prototype.divmod = function divmod (num, mode, positive) {
                assert(!num.isZero());

                if (this.isZero()) {
                    return {
                        div: new BN(0),
                        mod: new BN(0)
                    };
                }

                var div, mod, res;
                if (this.negative !== 0 && num.negative === 0) {
                    res = this.neg().divmod(num, mode);

                    if (mode !== 'mod') {
                        div = res.div.neg();
                    }

                    if (mode !== 'div') {
                        mod = res.mod.neg();
                        if (positive && mod.negative !== 0) {
                            mod.iadd(num);
                        }
                    }

                    return {
                        div: div,
                        mod: mod
                    };
                }

                if (this.negative === 0 && num.negative !== 0) {
                    res = this.divmod(num.neg(), mode);

                    if (mode !== 'mod') {
                        div = res.div.neg();
                    }

                    return {
                        div: div,
                        mod: res.mod
                    };
                }

                if ((this.negative & num.negative) !== 0) {
                    res = this.neg().divmod(num.neg(), mode);

                    if (mode !== 'div') {
                        mod = res.mod.neg();
                        if (positive && mod.negative !== 0) {
                            mod.isub(num);
                        }
                    }

                    return {
                        div: res.div,
                        mod: mod
                    };
                }

                // Both numbers are positive at this point

                // Strip both numbers to approximate shift value
                if (num.length > this.length || this.cmp(num) < 0) {
                    return {
                        div: new BN(0),
                        mod: this
                    };
                }

                // Very short reduction
                if (num.length === 1) {
                    if (mode === 'div') {
                        return {
                            div: this.divn(num.words[0]),
                            mod: null
                        };
                    }

                    if (mode === 'mod') {
                        return {
                            div: null,
                            mod: new BN(this.modrn(num.words[0]))
                        };
                    }

                    return {
                        div: this.divn(num.words[0]),
                        mod: new BN(this.modrn(num.words[0]))
                    };
                }

                return this._wordDiv(num, mode);
            };

            // Find `this` / `num`
            BN.prototype.div = function div (num) {
                return this.divmod(num, 'div', false).div;
            };

            // Find `this` % `num`
            BN.prototype.mod = function mod (num) {
                return this.divmod(num, 'mod', false).mod;
            };

            BN.prototype.umod = function umod (num) {
                return this.divmod(num, 'mod', true).mod;
            };

            // Find Round(`this` / `num`)
            BN.prototype.divRound = function divRound (num) {
                var dm = this.divmod(num);

                // Fast case - exact division
                if (dm.mod.isZero()) return dm.div;

                var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

                var half = num.ushrn(1);
                var r2 = num.andln(1);
                var cmp = mod.cmp(half);

                // Round down
                if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;

                // Round up
                return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
            };

            BN.prototype.modrn = function modrn (num) {
                var isNegNum = num < 0;
                if (isNegNum) num = -num;

                assert(num <= 0x3ffffff);
                var p = (1 << 26) % num;

                var acc = 0;
                for (var i = this.length - 1; i >= 0; i--) {
                    acc = (p * acc + (this.words[i] | 0)) % num;
                }

                return isNegNum ? -acc : acc;
            };

            // WARNING: DEPRECATED
            BN.prototype.modn = function modn (num) {
                return this.modrn(num);
            };

            // In-place division by number
            BN.prototype.idivn = function idivn (num) {
                var isNegNum = num < 0;
                if (isNegNum) num = -num;

                assert(num <= 0x3ffffff);

                var carry = 0;
                for (var i = this.length - 1; i >= 0; i--) {
                    var w = (this.words[i] | 0) + carry * 0x4000000;
                    this.words[i] = (w / num) | 0;
                    carry = w % num;
                }

                this._strip();
                return isNegNum ? this.ineg() : this;
            };

            BN.prototype.divn = function divn (num) {
                return this.clone().idivn(num);
            };

            BN.prototype.egcd = function egcd (p) {
                assert(p.negative === 0);
                assert(!p.isZero());

                var x = this;
                var y = p.clone();

                if (x.negative !== 0) {
                    x = x.umod(p);
                } else {
                    x = x.clone();
                }

                // A * x + B * y = x
                var A = new BN(1);
                var B = new BN(0);

                // C * x + D * y = y
                var C = new BN(0);
                var D = new BN(1);

                var g = 0;

                while (x.isEven() && y.isEven()) {
                    x.iushrn(1);
                    y.iushrn(1);
                    ++g;
                }

                var yp = y.clone();
                var xp = x.clone();

                while (!x.isZero()) {
                    for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
                    if (i > 0) {
                        x.iushrn(i);
                        while (i-- > 0) {
                            if (A.isOdd() || B.isOdd()) {
                                A.iadd(yp);
                                B.isub(xp);
                            }

                            A.iushrn(1);
                            B.iushrn(1);
                        }
                    }

                    for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
                    if (j > 0) {
                        y.iushrn(j);
                        while (j-- > 0) {
                            if (C.isOdd() || D.isOdd()) {
                                C.iadd(yp);
                                D.isub(xp);
                            }

                            C.iushrn(1);
                            D.iushrn(1);
                        }
                    }

                    if (x.cmp(y) >= 0) {
                        x.isub(y);
                        A.isub(C);
                        B.isub(D);
                    } else {
                        y.isub(x);
                        C.isub(A);
                        D.isub(B);
                    }
                }

                return {
                    a: C,
                    b: D,
                    gcd: y.iushln(g)
                };
            };

            // This is reduced incarnation of the binary EEA
            // above, designated to invert members of the
            // _prime_ fields F(p) at a maximal speed
            BN.prototype._invmp = function _invmp (p) {
                assert(p.negative === 0);
                assert(!p.isZero());

                var a = this;
                var b = p.clone();

                if (a.negative !== 0) {
                    a = a.umod(p);
                } else {
                    a = a.clone();
                }

                var x1 = new BN(1);
                var x2 = new BN(0);

                var delta = b.clone();

                while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
                    for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
                    if (i > 0) {
                        a.iushrn(i);
                        while (i-- > 0) {
                            if (x1.isOdd()) {
                                x1.iadd(delta);
                            }

                            x1.iushrn(1);
                        }
                    }

                    for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
                    if (j > 0) {
                        b.iushrn(j);
                        while (j-- > 0) {
                            if (x2.isOdd()) {
                                x2.iadd(delta);
                            }

                            x2.iushrn(1);
                        }
                    }

                    if (a.cmp(b) >= 0) {
                        a.isub(b);
                        x1.isub(x2);
                    } else {
                        b.isub(a);
                        x2.isub(x1);
                    }
                }

                var res;
                if (a.cmpn(1) === 0) {
                    res = x1;
                } else {
                    res = x2;
                }

                if (res.cmpn(0) < 0) {
                    res.iadd(p);
                }

                return res;
            };

            BN.prototype.gcd = function gcd (num) {
                if (this.isZero()) return num.abs();
                if (num.isZero()) return this.abs();

                var a = this.clone();
                var b = num.clone();
                a.negative = 0;
                b.negative = 0;

                // Remove common factor of two
                for (var shift = 0; a.isEven() && b.isEven(); shift++) {
                    a.iushrn(1);
                    b.iushrn(1);
                }

                do {
                    while (a.isEven()) {
                        a.iushrn(1);
                    }
                    while (b.isEven()) {
                        b.iushrn(1);
                    }

                    var r = a.cmp(b);
                    if (r < 0) {
                        // Swap `a` and `b` to make `a` always bigger than `b`
                        var t = a;
                        a = b;
                        b = t;
                    } else if (r === 0 || b.cmpn(1) === 0) {
                        break;
                    }

                    a.isub(b);
                } while (true);

                return b.iushln(shift);
            };

            // Invert number in the field F(num)
            BN.prototype.invm = function invm (num) {
                return this.egcd(num).a.umod(num);
            };

            BN.prototype.isEven = function isEven () {
                return (this.words[0] & 1) === 0;
            };

            BN.prototype.isOdd = function isOdd () {
                return (this.words[0] & 1) === 1;
            };

            // And first word and num
            BN.prototype.andln = function andln (num) {
                return this.words[0] & num;
            };

            // Increment at the bit position in-line
            BN.prototype.bincn = function bincn (bit) {
                assert(typeof bit === 'number');
                var r = bit % 26;
                var s = (bit - r) / 26;
                var q = 1 << r;

                // Fast case: bit is much higher than all existing words
                if (this.length <= s) {
                    this._expand(s + 1);
                    this.words[s] |= q;
                    return this;
                }

                // Add bit and propagate, if needed
                var carry = q;
                for (var i = s; carry !== 0 && i < this.length; i++) {
                    var w = this.words[i] | 0;
                    w += carry;
                    carry = w >>> 26;
                    w &= 0x3ffffff;
                    this.words[i] = w;
                }
                if (carry !== 0) {
                    this.words[i] = carry;
                    this.length++;
                }
                return this;
            };

            BN.prototype.isZero = function isZero () {
                return this.length === 1 && this.words[0] === 0;
            };

            BN.prototype.cmpn = function cmpn (num) {
                var negative = num < 0;

                if (this.negative !== 0 && !negative) return -1;
                if (this.negative === 0 && negative) return 1;

                this._strip();

                var res;
                if (this.length > 1) {
                    res = 1;
                } else {
                    if (negative) {
                        num = -num;
                    }

                    assert(num <= 0x3ffffff, 'Number is too big');

                    var w = this.words[0] | 0;
                    res = w === num ? 0 : w < num ? -1 : 1;
                }
                if (this.negative !== 0) return -res | 0;
                return res;
            };

            // Compare two numbers and return:
            // 1 - if `this` > `num`
            // 0 - if `this` == `num`
            // -1 - if `this` < `num`
            BN.prototype.cmp = function cmp (num) {
                if (this.negative !== 0 && num.negative === 0) return -1;
                if (this.negative === 0 && num.negative !== 0) return 1;

                var res = this.ucmp(num);
                if (this.negative !== 0) return -res | 0;
                return res;
            };

            // Unsigned comparison
            BN.prototype.ucmp = function ucmp (num) {
                // At this point both numbers have the same sign
                if (this.length > num.length) return 1;
                if (this.length < num.length) return -1;

                var res = 0;
                for (var i = this.length - 1; i >= 0; i--) {
                    var a = this.words[i] | 0;
                    var b = num.words[i] | 0;

                    if (a === b) continue;
                    if (a < b) {
                        res = -1;
                    } else if (a > b) {
                        res = 1;
                    }
                    break;
                }
                return res;
            };

            BN.prototype.gtn = function gtn (num) {
                return this.cmpn(num) === 1;
            };

            BN.prototype.gt = function gt (num) {
                return this.cmp(num) === 1;
            };

            BN.prototype.gten = function gten (num) {
                return this.cmpn(num) >= 0;
            };

            BN.prototype.gte = function gte (num) {
                return this.cmp(num) >= 0;
            };

            BN.prototype.ltn = function ltn (num) {
                return this.cmpn(num) === -1;
            };

            BN.prototype.lt = function lt (num) {
                return this.cmp(num) === -1;
            };

            BN.prototype.lten = function lten (num) {
                return this.cmpn(num) <= 0;
            };

            BN.prototype.lte = function lte (num) {
                return this.cmp(num) <= 0;
            };

            BN.prototype.eqn = function eqn (num) {
                return this.cmpn(num) === 0;
            };

            BN.prototype.eq = function eq (num) {
                return this.cmp(num) === 0;
            };

            //
            // A reduce context, could be using montgomery or something better, depending
            // on the `m` itself.
            //
            BN.red = function red (num) {
                return new Red(num);
            };

            BN.prototype.toRed = function toRed (ctx) {
                assert(!this.red, 'Already a number in reduction context');
                assert(this.negative === 0, 'red works only with positives');
                return ctx.convertTo(this)._forceRed(ctx);
            };

            BN.prototype.fromRed = function fromRed () {
                assert(this.red, 'fromRed works only with numbers in reduction context');
                return this.red.convertFrom(this);
            };

            BN.prototype._forceRed = function _forceRed (ctx) {
                this.red = ctx;
                return this;
            };

            BN.prototype.forceRed = function forceRed (ctx) {
                assert(!this.red, 'Already a number in reduction context');
                return this._forceRed(ctx);
            };

            BN.prototype.redAdd = function redAdd (num) {
                assert(this.red, 'redAdd works only with red numbers');
                return this.red.add(this, num);
            };

            BN.prototype.redIAdd = function redIAdd (num) {
                assert(this.red, 'redIAdd works only with red numbers');
                return this.red.iadd(this, num);
            };

            BN.prototype.redSub = function redSub (num) {
                assert(this.red, 'redSub works only with red numbers');
                return this.red.sub(this, num);
            };

            BN.prototype.redISub = function redISub (num) {
                assert(this.red, 'redISub works only with red numbers');
                return this.red.isub(this, num);
            };

            BN.prototype.redShl = function redShl (num) {
                assert(this.red, 'redShl works only with red numbers');
                return this.red.shl(this, num);
            };

            BN.prototype.redMul = function redMul (num) {
                assert(this.red, 'redMul works only with red numbers');
                this.red._verify2(this, num);
                return this.red.mul(this, num);
            };

            BN.prototype.redIMul = function redIMul (num) {
                assert(this.red, 'redMul works only with red numbers');
                this.red._verify2(this, num);
                return this.red.imul(this, num);
            };

            BN.prototype.redSqr = function redSqr () {
                assert(this.red, 'redSqr works only with red numbers');
                this.red._verify1(this);
                return this.red.sqr(this);
            };

            BN.prototype.redISqr = function redISqr () {
                assert(this.red, 'redISqr works only with red numbers');
                this.red._verify1(this);
                return this.red.isqr(this);
            };

            // Square root over p
            BN.prototype.redSqrt = function redSqrt () {
                assert(this.red, 'redSqrt works only with red numbers');
                this.red._verify1(this);
                return this.red.sqrt(this);
            };

            BN.prototype.redInvm = function redInvm () {
                assert(this.red, 'redInvm works only with red numbers');
                this.red._verify1(this);
                return this.red.invm(this);
            };

            // Return negative clone of `this` % `red modulo`
            BN.prototype.redNeg = function redNeg () {
                assert(this.red, 'redNeg works only with red numbers');
                this.red._verify1(this);
                return this.red.neg(this);
            };

            BN.prototype.redPow = function redPow (num) {
                assert(this.red && !num.red, 'redPow(normalNum)');
                this.red._verify1(this);
                return this.red.pow(this, num);
            };

            // Prime numbers with efficient reduction
            var primes = {
                k256: null,
                p224: null,
                p192: null,
                p25519: null
            };

            // Pseudo-Mersenne prime
            function MPrime (name, p) {
                // P = 2 ^ N - K
                this.name = name;
                this.p = new BN(p, 16);
                this.n = this.p.bitLength();
                this.k = new BN(1).iushln(this.n).isub(this.p);

                this.tmp = this._tmp();
            }

            MPrime.prototype._tmp = function _tmp () {
                var tmp = new BN(null);
                tmp.words = new Array(Math.ceil(this.n / 13));
                return tmp;
            };

            MPrime.prototype.ireduce = function ireduce (num) {
                // Assumes that `num` is less than `P^2`
                // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
                var r = num;
                var rlen;

                do {
                    this.split(r, this.tmp);
                    r = this.imulK(r);
                    r = r.iadd(this.tmp);
                    rlen = r.bitLength();
                } while (rlen > this.n);

                var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
                if (cmp === 0) {
                    r.words[0] = 0;
                    r.length = 1;
                } else if (cmp > 0) {
                    r.isub(this.p);
                } else {
                    if (r.strip !== undefined) {
                        // r is a BN v4 instance
                        r.strip();
                    } else {
                        // r is a BN v5 instance
                        r._strip();
                    }
                }

                return r;
            };

            MPrime.prototype.split = function split (input, out) {
                input.iushrn(this.n, 0, out);
            };

            MPrime.prototype.imulK = function imulK (num) {
                return num.imul(this.k);
            };

            function K256 () {
                MPrime.call(
                    this,
                    'k256',
                    'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
            }
            inherits(K256, MPrime);

            K256.prototype.split = function split (input, output) {
                // 256 = 9 * 26 + 22
                var mask = 0x3fffff;

                var outLen = Math.min(input.length, 9);
                for (var i = 0; i < outLen; i++) {
                    output.words[i] = input.words[i];
                }
                output.length = outLen;

                if (input.length <= 9) {
                    input.words[0] = 0;
                    input.length = 1;
                    return;
                }

                // Shift by 9 limbs
                var prev = input.words[9];
                output.words[output.length++] = prev & mask;

                for (i = 10; i < input.length; i++) {
                    var next = input.words[i] | 0;
                    input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
                    prev = next;
                }
                prev >>>= 22;
                input.words[i - 10] = prev;
                if (prev === 0 && input.length > 10) {
                    input.length -= 10;
                } else {
                    input.length -= 9;
                }
            };

            K256.prototype.imulK = function imulK (num) {
                // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
                num.words[num.length] = 0;
                num.words[num.length + 1] = 0;
                num.length += 2;

                // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
                var lo = 0;
                for (var i = 0; i < num.length; i++) {
                    var w = num.words[i] | 0;
                    lo += w * 0x3d1;
                    num.words[i] = lo & 0x3ffffff;
                    lo = w * 0x40 + ((lo / 0x4000000) | 0);
                }

                // Fast length reduction
                if (num.words[num.length - 1] === 0) {
                    num.length--;
                    if (num.words[num.length - 1] === 0) {
                        num.length--;
                    }
                }
                return num;
            };

            function P224 () {
                MPrime.call(
                    this,
                    'p224',
                    'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
            }
            inherits(P224, MPrime);

            function P192 () {
                MPrime.call(
                    this,
                    'p192',
                    'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
            }
            inherits(P192, MPrime);

            function P25519 () {
                // 2 ^ 255 - 19
                MPrime.call(
                    this,
                    '25519',
                    '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
            }
            inherits(P25519, MPrime);

            P25519.prototype.imulK = function imulK (num) {
                // K = 0x13
                var carry = 0;
                for (var i = 0; i < num.length; i++) {
                    var hi = (num.words[i] | 0) * 0x13 + carry;
                    var lo = hi & 0x3ffffff;
                    hi >>>= 26;

                    num.words[i] = lo;
                    carry = hi;
                }
                if (carry !== 0) {
                    num.words[num.length++] = carry;
                }
                return num;
            };

            // Exported mostly for testing purposes, use plain name instead
            BN._prime = function prime (name) {
                // Cached version of prime
                if (primes[name]) return primes[name];

                var prime;
                if (name === 'k256') {
                    prime = new K256();
                } else if (name === 'p224') {
                    prime = new P224();
                } else if (name === 'p192') {
                    prime = new P192();
                } else if (name === 'p25519') {
                    prime = new P25519();
                } else {
                    throw new Error('Unknown prime ' + name);
                }
                primes[name] = prime;

                return prime;
            };

            //
            // Base reduction engine
            //
            function Red (m) {
                if (typeof m === 'string') {
                    var prime = BN._prime(m);
                    this.m = prime.p;
                    this.prime = prime;
                } else {
                    assert(m.gtn(1), 'modulus must be greater than 1');
                    this.m = m;
                    this.prime = null;
                }
            }

            Red.prototype._verify1 = function _verify1 (a) {
                assert(a.negative === 0, 'red works only with positives');
                assert(a.red, 'red works only with red numbers');
            };

            Red.prototype._verify2 = function _verify2 (a, b) {
                assert((a.negative | b.negative) === 0, 'red works only with positives');
                assert(a.red && a.red === b.red,
                    'red works only with red numbers');
            };

            Red.prototype.imod = function imod (a) {
                if (this.prime) return this.prime.ireduce(a)._forceRed(this);

                move(a, a.umod(this.m)._forceRed(this));
                return a;
            };

            Red.prototype.neg = function neg (a) {
                if (a.isZero()) {
                    return a.clone();
                }

                return this.m.sub(a)._forceRed(this);
            };

            Red.prototype.add = function add (a, b) {
                this._verify2(a, b);

                var res = a.add(b);
                if (res.cmp(this.m) >= 0) {
                    res.isub(this.m);
                }
                return res._forceRed(this);
            };

            Red.prototype.iadd = function iadd (a, b) {
                this._verify2(a, b);

                var res = a.iadd(b);
                if (res.cmp(this.m) >= 0) {
                    res.isub(this.m);
                }
                return res;
            };

            Red.prototype.sub = function sub (a, b) {
                this._verify2(a, b);

                var res = a.sub(b);
                if (res.cmpn(0) < 0) {
                    res.iadd(this.m);
                }
                return res._forceRed(this);
            };

            Red.prototype.isub = function isub (a, b) {
                this._verify2(a, b);

                var res = a.isub(b);
                if (res.cmpn(0) < 0) {
                    res.iadd(this.m);
                }
                return res;
            };

            Red.prototype.shl = function shl (a, num) {
                this._verify1(a);
                return this.imod(a.ushln(num));
            };

            Red.prototype.imul = function imul (a, b) {
                this._verify2(a, b);
                return this.imod(a.imul(b));
            };

            Red.prototype.mul = function mul (a, b) {
                this._verify2(a, b);
                return this.imod(a.mul(b));
            };

            Red.prototype.isqr = function isqr (a) {
                return this.imul(a, a.clone());
            };

            Red.prototype.sqr = function sqr (a) {
                return this.mul(a, a);
            };

            Red.prototype.sqrt = function sqrt (a) {
                if (a.isZero()) return a.clone();

                var mod3 = this.m.andln(3);
                assert(mod3 % 2 === 1);

                // Fast case
                if (mod3 === 3) {
                    var pow = this.m.add(new BN(1)).iushrn(2);
                    return this.pow(a, pow);
                }

                // Tonelli-Shanks algorithm (Totally unoptimized and slow)
                //
                // Find Q and S, that Q * 2 ^ S = (P - 1)
                var q = this.m.subn(1);
                var s = 0;
                while (!q.isZero() && q.andln(1) === 0) {
                    s++;
                    q.iushrn(1);
                }
                assert(!q.isZero());

                var one = new BN(1).toRed(this);
                var nOne = one.redNeg();

                // Find quadratic non-residue
                // NOTE: Max is such because of generalized Riemann hypothesis.
                var lpow = this.m.subn(1).iushrn(1);
                var z = this.m.bitLength();
                z = new BN(2 * z * z).toRed(this);

                while (this.pow(z, lpow).cmp(nOne) !== 0) {
                    z.redIAdd(nOne);
                }

                var c = this.pow(z, q);
                var r = this.pow(a, q.addn(1).iushrn(1));
                var t = this.pow(a, q);
                var m = s;
                while (t.cmp(one) !== 0) {
                    var tmp = t;
                    for (var i = 0; tmp.cmp(one) !== 0; i++) {
                        tmp = tmp.redSqr();
                    }
                    assert(i < m);
                    var b = this.pow(c, new BN(1).iushln(m - i - 1));

                    r = r.redMul(b);
                    c = b.redSqr();
                    t = t.redMul(c);
                    m = i;
                }

                return r;
            };

            Red.prototype.invm = function invm (a) {
                var inv = a._invmp(this.m);
                if (inv.negative !== 0) {
                    inv.negative = 0;
                    return this.imod(inv).redNeg();
                } else {
                    return this.imod(inv);
                }
            };

            Red.prototype.pow = function pow (a, num) {
                if (num.isZero()) return new BN(1).toRed(this);
                if (num.cmpn(1) === 0) return a.clone();

                var windowSize = 4;
                var wnd = new Array(1 << windowSize);
                wnd[0] = new BN(1).toRed(this);
                wnd[1] = a;
                for (var i = 2; i < wnd.length; i++) {
                    wnd[i] = this.mul(wnd[i - 1], a);
                }

                var res = wnd[0];
                var current = 0;
                var currentLen = 0;
                var start = num.bitLength() % 26;
                if (start === 0) {
                    start = 26;
                }

                for (i = num.length - 1; i >= 0; i--) {
                    var word = num.words[i];
                    for (var j = start - 1; j >= 0; j--) {
                        var bit = (word >> j) & 1;
                        if (res !== wnd[0]) {
                            res = this.sqr(res);
                        }

                        if (bit === 0 && current === 0) {
                            currentLen = 0;
                            continue;
                        }

                        current <<= 1;
                        current |= bit;
                        currentLen++;
                        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

                        res = this.mul(res, wnd[current]);
                        currentLen = 0;
                        current = 0;
                    }
                    start = 26;
                }

                return res;
            };

            Red.prototype.convertTo = function convertTo (num) {
                var r = num.umod(this.m);

                return r === num ? r.clone() : r;
            };

            Red.prototype.convertFrom = function convertFrom (num) {
                var res = num.clone();
                res.red = null;
                return res;
            };

            //
            // Montgomery method engine
            //

            BN.mont = function mont (num) {
                return new Mont(num);
            };

            function Mont (m) {
                Red.call(this, m);

                this.shift = this.m.bitLength();
                if (this.shift % 26 !== 0) {
                    this.shift += 26 - (this.shift % 26);
                }

                this.r = new BN(1).iushln(this.shift);
                this.r2 = this.imod(this.r.sqr());
                this.rinv = this.r._invmp(this.m);

                this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
                this.minv = this.minv.umod(this.r);
                this.minv = this.r.sub(this.minv);
            }
            inherits(Mont, Red);

            Mont.prototype.convertTo = function convertTo (num) {
                return this.imod(num.ushln(this.shift));
            };

            Mont.prototype.convertFrom = function convertFrom (num) {
                var r = this.imod(num.mul(this.rinv));
                r.red = null;
                return r;
            };

            Mont.prototype.imul = function imul (a, b) {
                if (a.isZero() || b.isZero()) {
                    a.words[0] = 0;
                    a.length = 1;
                    return a;
                }

                var t = a.imul(b);
                var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
                var u = t.isub(c).iushrn(this.shift);
                var res = u;

                if (u.cmp(this.m) >= 0) {
                    res = u.isub(this.m);
                } else if (u.cmpn(0) < 0) {
                    res = u.iadd(this.m);
                }

                return res._forceRed(this);
            };

            Mont.prototype.mul = function mul (a, b) {
                if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

                var t = a.mul(b);
                var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
                var u = t.isub(c).iushrn(this.shift);
                var res = u;
                if (u.cmp(this.m) >= 0) {
                    res = u.isub(this.m);
                } else if (u.cmpn(0) < 0) {
                    res = u.iadd(this.m);
                }

                return res._forceRed(this);
            };

            Mont.prototype.invm = function invm (a) {
                // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
                var res = this.imod(a._invmp(this.m).mul(this.r2));
                return res._forceRed(this);
            };
        })(typeof module === 'undefined' || module, this);

    },{"buffer":24}],53:[function(require,module,exports){
        'use strict';

        function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

        var codes = {};

        function createErrorType(code, message, Base) {
            if (!Base) {
                Base = Error;
            }

            function getMessage(arg1, arg2, arg3) {
                if (typeof message === 'string') {
                    return message;
                } else {
                    return message(arg1, arg2, arg3);
                }
            }

            var NodeError =
                /*#__PURE__*/
                function (_Base) {
                    _inheritsLoose(NodeError, _Base);

                    function NodeError(arg1, arg2, arg3) {
                        return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;
                    }

                    return NodeError;
                }(Base);

            NodeError.prototype.name = Base.name;
            NodeError.prototype.code = code;
            codes[code] = NodeError;
        } // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js


        function oneOf(expected, thing) {
            if (Array.isArray(expected)) {
                var len = expected.length;
                expected = expected.map(function (i) {
                    return String(i);
                });

                if (len > 2) {
                    return "one of ".concat(thing, " ").concat(expected.slice(0, len - 1).join(', '), ", or ") + expected[len - 1];
                } else if (len === 2) {
                    return "one of ".concat(thing, " ").concat(expected[0], " or ").concat(expected[1]);
                } else {
                    return "of ".concat(thing, " ").concat(expected[0]);
                }
            } else {
                return "of ".concat(thing, " ").concat(String(expected));
            }
        } // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith


        function startsWith(str, search, pos) {
            return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
        } // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith


        function endsWith(str, search, this_len) {
            if (this_len === undefined || this_len > str.length) {
                this_len = str.length;
            }

            return str.substring(this_len - search.length, this_len) === search;
        } // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes


        function includes(str, search, start) {
            if (typeof start !== 'number') {
                start = 0;
            }

            if (start + search.length > str.length) {
                return false;
            } else {
                return str.indexOf(search, start) !== -1;
            }
        }

        createErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {
            return 'The value "' + value + '" is invalid for option "' + name + '"';
        }, TypeError);
        createErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {
            // determiner: 'must be' or 'must not be'
            var determiner;

            if (typeof expected === 'string' && startsWith(expected, 'not ')) {
                determiner = 'must not be';
                expected = expected.replace(/^not /, '');
            } else {
                determiner = 'must be';
            }

            var msg;

            if (endsWith(name, ' argument')) {
                // For cases like 'first argument'
                msg = "The ".concat(name, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
            } else {
                var type = includes(name, '.') ? 'property' : 'argument';
                msg = "The \"".concat(name, "\" ").concat(type, " ").concat(determiner, " ").concat(oneOf(expected, 'type'));
            }

            msg += ". Received type ".concat(typeof actual);
            return msg;
        }, TypeError);
        createErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');
        createErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {
            return 'The ' + name + ' method is not implemented';
        });
        createErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');
        createErrorType('ERR_STREAM_DESTROYED', function (name) {
            return 'Cannot call ' + name + ' after a stream was destroyed';
        });
        createErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');
        createErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');
        createErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');
        createErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);
        createErrorType('ERR_UNKNOWN_ENCODING', function (arg) {
            return 'Unknown encoding: ' + arg;
        }, TypeError);
        createErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');
        module.exports.codes = codes;

    },{}],54:[function(require,module,exports){
        (function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.
            'use strict';
            /*<replacement>*/

            var objectKeys = Object.keys || function (obj) {
                var keys = [];

                for (var key in obj) {
                    keys.push(key);
                }

                return keys;
            };
            /*</replacement>*/


            module.exports = Duplex;

            var Readable = require('./_stream_readable');

            var Writable = require('./_stream_writable');

            require('inherits')(Duplex, Readable);

            {
                // Allow the keys array to be GC'ed.
                var keys = objectKeys(Writable.prototype);

                for (var v = 0; v < keys.length; v++) {
                    var method = keys[v];
                    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
                }
            }

            function Duplex(options) {
                if (!(this instanceof Duplex)) return new Duplex(options);
                Readable.call(this, options);
                Writable.call(this, options);
                this.allowHalfOpen = true;

                if (options) {
                    if (options.readable === false) this.readable = false;
                    if (options.writable === false) this.writable = false;

                    if (options.allowHalfOpen === false) {
                        this.allowHalfOpen = false;
                        this.once('end', onend);
                    }
                }
            }

            Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function get() {
                    return this._writableState.highWaterMark;
                }
            });
            Object.defineProperty(Duplex.prototype, 'writableBuffer', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function get() {
                    return this._writableState && this._writableState.getBuffer();
                }
            });
            Object.defineProperty(Duplex.prototype, 'writableLength', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function get() {
                    return this._writableState.length;
                }
            }); // the no-half-open enforcer

            function onend() {
                // If the writable side ended, then we're ok.
                if (this._writableState.ended) return; // no more data can be written.
                // But allow more writes to happen in this tick.

                process.nextTick(onEndNT, this);
            }

            function onEndNT(self) {
                self.end();
            }

            Object.defineProperty(Duplex.prototype, 'destroyed', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function get() {
                    if (this._readableState === undefined || this._writableState === undefined) {
                        return false;
                    }

                    return this._readableState.destroyed && this._writableState.destroyed;
                },
                set: function set(value) {
                    // we ignore the value if the stream
                    // has not been initialized yet
                    if (this._readableState === undefined || this._writableState === undefined) {
                        return;
                    } // backward compatibility, the user is explicitly
                    // managing destroyed


                    this._readableState.destroyed = value;
                    this._writableState.destroyed = value;
                }
            });
        }).call(this,require('_process'))
    },{"./_stream_readable":56,"./_stream_writable":58,"_process":159,"inherits":140}],55:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.
        'use strict';

        module.exports = PassThrough;

        var Transform = require('./_stream_transform');

        require('inherits')(PassThrough, Transform);

        function PassThrough(options) {
            if (!(this instanceof PassThrough)) return new PassThrough(options);
            Transform.call(this, options);
        }

        PassThrough.prototype._transform = function (chunk, encoding, cb) {
            cb(null, chunk);
        };
    },{"./_stream_transform":57,"inherits":140}],56:[function(require,module,exports){
        (function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
            'use strict';

            module.exports = Readable;
            /*<replacement>*/

            var Duplex;
            /*</replacement>*/

            Readable.ReadableState = ReadableState;
            /*<replacement>*/

            var EE = require('events').EventEmitter;

            var EElistenerCount = function EElistenerCount(emitter, type) {
                return emitter.listeners(type).length;
            };
            /*</replacement>*/

            /*<replacement>*/


            var Stream = require('./internal/streams/stream');
            /*</replacement>*/


            var Buffer = require('buffer').Buffer;

            var OurUint8Array = global.Uint8Array || function () {};

            function _uint8ArrayToBuffer(chunk) {
                return Buffer.from(chunk);
            }

            function _isUint8Array(obj) {
                return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
            }
            /*<replacement>*/


            var debugUtil = require('util');

            var debug;

            if (debugUtil && debugUtil.debuglog) {
                debug = debugUtil.debuglog('stream');
            } else {
                debug = function debug() {};
            }
            /*</replacement>*/


            var BufferList = require('./internal/streams/buffer_list');

            var destroyImpl = require('./internal/streams/destroy');

            var _require = require('./internal/streams/state'),
                getHighWaterMark = _require.getHighWaterMark;

            var _require$codes = require('../errors').codes,
                ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
                ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,
                ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
                ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.


            var StringDecoder;
            var createReadableStreamAsyncIterator;
            var from;

            require('inherits')(Readable, Stream);

            var errorOrDestroy = destroyImpl.errorOrDestroy;
            var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

            function prependListener(emitter, event, fn) {
                // Sadly this is not cacheable as some libraries bundle their own
                // event emitter implementation with them.
                if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any
                // userland ones.  NEVER DO THIS. This is here only because this code needs
                // to continue to work with older versions of Node.js that do not include
                // the prependListener() method. The goal is to eventually remove this hack.

                if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
            }

            function ReadableState(options, stream, isDuplex) {
                Duplex = Duplex || require('./_stream_duplex');
                options = options || {}; // Duplex streams are both readable and writable, but share
                // the same options object.
                // However, some cases require setting options to different
                // values for the readable and the writable sides of the duplex stream.
                // These options can be provided separately as readableXXX and writableXXX.

                if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to
                // make all the buffer merging and length checks go away

                this.objectMode = !!options.objectMode;
                if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer
                // Note: 0 is a valid value, means "don't call _read preemptively ever"

                this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the
                // linked list can remove elements from the beginning faster than
                // array.shift()

                this.buffer = new BufferList();
                this.length = 0;
                this.pipes = null;
                this.pipesCount = 0;
                this.flowing = null;
                this.ended = false;
                this.endEmitted = false;
                this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted
                // immediately, or on a later tick.  We set this to true at first, because
                // any actions that shouldn't happen until "later" should generally also
                // not happen before the first read call.

                this.sync = true; // whenever we return null, then we set a flag to say
                // that we're awaiting a 'readable' event emission.

                this.needReadable = false;
                this.emittedReadable = false;
                this.readableListening = false;
                this.resumeScheduled = false;
                this.paused = true; // Should close be emitted on destroy. Defaults to true.

                this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')

                this.autoDestroy = !!options.autoDestroy; // has it been destroyed

                this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string
                // encoding is 'binary' so we have to make this configurable.
                // Everything else in the universe uses 'utf8', though.

                this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s

                this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled

                this.readingMore = false;
                this.decoder = null;
                this.encoding = null;

                if (options.encoding) {
                    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
                    this.decoder = new StringDecoder(options.encoding);
                    this.encoding = options.encoding;
                }
            }

            function Readable(options) {
                Duplex = Duplex || require('./_stream_duplex');
                if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside
                // the ReadableState constructor, at least with V8 6.5

                var isDuplex = this instanceof Duplex;
                this._readableState = new ReadableState(options, this, isDuplex); // legacy

                this.readable = true;

                if (options) {
                    if (typeof options.read === 'function') this._read = options.read;
                    if (typeof options.destroy === 'function') this._destroy = options.destroy;
                }

                Stream.call(this);
            }

            Object.defineProperty(Readable.prototype, 'destroyed', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function get() {
                    if (this._readableState === undefined) {
                        return false;
                    }

                    return this._readableState.destroyed;
                },
                set: function set(value) {
                    // we ignore the value if the stream
                    // has not been initialized yet
                    if (!this._readableState) {
                        return;
                    } // backward compatibility, the user is explicitly
                    // managing destroyed


                    this._readableState.destroyed = value;
                }
            });
            Readable.prototype.destroy = destroyImpl.destroy;
            Readable.prototype._undestroy = destroyImpl.undestroy;

            Readable.prototype._destroy = function (err, cb) {
                cb(err);
            }; // Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.


            Readable.prototype.push = function (chunk, encoding) {
                var state = this._readableState;
                var skipChunkCheck;

                if (!state.objectMode) {
                    if (typeof chunk === 'string') {
                        encoding = encoding || state.defaultEncoding;

                        if (encoding !== state.encoding) {
                            chunk = Buffer.from(chunk, encoding);
                            encoding = '';
                        }

                        skipChunkCheck = true;
                    }
                } else {
                    skipChunkCheck = true;
                }

                return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
            }; // Unshift should *always* be something directly out of read()


            Readable.prototype.unshift = function (chunk) {
                return readableAddChunk(this, chunk, null, true, false);
            };

            function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
                debug('readableAddChunk', chunk);
                var state = stream._readableState;

                if (chunk === null) {
                    state.reading = false;
                    onEofChunk(stream, state);
                } else {
                    var er;
                    if (!skipChunkCheck) er = chunkInvalid(state, chunk);

                    if (er) {
                        errorOrDestroy(stream, er);
                    } else if (state.objectMode || chunk && chunk.length > 0) {
                        if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
                            chunk = _uint8ArrayToBuffer(chunk);
                        }

                        if (addToFront) {
                            if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);
                        } else if (state.ended) {
                            errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());
                        } else if (state.destroyed) {
                            return false;
                        } else {
                            state.reading = false;

                            if (state.decoder && !encoding) {
                                chunk = state.decoder.write(chunk);
                                if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
                            } else {
                                addChunk(stream, state, chunk, false);
                            }
                        }
                    } else if (!addToFront) {
                        state.reading = false;
                        maybeReadMore(stream, state);
                    }
                } // We can push more data if we are below the highWaterMark.
                // Also, if we have no data yet, we can stand some more bytes.
                // This is to work around cases where hwm=0, such as the repl.


                return !state.ended && (state.length < state.highWaterMark || state.length === 0);
            }

            function addChunk(stream, state, chunk, addToFront) {
                if (state.flowing && state.length === 0 && !state.sync) {
                    state.awaitDrain = 0;
                    stream.emit('data', chunk);
                } else {
                    // update the buffer info.
                    state.length += state.objectMode ? 1 : chunk.length;
                    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);
                    if (state.needReadable) emitReadable(stream);
                }

                maybeReadMore(stream, state);
            }

            function chunkInvalid(state, chunk) {
                var er;

                if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
                    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);
                }

                return er;
            }

            Readable.prototype.isPaused = function () {
                return this._readableState.flowing === false;
            }; // backwards compatibility.


            Readable.prototype.setEncoding = function (enc) {
                if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
                var decoder = new StringDecoder(enc);
                this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8

                this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:

                var p = this._readableState.buffer.head;
                var content = '';

                while (p !== null) {
                    content += decoder.write(p.data);
                    p = p.next;
                }

                this._readableState.buffer.clear();

                if (content !== '') this._readableState.buffer.push(content);
                this._readableState.length = content.length;
                return this;
            }; // Don't raise the hwm > 1GB


            var MAX_HWM = 0x40000000;

            function computeNewHighWaterMark(n) {
                if (n >= MAX_HWM) {
                    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.
                    n = MAX_HWM;
                } else {
                    // Get the next highest power of 2 to prevent increasing hwm excessively in
                    // tiny amounts
                    n--;
                    n |= n >>> 1;
                    n |= n >>> 2;
                    n |= n >>> 4;
                    n |= n >>> 8;
                    n |= n >>> 16;
                    n++;
                }

                return n;
            } // This function is designed to be inlinable, so please take care when making
// changes to the function body.


            function howMuchToRead(n, state) {
                if (n <= 0 || state.length === 0 && state.ended) return 0;
                if (state.objectMode) return 1;

                if (n !== n) {
                    // Only flow one buffer at a time
                    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
                } // If we're asking for more than the current hwm, then raise the hwm.


                if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
                if (n <= state.length) return n; // Don't have enough

                if (!state.ended) {
                    state.needReadable = true;
                    return 0;
                }

                return state.length;
            } // you can override either this method, or the async _read(n) below.


            Readable.prototype.read = function (n) {
                debug('read', n);
                n = parseInt(n, 10);
                var state = this._readableState;
                var nOrig = n;
                if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we
                // already have a bunch of data in the buffer, then just trigger
                // the 'readable' event and move on.

                if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {
                    debug('read: emitReadable', state.length, state.ended);
                    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
                    return null;
                }

                n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.

                if (n === 0 && state.ended) {
                    if (state.length === 0) endReadable(this);
                    return null;
                } // All the actual chunk generation logic needs to be
                // *below* the call to _read.  The reason is that in certain
                // synthetic stream cases, such as passthrough streams, _read
                // may be a completely synchronous operation which may change
                // the state of the read buffer, providing enough data when
                // before there was *not* enough.
                //
                // So, the steps are:
                // 1. Figure out what the state of things will be after we do
                // a read from the buffer.
                //
                // 2. If that resulting state will trigger a _read, then call _read.
                // Note that this may be asynchronous, or synchronous.  Yes, it is
                // deeply ugly to write APIs this way, but that still doesn't mean
                // that the Readable class should behave improperly, as streams are
                // designed to be sync/async agnostic.
                // Take note if the _read call is sync or async (ie, if the read call
                // has returned yet), so that we know whether or not it's safe to emit
                // 'readable' etc.
                //
                // 3. Actually pull the requested chunks out of the buffer and return.
                // if we need a readable event, then we need to do some reading.


                var doRead = state.needReadable;
                debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some

                if (state.length === 0 || state.length - n < state.highWaterMark) {
                    doRead = true;
                    debug('length less than watermark', doRead);
                } // however, if we've ended, then there's no point, and if we're already
                // reading, then it's unnecessary.


                if (state.ended || state.reading) {
                    doRead = false;
                    debug('reading or ended', doRead);
                } else if (doRead) {
                    debug('do read');
                    state.reading = true;
                    state.sync = true; // if the length is currently zero, then we *need* a readable event.

                    if (state.length === 0) state.needReadable = true; // call internal read method

                    this._read(state.highWaterMark);

                    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,
                    // and we need to re-evaluate how much data we can return to the user.

                    if (!state.reading) n = howMuchToRead(nOrig, state);
                }

                var ret;
                if (n > 0) ret = fromList(n, state);else ret = null;

                if (ret === null) {
                    state.needReadable = state.length <= state.highWaterMark;
                    n = 0;
                } else {
                    state.length -= n;
                    state.awaitDrain = 0;
                }

                if (state.length === 0) {
                    // If we have nothing in the buffer, then we want to know
                    // as soon as we *do* get something into the buffer.
                    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.

                    if (nOrig !== n && state.ended) endReadable(this);
                }

                if (ret !== null) this.emit('data', ret);
                return ret;
            };

            function onEofChunk(stream, state) {
                debug('onEofChunk');
                if (state.ended) return;

                if (state.decoder) {
                    var chunk = state.decoder.end();

                    if (chunk && chunk.length) {
                        state.buffer.push(chunk);
                        state.length += state.objectMode ? 1 : chunk.length;
                    }
                }

                state.ended = true;

                if (state.sync) {
                    // if we are sync, wait until next tick to emit the data.
                    // Otherwise we risk emitting data in the flow()
                    // the readable code triggers during a read() call
                    emitReadable(stream);
                } else {
                    // emit 'readable' now to make sure it gets picked up.
                    state.needReadable = false;

                    if (!state.emittedReadable) {
                        state.emittedReadable = true;
                        emitReadable_(stream);
                    }
                }
            } // Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.


            function emitReadable(stream) {
                var state = stream._readableState;
                debug('emitReadable', state.needReadable, state.emittedReadable);
                state.needReadable = false;

                if (!state.emittedReadable) {
                    debug('emitReadable', state.flowing);
                    state.emittedReadable = true;
                    process.nextTick(emitReadable_, stream);
                }
            }

            function emitReadable_(stream) {
                var state = stream._readableState;
                debug('emitReadable_', state.destroyed, state.length, state.ended);

                if (!state.destroyed && (state.length || state.ended)) {
                    stream.emit('readable');
                    state.emittedReadable = false;
                } // The stream needs another readable event if
                // 1. It is not flowing, as the flow mechanism will take
                //    care of it.
                // 2. It is not ended.
                // 3. It is below the highWaterMark, so we can schedule
                //    another readable later.


                state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;
                flow(stream);
            } // at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.


            function maybeReadMore(stream, state) {
                if (!state.readingMore) {
                    state.readingMore = true;
                    process.nextTick(maybeReadMore_, stream, state);
                }
            }

            function maybeReadMore_(stream, state) {
                // Attempt to read more data if we should.
                //
                // The conditions for reading more data are (one of):
                // - Not enough data buffered (state.length < state.highWaterMark). The loop
                //   is responsible for filling the buffer with enough data if such data
                //   is available. If highWaterMark is 0 and we are not in the flowing mode
                //   we should _not_ attempt to buffer any extra data. We'll get more data
                //   when the stream consumer calls read() instead.
                // - No data in the buffer, and the stream is in flowing mode. In this mode
                //   the loop below is responsible for ensuring read() is called. Failing to
                //   call read here would abort the flow and there's no other mechanism for
                //   continuing the flow if the stream consumer has just subscribed to the
                //   'data' event.
                //
                // In addition to the above conditions to keep reading data, the following
                // conditions prevent the data from being read:
                // - The stream has ended (state.ended).
                // - There is already a pending 'read' operation (state.reading). This is a
                //   case where the the stream has called the implementation defined _read()
                //   method, but they are processing the call asynchronously and have _not_
                //   called push() with new data. In this case we skip performing more
                //   read()s. The execution ends in this method again after the _read() ends
                //   up calling push() with more data.
                while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {
                    var len = state.length;
                    debug('maybeReadMore read 0');
                    stream.read(0);
                    if (len === state.length) // didn't get any data, stop spinning.
                        break;
                }

                state.readingMore = false;
            } // abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.


            Readable.prototype._read = function (n) {
                errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));
            };

            Readable.prototype.pipe = function (dest, pipeOpts) {
                var src = this;
                var state = this._readableState;

                switch (state.pipesCount) {
                    case 0:
                        state.pipes = dest;
                        break;

                    case 1:
                        state.pipes = [state.pipes, dest];
                        break;

                    default:
                        state.pipes.push(dest);
                        break;
                }

                state.pipesCount += 1;
                debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);
                var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
                var endFn = doEnd ? onend : unpipe;
                if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);
                dest.on('unpipe', onunpipe);

                function onunpipe(readable, unpipeInfo) {
                    debug('onunpipe');

                    if (readable === src) {
                        if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
                            unpipeInfo.hasUnpiped = true;
                            cleanup();
                        }
                    }
                }

                function onend() {
                    debug('onend');
                    dest.end();
                } // when the dest drains, it reduces the awaitDrain counter
                // on the source.  This would be more elegant with a .once()
                // handler in flow(), but adding and removing repeatedly is
                // too slow.


                var ondrain = pipeOnDrain(src);
                dest.on('drain', ondrain);
                var cleanedUp = false;

                function cleanup() {
                    debug('cleanup'); // cleanup event handlers once the pipe is broken

                    dest.removeListener('close', onclose);
                    dest.removeListener('finish', onfinish);
                    dest.removeListener('drain', ondrain);
                    dest.removeListener('error', onerror);
                    dest.removeListener('unpipe', onunpipe);
                    src.removeListener('end', onend);
                    src.removeListener('end', unpipe);
                    src.removeListener('data', ondata);
                    cleanedUp = true; // if the reader is waiting for a drain event from this
                    // specific writer, then it would cause it to never start
                    // flowing again.
                    // So, if this is awaiting a drain, then we just call it now.
                    // If we don't know, then assume that we are waiting for one.

                    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
                }

                src.on('data', ondata);

                function ondata(chunk) {
                    debug('ondata');
                    var ret = dest.write(chunk);
                    debug('dest.write', ret);

                    if (ret === false) {
                        // If the user unpiped during `dest.write()`, it is possible
                        // to get stuck in a permanently paused state if that write
                        // also returned false.
                        // => Check whether `dest` is still a piping destination.
                        if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
                            debug('false write response, pause', state.awaitDrain);
                            state.awaitDrain++;
                        }

                        src.pause();
                    }
                } // if the dest has an error, then stop piping into it.
                // however, don't suppress the throwing behavior for this.


                function onerror(er) {
                    debug('onerror', er);
                    unpipe();
                    dest.removeListener('error', onerror);
                    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);
                } // Make sure our error handler is attached before userland ones.


                prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.

                function onclose() {
                    dest.removeListener('finish', onfinish);
                    unpipe();
                }

                dest.once('close', onclose);

                function onfinish() {
                    debug('onfinish');
                    dest.removeListener('close', onclose);
                    unpipe();
                }

                dest.once('finish', onfinish);

                function unpipe() {
                    debug('unpipe');
                    src.unpipe(dest);
                } // tell the dest that it's being piped to


                dest.emit('pipe', src); // start the flow if it hasn't been started already.

                if (!state.flowing) {
                    debug('pipe resume');
                    src.resume();
                }

                return dest;
            };

            function pipeOnDrain(src) {
                return function pipeOnDrainFunctionResult() {
                    var state = src._readableState;
                    debug('pipeOnDrain', state.awaitDrain);
                    if (state.awaitDrain) state.awaitDrain--;

                    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
                        state.flowing = true;
                        flow(src);
                    }
                };
            }

            Readable.prototype.unpipe = function (dest) {
                var state = this._readableState;
                var unpipeInfo = {
                    hasUnpiped: false
                }; // if we're not piping anywhere, then do nothing.

                if (state.pipesCount === 0) return this; // just one destination.  most common case.

                if (state.pipesCount === 1) {
                    // passed in one, but it's not the right one.
                    if (dest && dest !== state.pipes) return this;
                    if (!dest) dest = state.pipes; // got a match.

                    state.pipes = null;
                    state.pipesCount = 0;
                    state.flowing = false;
                    if (dest) dest.emit('unpipe', this, unpipeInfo);
                    return this;
                } // slow case. multiple pipe destinations.


                if (!dest) {
                    // remove all.
                    var dests = state.pipes;
                    var len = state.pipesCount;
                    state.pipes = null;
                    state.pipesCount = 0;
                    state.flowing = false;

                    for (var i = 0; i < len; i++) {
                        dests[i].emit('unpipe', this, {
                            hasUnpiped: false
                        });
                    }

                    return this;
                } // try to find the right one.


                var index = indexOf(state.pipes, dest);
                if (index === -1) return this;
                state.pipes.splice(index, 1);
                state.pipesCount -= 1;
                if (state.pipesCount === 1) state.pipes = state.pipes[0];
                dest.emit('unpipe', this, unpipeInfo);
                return this;
            }; // set up data events if they are asked for
// Ensure readable listeners eventually get something


            Readable.prototype.on = function (ev, fn) {
                var res = Stream.prototype.on.call(this, ev, fn);
                var state = this._readableState;

                if (ev === 'data') {
                    // update readableListening so that resume() may be a no-op
                    // a few lines down. This is needed to support once('readable').
                    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused

                    if (state.flowing !== false) this.resume();
                } else if (ev === 'readable') {
                    if (!state.endEmitted && !state.readableListening) {
                        state.readableListening = state.needReadable = true;
                        state.flowing = false;
                        state.emittedReadable = false;
                        debug('on readable', state.length, state.reading);

                        if (state.length) {
                            emitReadable(this);
                        } else if (!state.reading) {
                            process.nextTick(nReadingNextTick, this);
                        }
                    }
                }

                return res;
            };

            Readable.prototype.addListener = Readable.prototype.on;

            Readable.prototype.removeListener = function (ev, fn) {
                var res = Stream.prototype.removeListener.call(this, ev, fn);

                if (ev === 'readable') {
                    // We need to check if there is someone still listening to
                    // readable and reset the state. However this needs to happen
                    // after readable has been emitted but before I/O (nextTick) to
                    // support once('readable', fn) cycles. This means that calling
                    // resume within the same tick will have no
                    // effect.
                    process.nextTick(updateReadableListening, this);
                }

                return res;
            };

            Readable.prototype.removeAllListeners = function (ev) {
                var res = Stream.prototype.removeAllListeners.apply(this, arguments);

                if (ev === 'readable' || ev === undefined) {
                    // We need to check if there is someone still listening to
                    // readable and reset the state. However this needs to happen
                    // after readable has been emitted but before I/O (nextTick) to
                    // support once('readable', fn) cycles. This means that calling
                    // resume within the same tick will have no
                    // effect.
                    process.nextTick(updateReadableListening, this);
                }

                return res;
            };

            function updateReadableListening(self) {
                var state = self._readableState;
                state.readableListening = self.listenerCount('readable') > 0;

                if (state.resumeScheduled && !state.paused) {
                    // flowing needs to be set to true now, otherwise
                    // the upcoming resume will not flow.
                    state.flowing = true; // crude way to check if we should resume
                } else if (self.listenerCount('data') > 0) {
                    self.resume();
                }
            }

            function nReadingNextTick(self) {
                debug('readable nexttick read 0');
                self.read(0);
            } // pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.


            Readable.prototype.resume = function () {
                var state = this._readableState;

                if (!state.flowing) {
                    debug('resume'); // we flow only if there is no one listening
                    // for readable, but we still have to call
                    // resume()

                    state.flowing = !state.readableListening;
                    resume(this, state);
                }

                state.paused = false;
                return this;
            };

            function resume(stream, state) {
                if (!state.resumeScheduled) {
                    state.resumeScheduled = true;
                    process.nextTick(resume_, stream, state);
                }
            }

            function resume_(stream, state) {
                debug('resume', state.reading);

                if (!state.reading) {
                    stream.read(0);
                }

                state.resumeScheduled = false;
                stream.emit('resume');
                flow(stream);
                if (state.flowing && !state.reading) stream.read(0);
            }

            Readable.prototype.pause = function () {
                debug('call pause flowing=%j', this._readableState.flowing);

                if (this._readableState.flowing !== false) {
                    debug('pause');
                    this._readableState.flowing = false;
                    this.emit('pause');
                }

                this._readableState.paused = true;
                return this;
            };

            function flow(stream) {
                var state = stream._readableState;
                debug('flow', state.flowing);

                while (state.flowing && stream.read() !== null) {
                    ;
                }
            } // wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.


            Readable.prototype.wrap = function (stream) {
                var _this = this;

                var state = this._readableState;
                var paused = false;
                stream.on('end', function () {
                    debug('wrapped end');

                    if (state.decoder && !state.ended) {
                        var chunk = state.decoder.end();
                        if (chunk && chunk.length) _this.push(chunk);
                    }

                    _this.push(null);
                });
                stream.on('data', function (chunk) {
                    debug('wrapped data');
                    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode

                    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

                    var ret = _this.push(chunk);

                    if (!ret) {
                        paused = true;
                        stream.pause();
                    }
                }); // proxy all the other methods.
                // important when wrapping filters and duplexes.

                for (var i in stream) {
                    if (this[i] === undefined && typeof stream[i] === 'function') {
                        this[i] = function methodWrap(method) {
                            return function methodWrapReturnFunction() {
                                return stream[method].apply(stream, arguments);
                            };
                        }(i);
                    }
                } // proxy certain important events.


                for (var n = 0; n < kProxyEvents.length; n++) {
                    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
                } // when we try to consume some more bytes, simply unpause the
                // underlying stream.


                this._read = function (n) {
                    debug('wrapped _read', n);

                    if (paused) {
                        paused = false;
                        stream.resume();
                    }
                };

                return this;
            };

            if (typeof Symbol === 'function') {
                Readable.prototype[Symbol.asyncIterator] = function () {
                    if (createReadableStreamAsyncIterator === undefined) {
                        createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');
                    }

                    return createReadableStreamAsyncIterator(this);
                };
            }

            Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function get() {
                    return this._readableState.highWaterMark;
                }
            });
            Object.defineProperty(Readable.prototype, 'readableBuffer', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function get() {
                    return this._readableState && this._readableState.buffer;
                }
            });
            Object.defineProperty(Readable.prototype, 'readableFlowing', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function get() {
                    return this._readableState.flowing;
                },
                set: function set(state) {
                    if (this._readableState) {
                        this._readableState.flowing = state;
                    }
                }
            }); // exposed for testing purposes only.

            Readable._fromList = fromList;
            Object.defineProperty(Readable.prototype, 'readableLength', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function get() {
                    return this._readableState.length;
                }
            }); // Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.

            function fromList(n, state) {
                // nothing buffered
                if (state.length === 0) return null;
                var ret;
                if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
                    // read it all, truncate the list
                    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);
                    state.buffer.clear();
                } else {
                    // read part of list
                    ret = state.buffer.consume(n, state.decoder);
                }
                return ret;
            }

            function endReadable(stream) {
                var state = stream._readableState;
                debug('endReadable', state.endEmitted);

                if (!state.endEmitted) {
                    state.ended = true;
                    process.nextTick(endReadableNT, state, stream);
                }
            }

            function endReadableNT(state, stream) {
                debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.

                if (!state.endEmitted && state.length === 0) {
                    state.endEmitted = true;
                    stream.readable = false;
                    stream.emit('end');

                    if (state.autoDestroy) {
                        // In case of duplex streams we need a way to detect
                        // if the writable side is ready for autoDestroy as well
                        var wState = stream._writableState;

                        if (!wState || wState.autoDestroy && wState.finished) {
                            stream.destroy();
                        }
                    }
                }
            }

            if (typeof Symbol === 'function') {
                Readable.from = function (iterable, opts) {
                    if (from === undefined) {
                        from = require('./internal/streams/from');
                    }

                    return from(Readable, iterable, opts);
                };
            }

            function indexOf(xs, x) {
                for (var i = 0, l = xs.length; i < l; i++) {
                    if (xs[i] === x) return i;
                }

                return -1;
            }
        }).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    },{"../errors":53,"./_stream_duplex":54,"./internal/streams/async_iterator":59,"./internal/streams/buffer_list":60,"./internal/streams/destroy":61,"./internal/streams/from":63,"./internal/streams/state":65,"./internal/streams/stream":66,"_process":159,"buffer":68,"events":108,"inherits":140,"string_decoder/":194,"util":24}],57:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.
        'use strict';

        module.exports = Transform;

        var _require$codes = require('../errors').codes,
            ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
            ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
            ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,
            ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;

        var Duplex = require('./_stream_duplex');

        require('inherits')(Transform, Duplex);

        function afterTransform(er, data) {
            var ts = this._transformState;
            ts.transforming = false;
            var cb = ts.writecb;

            if (cb === null) {
                return this.emit('error', new ERR_MULTIPLE_CALLBACK());
            }

            ts.writechunk = null;
            ts.writecb = null;
            if (data != null) // single equals check for both `null` and `undefined`
                this.push(data);
            cb(er);
            var rs = this._readableState;
            rs.reading = false;

            if (rs.needReadable || rs.length < rs.highWaterMark) {
                this._read(rs.highWaterMark);
            }
        }

        function Transform(options) {
            if (!(this instanceof Transform)) return new Transform(options);
            Duplex.call(this, options);
            this._transformState = {
                afterTransform: afterTransform.bind(this),
                needTransform: false,
                transforming: false,
                writecb: null,
                writechunk: null,
                writeencoding: null
            }; // start out asking for a readable event once data is transformed.

            this._readableState.needReadable = true; // we have implemented the _read method, and done the other things
            // that Readable wants before the first _read call, so unset the
            // sync guard flag.

            this._readableState.sync = false;

            if (options) {
                if (typeof options.transform === 'function') this._transform = options.transform;
                if (typeof options.flush === 'function') this._flush = options.flush;
            } // When the writable side finishes, then flush out anything remaining.


            this.on('prefinish', prefinish);
        }

        function prefinish() {
            var _this = this;

            if (typeof this._flush === 'function' && !this._readableState.destroyed) {
                this._flush(function (er, data) {
                    done(_this, er, data);
                });
            } else {
                done(this, null, null);
            }
        }

        Transform.prototype.push = function (chunk, encoding) {
            this._transformState.needTransform = false;
            return Duplex.prototype.push.call(this, chunk, encoding);
        }; // This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.


        Transform.prototype._transform = function (chunk, encoding, cb) {
            cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));
        };

        Transform.prototype._write = function (chunk, encoding, cb) {
            var ts = this._transformState;
            ts.writecb = cb;
            ts.writechunk = chunk;
            ts.writeencoding = encoding;

            if (!ts.transforming) {
                var rs = this._readableState;
                if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
            }
        }; // Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.


        Transform.prototype._read = function (n) {
            var ts = this._transformState;

            if (ts.writechunk !== null && !ts.transforming) {
                ts.transforming = true;

                this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
            } else {
                // mark that we need a transform, so that any data that comes in
                // will get processed, now that we've asked for it.
                ts.needTransform = true;
            }
        };

        Transform.prototype._destroy = function (err, cb) {
            Duplex.prototype._destroy.call(this, err, function (err2) {
                cb(err2);
            });
        };

        function done(stream, er, data) {
            if (er) return stream.emit('error', er);
            if (data != null) // single equals check for both `null` and `undefined`
                stream.push(data); // TODO(BridgeAR): Write a test for these two error cases
            // if there's nothing in the write buffer, then that means
            // that nothing more will ever be provided

            if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();
            if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();
            return stream.push(null);
        }
    },{"../errors":53,"./_stream_duplex":54,"inherits":140}],58:[function(require,module,exports){
        (function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
            'use strict';

            module.exports = Writable;
            /* <replacement> */

            function WriteReq(chunk, encoding, cb) {
                this.chunk = chunk;
                this.encoding = encoding;
                this.callback = cb;
                this.next = null;
            } // It seems a linked list but it is not
// there will be only 2 of these for each stream


            function CorkedRequest(state) {
                var _this = this;

                this.next = null;
                this.entry = null;

                this.finish = function () {
                    onCorkedFinish(_this, state);
                };
            }
            /* </replacement> */

            /*<replacement>*/


            var Duplex;
            /*</replacement>*/

            Writable.WritableState = WritableState;
            /*<replacement>*/

            var internalUtil = {
                deprecate: require('util-deprecate')
            };
            /*</replacement>*/

            /*<replacement>*/

            var Stream = require('./internal/streams/stream');
            /*</replacement>*/


            var Buffer = require('buffer').Buffer;

            var OurUint8Array = global.Uint8Array || function () {};

            function _uint8ArrayToBuffer(chunk) {
                return Buffer.from(chunk);
            }

            function _isUint8Array(obj) {
                return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
            }

            var destroyImpl = require('./internal/streams/destroy');

            var _require = require('./internal/streams/state'),
                getHighWaterMark = _require.getHighWaterMark;

            var _require$codes = require('../errors').codes,
                ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,
                ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,
                ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,
                ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,
                ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,
                ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,
                ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,
                ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;

            var errorOrDestroy = destroyImpl.errorOrDestroy;

            require('inherits')(Writable, Stream);

            function nop() {}

            function WritableState(options, stream, isDuplex) {
                Duplex = Duplex || require('./_stream_duplex');
                options = options || {}; // Duplex streams are both readable and writable, but share
                // the same options object.
                // However, some cases require setting options to different
                // values for the readable and the writable sides of the duplex stream,
                // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

                if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
                // contains buffers or objects.

                this.objectMode = !!options.objectMode;
                if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
                // Note: 0 is a valid value, means that we always return false if
                // the entire buffer is not flushed immediately on write()

                this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called

                this.finalCalled = false; // drain event flag.

                this.needDrain = false; // at the start of calling end()

                this.ending = false; // when end() has been called, and returned

                this.ended = false; // when 'finish' is emitted

                this.finished = false; // has it been destroyed

                this.destroyed = false; // should we decode strings into buffers before passing to _write?
                // this is here so that some node-core streams can optimize string
                // handling at a lower level.

                var noDecode = options.decodeStrings === false;
                this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
                // encoding is 'binary' so we have to make this configurable.
                // Everything else in the universe uses 'utf8', though.

                this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
                // of how much we're waiting to get pushed to some underlying
                // socket or file.

                this.length = 0; // a flag to see when we're in the middle of a write.

                this.writing = false; // when true all writes will be buffered until .uncork() call

                this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
                // or on a later tick.  We set this to true at first, because any
                // actions that shouldn't happen until "later" should generally also
                // not happen before the first write call.

                this.sync = true; // a flag to know if we're processing previously buffered items, which
                // may call the _write() callback in the same tick, so that we don't
                // end up in an overlapped onwrite situation.

                this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

                this.onwrite = function (er) {
                    onwrite(stream, er);
                }; // the callback that the user supplies to write(chunk,encoding,cb)


                this.writecb = null; // the amount that is being written when _write is called.

                this.writelen = 0;
                this.bufferedRequest = null;
                this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
                // this must be 0 before 'finish' can be emitted

                this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
                // This is relevant for synchronous Transform streams

                this.prefinished = false; // True if the error was already emitted and should not be thrown again

                this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.

                this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')

                this.autoDestroy = !!options.autoDestroy; // count buffered requests

                this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
                // one allocated and free to use, and we maintain at most two

                this.corkedRequestsFree = new CorkedRequest(this);
            }

            WritableState.prototype.getBuffer = function getBuffer() {
                var current = this.bufferedRequest;
                var out = [];

                while (current) {
                    out.push(current);
                    current = current.next;
                }

                return out;
            };

            (function () {
                try {
                    Object.defineProperty(WritableState.prototype, 'buffer', {
                        get: internalUtil.deprecate(function writableStateBufferGetter() {
                            return this.getBuffer();
                        }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
                    });
                } catch (_) {}
            })(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.


            var realHasInstance;

            if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
                realHasInstance = Function.prototype[Symbol.hasInstance];
                Object.defineProperty(Writable, Symbol.hasInstance, {
                    value: function value(object) {
                        if (realHasInstance.call(this, object)) return true;
                        if (this !== Writable) return false;
                        return object && object._writableState instanceof WritableState;
                    }
                });
            } else {
                realHasInstance = function realHasInstance(object) {
                    return object instanceof this;
                };
            }

            function Writable(options) {
                Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.
                // `realHasInstance` is necessary because using plain `instanceof`
                // would return false, as no `_writableState` property is attached.
                // Trying to use the custom `instanceof` for Writable here will also break the
                // Node.js LazyTransform implementation, which has a non-trivial getter for
                // `_writableState` that would lead to infinite recursion.
                // Checking for a Stream.Duplex instance is faster here instead of inside
                // the WritableState constructor, at least with V8 6.5

                var isDuplex = this instanceof Duplex;
                if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);
                this._writableState = new WritableState(options, this, isDuplex); // legacy.

                this.writable = true;

                if (options) {
                    if (typeof options.write === 'function') this._write = options.write;
                    if (typeof options.writev === 'function') this._writev = options.writev;
                    if (typeof options.destroy === 'function') this._destroy = options.destroy;
                    if (typeof options.final === 'function') this._final = options.final;
                }

                Stream.call(this);
            } // Otherwise people can pipe Writable streams, which is just wrong.


            Writable.prototype.pipe = function () {
                errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());
            };

            function writeAfterEnd(stream, cb) {
                var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb

                errorOrDestroy(stream, er);
                process.nextTick(cb, er);
            } // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.


            function validChunk(stream, state, chunk, cb) {
                var er;

                if (chunk === null) {
                    er = new ERR_STREAM_NULL_VALUES();
                } else if (typeof chunk !== 'string' && !state.objectMode) {
                    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);
                }

                if (er) {
                    errorOrDestroy(stream, er);
                    process.nextTick(cb, er);
                    return false;
                }

                return true;
            }

            Writable.prototype.write = function (chunk, encoding, cb) {
                var state = this._writableState;
                var ret = false;

                var isBuf = !state.objectMode && _isUint8Array(chunk);

                if (isBuf && !Buffer.isBuffer(chunk)) {
                    chunk = _uint8ArrayToBuffer(chunk);
                }

                if (typeof encoding === 'function') {
                    cb = encoding;
                    encoding = null;
                }

                if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
                if (typeof cb !== 'function') cb = nop;
                if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
                    state.pendingcb++;
                    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
                }
                return ret;
            };

            Writable.prototype.cork = function () {
                this._writableState.corked++;
            };

            Writable.prototype.uncork = function () {
                var state = this._writableState;

                if (state.corked) {
                    state.corked--;
                    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
                }
            };

            Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
                // node::ParseEncoding() requires lower case.
                if (typeof encoding === 'string') encoding = encoding.toLowerCase();
                if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);
                this._writableState.defaultEncoding = encoding;
                return this;
            };

            Object.defineProperty(Writable.prototype, 'writableBuffer', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function get() {
                    return this._writableState && this._writableState.getBuffer();
                }
            });

            function decodeChunk(state, chunk, encoding) {
                if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
                    chunk = Buffer.from(chunk, encoding);
                }

                return chunk;
            }

            Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function get() {
                    return this._writableState.highWaterMark;
                }
            }); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.

            function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
                if (!isBuf) {
                    var newChunk = decodeChunk(state, chunk, encoding);

                    if (chunk !== newChunk) {
                        isBuf = true;
                        encoding = 'buffer';
                        chunk = newChunk;
                    }
                }

                var len = state.objectMode ? 1 : chunk.length;
                state.length += len;
                var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

                if (!ret) state.needDrain = true;

                if (state.writing || state.corked) {
                    var last = state.lastBufferedRequest;
                    state.lastBufferedRequest = {
                        chunk: chunk,
                        encoding: encoding,
                        isBuf: isBuf,
                        callback: cb,
                        next: null
                    };

                    if (last) {
                        last.next = state.lastBufferedRequest;
                    } else {
                        state.bufferedRequest = state.lastBufferedRequest;
                    }

                    state.bufferedRequestCount += 1;
                } else {
                    doWrite(stream, state, false, len, chunk, encoding, cb);
                }

                return ret;
            }

            function doWrite(stream, state, writev, len, chunk, encoding, cb) {
                state.writelen = len;
                state.writecb = cb;
                state.writing = true;
                state.sync = true;
                if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
                state.sync = false;
            }

            function onwriteError(stream, state, sync, er, cb) {
                --state.pendingcb;

                if (sync) {
                    // defer the callback if we are being called synchronously
                    // to avoid piling up things on the stack
                    process.nextTick(cb, er); // this can emit finish, and it will always happen
                    // after error

                    process.nextTick(finishMaybe, stream, state);
                    stream._writableState.errorEmitted = true;
                    errorOrDestroy(stream, er);
                } else {
                    // the caller expect this to happen before if
                    // it is async
                    cb(er);
                    stream._writableState.errorEmitted = true;
                    errorOrDestroy(stream, er); // this can emit finish, but finish must
                    // always follow error

                    finishMaybe(stream, state);
                }
            }

            function onwriteStateUpdate(state) {
                state.writing = false;
                state.writecb = null;
                state.length -= state.writelen;
                state.writelen = 0;
            }

            function onwrite(stream, er) {
                var state = stream._writableState;
                var sync = state.sync;
                var cb = state.writecb;
                if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();
                onwriteStateUpdate(state);
                if (er) onwriteError(stream, state, sync, er, cb);else {
                    // Check if we're actually ready to finish, but don't emit yet
                    var finished = needFinish(state) || stream.destroyed;

                    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
                        clearBuffer(stream, state);
                    }

                    if (sync) {
                        process.nextTick(afterWrite, stream, state, finished, cb);
                    } else {
                        afterWrite(stream, state, finished, cb);
                    }
                }
            }

            function afterWrite(stream, state, finished, cb) {
                if (!finished) onwriteDrain(stream, state);
                state.pendingcb--;
                cb();
                finishMaybe(stream, state);
            } // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.


            function onwriteDrain(stream, state) {
                if (state.length === 0 && state.needDrain) {
                    state.needDrain = false;
                    stream.emit('drain');
                }
            } // if there's something in the buffer waiting, then process it


            function clearBuffer(stream, state) {
                state.bufferProcessing = true;
                var entry = state.bufferedRequest;

                if (stream._writev && entry && entry.next) {
                    // Fast case, write everything using _writev()
                    var l = state.bufferedRequestCount;
                    var buffer = new Array(l);
                    var holder = state.corkedRequestsFree;
                    holder.entry = entry;
                    var count = 0;
                    var allBuffers = true;

                    while (entry) {
                        buffer[count] = entry;
                        if (!entry.isBuf) allBuffers = false;
                        entry = entry.next;
                        count += 1;
                    }

                    buffer.allBuffers = allBuffers;
                    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
                    // as the hot path ends with doWrite

                    state.pendingcb++;
                    state.lastBufferedRequest = null;

                    if (holder.next) {
                        state.corkedRequestsFree = holder.next;
                        holder.next = null;
                    } else {
                        state.corkedRequestsFree = new CorkedRequest(state);
                    }

                    state.bufferedRequestCount = 0;
                } else {
                    // Slow case, write chunks one-by-one
                    while (entry) {
                        var chunk = entry.chunk;
                        var encoding = entry.encoding;
                        var cb = entry.callback;
                        var len = state.objectMode ? 1 : chunk.length;
                        doWrite(stream, state, false, len, chunk, encoding, cb);
                        entry = entry.next;
                        state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
                        // it means that we need to wait until it does.
                        // also, that means that the chunk and cb are currently
                        // being processed, so move the buffer counter past them.

                        if (state.writing) {
                            break;
                        }
                    }

                    if (entry === null) state.lastBufferedRequest = null;
                }

                state.bufferedRequest = entry;
                state.bufferProcessing = false;
            }

            Writable.prototype._write = function (chunk, encoding, cb) {
                cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));
            };

            Writable.prototype._writev = null;

            Writable.prototype.end = function (chunk, encoding, cb) {
                var state = this._writableState;

                if (typeof chunk === 'function') {
                    cb = chunk;
                    chunk = null;
                    encoding = null;
                } else if (typeof encoding === 'function') {
                    cb = encoding;
                    encoding = null;
                }

                if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks

                if (state.corked) {
                    state.corked = 1;
                    this.uncork();
                } // ignore unnecessary end() calls.


                if (!state.ending) endWritable(this, state, cb);
                return this;
            };

            Object.defineProperty(Writable.prototype, 'writableLength', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function get() {
                    return this._writableState.length;
                }
            });

            function needFinish(state) {
                return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
            }

            function callFinal(stream, state) {
                stream._final(function (err) {
                    state.pendingcb--;

                    if (err) {
                        errorOrDestroy(stream, err);
                    }

                    state.prefinished = true;
                    stream.emit('prefinish');
                    finishMaybe(stream, state);
                });
            }

            function prefinish(stream, state) {
                if (!state.prefinished && !state.finalCalled) {
                    if (typeof stream._final === 'function' && !state.destroyed) {
                        state.pendingcb++;
                        state.finalCalled = true;
                        process.nextTick(callFinal, stream, state);
                    } else {
                        state.prefinished = true;
                        stream.emit('prefinish');
                    }
                }
            }

            function finishMaybe(stream, state) {
                var need = needFinish(state);

                if (need) {
                    prefinish(stream, state);

                    if (state.pendingcb === 0) {
                        state.finished = true;
                        stream.emit('finish');

                        if (state.autoDestroy) {
                            // In case of duplex streams we need a way to detect
                            // if the readable side is ready for autoDestroy as well
                            var rState = stream._readableState;

                            if (!rState || rState.autoDestroy && rState.endEmitted) {
                                stream.destroy();
                            }
                        }
                    }
                }

                return need;
            }

            function endWritable(stream, state, cb) {
                state.ending = true;
                finishMaybe(stream, state);

                if (cb) {
                    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);
                }

                state.ended = true;
                stream.writable = false;
            }

            function onCorkedFinish(corkReq, state, err) {
                var entry = corkReq.entry;
                corkReq.entry = null;

                while (entry) {
                    var cb = entry.callback;
                    state.pendingcb--;
                    cb(err);
                    entry = entry.next;
                } // reuse the free corkReq.


                state.corkedRequestsFree.next = corkReq;
            }

            Object.defineProperty(Writable.prototype, 'destroyed', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function get() {
                    if (this._writableState === undefined) {
                        return false;
                    }

                    return this._writableState.destroyed;
                },
                set: function set(value) {
                    // we ignore the value if the stream
                    // has not been initialized yet
                    if (!this._writableState) {
                        return;
                    } // backward compatibility, the user is explicitly
                    // managing destroyed


                    this._writableState.destroyed = value;
                }
            });
            Writable.prototype.destroy = destroyImpl.destroy;
            Writable.prototype._undestroy = destroyImpl.undestroy;

            Writable.prototype._destroy = function (err, cb) {
                cb(err);
            };
        }).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    },{"../errors":53,"./_stream_duplex":54,"./internal/streams/destroy":61,"./internal/streams/state":65,"./internal/streams/stream":66,"_process":159,"buffer":68,"inherits":140,"util-deprecate":196}],59:[function(require,module,exports){
        (function (process){
            'use strict';

            var _Object$setPrototypeO;

            function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

            var finished = require('./end-of-stream');

            var kLastResolve = Symbol('lastResolve');
            var kLastReject = Symbol('lastReject');
            var kError = Symbol('error');
            var kEnded = Symbol('ended');
            var kLastPromise = Symbol('lastPromise');
            var kHandlePromise = Symbol('handlePromise');
            var kStream = Symbol('stream');

            function createIterResult(value, done) {
                return {
                    value: value,
                    done: done
                };
            }

            function readAndResolve(iter) {
                var resolve = iter[kLastResolve];

                if (resolve !== null) {
                    var data = iter[kStream].read(); // we defer if data is null
                    // we can be expecting either 'end' or
                    // 'error'

                    if (data !== null) {
                        iter[kLastPromise] = null;
                        iter[kLastResolve] = null;
                        iter[kLastReject] = null;
                        resolve(createIterResult(data, false));
                    }
                }
            }

            function onReadable(iter) {
                // we wait for the next tick, because it might
                // emit an error with process.nextTick
                process.nextTick(readAndResolve, iter);
            }

            function wrapForNext(lastPromise, iter) {
                return function (resolve, reject) {
                    lastPromise.then(function () {
                        if (iter[kEnded]) {
                            resolve(createIterResult(undefined, true));
                            return;
                        }

                        iter[kHandlePromise](resolve, reject);
                    }, reject);
                };
            }

            var AsyncIteratorPrototype = Object.getPrototypeOf(function () {});
            var ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {
                get stream() {
                    return this[kStream];
                },

                next: function next() {
                    var _this = this;

                    // if we have detected an error in the meanwhile
                    // reject straight away
                    var error = this[kError];

                    if (error !== null) {
                        return Promise.reject(error);
                    }

                    if (this[kEnded]) {
                        return Promise.resolve(createIterResult(undefined, true));
                    }

                    if (this[kStream].destroyed) {
                        // We need to defer via nextTick because if .destroy(err) is
                        // called, the error will be emitted via nextTick, and
                        // we cannot guarantee that there is no error lingering around
                        // waiting to be emitted.
                        return new Promise(function (resolve, reject) {
                            process.nextTick(function () {
                                if (_this[kError]) {
                                    reject(_this[kError]);
                                } else {
                                    resolve(createIterResult(undefined, true));
                                }
                            });
                        });
                    } // if we have multiple next() calls
                    // we will wait for the previous Promise to finish
                    // this logic is optimized to support for await loops,
                    // where next() is only called once at a time


                    var lastPromise = this[kLastPromise];
                    var promise;

                    if (lastPromise) {
                        promise = new Promise(wrapForNext(lastPromise, this));
                    } else {
                        // fast path needed to support multiple this.push()
                        // without triggering the next() queue
                        var data = this[kStream].read();

                        if (data !== null) {
                            return Promise.resolve(createIterResult(data, false));
                        }

                        promise = new Promise(this[kHandlePromise]);
                    }

                    this[kLastPromise] = promise;
                    return promise;
                }
            }, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {
                return this;
            }), _defineProperty(_Object$setPrototypeO, "return", function _return() {
                var _this2 = this;

                // destroy(err, cb) is a private API
                // we can guarantee we have that here, because we control the
                // Readable class this is attached to
                return new Promise(function (resolve, reject) {
                    _this2[kStream].destroy(null, function (err) {
                        if (err) {
                            reject(err);
                            return;
                        }

                        resolve(createIterResult(undefined, true));
                    });
                });
            }), _Object$setPrototypeO), AsyncIteratorPrototype);

            var createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {
                var _Object$create;

                var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {
                    value: stream,
                    writable: true
                }), _defineProperty(_Object$create, kLastResolve, {
                    value: null,
                    writable: true
                }), _defineProperty(_Object$create, kLastReject, {
                    value: null,
                    writable: true
                }), _defineProperty(_Object$create, kError, {
                    value: null,
                    writable: true
                }), _defineProperty(_Object$create, kEnded, {
                    value: stream._readableState.endEmitted,
                    writable: true
                }), _defineProperty(_Object$create, kHandlePromise, {
                    value: function value(resolve, reject) {
                        var data = iterator[kStream].read();

                        if (data) {
                            iterator[kLastPromise] = null;
                            iterator[kLastResolve] = null;
                            iterator[kLastReject] = null;
                            resolve(createIterResult(data, false));
                        } else {
                            iterator[kLastResolve] = resolve;
                            iterator[kLastReject] = reject;
                        }
                    },
                    writable: true
                }), _Object$create));
                iterator[kLastPromise] = null;
                finished(stream, function (err) {
                    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {
                        var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise
                        // returned by next() and store the error

                        if (reject !== null) {
                            iterator[kLastPromise] = null;
                            iterator[kLastResolve] = null;
                            iterator[kLastReject] = null;
                            reject(err);
                        }

                        iterator[kError] = err;
                        return;
                    }

                    var resolve = iterator[kLastResolve];

                    if (resolve !== null) {
                        iterator[kLastPromise] = null;
                        iterator[kLastResolve] = null;
                        iterator[kLastReject] = null;
                        resolve(createIterResult(undefined, true));
                    }

                    iterator[kEnded] = true;
                });
                stream.on('readable', onReadable.bind(null, iterator));
                return iterator;
            };

            module.exports = createReadableStreamAsyncIterator;
        }).call(this,require('_process'))
    },{"./end-of-stream":62,"_process":159}],60:[function(require,module,exports){
        'use strict';

        function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

        function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

        function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

        function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

        function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

        var _require = require('buffer'),
            Buffer = _require.Buffer;

        var _require2 = require('util'),
            inspect = _require2.inspect;

        var custom = inspect && inspect.custom || 'inspect';

        function copyBuffer(src, target, offset) {
            Buffer.prototype.copy.call(src, target, offset);
        }

        module.exports =
            /*#__PURE__*/
            function () {
                function BufferList() {
                    _classCallCheck(this, BufferList);

                    this.head = null;
                    this.tail = null;
                    this.length = 0;
                }

                _createClass(BufferList, [{
                    key: "push",
                    value: function push(v) {
                        var entry = {
                            data: v,
                            next: null
                        };
                        if (this.length > 0) this.tail.next = entry;else this.head = entry;
                        this.tail = entry;
                        ++this.length;
                    }
                }, {
                    key: "unshift",
                    value: function unshift(v) {
                        var entry = {
                            data: v,
                            next: this.head
                        };
                        if (this.length === 0) this.tail = entry;
                        this.head = entry;
                        ++this.length;
                    }
                }, {
                    key: "shift",
                    value: function shift() {
                        if (this.length === 0) return;
                        var ret = this.head.data;
                        if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
                        --this.length;
                        return ret;
                    }
                }, {
                    key: "clear",
                    value: function clear() {
                        this.head = this.tail = null;
                        this.length = 0;
                    }
                }, {
                    key: "join",
                    value: function join(s) {
                        if (this.length === 0) return '';
                        var p = this.head;
                        var ret = '' + p.data;

                        while (p = p.next) {
                            ret += s + p.data;
                        }

                        return ret;
                    }
                }, {
                    key: "concat",
                    value: function concat(n) {
                        if (this.length === 0) return Buffer.alloc(0);
                        var ret = Buffer.allocUnsafe(n >>> 0);
                        var p = this.head;
                        var i = 0;

                        while (p) {
                            copyBuffer(p.data, ret, i);
                            i += p.data.length;
                            p = p.next;
                        }

                        return ret;
                    } // Consumes a specified amount of bytes or characters from the buffered data.

                }, {
                    key: "consume",
                    value: function consume(n, hasStrings) {
                        var ret;

                        if (n < this.head.data.length) {
                            // `slice` is the same for buffers and strings.
                            ret = this.head.data.slice(0, n);
                            this.head.data = this.head.data.slice(n);
                        } else if (n === this.head.data.length) {
                            // First chunk is a perfect match.
                            ret = this.shift();
                        } else {
                            // Result spans more than one buffer.
                            ret = hasStrings ? this._getString(n) : this._getBuffer(n);
                        }

                        return ret;
                    }
                }, {
                    key: "first",
                    value: function first() {
                        return this.head.data;
                    } // Consumes a specified amount of characters from the buffered data.

                }, {
                    key: "_getString",
                    value: function _getString(n) {
                        var p = this.head;
                        var c = 1;
                        var ret = p.data;
                        n -= ret.length;

                        while (p = p.next) {
                            var str = p.data;
                            var nb = n > str.length ? str.length : n;
                            if (nb === str.length) ret += str;else ret += str.slice(0, n);
                            n -= nb;

                            if (n === 0) {
                                if (nb === str.length) {
                                    ++c;
                                    if (p.next) this.head = p.next;else this.head = this.tail = null;
                                } else {
                                    this.head = p;
                                    p.data = str.slice(nb);
                                }

                                break;
                            }

                            ++c;
                        }

                        this.length -= c;
                        return ret;
                    } // Consumes a specified amount of bytes from the buffered data.

                }, {
                    key: "_getBuffer",
                    value: function _getBuffer(n) {
                        var ret = Buffer.allocUnsafe(n);
                        var p = this.head;
                        var c = 1;
                        p.data.copy(ret);
                        n -= p.data.length;

                        while (p = p.next) {
                            var buf = p.data;
                            var nb = n > buf.length ? buf.length : n;
                            buf.copy(ret, ret.length - n, 0, nb);
                            n -= nb;

                            if (n === 0) {
                                if (nb === buf.length) {
                                    ++c;
                                    if (p.next) this.head = p.next;else this.head = this.tail = null;
                                } else {
                                    this.head = p;
                                    p.data = buf.slice(nb);
                                }

                                break;
                            }

                            ++c;
                        }

                        this.length -= c;
                        return ret;
                    } // Make sure the linked list only shows the minimal necessary information.

                }, {
                    key: custom,
                    value: function value(_, options) {
                        return inspect(this, _objectSpread({}, options, {
                            // Only inspect one level.
                            depth: 0,
                            // It should not recurse.
                            customInspect: false
                        }));
                    }
                }]);

                return BufferList;
            }();
    },{"buffer":68,"util":24}],61:[function(require,module,exports){
        (function (process){
            'use strict'; // undocumented cb() API, needed for core, not for public API

            function destroy(err, cb) {
                var _this = this;

                var readableDestroyed = this._readableState && this._readableState.destroyed;
                var writableDestroyed = this._writableState && this._writableState.destroyed;

                if (readableDestroyed || writableDestroyed) {
                    if (cb) {
                        cb(err);
                    } else if (err) {
                        if (!this._writableState) {
                            process.nextTick(emitErrorNT, this, err);
                        } else if (!this._writableState.errorEmitted) {
                            this._writableState.errorEmitted = true;
                            process.nextTick(emitErrorNT, this, err);
                        }
                    }

                    return this;
                } // we set destroyed to true before firing error callbacks in order
                // to make it re-entrance safe in case destroy() is called within callbacks


                if (this._readableState) {
                    this._readableState.destroyed = true;
                } // if this is a duplex stream mark the writable part as destroyed as well


                if (this._writableState) {
                    this._writableState.destroyed = true;
                }

                this._destroy(err || null, function (err) {
                    if (!cb && err) {
                        if (!_this._writableState) {
                            process.nextTick(emitErrorAndCloseNT, _this, err);
                        } else if (!_this._writableState.errorEmitted) {
                            _this._writableState.errorEmitted = true;
                            process.nextTick(emitErrorAndCloseNT, _this, err);
                        } else {
                            process.nextTick(emitCloseNT, _this);
                        }
                    } else if (cb) {
                        process.nextTick(emitCloseNT, _this);
                        cb(err);
                    } else {
                        process.nextTick(emitCloseNT, _this);
                    }
                });

                return this;
            }

            function emitErrorAndCloseNT(self, err) {
                emitErrorNT(self, err);
                emitCloseNT(self);
            }

            function emitCloseNT(self) {
                if (self._writableState && !self._writableState.emitClose) return;
                if (self._readableState && !self._readableState.emitClose) return;
                self.emit('close');
            }

            function undestroy() {
                if (this._readableState) {
                    this._readableState.destroyed = false;
                    this._readableState.reading = false;
                    this._readableState.ended = false;
                    this._readableState.endEmitted = false;
                }

                if (this._writableState) {
                    this._writableState.destroyed = false;
                    this._writableState.ended = false;
                    this._writableState.ending = false;
                    this._writableState.finalCalled = false;
                    this._writableState.prefinished = false;
                    this._writableState.finished = false;
                    this._writableState.errorEmitted = false;
                }
            }

            function emitErrorNT(self, err) {
                self.emit('error', err);
            }

            function errorOrDestroy(stream, err) {
                // We have tests that rely on errors being emitted
                // in the same tick, so changing this is semver major.
                // For now when you opt-in to autoDestroy we allow
                // the error to be emitted nextTick. In a future
                // semver major update we should change the default to this.
                var rState = stream._readableState;
                var wState = stream._writableState;
                if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);
            }

            module.exports = {
                destroy: destroy,
                undestroy: undestroy,
                errorOrDestroy: errorOrDestroy
            };
        }).call(this,require('_process'))
    },{"_process":159}],62:[function(require,module,exports){
// Ported from https://github.com/mafintosh/end-of-stream with
// permission from the author, Mathias Buus (@mafintosh).
        'use strict';

        var ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;

        function once(callback) {
            var called = false;
            return function () {
                if (called) return;
                called = true;

                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                }

                callback.apply(this, args);
            };
        }

        function noop() {}

        function isRequest(stream) {
            return stream.setHeader && typeof stream.abort === 'function';
        }

        function eos(stream, opts, callback) {
            if (typeof opts === 'function') return eos(stream, null, opts);
            if (!opts) opts = {};
            callback = once(callback || noop);
            var readable = opts.readable || opts.readable !== false && stream.readable;
            var writable = opts.writable || opts.writable !== false && stream.writable;

            var onlegacyfinish = function onlegacyfinish() {
                if (!stream.writable) onfinish();
            };

            var writableEnded = stream._writableState && stream._writableState.finished;

            var onfinish = function onfinish() {
                writable = false;
                writableEnded = true;
                if (!readable) callback.call(stream);
            };

            var readableEnded = stream._readableState && stream._readableState.endEmitted;

            var onend = function onend() {
                readable = false;
                readableEnded = true;
                if (!writable) callback.call(stream);
            };

            var onerror = function onerror(err) {
                callback.call(stream, err);
            };

            var onclose = function onclose() {
                var err;

                if (readable && !readableEnded) {
                    if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
                    return callback.call(stream, err);
                }

                if (writable && !writableEnded) {
                    if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();
                    return callback.call(stream, err);
                }
            };

            var onrequest = function onrequest() {
                stream.req.on('finish', onfinish);
            };

            if (isRequest(stream)) {
                stream.on('complete', onfinish);
                stream.on('abort', onclose);
                if (stream.req) onrequest();else stream.on('request', onrequest);
            } else if (writable && !stream._writableState) {
                // legacy streams
                stream.on('end', onlegacyfinish);
                stream.on('close', onlegacyfinish);
            }

            stream.on('end', onend);
            stream.on('finish', onfinish);
            if (opts.error !== false) stream.on('error', onerror);
            stream.on('close', onclose);
            return function () {
                stream.removeListener('complete', onfinish);
                stream.removeListener('abort', onclose);
                stream.removeListener('request', onrequest);
                if (stream.req) stream.req.removeListener('finish', onfinish);
                stream.removeListener('end', onlegacyfinish);
                stream.removeListener('close', onlegacyfinish);
                stream.removeListener('finish', onfinish);
                stream.removeListener('end', onend);
                stream.removeListener('error', onerror);
                stream.removeListener('close', onclose);
            };
        }

        module.exports = eos;
    },{"../../../errors":53}],63:[function(require,module,exports){
        module.exports = function () {
            throw new Error('Readable.from is not available in the browser')
        };

    },{}],64:[function(require,module,exports){
// Ported from https://github.com/mafintosh/pump with
// permission from the author, Mathias Buus (@mafintosh).
        'use strict';

        var eos;

        function once(callback) {
            var called = false;
            return function () {
                if (called) return;
                called = true;
                callback.apply(void 0, arguments);
            };
        }

        var _require$codes = require('../../../errors').codes,
            ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,
            ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;

        function noop(err) {
            // Rethrow the error if it exists to avoid swallowing it
            if (err) throw err;
        }

        function isRequest(stream) {
            return stream.setHeader && typeof stream.abort === 'function';
        }

        function destroyer(stream, reading, writing, callback) {
            callback = once(callback);
            var closed = false;
            stream.on('close', function () {
                closed = true;
            });
            if (eos === undefined) eos = require('./end-of-stream');
            eos(stream, {
                readable: reading,
                writable: writing
            }, function (err) {
                if (err) return callback(err);
                closed = true;
                callback();
            });
            var destroyed = false;
            return function (err) {
                if (closed) return;
                if (destroyed) return;
                destroyed = true; // request.destroy just do .end - .abort is what we want

                if (isRequest(stream)) return stream.abort();
                if (typeof stream.destroy === 'function') return stream.destroy();
                callback(err || new ERR_STREAM_DESTROYED('pipe'));
            };
        }

        function call(fn) {
            fn();
        }

        function pipe(from, to) {
            return from.pipe(to);
        }

        function popCallback(streams) {
            if (!streams.length) return noop;
            if (typeof streams[streams.length - 1] !== 'function') return noop;
            return streams.pop();
        }

        function pipeline() {
            for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {
                streams[_key] = arguments[_key];
            }

            var callback = popCallback(streams);
            if (Array.isArray(streams[0])) streams = streams[0];

            if (streams.length < 2) {
                throw new ERR_MISSING_ARGS('streams');
            }

            var error;
            var destroys = streams.map(function (stream, i) {
                var reading = i < streams.length - 1;
                var writing = i > 0;
                return destroyer(stream, reading, writing, function (err) {
                    if (!error) error = err;
                    if (err) destroys.forEach(call);
                    if (reading) return;
                    destroys.forEach(call);
                    callback(error);
                });
            });
            return streams.reduce(pipe);
        }

        module.exports = pipeline;
    },{"../../../errors":53,"./end-of-stream":62}],65:[function(require,module,exports){
        'use strict';

        var ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;

        function highWaterMarkFrom(options, isDuplex, duplexKey) {
            return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;
        }

        function getHighWaterMark(state, options, duplexKey, isDuplex) {
            var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);

            if (hwm != null) {
                if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {
                    var name = isDuplex ? duplexKey : 'highWaterMark';
                    throw new ERR_INVALID_OPT_VALUE(name, hwm);
                }

                return Math.floor(hwm);
            } // Default value


            return state.objectMode ? 16 : 16 * 1024;
        }

        module.exports = {
            getHighWaterMark: getHighWaterMark
        };
    },{"../../../errors":53}],66:[function(require,module,exports){
        module.exports = require('events').EventEmitter;

    },{"events":108}],67:[function(require,module,exports){
        exports = module.exports = require('./lib/_stream_readable.js');
        exports.Stream = exports;
        exports.Readable = exports;
        exports.Writable = require('./lib/_stream_writable.js');
        exports.Duplex = require('./lib/_stream_duplex.js');
        exports.Transform = require('./lib/_stream_transform.js');
        exports.PassThrough = require('./lib/_stream_passthrough.js');
        exports.finished = require('./lib/internal/streams/end-of-stream.js');
        exports.pipeline = require('./lib/internal/streams/pipeline.js');

    },{"./lib/_stream_duplex.js":54,"./lib/_stream_passthrough.js":55,"./lib/_stream_readable.js":56,"./lib/_stream_transform.js":57,"./lib/_stream_writable.js":58,"./lib/internal/streams/end-of-stream.js":62,"./lib/internal/streams/pipeline.js":64}],68:[function(require,module,exports){
        (function (Buffer){
            /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
            /* eslint-disable no-proto */

            'use strict'

            var base64 = require('base64-js')
            var ieee754 = require('ieee754')

            exports.Buffer = Buffer
            exports.SlowBuffer = SlowBuffer
            exports.INSPECT_MAX_BYTES = 50

            var K_MAX_LENGTH = 0x7fffffff
            exports.kMaxLength = K_MAX_LENGTH

            /**
             * If `Buffer.TYPED_ARRAY_SUPPORT`:
             *   === true    Use Uint8Array implementation (fastest)
             *   === false   Print warning and recommend using `buffer` v4.x which has an Object
             *               implementation (most compatible, even IE6)
             *
             * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
             * Opera 11.6+, iOS 4.2+.
             *
             * We report that the browser does not support typed arrays if the are not subclassable
             * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
             * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
             * for __proto__ and has a buggy typed array implementation.
             */
            Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

            if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
                typeof console.error === 'function') {
                console.error(
                    'This browser lacks typed array (Uint8Array) support which is required by ' +
                    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
                )
            }

            function typedArraySupport () {
                // Can typed array instances can be augmented?
                try {
                    var arr = new Uint8Array(1)
                    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
                    return arr.foo() === 42
                } catch (e) {
                    return false
                }
            }

            Object.defineProperty(Buffer.prototype, 'parent', {
                enumerable: true,
                get: function () {
                    if (!Buffer.isBuffer(this)) return undefined
                    return this.buffer
                }
            })

            Object.defineProperty(Buffer.prototype, 'offset', {
                enumerable: true,
                get: function () {
                    if (!Buffer.isBuffer(this)) return undefined
                    return this.byteOffset
                }
            })

            function createBuffer (length) {
                if (length > K_MAX_LENGTH) {
                    throw new RangeError('The value "' + length + '" is invalid for option "size"')
                }
                // Return an augmented `Uint8Array` instance
                var buf = new Uint8Array(length)
                buf.__proto__ = Buffer.prototype
                return buf
            }

            /**
             * The Buffer constructor returns instances of `Uint8Array` that have their
             * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
             * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
             * and the `Uint8Array` methods. Square bracket notation works as expected -- it
             * returns a single octet.
             *
             * The `Uint8Array` prototype remains unmodified.
             */

            function Buffer (arg, encodingOrOffset, length) {
                // Common case.
                if (typeof arg === 'number') {
                    if (typeof encodingOrOffset === 'string') {
                        throw new TypeError(
                            'The "string" argument must be of type string. Received type number'
                        )
                    }
                    return allocUnsafe(arg)
                }
                return from(arg, encodingOrOffset, length)
            }

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
            if (typeof Symbol !== 'undefined' && Symbol.species != null &&
                Buffer[Symbol.species] === Buffer) {
                Object.defineProperty(Buffer, Symbol.species, {
                    value: null,
                    configurable: true,
                    enumerable: false,
                    writable: false
                })
            }

            Buffer.poolSize = 8192 // not used by this implementation

            function from (value, encodingOrOffset, length) {
                if (typeof value === 'string') {
                    return fromString(value, encodingOrOffset)
                }

                if (ArrayBuffer.isView(value)) {
                    return fromArrayLike(value)
                }

                if (value == null) {
                    throw TypeError(
                        'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
                        'or Array-like Object. Received type ' + (typeof value)
                    )
                }

                if (isInstance(value, ArrayBuffer) ||
                    (value && isInstance(value.buffer, ArrayBuffer))) {
                    return fromArrayBuffer(value, encodingOrOffset, length)
                }

                if (typeof value === 'number') {
                    throw new TypeError(
                        'The "value" argument must not be of type number. Received type number'
                    )
                }

                var valueOf = value.valueOf && value.valueOf()
                if (valueOf != null && valueOf !== value) {
                    return Buffer.from(valueOf, encodingOrOffset, length)
                }

                var b = fromObject(value)
                if (b) return b

                if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
                    typeof value[Symbol.toPrimitive] === 'function') {
                    return Buffer.from(
                        value[Symbol.toPrimitive]('string'), encodingOrOffset, length
                    )
                }

                throw new TypeError(
                    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
                    'or Array-like Object. Received type ' + (typeof value)
                )
            }

            /**
             * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
             * if value is a number.
             * Buffer.from(str[, encoding])
             * Buffer.from(array)
             * Buffer.from(buffer)
             * Buffer.from(arrayBuffer[, byteOffset[, length]])
             **/
            Buffer.from = function (value, encodingOrOffset, length) {
                return from(value, encodingOrOffset, length)
            }

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
            Buffer.prototype.__proto__ = Uint8Array.prototype
            Buffer.__proto__ = Uint8Array

            function assertSize (size) {
                if (typeof size !== 'number') {
                    throw new TypeError('"size" argument must be of type number')
                } else if (size < 0) {
                    throw new RangeError('The value "' + size + '" is invalid for option "size"')
                }
            }

            function alloc (size, fill, encoding) {
                assertSize(size)
                if (size <= 0) {
                    return createBuffer(size)
                }
                if (fill !== undefined) {
                    // Only pay attention to encoding if it's a string. This
                    // prevents accidentally sending in a number that would
                    // be interpretted as a start offset.
                    return typeof encoding === 'string'
                        ? createBuffer(size).fill(fill, encoding)
                        : createBuffer(size).fill(fill)
                }
                return createBuffer(size)
            }

            /**
             * Creates a new filled Buffer instance.
             * alloc(size[, fill[, encoding]])
             **/
            Buffer.alloc = function (size, fill, encoding) {
                return alloc(size, fill, encoding)
            }

            function allocUnsafe (size) {
                assertSize(size)
                return createBuffer(size < 0 ? 0 : checked(size) | 0)
            }

            /**
             * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
             * */
            Buffer.allocUnsafe = function (size) {
                return allocUnsafe(size)
            }
            /**
             * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
             */
            Buffer.allocUnsafeSlow = function (size) {
                return allocUnsafe(size)
            }

            function fromString (string, encoding) {
                if (typeof encoding !== 'string' || encoding === '') {
                    encoding = 'utf8'
                }

                if (!Buffer.isEncoding(encoding)) {
                    throw new TypeError('Unknown encoding: ' + encoding)
                }

                var length = byteLength(string, encoding) | 0
                var buf = createBuffer(length)

                var actual = buf.write(string, encoding)

                if (actual !== length) {
                    // Writing a hex string, for example, that contains invalid characters will
                    // cause everything after the first invalid character to be ignored. (e.g.
                    // 'abxxcd' will be treated as 'ab')
                    buf = buf.slice(0, actual)
                }

                return buf
            }

            function fromArrayLike (array) {
                var length = array.length < 0 ? 0 : checked(array.length) | 0
                var buf = createBuffer(length)
                for (var i = 0; i < length; i += 1) {
                    buf[i] = array[i] & 255
                }
                return buf
            }

            function fromArrayBuffer (array, byteOffset, length) {
                if (byteOffset < 0 || array.byteLength < byteOffset) {
                    throw new RangeError('"offset" is outside of buffer bounds')
                }

                if (array.byteLength < byteOffset + (length || 0)) {
                    throw new RangeError('"length" is outside of buffer bounds')
                }

                var buf
                if (byteOffset === undefined && length === undefined) {
                    buf = new Uint8Array(array)
                } else if (length === undefined) {
                    buf = new Uint8Array(array, byteOffset)
                } else {
                    buf = new Uint8Array(array, byteOffset, length)
                }

                // Return an augmented `Uint8Array` instance
                buf.__proto__ = Buffer.prototype
                return buf
            }

            function fromObject (obj) {
                if (Buffer.isBuffer(obj)) {
                    var len = checked(obj.length) | 0
                    var buf = createBuffer(len)

                    if (buf.length === 0) {
                        return buf
                    }

                    obj.copy(buf, 0, 0, len)
                    return buf
                }

                if (obj.length !== undefined) {
                    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
                        return createBuffer(0)
                    }
                    return fromArrayLike(obj)
                }

                if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
                    return fromArrayLike(obj.data)
                }
            }

            function checked (length) {
                // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
                // length is NaN (which is otherwise coerced to zero.)
                if (length >= K_MAX_LENGTH) {
                    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                        'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
                }
                return length | 0
            }

            function SlowBuffer (length) {
                if (+length != length) { // eslint-disable-line eqeqeq
                    length = 0
                }
                return Buffer.alloc(+length)
            }

            Buffer.isBuffer = function isBuffer (b) {
                return b != null && b._isBuffer === true &&
                    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
            }

            Buffer.compare = function compare (a, b) {
                if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
                if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
                if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
                    throw new TypeError(
                        'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
                    )
                }

                if (a === b) return 0

                var x = a.length
                var y = b.length

                for (var i = 0, len = Math.min(x, y); i < len; ++i) {
                    if (a[i] !== b[i]) {
                        x = a[i]
                        y = b[i]
                        break
                    }
                }

                if (x < y) return -1
                if (y < x) return 1
                return 0
            }

            Buffer.isEncoding = function isEncoding (encoding) {
                switch (String(encoding).toLowerCase()) {
                    case 'hex':
                    case 'utf8':
                    case 'utf-8':
                    case 'ascii':
                    case 'latin1':
                    case 'binary':
                    case 'base64':
                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                        return true
                    default:
                        return false
                }
            }

            Buffer.concat = function concat (list, length) {
                if (!Array.isArray(list)) {
                    throw new TypeError('"list" argument must be an Array of Buffers')
                }

                if (list.length === 0) {
                    return Buffer.alloc(0)
                }

                var i
                if (length === undefined) {
                    length = 0
                    for (i = 0; i < list.length; ++i) {
                        length += list[i].length
                    }
                }

                var buffer = Buffer.allocUnsafe(length)
                var pos = 0
                for (i = 0; i < list.length; ++i) {
                    var buf = list[i]
                    if (isInstance(buf, Uint8Array)) {
                        buf = Buffer.from(buf)
                    }
                    if (!Buffer.isBuffer(buf)) {
                        throw new TypeError('"list" argument must be an Array of Buffers')
                    }
                    buf.copy(buffer, pos)
                    pos += buf.length
                }
                return buffer
            }

            function byteLength (string, encoding) {
                if (Buffer.isBuffer(string)) {
                    return string.length
                }
                if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
                    return string.byteLength
                }
                if (typeof string !== 'string') {
                    throw new TypeError(
                        'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
                        'Received type ' + typeof string
                    )
                }

                var len = string.length
                var mustMatch = (arguments.length > 2 && arguments[2] === true)
                if (!mustMatch && len === 0) return 0

                // Use a for loop to avoid recursion
                var loweredCase = false
                for (;;) {
                    switch (encoding) {
                        case 'ascii':
                        case 'latin1':
                        case 'binary':
                            return len
                        case 'utf8':
                        case 'utf-8':
                            return utf8ToBytes(string).length
                        case 'ucs2':
                        case 'ucs-2':
                        case 'utf16le':
                        case 'utf-16le':
                            return len * 2
                        case 'hex':
                            return len >>> 1
                        case 'base64':
                            return base64ToBytes(string).length
                        default:
                            if (loweredCase) {
                                return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
                            }
                            encoding = ('' + encoding).toLowerCase()
                            loweredCase = true
                    }
                }
            }
            Buffer.byteLength = byteLength

            function slowToString (encoding, start, end) {
                var loweredCase = false

                // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
                // property of a typed array.

                // This behaves neither like String nor Uint8Array in that we set start/end
                // to their upper/lower bounds if the value passed is out of range.
                // undefined is handled specially as per ECMA-262 6th Edition,
                // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
                if (start === undefined || start < 0) {
                    start = 0
                }
                // Return early if start > this.length. Done here to prevent potential uint32
                // coercion fail below.
                if (start > this.length) {
                    return ''
                }

                if (end === undefined || end > this.length) {
                    end = this.length
                }

                if (end <= 0) {
                    return ''
                }

                // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
                end >>>= 0
                start >>>= 0

                if (end <= start) {
                    return ''
                }

                if (!encoding) encoding = 'utf8'

                while (true) {
                    switch (encoding) {
                        case 'hex':
                            return hexSlice(this, start, end)

                        case 'utf8':
                        case 'utf-8':
                            return utf8Slice(this, start, end)

                        case 'ascii':
                            return asciiSlice(this, start, end)

                        case 'latin1':
                        case 'binary':
                            return latin1Slice(this, start, end)

                        case 'base64':
                            return base64Slice(this, start, end)

                        case 'ucs2':
                        case 'ucs-2':
                        case 'utf16le':
                        case 'utf-16le':
                            return utf16leSlice(this, start, end)

                        default:
                            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
                            encoding = (encoding + '').toLowerCase()
                            loweredCase = true
                    }
                }
            }

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
            Buffer.prototype._isBuffer = true

            function swap (b, n, m) {
                var i = b[n]
                b[n] = b[m]
                b[m] = i
            }

            Buffer.prototype.swap16 = function swap16 () {
                var len = this.length
                if (len % 2 !== 0) {
                    throw new RangeError('Buffer size must be a multiple of 16-bits')
                }
                for (var i = 0; i < len; i += 2) {
                    swap(this, i, i + 1)
                }
                return this
            }

            Buffer.prototype.swap32 = function swap32 () {
                var len = this.length
                if (len % 4 !== 0) {
                    throw new RangeError('Buffer size must be a multiple of 32-bits')
                }
                for (var i = 0; i < len; i += 4) {
                    swap(this, i, i + 3)
                    swap(this, i + 1, i + 2)
                }
                return this
            }

            Buffer.prototype.swap64 = function swap64 () {
                var len = this.length
                if (len % 8 !== 0) {
                    throw new RangeError('Buffer size must be a multiple of 64-bits')
                }
                for (var i = 0; i < len; i += 8) {
                    swap(this, i, i + 7)
                    swap(this, i + 1, i + 6)
                    swap(this, i + 2, i + 5)
                    swap(this, i + 3, i + 4)
                }
                return this
            }

            Buffer.prototype.toString = function toString () {
                var length = this.length
                if (length === 0) return ''
                if (arguments.length === 0) return utf8Slice(this, 0, length)
                return slowToString.apply(this, arguments)
            }

            Buffer.prototype.toLocaleString = Buffer.prototype.toString

            Buffer.prototype.equals = function equals (b) {
                if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
                if (this === b) return true
                return Buffer.compare(this, b) === 0
            }

            Buffer.prototype.inspect = function inspect () {
                var str = ''
                var max = exports.INSPECT_MAX_BYTES
                str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
                if (this.length > max) str += ' ... '
                return '<Buffer ' + str + '>'
            }

            Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
                if (isInstance(target, Uint8Array)) {
                    target = Buffer.from(target, target.offset, target.byteLength)
                }
                if (!Buffer.isBuffer(target)) {
                    throw new TypeError(
                        'The "target" argument must be one of type Buffer or Uint8Array. ' +
                        'Received type ' + (typeof target)
                    )
                }

                if (start === undefined) {
                    start = 0
                }
                if (end === undefined) {
                    end = target ? target.length : 0
                }
                if (thisStart === undefined) {
                    thisStart = 0
                }
                if (thisEnd === undefined) {
                    thisEnd = this.length
                }

                if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
                    throw new RangeError('out of range index')
                }

                if (thisStart >= thisEnd && start >= end) {
                    return 0
                }
                if (thisStart >= thisEnd) {
                    return -1
                }
                if (start >= end) {
                    return 1
                }

                start >>>= 0
                end >>>= 0
                thisStart >>>= 0
                thisEnd >>>= 0

                if (this === target) return 0

                var x = thisEnd - thisStart
                var y = end - start
                var len = Math.min(x, y)

                var thisCopy = this.slice(thisStart, thisEnd)
                var targetCopy = target.slice(start, end)

                for (var i = 0; i < len; ++i) {
                    if (thisCopy[i] !== targetCopy[i]) {
                        x = thisCopy[i]
                        y = targetCopy[i]
                        break
                    }
                }

                if (x < y) return -1
                if (y < x) return 1
                return 0
            }

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
            function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
                // Empty buffer means no match
                if (buffer.length === 0) return -1

                // Normalize byteOffset
                if (typeof byteOffset === 'string') {
                    encoding = byteOffset
                    byteOffset = 0
                } else if (byteOffset > 0x7fffffff) {
                    byteOffset = 0x7fffffff
                } else if (byteOffset < -0x80000000) {
                    byteOffset = -0x80000000
                }
                byteOffset = +byteOffset // Coerce to Number.
                if (numberIsNaN(byteOffset)) {
                    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
                    byteOffset = dir ? 0 : (buffer.length - 1)
                }

                // Normalize byteOffset: negative offsets start from the end of the buffer
                if (byteOffset < 0) byteOffset = buffer.length + byteOffset
                if (byteOffset >= buffer.length) {
                    if (dir) return -1
                    else byteOffset = buffer.length - 1
                } else if (byteOffset < 0) {
                    if (dir) byteOffset = 0
                    else return -1
                }

                // Normalize val
                if (typeof val === 'string') {
                    val = Buffer.from(val, encoding)
                }

                // Finally, search either indexOf (if dir is true) or lastIndexOf
                if (Buffer.isBuffer(val)) {
                    // Special case: looking for empty string/buffer always fails
                    if (val.length === 0) {
                        return -1
                    }
                    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
                } else if (typeof val === 'number') {
                    val = val & 0xFF // Search for a byte value [0-255]
                    if (typeof Uint8Array.prototype.indexOf === 'function') {
                        if (dir) {
                            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
                        } else {
                            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
                        }
                    }
                    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
                }

                throw new TypeError('val must be string, number or Buffer')
            }

            function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
                var indexSize = 1
                var arrLength = arr.length
                var valLength = val.length

                if (encoding !== undefined) {
                    encoding = String(encoding).toLowerCase()
                    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
                        encoding === 'utf16le' || encoding === 'utf-16le') {
                        if (arr.length < 2 || val.length < 2) {
                            return -1
                        }
                        indexSize = 2
                        arrLength /= 2
                        valLength /= 2
                        byteOffset /= 2
                    }
                }

                function read (buf, i) {
                    if (indexSize === 1) {
                        return buf[i]
                    } else {
                        return buf.readUInt16BE(i * indexSize)
                    }
                }

                var i
                if (dir) {
                    var foundIndex = -1
                    for (i = byteOffset; i < arrLength; i++) {
                        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
                            if (foundIndex === -1) foundIndex = i
                            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
                        } else {
                            if (foundIndex !== -1) i -= i - foundIndex
                            foundIndex = -1
                        }
                    }
                } else {
                    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
                    for (i = byteOffset; i >= 0; i--) {
                        var found = true
                        for (var j = 0; j < valLength; j++) {
                            if (read(arr, i + j) !== read(val, j)) {
                                found = false
                                break
                            }
                        }
                        if (found) return i
                    }
                }

                return -1
            }

            Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
                return this.indexOf(val, byteOffset, encoding) !== -1
            }

            Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
                return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
            }

            Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
                return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
            }

            function hexWrite (buf, string, offset, length) {
                offset = Number(offset) || 0
                var remaining = buf.length - offset
                if (!length) {
                    length = remaining
                } else {
                    length = Number(length)
                    if (length > remaining) {
                        length = remaining
                    }
                }

                var strLen = string.length

                if (length > strLen / 2) {
                    length = strLen / 2
                }
                for (var i = 0; i < length; ++i) {
                    var parsed = parseInt(string.substr(i * 2, 2), 16)
                    if (numberIsNaN(parsed)) return i
                    buf[offset + i] = parsed
                }
                return i
            }

            function utf8Write (buf, string, offset, length) {
                return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
            }

            function asciiWrite (buf, string, offset, length) {
                return blitBuffer(asciiToBytes(string), buf, offset, length)
            }

            function latin1Write (buf, string, offset, length) {
                return asciiWrite(buf, string, offset, length)
            }

            function base64Write (buf, string, offset, length) {
                return blitBuffer(base64ToBytes(string), buf, offset, length)
            }

            function ucs2Write (buf, string, offset, length) {
                return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
            }

            Buffer.prototype.write = function write (string, offset, length, encoding) {
                // Buffer#write(string)
                if (offset === undefined) {
                    encoding = 'utf8'
                    length = this.length
                    offset = 0
                    // Buffer#write(string, encoding)
                } else if (length === undefined && typeof offset === 'string') {
                    encoding = offset
                    length = this.length
                    offset = 0
                    // Buffer#write(string, offset[, length][, encoding])
                } else if (isFinite(offset)) {
                    offset = offset >>> 0
                    if (isFinite(length)) {
                        length = length >>> 0
                        if (encoding === undefined) encoding = 'utf8'
                    } else {
                        encoding = length
                        length = undefined
                    }
                } else {
                    throw new Error(
                        'Buffer.write(string, encoding, offset[, length]) is no longer supported'
                    )
                }

                var remaining = this.length - offset
                if (length === undefined || length > remaining) length = remaining

                if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
                    throw new RangeError('Attempt to write outside buffer bounds')
                }

                if (!encoding) encoding = 'utf8'

                var loweredCase = false
                for (;;) {
                    switch (encoding) {
                        case 'hex':
                            return hexWrite(this, string, offset, length)

                        case 'utf8':
                        case 'utf-8':
                            return utf8Write(this, string, offset, length)

                        case 'ascii':
                            return asciiWrite(this, string, offset, length)

                        case 'latin1':
                        case 'binary':
                            return latin1Write(this, string, offset, length)

                        case 'base64':
                            // Warning: maxLength not taken into account in base64Write
                            return base64Write(this, string, offset, length)

                        case 'ucs2':
                        case 'ucs-2':
                        case 'utf16le':
                        case 'utf-16le':
                            return ucs2Write(this, string, offset, length)

                        default:
                            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
                            encoding = ('' + encoding).toLowerCase()
                            loweredCase = true
                    }
                }
            }

            Buffer.prototype.toJSON = function toJSON () {
                return {
                    type: 'Buffer',
                    data: Array.prototype.slice.call(this._arr || this, 0)
                }
            }

            function base64Slice (buf, start, end) {
                if (start === 0 && end === buf.length) {
                    return base64.fromByteArray(buf)
                } else {
                    return base64.fromByteArray(buf.slice(start, end))
                }
            }

            function utf8Slice (buf, start, end) {
                end = Math.min(buf.length, end)
                var res = []

                var i = start
                while (i < end) {
                    var firstByte = buf[i]
                    var codePoint = null
                    var bytesPerSequence = (firstByte > 0xEF) ? 4
                        : (firstByte > 0xDF) ? 3
                            : (firstByte > 0xBF) ? 2
                                : 1

                    if (i + bytesPerSequence <= end) {
                        var secondByte, thirdByte, fourthByte, tempCodePoint

                        switch (bytesPerSequence) {
                            case 1:
                                if (firstByte < 0x80) {
                                    codePoint = firstByte
                                }
                                break
                            case 2:
                                secondByte = buf[i + 1]
                                if ((secondByte & 0xC0) === 0x80) {
                                    tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
                                    if (tempCodePoint > 0x7F) {
                                        codePoint = tempCodePoint
                                    }
                                }
                                break
                            case 3:
                                secondByte = buf[i + 1]
                                thirdByte = buf[i + 2]
                                if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
                                    tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
                                    if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                                        codePoint = tempCodePoint
                                    }
                                }
                                break
                            case 4:
                                secondByte = buf[i + 1]
                                thirdByte = buf[i + 2]
                                fourthByte = buf[i + 3]
                                if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
                                    tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
                                    if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                                        codePoint = tempCodePoint
                                    }
                                }
                        }
                    }

                    if (codePoint === null) {
                        // we did not generate a valid codePoint so insert a
                        // replacement char (U+FFFD) and advance only 1 byte
                        codePoint = 0xFFFD
                        bytesPerSequence = 1
                    } else if (codePoint > 0xFFFF) {
                        // encode to utf16 (surrogate pair dance)
                        codePoint -= 0x10000
                        res.push(codePoint >>> 10 & 0x3FF | 0xD800)
                        codePoint = 0xDC00 | codePoint & 0x3FF
                    }

                    res.push(codePoint)
                    i += bytesPerSequence
                }

                return decodeCodePointsArray(res)
            }

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
            var MAX_ARGUMENTS_LENGTH = 0x1000

            function decodeCodePointsArray (codePoints) {
                var len = codePoints.length
                if (len <= MAX_ARGUMENTS_LENGTH) {
                    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
                }

                // Decode in chunks to avoid "call stack size exceeded".
                var res = ''
                var i = 0
                while (i < len) {
                    res += String.fromCharCode.apply(
                        String,
                        codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
                    )
                }
                return res
            }

            function asciiSlice (buf, start, end) {
                var ret = ''
                end = Math.min(buf.length, end)

                for (var i = start; i < end; ++i) {
                    ret += String.fromCharCode(buf[i] & 0x7F)
                }
                return ret
            }

            function latin1Slice (buf, start, end) {
                var ret = ''
                end = Math.min(buf.length, end)

                for (var i = start; i < end; ++i) {
                    ret += String.fromCharCode(buf[i])
                }
                return ret
            }

            function hexSlice (buf, start, end) {
                var len = buf.length

                if (!start || start < 0) start = 0
                if (!end || end < 0 || end > len) end = len

                var out = ''
                for (var i = start; i < end; ++i) {
                    out += toHex(buf[i])
                }
                return out
            }

            function utf16leSlice (buf, start, end) {
                var bytes = buf.slice(start, end)
                var res = ''
                for (var i = 0; i < bytes.length; i += 2) {
                    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
                }
                return res
            }

            Buffer.prototype.slice = function slice (start, end) {
                var len = this.length
                start = ~~start
                end = end === undefined ? len : ~~end

                if (start < 0) {
                    start += len
                    if (start < 0) start = 0
                } else if (start > len) {
                    start = len
                }

                if (end < 0) {
                    end += len
                    if (end < 0) end = 0
                } else if (end > len) {
                    end = len
                }

                if (end < start) end = start

                var newBuf = this.subarray(start, end)
                // Return an augmented `Uint8Array` instance
                newBuf.__proto__ = Buffer.prototype
                return newBuf
            }

            /*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
            function checkOffset (offset, ext, length) {
                if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
                if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
            }

            Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
                offset = offset >>> 0
                byteLength = byteLength >>> 0
                if (!noAssert) checkOffset(offset, byteLength, this.length)

                var val = this[offset]
                var mul = 1
                var i = 0
                while (++i < byteLength && (mul *= 0x100)) {
                    val += this[offset + i] * mul
                }

                return val
            }

            Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
                offset = offset >>> 0
                byteLength = byteLength >>> 0
                if (!noAssert) {
                    checkOffset(offset, byteLength, this.length)
                }

                var val = this[offset + --byteLength]
                var mul = 1
                while (byteLength > 0 && (mul *= 0x100)) {
                    val += this[offset + --byteLength] * mul
                }

                return val
            }

            Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
                offset = offset >>> 0
                if (!noAssert) checkOffset(offset, 1, this.length)
                return this[offset]
            }

            Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
                offset = offset >>> 0
                if (!noAssert) checkOffset(offset, 2, this.length)
                return this[offset] | (this[offset + 1] << 8)
            }

            Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
                offset = offset >>> 0
                if (!noAssert) checkOffset(offset, 2, this.length)
                return (this[offset] << 8) | this[offset + 1]
            }

            Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
                offset = offset >>> 0
                if (!noAssert) checkOffset(offset, 4, this.length)

                return ((this[offset]) |
                    (this[offset + 1] << 8) |
                    (this[offset + 2] << 16)) +
                    (this[offset + 3] * 0x1000000)
            }

            Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
                offset = offset >>> 0
                if (!noAssert) checkOffset(offset, 4, this.length)

                return (this[offset] * 0x1000000) +
                    ((this[offset + 1] << 16) |
                        (this[offset + 2] << 8) |
                        this[offset + 3])
            }

            Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
                offset = offset >>> 0
                byteLength = byteLength >>> 0
                if (!noAssert) checkOffset(offset, byteLength, this.length)

                var val = this[offset]
                var mul = 1
                var i = 0
                while (++i < byteLength && (mul *= 0x100)) {
                    val += this[offset + i] * mul
                }
                mul *= 0x80

                if (val >= mul) val -= Math.pow(2, 8 * byteLength)

                return val
            }

            Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
                offset = offset >>> 0
                byteLength = byteLength >>> 0
                if (!noAssert) checkOffset(offset, byteLength, this.length)

                var i = byteLength
                var mul = 1
                var val = this[offset + --i]
                while (i > 0 && (mul *= 0x100)) {
                    val += this[offset + --i] * mul
                }
                mul *= 0x80

                if (val >= mul) val -= Math.pow(2, 8 * byteLength)

                return val
            }

            Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
                offset = offset >>> 0
                if (!noAssert) checkOffset(offset, 1, this.length)
                if (!(this[offset] & 0x80)) return (this[offset])
                return ((0xff - this[offset] + 1) * -1)
            }

            Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
                offset = offset >>> 0
                if (!noAssert) checkOffset(offset, 2, this.length)
                var val = this[offset] | (this[offset + 1] << 8)
                return (val & 0x8000) ? val | 0xFFFF0000 : val
            }

            Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
                offset = offset >>> 0
                if (!noAssert) checkOffset(offset, 2, this.length)
                var val = this[offset + 1] | (this[offset] << 8)
                return (val & 0x8000) ? val | 0xFFFF0000 : val
            }

            Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
                offset = offset >>> 0
                if (!noAssert) checkOffset(offset, 4, this.length)

                return (this[offset]) |
                    (this[offset + 1] << 8) |
                    (this[offset + 2] << 16) |
                    (this[offset + 3] << 24)
            }

            Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
                offset = offset >>> 0
                if (!noAssert) checkOffset(offset, 4, this.length)

                return (this[offset] << 24) |
                    (this[offset + 1] << 16) |
                    (this[offset + 2] << 8) |
                    (this[offset + 3])
            }

            Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
                offset = offset >>> 0
                if (!noAssert) checkOffset(offset, 4, this.length)
                return ieee754.read(this, offset, true, 23, 4)
            }

            Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
                offset = offset >>> 0
                if (!noAssert) checkOffset(offset, 4, this.length)
                return ieee754.read(this, offset, false, 23, 4)
            }

            Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
                offset = offset >>> 0
                if (!noAssert) checkOffset(offset, 8, this.length)
                return ieee754.read(this, offset, true, 52, 8)
            }

            Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
                offset = offset >>> 0
                if (!noAssert) checkOffset(offset, 8, this.length)
                return ieee754.read(this, offset, false, 52, 8)
            }

            function checkInt (buf, value, offset, ext, max, min) {
                if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
                if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
                if (offset + ext > buf.length) throw new RangeError('Index out of range')
            }

            Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
                value = +value
                offset = offset >>> 0
                byteLength = byteLength >>> 0
                if (!noAssert) {
                    var maxBytes = Math.pow(2, 8 * byteLength) - 1
                    checkInt(this, value, offset, byteLength, maxBytes, 0)
                }

                var mul = 1
                var i = 0
                this[offset] = value & 0xFF
                while (++i < byteLength && (mul *= 0x100)) {
                    this[offset + i] = (value / mul) & 0xFF
                }

                return offset + byteLength
            }

            Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
                value = +value
                offset = offset >>> 0
                byteLength = byteLength >>> 0
                if (!noAssert) {
                    var maxBytes = Math.pow(2, 8 * byteLength) - 1
                    checkInt(this, value, offset, byteLength, maxBytes, 0)
                }

                var i = byteLength - 1
                var mul = 1
                this[offset + i] = value & 0xFF
                while (--i >= 0 && (mul *= 0x100)) {
                    this[offset + i] = (value / mul) & 0xFF
                }

                return offset + byteLength
            }

            Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
                value = +value
                offset = offset >>> 0
                if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
                this[offset] = (value & 0xff)
                return offset + 1
            }

            Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
                value = +value
                offset = offset >>> 0
                if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
                this[offset] = (value & 0xff)
                this[offset + 1] = (value >>> 8)
                return offset + 2
            }

            Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
                value = +value
                offset = offset >>> 0
                if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
                this[offset] = (value >>> 8)
                this[offset + 1] = (value & 0xff)
                return offset + 2
            }

            Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
                value = +value
                offset = offset >>> 0
                if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
                this[offset + 3] = (value >>> 24)
                this[offset + 2] = (value >>> 16)
                this[offset + 1] = (value >>> 8)
                this[offset] = (value & 0xff)
                return offset + 4
            }

            Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
                value = +value
                offset = offset >>> 0
                if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
                this[offset] = (value >>> 24)
                this[offset + 1] = (value >>> 16)
                this[offset + 2] = (value >>> 8)
                this[offset + 3] = (value & 0xff)
                return offset + 4
            }

            Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
                value = +value
                offset = offset >>> 0
                if (!noAssert) {
                    var limit = Math.pow(2, (8 * byteLength) - 1)

                    checkInt(this, value, offset, byteLength, limit - 1, -limit)
                }

                var i = 0
                var mul = 1
                var sub = 0
                this[offset] = value & 0xFF
                while (++i < byteLength && (mul *= 0x100)) {
                    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
                        sub = 1
                    }
                    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
                }

                return offset + byteLength
            }

            Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
                value = +value
                offset = offset >>> 0
                if (!noAssert) {
                    var limit = Math.pow(2, (8 * byteLength) - 1)

                    checkInt(this, value, offset, byteLength, limit - 1, -limit)
                }

                var i = byteLength - 1
                var mul = 1
                var sub = 0
                this[offset + i] = value & 0xFF
                while (--i >= 0 && (mul *= 0x100)) {
                    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
                        sub = 1
                    }
                    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
                }

                return offset + byteLength
            }

            Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
                value = +value
                offset = offset >>> 0
                if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
                if (value < 0) value = 0xff + value + 1
                this[offset] = (value & 0xff)
                return offset + 1
            }

            Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
                value = +value
                offset = offset >>> 0
                if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
                this[offset] = (value & 0xff)
                this[offset + 1] = (value >>> 8)
                return offset + 2
            }

            Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
                value = +value
                offset = offset >>> 0
                if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
                this[offset] = (value >>> 8)
                this[offset + 1] = (value & 0xff)
                return offset + 2
            }

            Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
                value = +value
                offset = offset >>> 0
                if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
                this[offset] = (value & 0xff)
                this[offset + 1] = (value >>> 8)
                this[offset + 2] = (value >>> 16)
                this[offset + 3] = (value >>> 24)
                return offset + 4
            }

            Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
                value = +value
                offset = offset >>> 0
                if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
                if (value < 0) value = 0xffffffff + value + 1
                this[offset] = (value >>> 24)
                this[offset + 1] = (value >>> 16)
                this[offset + 2] = (value >>> 8)
                this[offset + 3] = (value & 0xff)
                return offset + 4
            }

            function checkIEEE754 (buf, value, offset, ext, max, min) {
                if (offset + ext > buf.length) throw new RangeError('Index out of range')
                if (offset < 0) throw new RangeError('Index out of range')
            }

            function writeFloat (buf, value, offset, littleEndian, noAssert) {
                value = +value
                offset = offset >>> 0
                if (!noAssert) {
                    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
                }
                ieee754.write(buf, value, offset, littleEndian, 23, 4)
                return offset + 4
            }

            Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
                return writeFloat(this, value, offset, true, noAssert)
            }

            Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
                return writeFloat(this, value, offset, false, noAssert)
            }

            function writeDouble (buf, value, offset, littleEndian, noAssert) {
                value = +value
                offset = offset >>> 0
                if (!noAssert) {
                    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
                }
                ieee754.write(buf, value, offset, littleEndian, 52, 8)
                return offset + 8
            }

            Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
                return writeDouble(this, value, offset, true, noAssert)
            }

            Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
                return writeDouble(this, value, offset, false, noAssert)
            }

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
            Buffer.prototype.copy = function copy (target, targetStart, start, end) {
                if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
                if (!start) start = 0
                if (!end && end !== 0) end = this.length
                if (targetStart >= target.length) targetStart = target.length
                if (!targetStart) targetStart = 0
                if (end > 0 && end < start) end = start

                // Copy 0 bytes; we're done
                if (end === start) return 0
                if (target.length === 0 || this.length === 0) return 0

                // Fatal error conditions
                if (targetStart < 0) {
                    throw new RangeError('targetStart out of bounds')
                }
                if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
                if (end < 0) throw new RangeError('sourceEnd out of bounds')

                // Are we oob?
                if (end > this.length) end = this.length
                if (target.length - targetStart < end - start) {
                    end = target.length - targetStart + start
                }

                var len = end - start

                if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
                    // Use built-in when available, missing from IE11
                    this.copyWithin(targetStart, start, end)
                } else if (this === target && start < targetStart && targetStart < end) {
                    // descending copy from end
                    for (var i = len - 1; i >= 0; --i) {
                        target[i + targetStart] = this[i + start]
                    }
                } else {
                    Uint8Array.prototype.set.call(
                        target,
                        this.subarray(start, end),
                        targetStart
                    )
                }

                return len
            }

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
            Buffer.prototype.fill = function fill (val, start, end, encoding) {
                // Handle string cases:
                if (typeof val === 'string') {
                    if (typeof start === 'string') {
                        encoding = start
                        start = 0
                        end = this.length
                    } else if (typeof end === 'string') {
                        encoding = end
                        end = this.length
                    }
                    if (encoding !== undefined && typeof encoding !== 'string') {
                        throw new TypeError('encoding must be a string')
                    }
                    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
                        throw new TypeError('Unknown encoding: ' + encoding)
                    }
                    if (val.length === 1) {
                        var code = val.charCodeAt(0)
                        if ((encoding === 'utf8' && code < 128) ||
                            encoding === 'latin1') {
                            // Fast path: If `val` fits into a single byte, use that numeric value.
                            val = code
                        }
                    }
                } else if (typeof val === 'number') {
                    val = val & 255
                }

                // Invalid ranges are not set to a default, so can range check early.
                if (start < 0 || this.length < start || this.length < end) {
                    throw new RangeError('Out of range index')
                }

                if (end <= start) {
                    return this
                }

                start = start >>> 0
                end = end === undefined ? this.length : end >>> 0

                if (!val) val = 0

                var i
                if (typeof val === 'number') {
                    for (i = start; i < end; ++i) {
                        this[i] = val
                    }
                } else {
                    var bytes = Buffer.isBuffer(val)
                        ? val
                        : Buffer.from(val, encoding)
                    var len = bytes.length
                    if (len === 0) {
                        throw new TypeError('The value "' + val +
                            '" is invalid for argument "value"')
                    }
                    for (i = 0; i < end - start; ++i) {
                        this[i + start] = bytes[i % len]
                    }
                }

                return this
            }

// HELPER FUNCTIONS
// ================

            var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

            function base64clean (str) {
                // Node takes equal signs as end of the Base64 encoding
                str = str.split('=')[0]
                // Node strips out invalid characters like \n and \t from the string, base64-js does not
                str = str.trim().replace(INVALID_BASE64_RE, '')
                // Node converts strings with length < 2 to ''
                if (str.length < 2) return ''
                // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
                while (str.length % 4 !== 0) {
                    str = str + '='
                }
                return str
            }

            function toHex (n) {
                if (n < 16) return '0' + n.toString(16)
                return n.toString(16)
            }

            function utf8ToBytes (string, units) {
                units = units || Infinity
                var codePoint
                var length = string.length
                var leadSurrogate = null
                var bytes = []

                for (var i = 0; i < length; ++i) {
                    codePoint = string.charCodeAt(i)

                    // is surrogate component
                    if (codePoint > 0xD7FF && codePoint < 0xE000) {
                        // last char was a lead
                        if (!leadSurrogate) {
                            // no lead yet
                            if (codePoint > 0xDBFF) {
                                // unexpected trail
                                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
                                continue
                            } else if (i + 1 === length) {
                                // unpaired lead
                                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
                                continue
                            }

                            // valid lead
                            leadSurrogate = codePoint

                            continue
                        }

                        // 2 leads in a row
                        if (codePoint < 0xDC00) {
                            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
                            leadSurrogate = codePoint
                            continue
                        }

                        // valid surrogate pair
                        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
                    } else if (leadSurrogate) {
                        // valid bmp char, but last char was a lead
                        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
                    }

                    leadSurrogate = null

                    // encode utf8
                    if (codePoint < 0x80) {
                        if ((units -= 1) < 0) break
                        bytes.push(codePoint)
                    } else if (codePoint < 0x800) {
                        if ((units -= 2) < 0) break
                        bytes.push(
                            codePoint >> 0x6 | 0xC0,
                            codePoint & 0x3F | 0x80
                        )
                    } else if (codePoint < 0x10000) {
                        if ((units -= 3) < 0) break
                        bytes.push(
                            codePoint >> 0xC | 0xE0,
                            codePoint >> 0x6 & 0x3F | 0x80,
                            codePoint & 0x3F | 0x80
                        )
                    } else if (codePoint < 0x110000) {
                        if ((units -= 4) < 0) break
                        bytes.push(
                            codePoint >> 0x12 | 0xF0,
                            codePoint >> 0xC & 0x3F | 0x80,
                            codePoint >> 0x6 & 0x3F | 0x80,
                            codePoint & 0x3F | 0x80
                        )
                    } else {
                        throw new Error('Invalid code point')
                    }
                }

                return bytes
            }

            function asciiToBytes (str) {
                var byteArray = []
                for (var i = 0; i < str.length; ++i) {
                    // Node's code seems to be doing this and not & 0x7F..
                    byteArray.push(str.charCodeAt(i) & 0xFF)
                }
                return byteArray
            }

            function utf16leToBytes (str, units) {
                var c, hi, lo
                var byteArray = []
                for (var i = 0; i < str.length; ++i) {
                    if ((units -= 2) < 0) break

                    c = str.charCodeAt(i)
                    hi = c >> 8
                    lo = c % 256
                    byteArray.push(lo)
                    byteArray.push(hi)
                }

                return byteArray
            }

            function base64ToBytes (str) {
                return base64.toByteArray(base64clean(str))
            }

            function blitBuffer (src, dst, offset, length) {
                for (var i = 0; i < length; ++i) {
                    if ((i + offset >= dst.length) || (i >= src.length)) break
                    dst[i + offset] = src[i]
                }
                return i
            }

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
            function isInstance (obj, type) {
                return obj instanceof type ||
                    (obj != null && obj.constructor != null && obj.constructor.name != null &&
                        obj.constructor.name === type.name)
            }
            function numberIsNaN (obj) {
                // For IE11 support
                return obj !== obj // eslint-disable-line no-self-compare
            }

        }).call(this,require("buffer").Buffer)
    },{"base64-js":21,"buffer":68,"ieee754":139}],69:[function(require,module,exports){
        (function (Buffer){
            module.exports = function xor (a, b) {
                var length = Math.min(a.length, b.length)
                var buffer = new Buffer(length)

                for (var i = 0; i < length; ++i) {
                    buffer[i] = a[i] ^ b[i]
                }

                return buffer
            }

        }).call(this,require("buffer").Buffer)
    },{"buffer":68}],70:[function(require,module,exports){
        var Buffer = require('safe-buffer').Buffer
        var Transform = require('stream').Transform
        var StringDecoder = require('string_decoder').StringDecoder
        var inherits = require('inherits')

        function CipherBase (hashMode) {
            Transform.call(this)
            this.hashMode = typeof hashMode === 'string'
            if (this.hashMode) {
                this[hashMode] = this._finalOrDigest
            } else {
                this.final = this._finalOrDigest
            }
            if (this._final) {
                this.__final = this._final
                this._final = null
            }
            this._decoder = null
            this._encoding = null
        }
        inherits(CipherBase, Transform)

        CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
            if (typeof data === 'string') {
                data = Buffer.from(data, inputEnc)
            }

            var outData = this._update(data)
            if (this.hashMode) return this

            if (outputEnc) {
                outData = this._toString(outData, outputEnc)
            }

            return outData
        }

        CipherBase.prototype.setAutoPadding = function () {}
        CipherBase.prototype.getAuthTag = function () {
            throw new Error('trying to get auth tag in unsupported state')
        }

        CipherBase.prototype.setAuthTag = function () {
            throw new Error('trying to set auth tag in unsupported state')
        }

        CipherBase.prototype.setAAD = function () {
            throw new Error('trying to set aad in unsupported state')
        }

        CipherBase.prototype._transform = function (data, _, next) {
            var err
            try {
                if (this.hashMode) {
                    this._update(data)
                } else {
                    this.push(this._update(data))
                }
            } catch (e) {
                err = e
            } finally {
                next(err)
            }
        }
        CipherBase.prototype._flush = function (done) {
            var err
            try {
                this.push(this.__final())
            } catch (e) {
                err = e
            }

            done(err)
        }
        CipherBase.prototype._finalOrDigest = function (outputEnc) {
            var outData = this.__final() || Buffer.alloc(0)
            if (outputEnc) {
                outData = this._toString(outData, outputEnc, true)
            }
            return outData
        }

        CipherBase.prototype._toString = function (value, enc, fin) {
            if (!this._decoder) {
                this._decoder = new StringDecoder(enc)
                this._encoding = enc
            }

            if (this._encoding !== enc) throw new Error('can\'t switch encodings')

            var out = this._decoder.write(value)
            if (fin) {
                out += this._decoder.end()
            }

            return out
        }

        module.exports = CipherBase

    },{"inherits":140,"safe-buffer":184,"stream":193,"string_decoder":194}],71:[function(require,module,exports){
        (function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

            function isArray(arg) {
                if (Array.isArray) {
                    return Array.isArray(arg);
                }
                return objectToString(arg) === '[object Array]';
            }
            exports.isArray = isArray;

            function isBoolean(arg) {
                return typeof arg === 'boolean';
            }
            exports.isBoolean = isBoolean;

            function isNull(arg) {
                return arg === null;
            }
            exports.isNull = isNull;

            function isNullOrUndefined(arg) {
                return arg == null;
            }
            exports.isNullOrUndefined = isNullOrUndefined;

            function isNumber(arg) {
                return typeof arg === 'number';
            }
            exports.isNumber = isNumber;

            function isString(arg) {
                return typeof arg === 'string';
            }
            exports.isString = isString;

            function isSymbol(arg) {
                return typeof arg === 'symbol';
            }
            exports.isSymbol = isSymbol;

            function isUndefined(arg) {
                return arg === void 0;
            }
            exports.isUndefined = isUndefined;

            function isRegExp(re) {
                return objectToString(re) === '[object RegExp]';
            }
            exports.isRegExp = isRegExp;

            function isObject(arg) {
                return typeof arg === 'object' && arg !== null;
            }
            exports.isObject = isObject;

            function isDate(d) {
                return objectToString(d) === '[object Date]';
            }
            exports.isDate = isDate;

            function isError(e) {
                return (objectToString(e) === '[object Error]' || e instanceof Error);
            }
            exports.isError = isError;

            function isFunction(arg) {
                return typeof arg === 'function';
            }
            exports.isFunction = isFunction;

            function isPrimitive(arg) {
                return arg === null ||
                    typeof arg === 'boolean' ||
                    typeof arg === 'number' ||
                    typeof arg === 'string' ||
                    typeof arg === 'symbol' ||  // ES6 symbol
                    typeof arg === 'undefined';
            }
            exports.isPrimitive = isPrimitive;

            exports.isBuffer = Buffer.isBuffer;

            function objectToString(o) {
                return Object.prototype.toString.call(o);
            }

        }).call(this,{"isBuffer":require("../../is-buffer/index.js")})
    },{"../../is-buffer/index.js":141}],72:[function(require,module,exports){
        /* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */
        /* vim: set ts=2: */
        /*exported CRC32 */
        var CRC32;
        (function (factory) {
            /*jshint ignore:start */
            /*eslint-disable */
            if(typeof DO_NOT_EXPORT_CRC === 'undefined') {
                if('object' === typeof exports) {
                    factory(exports);
                } else if ('function' === typeof define && define.amd) {
                    define(function () {
                        var module = {};
                        factory(module);
                        return module;
                    });
                } else {
                    factory(CRC32 = {});
                }
            } else {
                factory(CRC32 = {});
            }
            /*eslint-enable */
            /*jshint ignore:end */
        }(function(CRC32) {
            CRC32.version = '1.2.0';
            /* see perf/crc32table.js */
            /*global Int32Array */
            function signed_crc_table() {
                var c = 0, table = new Array(256);

                for(var n =0; n != 256; ++n){
                    c = n;
                    c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
                    c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
                    c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
                    c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
                    c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
                    c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
                    c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
                    c = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));
                    table[n] = c;
                }

                return typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;
            }

            var T = signed_crc_table();
            function crc32_bstr(bstr, seed) {
                var C = seed ^ -1, L = bstr.length - 1;
                for(var i = 0; i < L;) {
                    C = (C>>>8) ^ T[(C^bstr.charCodeAt(i++))&0xFF];
                    C = (C>>>8) ^ T[(C^bstr.charCodeAt(i++))&0xFF];
                }
                if(i === L) C = (C>>>8) ^ T[(C ^ bstr.charCodeAt(i))&0xFF];
                return C ^ -1;
            }

            function crc32_buf(buf, seed) {
                if(buf.length > 10000) return crc32_buf_8(buf, seed);
                var C = seed ^ -1, L = buf.length - 3;
                for(var i = 0; i < L;) {
                    C = (C>>>8) ^ T[(C^buf[i++])&0xFF];
                    C = (C>>>8) ^ T[(C^buf[i++])&0xFF];
                    C = (C>>>8) ^ T[(C^buf[i++])&0xFF];
                    C = (C>>>8) ^ T[(C^buf[i++])&0xFF];
                }
                while(i < L+3) C = (C>>>8) ^ T[(C^buf[i++])&0xFF];
                return C ^ -1;
            }

            function crc32_buf_8(buf, seed) {
                var C = seed ^ -1, L = buf.length - 7;
                for(var i = 0; i < L;) {
                    C = (C>>>8) ^ T[(C^buf[i++])&0xFF];
                    C = (C>>>8) ^ T[(C^buf[i++])&0xFF];
                    C = (C>>>8) ^ T[(C^buf[i++])&0xFF];
                    C = (C>>>8) ^ T[(C^buf[i++])&0xFF];
                    C = (C>>>8) ^ T[(C^buf[i++])&0xFF];
                    C = (C>>>8) ^ T[(C^buf[i++])&0xFF];
                    C = (C>>>8) ^ T[(C^buf[i++])&0xFF];
                    C = (C>>>8) ^ T[(C^buf[i++])&0xFF];
                }
                while(i < L+7) C = (C>>>8) ^ T[(C^buf[i++])&0xFF];
                return C ^ -1;
            }

            function crc32_str(str, seed) {
                var C = seed ^ -1;
                for(var i = 0, L=str.length, c, d; i < L;) {
                    c = str.charCodeAt(i++);
                    if(c < 0x80) {
                        C = (C>>>8) ^ T[(C ^ c)&0xFF];
                    } else if(c < 0x800) {
                        C = (C>>>8) ^ T[(C ^ (192|((c>>6)&31)))&0xFF];
                        C = (C>>>8) ^ T[(C ^ (128|(c&63)))&0xFF];
                    } else if(c >= 0xD800 && c < 0xE000) {
                        c = (c&1023)+64; d = str.charCodeAt(i++)&1023;
                        C = (C>>>8) ^ T[(C ^ (240|((c>>8)&7)))&0xFF];
                        C = (C>>>8) ^ T[(C ^ (128|((c>>2)&63)))&0xFF];
                        C = (C>>>8) ^ T[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];
                        C = (C>>>8) ^ T[(C ^ (128|(d&63)))&0xFF];
                    } else {
                        C = (C>>>8) ^ T[(C ^ (224|((c>>12)&15)))&0xFF];
                        C = (C>>>8) ^ T[(C ^ (128|((c>>6)&63)))&0xFF];
                        C = (C>>>8) ^ T[(C ^ (128|(c&63)))&0xFF];
                    }
                }
                return C ^ -1;
            }
            CRC32.table = T;
// $FlowIgnore
            CRC32.bstr = crc32_bstr;
// $FlowIgnore
            CRC32.buf = crc32_buf;
// $FlowIgnore
            CRC32.str = crc32_str;
        }));

    },{}],73:[function(require,module,exports){
        (function (Buffer){
            var elliptic = require('elliptic')
            var BN = require('bn.js')

            module.exports = function createECDH (curve) {
                return new ECDH(curve)
            }

            var aliases = {
                secp256k1: {
                    name: 'secp256k1',
                    byteLength: 32
                },
                secp224r1: {
                    name: 'p224',
                    byteLength: 28
                },
                prime256v1: {
                    name: 'p256',
                    byteLength: 32
                },
                prime192v1: {
                    name: 'p192',
                    byteLength: 24
                },
                ed25519: {
                    name: 'ed25519',
                    byteLength: 32
                },
                secp384r1: {
                    name: 'p384',
                    byteLength: 48
                },
                secp521r1: {
                    name: 'p521',
                    byteLength: 66
                }
            }

            aliases.p224 = aliases.secp224r1
            aliases.p256 = aliases.secp256r1 = aliases.prime256v1
            aliases.p192 = aliases.secp192r1 = aliases.prime192v1
            aliases.p384 = aliases.secp384r1
            aliases.p521 = aliases.secp521r1

            function ECDH (curve) {
                this.curveType = aliases[curve]
                if (!this.curveType) {
                    this.curveType = {
                        name: curve
                    }
                }
                this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap
                this.keys = void 0
            }

            ECDH.prototype.generateKeys = function (enc, format) {
                this.keys = this.curve.genKeyPair()
                return this.getPublicKey(enc, format)
            }

            ECDH.prototype.computeSecret = function (other, inenc, enc) {
                inenc = inenc || 'utf8'
                if (!Buffer.isBuffer(other)) {
                    other = new Buffer(other, inenc)
                }
                var otherPub = this.curve.keyFromPublic(other).getPublic()
                var out = otherPub.mul(this.keys.getPrivate()).getX()
                return formatReturnValue(out, enc, this.curveType.byteLength)
            }

            ECDH.prototype.getPublicKey = function (enc, format) {
                var key = this.keys.getPublic(format === 'compressed', true)
                if (format === 'hybrid') {
                    if (key[key.length - 1] % 2) {
                        key[0] = 7
                    } else {
                        key[0] = 6
                    }
                }
                return formatReturnValue(key, enc)
            }

            ECDH.prototype.getPrivateKey = function (enc) {
                return formatReturnValue(this.keys.getPrivate(), enc)
            }

            ECDH.prototype.setPublicKey = function (pub, enc) {
                enc = enc || 'utf8'
                if (!Buffer.isBuffer(pub)) {
                    pub = new Buffer(pub, enc)
                }
                this.keys._importPublic(pub)
                return this
            }

            ECDH.prototype.setPrivateKey = function (priv, enc) {
                enc = enc || 'utf8'
                if (!Buffer.isBuffer(priv)) {
                    priv = new Buffer(priv, enc)
                }

                var _priv = new BN(priv)
                _priv = _priv.toString(16)
                this.keys = this.curve.genKeyPair()
                this.keys._importPrivate(_priv)
                return this
            }

            function formatReturnValue (bn, enc, len) {
                if (!Array.isArray(bn)) {
                    bn = bn.toArray()
                }
                var buf = new Buffer(bn)
                if (len && buf.length < len) {
                    var zeros = new Buffer(len - buf.length)
                    zeros.fill(0)
                    buf = Buffer.concat([zeros, buf])
                }
                if (!enc) {
                    return buf
                } else {
                    return buf.toString(enc)
                }
            }

        }).call(this,require("buffer").Buffer)
    },{"bn.js":22,"buffer":68,"elliptic":92}],74:[function(require,module,exports){
        'use strict'
        var inherits = require('inherits')
        var MD5 = require('md5.js')
        var RIPEMD160 = require('ripemd160')
        var sha = require('sha.js')
        var Base = require('cipher-base')

        function Hash (hash) {
            Base.call(this, 'digest')

            this._hash = hash
        }

        inherits(Hash, Base)

        Hash.prototype._update = function (data) {
            this._hash.update(data)
        }

        Hash.prototype._final = function () {
            return this._hash.digest()
        }

        module.exports = function createHash (alg) {
            alg = alg.toLowerCase()
            if (alg === 'md5') return new MD5()
            if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()

            return new Hash(sha(alg))
        }

    },{"cipher-base":70,"inherits":140,"md5.js":143,"ripemd160":183,"sha.js":186}],75:[function(require,module,exports){
        var MD5 = require('md5.js')

        module.exports = function (buffer) {
            return new MD5().update(buffer).digest()
        }

    },{"md5.js":143}],76:[function(require,module,exports){
        'use strict'
        var inherits = require('inherits')
        var Legacy = require('./legacy')
        var Base = require('cipher-base')
        var Buffer = require('safe-buffer').Buffer
        var md5 = require('create-hash/md5')
        var RIPEMD160 = require('ripemd160')

        var sha = require('sha.js')

        var ZEROS = Buffer.alloc(128)

        function Hmac (alg, key) {
            Base.call(this, 'digest')
            if (typeof key === 'string') {
                key = Buffer.from(key)
            }

            var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

            this._alg = alg
            this._key = key
            if (key.length > blocksize) {
                var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
                key = hash.update(key).digest()
            } else if (key.length < blocksize) {
                key = Buffer.concat([key, ZEROS], blocksize)
            }

            var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
            var opad = this._opad = Buffer.allocUnsafe(blocksize)

            for (var i = 0; i < blocksize; i++) {
                ipad[i] = key[i] ^ 0x36
                opad[i] = key[i] ^ 0x5C
            }
            this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
            this._hash.update(ipad)
        }

        inherits(Hmac, Base)

        Hmac.prototype._update = function (data) {
            this._hash.update(data)
        }

        Hmac.prototype._final = function () {
            var h = this._hash.digest()
            var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
            return hash.update(this._opad).update(h).digest()
        }

        module.exports = function createHmac (alg, key) {
            alg = alg.toLowerCase()
            if (alg === 'rmd160' || alg === 'ripemd160') {
                return new Hmac('rmd160', key)
            }
            if (alg === 'md5') {
                return new Legacy(md5, key)
            }
            return new Hmac(alg, key)
        }

    },{"./legacy":77,"cipher-base":70,"create-hash/md5":75,"inherits":140,"ripemd160":183,"safe-buffer":184,"sha.js":186}],77:[function(require,module,exports){
        'use strict'
        var inherits = require('inherits')
        var Buffer = require('safe-buffer').Buffer

        var Base = require('cipher-base')

        var ZEROS = Buffer.alloc(128)
        var blocksize = 64

        function Hmac (alg, key) {
            Base.call(this, 'digest')
            if (typeof key === 'string') {
                key = Buffer.from(key)
            }

            this._alg = alg
            this._key = key

            if (key.length > blocksize) {
                key = alg(key)
            } else if (key.length < blocksize) {
                key = Buffer.concat([key, ZEROS], blocksize)
            }

            var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
            var opad = this._opad = Buffer.allocUnsafe(blocksize)

            for (var i = 0; i < blocksize; i++) {
                ipad[i] = key[i] ^ 0x36
                opad[i] = key[i] ^ 0x5C
            }

            this._hash = [ipad]
        }

        inherits(Hmac, Base)

        Hmac.prototype._update = function (data) {
            this._hash.push(data)
        }

        Hmac.prototype._final = function () {
            var h = this._alg(Buffer.concat(this._hash))
            return this._alg(Buffer.concat([this._opad, h]))
        }
        module.exports = Hmac

    },{"cipher-base":70,"inherits":140,"safe-buffer":184}],78:[function(require,module,exports){
        'use strict'

        exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')
        exports.createHash = exports.Hash = require('create-hash')
        exports.createHmac = exports.Hmac = require('create-hmac')

        var algos = require('browserify-sign/algos')
        var algoKeys = Object.keys(algos)
        var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
        exports.getHashes = function () {
            return hashes
        }

        var p = require('pbkdf2')
        exports.pbkdf2 = p.pbkdf2
        exports.pbkdf2Sync = p.pbkdf2Sync

        var aes = require('browserify-cipher')

        exports.Cipher = aes.Cipher
        exports.createCipher = aes.createCipher
        exports.Cipheriv = aes.Cipheriv
        exports.createCipheriv = aes.createCipheriv
        exports.Decipher = aes.Decipher
        exports.createDecipher = aes.createDecipher
        exports.Decipheriv = aes.Decipheriv
        exports.createDecipheriv = aes.createDecipheriv
        exports.getCiphers = aes.getCiphers
        exports.listCiphers = aes.listCiphers

        var dh = require('diffie-hellman')

        exports.DiffieHellmanGroup = dh.DiffieHellmanGroup
        exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup
        exports.getDiffieHellman = dh.getDiffieHellman
        exports.createDiffieHellman = dh.createDiffieHellman
        exports.DiffieHellman = dh.DiffieHellman

        var sign = require('browserify-sign')

        exports.createSign = sign.createSign
        exports.Sign = sign.Sign
        exports.createVerify = sign.createVerify
        exports.Verify = sign.Verify

        exports.createECDH = require('create-ecdh')

        var publicEncrypt = require('public-encrypt')

        exports.publicEncrypt = publicEncrypt.publicEncrypt
        exports.privateEncrypt = publicEncrypt.privateEncrypt
        exports.publicDecrypt = publicEncrypt.publicDecrypt
        exports.privateDecrypt = publicEncrypt.privateDecrypt

// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })

        var rf = require('randomfill')

        exports.randomFill = rf.randomFill
        exports.randomFillSync = rf.randomFillSync

        exports.createCredentials = function () {
            throw new Error([
                'sorry, createCredentials is not implemented yet',
                'we accept pull requests',
                'https://github.com/crypto-browserify/crypto-browserify'
            ].join('\n'))
        }

        exports.constants = {
            'DH_CHECK_P_NOT_SAFE_PRIME': 2,
            'DH_CHECK_P_NOT_PRIME': 1,
            'DH_UNABLE_TO_CHECK_GENERATOR': 4,
            'DH_NOT_SUITABLE_GENERATOR': 8,
            'NPN_ENABLED': 1,
            'ALPN_ENABLED': 1,
            'RSA_PKCS1_PADDING': 1,
            'RSA_SSLV23_PADDING': 2,
            'RSA_NO_PADDING': 3,
            'RSA_PKCS1_OAEP_PADDING': 4,
            'RSA_X931_PADDING': 5,
            'RSA_PKCS1_PSS_PADDING': 6,
            'POINT_CONVERSION_COMPRESSED': 2,
            'POINT_CONVERSION_UNCOMPRESSED': 4,
            'POINT_CONVERSION_HYBRID': 6
        }

    },{"browserify-cipher":42,"browserify-sign":49,"browserify-sign/algos":46,"create-ecdh":73,"create-hash":74,"create-hmac":76,"diffie-hellman":88,"pbkdf2":152,"public-encrypt":160,"randombytes":166,"randomfill":167}],79:[function(require,module,exports){
        exports.UINT32 = require('./lib/uint32')
        exports.UINT64 = require('./lib/uint64')
    },{"./lib/uint32":80,"./lib/uint64":81}],80:[function(require,module,exports){
        /**
         C-like unsigned 32 bits integers in Javascript
         Copyright (C) 2013, Pierre Curto
         MIT license
         */
        ;(function (root) {

            // Local cache for typical radices
            var radixPowerCache = {
                36: UINT32( Math.pow(36, 5) )
                ,	16: UINT32( Math.pow(16, 7) )
                ,	10: UINT32( Math.pow(10, 9) )
                ,	2:  UINT32( Math.pow(2, 30) )
            }
            var radixCache = {
                36: UINT32(36)
                ,	16: UINT32(16)
                ,	10: UINT32(10)
                ,	2:  UINT32(2)
            }

            /**
             *	Represents an unsigned 32 bits integer
             * @constructor
             * @param {Number|String|Number} low bits     | integer as a string 		 | integer as a number
             * @param {Number|Number|Undefined} high bits | radix (optional, default=10)
             * @return
             */
            function UINT32 (l, h) {
                if ( !(this instanceof UINT32) )
                    return new UINT32(l, h)

                this._low = 0
                this._high = 0
                this.remainder = null
                if (typeof h == 'undefined')
                    return fromNumber.call(this, l)

                if (typeof l == 'string')
                    return fromString.call(this, l, h)

                fromBits.call(this, l, h)
            }

            /**
             * Set the current _UINT32_ object with its low and high bits
             * @method fromBits
             * @param {Number} low bits
             * @param {Number} high bits
             * @return ThisExpression
             */
            function fromBits (l, h) {
                this._low = l | 0
                this._high = h | 0

                return this
            }
            UINT32.prototype.fromBits = fromBits

            /**
             * Set the current _UINT32_ object from a number
             * @method fromNumber
             * @param {Number} number
             * @return ThisExpression
             */
            function fromNumber (value) {
                this._low = value & 0xFFFF
                this._high = value >>> 16

                return this
            }
            UINT32.prototype.fromNumber = fromNumber

            /**
             * Set the current _UINT32_ object from a string
             * @method fromString
             * @param {String} integer as a string
             * @param {Number} radix (optional, default=10)
             * @return ThisExpression
             */
            function fromString (s, radix) {
                var value = parseInt(s, radix || 10)

                this._low = value & 0xFFFF
                this._high = value >>> 16

                return this
            }
            UINT32.prototype.fromString = fromString

            /**
             * Convert this _UINT32_ to a number
             * @method toNumber
             * @return {Number} the converted UINT32
             */
            UINT32.prototype.toNumber = function () {
                return (this._high * 65536) + this._low
            }

            /**
             * Convert this _UINT32_ to a string
             * @method toString
             * @param {Number} radix (optional, default=10)
             * @return {String} the converted UINT32
             */
            UINT32.prototype.toString = function (radix) {
                return this.toNumber().toString(radix || 10)
            }

            /**
             * Add two _UINT32_. The current _UINT32_ stores the result
             * @method add
             * @param {Object} other UINT32
             * @return ThisExpression
             */
            UINT32.prototype.add = function (other) {
                var a00 = this._low + other._low
                var a16 = a00 >>> 16

                a16 += this._high + other._high

                this._low = a00 & 0xFFFF
                this._high = a16 & 0xFFFF

                return this
            }

            /**
             * Subtract two _UINT32_. The current _UINT32_ stores the result
             * @method subtract
             * @param {Object} other UINT32
             * @return ThisExpression
             */
            UINT32.prototype.subtract = function (other) {
                //TODO inline
                return this.add( other.clone().negate() )
            }

            /**
             * Multiply two _UINT32_. The current _UINT32_ stores the result
             * @method multiply
             * @param {Object} other UINT32
             * @return ThisExpression
             */
            UINT32.prototype.multiply = function (other) {
                /*
			a = a00 + a16
			b = b00 + b16
			a*b = (a00 + a16)(b00 + b16)
				= a00b00 + a00b16 + a16b00 + a16b16

			a16b16 overflows the 32bits
		 */
                var a16 = this._high
                var a00 = this._low
                var b16 = other._high
                var b00 = other._low

                /* Removed to increase speed under normal circumstances (i.e. not multiplying by 0 or 1)
		// this == 0 or other == 1: nothing to do
		if ((a00 == 0 && a16 == 0) || (b00 == 1 && b16 == 0)) return this

		// other == 0 or this == 1: this = other
		if ((b00 == 0 && b16 == 0) || (a00 == 1 && a16 == 0)) {
			this._low = other._low
			this._high = other._high
			return this
		}
*/

                var c16, c00
                c00 = a00 * b00
                c16 = c00 >>> 16

                c16 += a16 * b00
                c16 &= 0xFFFF		// Not required but improves performance
                c16 += a00 * b16

                this._low = c00 & 0xFFFF
                this._high = c16 & 0xFFFF

                return this
            }

            /**
             * Divide two _UINT32_. The current _UINT32_ stores the result.
             * The remainder is made available as the _remainder_ property on
             * the _UINT32_ object. It can be null, meaning there are no remainder.
             * @method div
             * @param {Object} other UINT32
             * @return ThisExpression
             */
            UINT32.prototype.div = function (other) {
                if ( (other._low == 0) && (other._high == 0) ) throw Error('division by zero')

                // other == 1
                if (other._high == 0 && other._low == 1) {
                    this.remainder = new UINT32(0)
                    return this
                }

                // other > this: 0
                if ( other.gt(this) ) {
                    this.remainder = this.clone()
                    this._low = 0
                    this._high = 0
                    return this
                }
                // other == this: 1
                if ( this.eq(other) ) {
                    this.remainder = new UINT32(0)
                    this._low = 1
                    this._high = 0
                    return this
                }

                // Shift the divisor left until it is higher than the dividend
                var _other = other.clone()
                var i = -1
                while ( !this.lt(_other) ) {
                    // High bit can overflow the default 16bits
                    // Its ok since we right shift after this loop
                    // The overflown bit must be kept though
                    _other.shiftLeft(1, true)
                    i++
                }

                // Set the remainder
                this.remainder = this.clone()
                // Initialize the current result to 0
                this._low = 0
                this._high = 0
                for (; i >= 0; i--) {
                    _other.shiftRight(1)
                    // If shifted divisor is smaller than the dividend
                    // then subtract it from the dividend
                    if ( !this.remainder.lt(_other) ) {
                        this.remainder.subtract(_other)
                        // Update the current result
                        if (i >= 16) {
                            this._high |= 1 << (i - 16)
                        } else {
                            this._low |= 1 << i
                        }
                    }
                }

                return this
            }

            /**
             * Negate the current _UINT32_
             * @method negate
             * @return ThisExpression
             */
            UINT32.prototype.negate = function () {
                var v = ( ~this._low & 0xFFFF ) + 1
                this._low = v & 0xFFFF
                this._high = (~this._high + (v >>> 16)) & 0xFFFF

                return this
            }

            /**
             * Equals
             * @method eq
             * @param {Object} other UINT32
             * @return {Boolean}
             */
            UINT32.prototype.equals = UINT32.prototype.eq = function (other) {
                return (this._low == other._low) && (this._high == other._high)
            }

            /**
             * Greater than (strict)
             * @method gt
             * @param {Object} other UINT32
             * @return {Boolean}
             */
            UINT32.prototype.greaterThan = UINT32.prototype.gt = function (other) {
                if (this._high > other._high) return true
                if (this._high < other._high) return false
                return this._low > other._low
            }

            /**
             * Less than (strict)
             * @method lt
             * @param {Object} other UINT32
             * @return {Boolean}
             */
            UINT32.prototype.lessThan = UINT32.prototype.lt = function (other) {
                if (this._high < other._high) return true
                if (this._high > other._high) return false
                return this._low < other._low
            }

            /**
             * Bitwise OR
             * @method or
             * @param {Object} other UINT32
             * @return ThisExpression
             */
            UINT32.prototype.or = function (other) {
                this._low |= other._low
                this._high |= other._high

                return this
            }

            /**
             * Bitwise AND
             * @method and
             * @param {Object} other UINT32
             * @return ThisExpression
             */
            UINT32.prototype.and = function (other) {
                this._low &= other._low
                this._high &= other._high

                return this
            }

            /**
             * Bitwise NOT
             * @method not
             * @return ThisExpression
             */
            UINT32.prototype.not = function() {
                this._low = ~this._low & 0xFFFF
                this._high = ~this._high & 0xFFFF

                return this
            }

            /**
             * Bitwise XOR
             * @method xor
             * @param {Object} other UINT32
             * @return ThisExpression
             */
            UINT32.prototype.xor = function (other) {
                this._low ^= other._low
                this._high ^= other._high

                return this
            }

            /**
             * Bitwise shift right
             * @method shiftRight
             * @param {Number} number of bits to shift
             * @return ThisExpression
             */
            UINT32.prototype.shiftRight = UINT32.prototype.shiftr = function (n) {
                if (n > 16) {
                    this._low = this._high >> (n - 16)
                    this._high = 0
                } else if (n == 16) {
                    this._low = this._high
                    this._high = 0
                } else {
                    this._low = (this._low >> n) | ( (this._high << (16-n)) & 0xFFFF )
                    this._high >>= n
                }

                return this
            }

            /**
             * Bitwise shift left
             * @method shiftLeft
             * @param {Number} number of bits to shift
             * @param {Boolean} allow overflow
             * @return ThisExpression
             */
            UINT32.prototype.shiftLeft = UINT32.prototype.shiftl = function (n, allowOverflow) {
                if (n > 16) {
                    this._high = this._low << (n - 16)
                    this._low = 0
                    if (!allowOverflow) {
                        this._high &= 0xFFFF
                    }
                } else if (n == 16) {
                    this._high = this._low
                    this._low = 0
                } else {
                    this._high = (this._high << n) | (this._low >> (16-n))
                    this._low = (this._low << n) & 0xFFFF
                    if (!allowOverflow) {
                        // Overflow only allowed on the high bits...
                        this._high &= 0xFFFF
                    }
                }

                return this
            }

            /**
             * Bitwise rotate left
             * @method rotl
             * @param {Number} number of bits to rotate
             * @return ThisExpression
             */
            UINT32.prototype.rotateLeft = UINT32.prototype.rotl = function (n) {
                var v = (this._high << 16) | this._low
                v = (v << n) | (v >>> (32 - n))
                this._low = v & 0xFFFF
                this._high = v >>> 16

                return this
            }

            /**
             * Bitwise rotate right
             * @method rotr
             * @param {Number} number of bits to rotate
             * @return ThisExpression
             */
            UINT32.prototype.rotateRight = UINT32.prototype.rotr = function (n) {
                var v = (this._high << 16) | this._low
                v = (v >>> n) | (v << (32 - n))
                this._low = v & 0xFFFF
                this._high = v >>> 16

                return this
            }

            /**
             * Clone the current _UINT32_
             * @method clone
             * @return {Object} cloned UINT32
             */
            UINT32.prototype.clone = function () {
                return new UINT32(this._low, this._high)
            }

            if (typeof define != 'undefined' && define.amd) {
                // AMD / RequireJS
                define([], function () {
                    return UINT32
                })
            } else if (typeof module != 'undefined' && module.exports) {
                // Node.js
                module.exports = UINT32
            } else {
                // Browser
                root['UINT32'] = UINT32
            }

        })(this)

    },{}],81:[function(require,module,exports){
        /**
         C-like unsigned 64 bits integers in Javascript
         Copyright (C) 2013, Pierre Curto
         MIT license
         */
        ;(function (root) {

            // Local cache for typical radices
            var radixPowerCache = {
                16: UINT64( Math.pow(16, 5) )
                ,	10: UINT64( Math.pow(10, 5) )
                ,	2:  UINT64( Math.pow(2, 5) )
            }
            var radixCache = {
                16: UINT64(16)
                ,	10: UINT64(10)
                ,	2:  UINT64(2)
            }

            /**
             *	Represents an unsigned 64 bits integer
             * @constructor
             * @param {Number} first low bits (8)
             * @param {Number} second low bits (8)
             * @param {Number} first high bits (8)
             * @param {Number} second high bits (8)
             * or
             * @param {Number} low bits (32)
             * @param {Number} high bits (32)
             * or
             * @param {String|Number} integer as a string 		 | integer as a number
             * @param {Number|Undefined} radix (optional, default=10)
             * @return
             */
            function UINT64 (a00, a16, a32, a48) {
                if ( !(this instanceof UINT64) )
                    return new UINT64(a00, a16, a32, a48)

                this.remainder = null
                if (typeof a00 == 'string')
                    return fromString.call(this, a00, a16)

                if (typeof a16 == 'undefined')
                    return fromNumber.call(this, a00)

                fromBits.apply(this, arguments)
            }

            /**
             * Set the current _UINT64_ object with its low and high bits
             * @method fromBits
             * @param {Number} first low bits (8)
             * @param {Number} second low bits (8)
             * @param {Number} first high bits (8)
             * @param {Number} second high bits (8)
             * or
             * @param {Number} low bits (32)
             * @param {Number} high bits (32)
             * @return ThisExpression
             */
            function fromBits (a00, a16, a32, a48) {
                if (typeof a32 == 'undefined') {
                    this._a00 = a00 & 0xFFFF
                    this._a16 = a00 >>> 16
                    this._a32 = a16 & 0xFFFF
                    this._a48 = a16 >>> 16
                    return this
                }

                this._a00 = a00 | 0
                this._a16 = a16 | 0
                this._a32 = a32 | 0
                this._a48 = a48 | 0

                return this
            }
            UINT64.prototype.fromBits = fromBits

            /**
             * Set the current _UINT64_ object from a number
             * @method fromNumber
             * @param {Number} number
             * @return ThisExpression
             */
            function fromNumber (value) {
                this._a00 = value & 0xFFFF
                this._a16 = value >>> 16
                this._a32 = 0
                this._a48 = 0

                return this
            }
            UINT64.prototype.fromNumber = fromNumber

            /**
             * Set the current _UINT64_ object from a string
             * @method fromString
             * @param {String} integer as a string
             * @param {Number} radix (optional, default=10)
             * @return ThisExpression
             */
            function fromString (s, radix) {
                radix = radix || 10

                this._a00 = 0
                this._a16 = 0
                this._a32 = 0
                this._a48 = 0

                /*
			In Javascript, bitwise operators only operate on the first 32 bits
			of a number, even though parseInt() encodes numbers with a 53 bits
			mantissa.
			Therefore UINT64(<Number>) can only work on 32 bits.
			The radix maximum value is 36 (as per ECMA specs) (26 letters + 10 digits)
			maximum input value is m = 32bits as 1 = 2^32 - 1
			So the maximum substring length n is:
			36^(n+1) - 1 = 2^32 - 1
			36^(n+1) = 2^32
			(n+1)ln(36) = 32ln(2)
			n = 32ln(2)/ln(36) - 1
			n = 5.189644915687692
			n = 5
		 */
                var radixUint = radixPowerCache[radix] || new UINT64( Math.pow(radix, 5) )

                for (var i = 0, len = s.length; i < len; i += 5) {
                    var size = Math.min(5, len - i)
                    var value = parseInt( s.slice(i, i + size), radix )
                    this.multiply(
                        size < 5
                            ? new UINT64( Math.pow(radix, size) )
                            : radixUint
                    )
                        .add( new UINT64(value) )
                }

                return this
            }
            UINT64.prototype.fromString = fromString

            /**
             * Convert this _UINT64_ to a number (last 32 bits are dropped)
             * @method toNumber
             * @return {Number} the converted UINT64
             */
            UINT64.prototype.toNumber = function () {
                return (this._a16 * 65536) + this._a00
            }

            /**
             * Convert this _UINT64_ to a string
             * @method toString
             * @param {Number} radix (optional, default=10)
             * @return {String} the converted UINT64
             */
            UINT64.prototype.toString = function (radix) {
                radix = radix || 10
                var radixUint = radixCache[radix] || new UINT64(radix)

                if ( !this.gt(radixUint) ) return this.toNumber().toString(radix)

                var self = this.clone()
                var res = new Array(64)
                for (var i = 63; i >= 0; i--) {
                    self.div(radixUint)
                    res[i] = self.remainder.toNumber().toString(radix)
                    if ( !self.gt(radixUint) ) break
                }
                res[i-1] = self.toNumber().toString(radix)

                return res.join('')
            }

            /**
             * Add two _UINT64_. The current _UINT64_ stores the result
             * @method add
             * @param {Object} other UINT64
             * @return ThisExpression
             */
            UINT64.prototype.add = function (other) {
                var a00 = this._a00 + other._a00

                var a16 = a00 >>> 16
                a16 += this._a16 + other._a16

                var a32 = a16 >>> 16
                a32 += this._a32 + other._a32

                var a48 = a32 >>> 16
                a48 += this._a48 + other._a48

                this._a00 = a00 & 0xFFFF
                this._a16 = a16 & 0xFFFF
                this._a32 = a32 & 0xFFFF
                this._a48 = a48 & 0xFFFF

                return this
            }

            /**
             * Subtract two _UINT64_. The current _UINT64_ stores the result
             * @method subtract
             * @param {Object} other UINT64
             * @return ThisExpression
             */
            UINT64.prototype.subtract = function (other) {
                return this.add( other.clone().negate() )
            }

            /**
             * Multiply two _UINT64_. The current _UINT64_ stores the result
             * @method multiply
             * @param {Object} other UINT64
             * @return ThisExpression
             */
            UINT64.prototype.multiply = function (other) {
                /*
			a = a00 + a16 + a32 + a48
			b = b00 + b16 + b32 + b48
			a*b = (a00 + a16 + a32 + a48)(b00 + b16 + b32 + b48)
				= a00b00 + a00b16 + a00b32 + a00b48
				+ a16b00 + a16b16 + a16b32 + a16b48
				+ a32b00 + a32b16 + a32b32 + a32b48
				+ a48b00 + a48b16 + a48b32 + a48b48

			a16b48, a32b32, a48b16, a48b32 and a48b48 overflow the 64 bits
			so it comes down to:
			a*b	= a00b00 + a00b16 + a00b32 + a00b48
				+ a16b00 + a16b16 + a16b32
				+ a32b00 + a32b16
				+ a48b00
				= a00b00
				+ a00b16 + a16b00
				+ a00b32 + a16b16 + a32b00
				+ a00b48 + a16b32 + a32b16 + a48b00
		 */
                var a00 = this._a00
                var a16 = this._a16
                var a32 = this._a32
                var a48 = this._a48
                var b00 = other._a00
                var b16 = other._a16
                var b32 = other._a32
                var b48 = other._a48

                var c00 = a00 * b00

                var c16 = c00 >>> 16
                c16 += a00 * b16
                var c32 = c16 >>> 16
                c16 &= 0xFFFF
                c16 += a16 * b00

                c32 += c16 >>> 16
                c32 += a00 * b32
                var c48 = c32 >>> 16
                c32 &= 0xFFFF
                c32 += a16 * b16
                c48 += c32 >>> 16
                c32 &= 0xFFFF
                c32 += a32 * b00

                c48 += c32 >>> 16
                c48 += a00 * b48
                c48 &= 0xFFFF
                c48 += a16 * b32
                c48 &= 0xFFFF
                c48 += a32 * b16
                c48 &= 0xFFFF
                c48 += a48 * b00

                this._a00 = c00 & 0xFFFF
                this._a16 = c16 & 0xFFFF
                this._a32 = c32 & 0xFFFF
                this._a48 = c48 & 0xFFFF

                return this
            }

            /**
             * Divide two _UINT64_. The current _UINT64_ stores the result.
             * The remainder is made available as the _remainder_ property on
             * the _UINT64_ object. It can be null, meaning there are no remainder.
             * @method div
             * @param {Object} other UINT64
             * @return ThisExpression
             */
            UINT64.prototype.div = function (other) {
                if ( (other._a16 == 0) && (other._a32 == 0) && (other._a48 == 0) ) {
                    if (other._a00 == 0) throw Error('division by zero')

                    // other == 1: this
                    if (other._a00 == 1) {
                        this.remainder = new UINT64(0)
                        return this
                    }
                }

                // other > this: 0
                if ( other.gt(this) ) {
                    this.remainder = this.clone()
                    this._a00 = 0
                    this._a16 = 0
                    this._a32 = 0
                    this._a48 = 0
                    return this
                }
                // other == this: 1
                if ( this.eq(other) ) {
                    this.remainder = new UINT64(0)
                    this._a00 = 1
                    this._a16 = 0
                    this._a32 = 0
                    this._a48 = 0
                    return this
                }

                // Shift the divisor left until it is higher than the dividend
                var _other = other.clone()
                var i = -1
                while ( !this.lt(_other) ) {
                    // High bit can overflow the default 16bits
                    // Its ok since we right shift after this loop
                    // The overflown bit must be kept though
                    _other.shiftLeft(1, true)
                    i++
                }

                // Set the remainder
                this.remainder = this.clone()
                // Initialize the current result to 0
                this._a00 = 0
                this._a16 = 0
                this._a32 = 0
                this._a48 = 0
                for (; i >= 0; i--) {
                    _other.shiftRight(1)
                    // If shifted divisor is smaller than the dividend
                    // then subtract it from the dividend
                    if ( !this.remainder.lt(_other) ) {
                        this.remainder.subtract(_other)
                        // Update the current result
                        if (i >= 48) {
                            this._a48 |= 1 << (i - 48)
                        } else if (i >= 32) {
                            this._a32 |= 1 << (i - 32)
                        } else if (i >= 16) {
                            this._a16 |= 1 << (i - 16)
                        } else {
                            this._a00 |= 1 << i
                        }
                    }
                }

                return this
            }

            /**
             * Negate the current _UINT64_
             * @method negate
             * @return ThisExpression
             */
            UINT64.prototype.negate = function () {
                var v = ( ~this._a00 & 0xFFFF ) + 1
                this._a00 = v & 0xFFFF
                v = (~this._a16 & 0xFFFF) + (v >>> 16)
                this._a16 = v & 0xFFFF
                v = (~this._a32 & 0xFFFF) + (v >>> 16)
                this._a32 = v & 0xFFFF
                this._a48 = (~this._a48 + (v >>> 16)) & 0xFFFF

                return this
            }

            /**

             * @method eq
             * @param {Object} other UINT64
             * @return {Boolean}
             */
            UINT64.prototype.equals = UINT64.prototype.eq = function (other) {
                return (this._a48 == other._a48) && (this._a00 == other._a00)
                    && (this._a32 == other._a32) && (this._a16 == other._a16)
            }

            /**
             * Greater than (strict)
             * @method gt
             * @param {Object} other UINT64
             * @return {Boolean}
             */
            UINT64.prototype.greaterThan = UINT64.prototype.gt = function (other) {
                if (this._a48 > other._a48) return true
                if (this._a48 < other._a48) return false
                if (this._a32 > other._a32) return true
                if (this._a32 < other._a32) return false
                if (this._a16 > other._a16) return true
                if (this._a16 < other._a16) return false
                return this._a00 > other._a00
            }

            /**
             * Less than (strict)
             * @method lt
             * @param {Object} other UINT64
             * @return {Boolean}
             */
            UINT64.prototype.lessThan = UINT64.prototype.lt = function (other) {
                if (this._a48 < other._a48) return true
                if (this._a48 > other._a48) return false
                if (this._a32 < other._a32) return true
                if (this._a32 > other._a32) return false
                if (this._a16 < other._a16) return true
                if (this._a16 > other._a16) return false
                return this._a00 < other._a00
            }

            /**
             * Bitwise OR
             * @method or
             * @param {Object} other UINT64
             * @return ThisExpression
             */
            UINT64.prototype.or = function (other) {
                this._a00 |= other._a00
                this._a16 |= other._a16
                this._a32 |= other._a32
                this._a48 |= other._a48

                return this
            }

            /**
             * Bitwise AND
             * @method and
             * @param {Object} other UINT64
             * @return ThisExpression
             */
            UINT64.prototype.and = function (other) {
                this._a00 &= other._a00
                this._a16 &= other._a16
                this._a32 &= other._a32
                this._a48 &= other._a48

                return this
            }

            /**
             * Bitwise XOR
             * @method xor
             * @param {Object} other UINT64
             * @return ThisExpression
             */
            UINT64.prototype.xor = function (other) {
                this._a00 ^= other._a00
                this._a16 ^= other._a16
                this._a32 ^= other._a32
                this._a48 ^= other._a48

                return this
            }

            /**
             * Bitwise NOT
             * @method not
             * @return ThisExpression
             */
            UINT64.prototype.not = function() {
                this._a00 = ~this._a00 & 0xFFFF
                this._a16 = ~this._a16 & 0xFFFF
                this._a32 = ~this._a32 & 0xFFFF
                this._a48 = ~this._a48 & 0xFFFF

                return this
            }

            /**
             * Bitwise shift right
             * @method shiftRight
             * @param {Number} number of bits to shift
             * @return ThisExpression
             */
            UINT64.prototype.shiftRight = UINT64.prototype.shiftr = function (n) {
                n %= 64
                if (n >= 48) {
                    this._a00 = this._a48 >> (n - 48)
                    this._a16 = 0
                    this._a32 = 0
                    this._a48 = 0
                } else if (n >= 32) {
                    n -= 32
                    this._a00 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF
                    this._a16 = (this._a48 >> n) & 0xFFFF
                    this._a32 = 0
                    this._a48 = 0
                } else if (n >= 16) {
                    n -= 16
                    this._a00 = ( (this._a16 >> n) | (this._a32 << (16-n)) ) & 0xFFFF
                    this._a16 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF
                    this._a32 = (this._a48 >> n) & 0xFFFF
                    this._a48 = 0
                } else {
                    this._a00 = ( (this._a00 >> n) | (this._a16 << (16-n)) ) & 0xFFFF
                    this._a16 = ( (this._a16 >> n) | (this._a32 << (16-n)) ) & 0xFFFF
                    this._a32 = ( (this._a32 >> n) | (this._a48 << (16-n)) ) & 0xFFFF
                    this._a48 = (this._a48 >> n) & 0xFFFF
                }

                return this
            }

            /**
             * Bitwise shift left
             * @method shiftLeft
             * @param {Number} number of bits to shift
             * @param {Boolean} allow overflow
             * @return ThisExpression
             */
            UINT64.prototype.shiftLeft = UINT64.prototype.shiftl = function (n, allowOverflow) {
                n %= 64
                if (n >= 48) {
                    this._a48 = this._a00 << (n - 48)
                    this._a32 = 0
                    this._a16 = 0
                    this._a00 = 0
                } else if (n >= 32) {
                    n -= 32
                    this._a48 = (this._a16 << n) | (this._a00 >> (16-n))
                    this._a32 = (this._a00 << n) & 0xFFFF
                    this._a16 = 0
                    this._a00 = 0
                } else if (n >= 16) {
                    n -= 16
                    this._a48 = (this._a32 << n) | (this._a16 >> (16-n))
                    this._a32 = ( (this._a16 << n) | (this._a00 >> (16-n)) ) & 0xFFFF
                    this._a16 = (this._a00 << n) & 0xFFFF
                    this._a00 = 0
                } else {
                    this._a48 = (this._a48 << n) | (this._a32 >> (16-n))
                    this._a32 = ( (this._a32 << n) | (this._a16 >> (16-n)) ) & 0xFFFF
                    this._a16 = ( (this._a16 << n) | (this._a00 >> (16-n)) ) & 0xFFFF
                    this._a00 = (this._a00 << n) & 0xFFFF
                }
                if (!allowOverflow) {
                    this._a48 &= 0xFFFF
                }

                return this
            }

            /**
             * Bitwise rotate left
             * @method rotl
             * @param {Number} number of bits to rotate
             * @return ThisExpression
             */
            UINT64.prototype.rotateLeft = UINT64.prototype.rotl = function (n) {
                n %= 64
                if (n == 0) return this
                if (n >= 32) {
                    // A.B.C.D
                    // B.C.D.A rotl(16)
                    // C.D.A.B rotl(32)
                    var v = this._a00
                    this._a00 = this._a32
                    this._a32 = v
                    v = this._a48
                    this._a48 = this._a16
                    this._a16 = v
                    if (n == 32) return this
                    n -= 32
                }

                var high = (this._a48 << 16) | this._a32
                var low = (this._a16 << 16) | this._a00

                var _high = (high << n) | (low >>> (32 - n))
                var _low = (low << n) | (high >>> (32 - n))

                this._a00 = _low & 0xFFFF
                this._a16 = _low >>> 16
                this._a32 = _high & 0xFFFF
                this._a48 = _high >>> 16

                return this
            }

            /**
             * Bitwise rotate right
             * @method rotr
             * @param {Number} number of bits to rotate
             * @return ThisExpression
             */
            UINT64.prototype.rotateRight = UINT64.prototype.rotr = function (n) {
                n %= 64
                if (n == 0) return this
                if (n >= 32) {
                    // A.B.C.D
                    // D.A.B.C rotr(16)
                    // C.D.A.B rotr(32)
                    var v = this._a00
                    this._a00 = this._a32
                    this._a32 = v
                    v = this._a48
                    this._a48 = this._a16
                    this._a16 = v
                    if (n == 32) return this
                    n -= 32
                }

                var high = (this._a48 << 16) | this._a32
                var low = (this._a16 << 16) | this._a00

                var _high = (high >>> n) | (low << (32 - n))
                var _low = (low >>> n) | (high << (32 - n))

                this._a00 = _low & 0xFFFF
                this._a16 = _low >>> 16
                this._a32 = _high & 0xFFFF
                this._a48 = _high >>> 16

                return this
            }

            /**
             * Clone the current _UINT64_
             * @method clone
             * @return {Object} cloned UINT64
             */
            UINT64.prototype.clone = function () {
                return new UINT64(this._a00, this._a16, this._a32, this._a48)
            }

            if (typeof define != 'undefined' && define.amd) {
                // AMD / RequireJS
                define([], function () {
                    return UINT64
                })
            } else if (typeof module != 'undefined' && module.exports) {
                // Node.js
                module.exports = UINT64
            } else {
                // Browser
                root['UINT64'] = UINT64
            }

        })(this)

    },{}],82:[function(require,module,exports){
        'use strict';

        exports.utils = require('./des/utils');
        exports.Cipher = require('./des/cipher');
        exports.DES = require('./des/des');
        exports.CBC = require('./des/cbc');
        exports.EDE = require('./des/ede');

    },{"./des/cbc":83,"./des/cipher":84,"./des/des":85,"./des/ede":86,"./des/utils":87}],83:[function(require,module,exports){
        'use strict';

        var assert = require('minimalistic-assert');
        var inherits = require('inherits');

        var proto = {};

        function CBCState(iv) {
            assert.equal(iv.length, 8, 'Invalid IV length');

            this.iv = new Array(8);
            for (var i = 0; i < this.iv.length; i++)
                this.iv[i] = iv[i];
        }

        function instantiate(Base) {
            function CBC(options) {
                Base.call(this, options);
                this._cbcInit();
            }
            inherits(CBC, Base);

            var keys = Object.keys(proto);
            for (var i = 0; i < keys.length; i++) {
                var key = keys[i];
                CBC.prototype[key] = proto[key];
            }

            CBC.create = function create(options) {
                return new CBC(options);
            };

            return CBC;
        }

        exports.instantiate = instantiate;

        proto._cbcInit = function _cbcInit() {
            var state = new CBCState(this.options.iv);
            this._cbcState = state;
        };

        proto._update = function _update(inp, inOff, out, outOff) {
            var state = this._cbcState;
            var superProto = this.constructor.super_.prototype;

            var iv = state.iv;
            if (this.type === 'encrypt') {
                for (var i = 0; i < this.blockSize; i++)
                    iv[i] ^= inp[inOff + i];

                superProto._update.call(this, iv, 0, out, outOff);

                for (var i = 0; i < this.blockSize; i++)
                    iv[i] = out[outOff + i];
            } else {
                superProto._update.call(this, inp, inOff, out, outOff);

                for (var i = 0; i < this.blockSize; i++)
                    out[outOff + i] ^= iv[i];

                for (var i = 0; i < this.blockSize; i++)
                    iv[i] = inp[inOff + i];
            }
        };

    },{"inherits":140,"minimalistic-assert":145}],84:[function(require,module,exports){
        'use strict';

        var assert = require('minimalistic-assert');

        function Cipher(options) {
            this.options = options;

            this.type = this.options.type;
            this.blockSize = 8;
            this._init();

            this.buffer = new Array(this.blockSize);
            this.bufferOff = 0;
        }
        module.exports = Cipher;

        Cipher.prototype._init = function _init() {
            // Might be overrided
        };

        Cipher.prototype.update = function update(data) {
            if (data.length === 0)
                return [];

            if (this.type === 'decrypt')
                return this._updateDecrypt(data);
            else
                return this._updateEncrypt(data);
        };

        Cipher.prototype._buffer = function _buffer(data, off) {
            // Append data to buffer
            var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
            for (var i = 0; i < min; i++)
                this.buffer[this.bufferOff + i] = data[off + i];
            this.bufferOff += min;

            // Shift next
            return min;
        };

        Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
            this._update(this.buffer, 0, out, off);
            this.bufferOff = 0;
            return this.blockSize;
        };

        Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
            var inputOff = 0;
            var outputOff = 0;

            var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
            var out = new Array(count * this.blockSize);

            if (this.bufferOff !== 0) {
                inputOff += this._buffer(data, inputOff);

                if (this.bufferOff === this.buffer.length)
                    outputOff += this._flushBuffer(out, outputOff);
            }

            // Write blocks
            var max = data.length - ((data.length - inputOff) % this.blockSize);
            for (; inputOff < max; inputOff += this.blockSize) {
                this._update(data, inputOff, out, outputOff);
                outputOff += this.blockSize;
            }

            // Queue rest
            for (; inputOff < data.length; inputOff++, this.bufferOff++)
                this.buffer[this.bufferOff] = data[inputOff];

            return out;
        };

        Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
            var inputOff = 0;
            var outputOff = 0;

            var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
            var out = new Array(count * this.blockSize);

            // TODO(indutny): optimize it, this is far from optimal
            for (; count > 0; count--) {
                inputOff += this._buffer(data, inputOff);
                outputOff += this._flushBuffer(out, outputOff);
            }

            // Buffer rest of the input
            inputOff += this._buffer(data, inputOff);

            return out;
        };

        Cipher.prototype.final = function final(buffer) {
            var first;
            if (buffer)
                first = this.update(buffer);

            var last;
            if (this.type === 'encrypt')
                last = this._finalEncrypt();
            else
                last = this._finalDecrypt();

            if (first)
                return first.concat(last);
            else
                return last;
        };

        Cipher.prototype._pad = function _pad(buffer, off) {
            if (off === 0)
                return false;

            while (off < buffer.length)
                buffer[off++] = 0;

            return true;
        };

        Cipher.prototype._finalEncrypt = function _finalEncrypt() {
            if (!this._pad(this.buffer, this.bufferOff))
                return [];

            var out = new Array(this.blockSize);
            this._update(this.buffer, 0, out, 0);
            return out;
        };

        Cipher.prototype._unpad = function _unpad(buffer) {
            return buffer;
        };

        Cipher.prototype._finalDecrypt = function _finalDecrypt() {
            assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
            var out = new Array(this.blockSize);
            this._flushBuffer(out, 0);

            return this._unpad(out);
        };

    },{"minimalistic-assert":145}],85:[function(require,module,exports){
        'use strict';

        var assert = require('minimalistic-assert');
        var inherits = require('inherits');

        var utils = require('./utils');
        var Cipher = require('./cipher');

        function DESState() {
            this.tmp = new Array(2);
            this.keys = null;
        }

        function DES(options) {
            Cipher.call(this, options);

            var state = new DESState();
            this._desState = state;

            this.deriveKeys(state, options.key);
        }
        inherits(DES, Cipher);
        module.exports = DES;

        DES.create = function create(options) {
            return new DES(options);
        };

        var shiftTable = [
            1, 1, 2, 2, 2, 2, 2, 2,
            1, 2, 2, 2, 2, 2, 2, 1
        ];

        DES.prototype.deriveKeys = function deriveKeys(state, key) {
            state.keys = new Array(16 * 2);

            assert.equal(key.length, this.blockSize, 'Invalid key length');

            var kL = utils.readUInt32BE(key, 0);
            var kR = utils.readUInt32BE(key, 4);

            utils.pc1(kL, kR, state.tmp, 0);
            kL = state.tmp[0];
            kR = state.tmp[1];
            for (var i = 0; i < state.keys.length; i += 2) {
                var shift = shiftTable[i >>> 1];
                kL = utils.r28shl(kL, shift);
                kR = utils.r28shl(kR, shift);
                utils.pc2(kL, kR, state.keys, i);
            }
        };

        DES.prototype._update = function _update(inp, inOff, out, outOff) {
            var state = this._desState;

            var l = utils.readUInt32BE(inp, inOff);
            var r = utils.readUInt32BE(inp, inOff + 4);

            // Initial Permutation
            utils.ip(l, r, state.tmp, 0);
            l = state.tmp[0];
            r = state.tmp[1];

            if (this.type === 'encrypt')
                this._encrypt(state, l, r, state.tmp, 0);
            else
                this._decrypt(state, l, r, state.tmp, 0);

            l = state.tmp[0];
            r = state.tmp[1];

            utils.writeUInt32BE(out, l, outOff);
            utils.writeUInt32BE(out, r, outOff + 4);
        };

        DES.prototype._pad = function _pad(buffer, off) {
            var value = buffer.length - off;
            for (var i = off; i < buffer.length; i++)
                buffer[i] = value;

            return true;
        };

        DES.prototype._unpad = function _unpad(buffer) {
            var pad = buffer[buffer.length - 1];
            for (var i = buffer.length - pad; i < buffer.length; i++)
                assert.equal(buffer[i], pad);

            return buffer.slice(0, buffer.length - pad);
        };

        DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
            var l = lStart;
            var r = rStart;

            // Apply f() x16 times
            for (var i = 0; i < state.keys.length; i += 2) {
                var keyL = state.keys[i];
                var keyR = state.keys[i + 1];

                // f(r, k)
                utils.expand(r, state.tmp, 0);

                keyL ^= state.tmp[0];
                keyR ^= state.tmp[1];
                var s = utils.substitute(keyL, keyR);
                var f = utils.permute(s);

                var t = r;
                r = (l ^ f) >>> 0;
                l = t;
            }

            // Reverse Initial Permutation
            utils.rip(r, l, out, off);
        };

        DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
            var l = rStart;
            var r = lStart;

            // Apply f() x16 times
            for (var i = state.keys.length - 2; i >= 0; i -= 2) {
                var keyL = state.keys[i];
                var keyR = state.keys[i + 1];

                // f(r, k)
                utils.expand(l, state.tmp, 0);

                keyL ^= state.tmp[0];
                keyR ^= state.tmp[1];
                var s = utils.substitute(keyL, keyR);
                var f = utils.permute(s);

                var t = l;
                l = (r ^ f) >>> 0;
                r = t;
            }

            // Reverse Initial Permutation
            utils.rip(l, r, out, off);
        };

    },{"./cipher":84,"./utils":87,"inherits":140,"minimalistic-assert":145}],86:[function(require,module,exports){
        'use strict';

        var assert = require('minimalistic-assert');
        var inherits = require('inherits');

        var Cipher = require('./cipher');
        var DES = require('./des');

        function EDEState(type, key) {
            assert.equal(key.length, 24, 'Invalid key length');

            var k1 = key.slice(0, 8);
            var k2 = key.slice(8, 16);
            var k3 = key.slice(16, 24);

            if (type === 'encrypt') {
                this.ciphers = [
                    DES.create({ type: 'encrypt', key: k1 }),
                    DES.create({ type: 'decrypt', key: k2 }),
                    DES.create({ type: 'encrypt', key: k3 })
                ];
            } else {
                this.ciphers = [
                    DES.create({ type: 'decrypt', key: k3 }),
                    DES.create({ type: 'encrypt', key: k2 }),
                    DES.create({ type: 'decrypt', key: k1 })
                ];
            }
        }

        function EDE(options) {
            Cipher.call(this, options);

            var state = new EDEState(this.type, this.options.key);
            this._edeState = state;
        }
        inherits(EDE, Cipher);

        module.exports = EDE;

        EDE.create = function create(options) {
            return new EDE(options);
        };

        EDE.prototype._update = function _update(inp, inOff, out, outOff) {
            var state = this._edeState;

            state.ciphers[0]._update(inp, inOff, out, outOff);
            state.ciphers[1]._update(out, outOff, out, outOff);
            state.ciphers[2]._update(out, outOff, out, outOff);
        };

        EDE.prototype._pad = DES.prototype._pad;
        EDE.prototype._unpad = DES.prototype._unpad;

    },{"./cipher":84,"./des":85,"inherits":140,"minimalistic-assert":145}],87:[function(require,module,exports){
        'use strict';

        exports.readUInt32BE = function readUInt32BE(bytes, off) {
            var res =  (bytes[0 + off] << 24) |
                (bytes[1 + off] << 16) |
                (bytes[2 + off] << 8) |
                bytes[3 + off];
            return res >>> 0;
        };

        exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
            bytes[0 + off] = value >>> 24;
            bytes[1 + off] = (value >>> 16) & 0xff;
            bytes[2 + off] = (value >>> 8) & 0xff;
            bytes[3 + off] = value & 0xff;
        };

        exports.ip = function ip(inL, inR, out, off) {
            var outL = 0;
            var outR = 0;

            for (var i = 6; i >= 0; i -= 2) {
                for (var j = 0; j <= 24; j += 8) {
                    outL <<= 1;
                    outL |= (inR >>> (j + i)) & 1;
                }
                for (var j = 0; j <= 24; j += 8) {
                    outL <<= 1;
                    outL |= (inL >>> (j + i)) & 1;
                }
            }

            for (var i = 6; i >= 0; i -= 2) {
                for (var j = 1; j <= 25; j += 8) {
                    outR <<= 1;
                    outR |= (inR >>> (j + i)) & 1;
                }
                for (var j = 1; j <= 25; j += 8) {
                    outR <<= 1;
                    outR |= (inL >>> (j + i)) & 1;
                }
            }

            out[off + 0] = outL >>> 0;
            out[off + 1] = outR >>> 0;
        };

        exports.rip = function rip(inL, inR, out, off) {
            var outL = 0;
            var outR = 0;

            for (var i = 0; i < 4; i++) {
                for (var j = 24; j >= 0; j -= 8) {
                    outL <<= 1;
                    outL |= (inR >>> (j + i)) & 1;
                    outL <<= 1;
                    outL |= (inL >>> (j + i)) & 1;
                }
            }
            for (var i = 4; i < 8; i++) {
                for (var j = 24; j >= 0; j -= 8) {
                    outR <<= 1;
                    outR |= (inR >>> (j + i)) & 1;
                    outR <<= 1;
                    outR |= (inL >>> (j + i)) & 1;
                }
            }

            out[off + 0] = outL >>> 0;
            out[off + 1] = outR >>> 0;
        };

        exports.pc1 = function pc1(inL, inR, out, off) {
            var outL = 0;
            var outR = 0;

            // 7, 15, 23, 31, 39, 47, 55, 63
            // 6, 14, 22, 30, 39, 47, 55, 63
            // 5, 13, 21, 29, 39, 47, 55, 63
            // 4, 12, 20, 28
            for (var i = 7; i >= 5; i--) {
                for (var j = 0; j <= 24; j += 8) {
                    outL <<= 1;
                    outL |= (inR >> (j + i)) & 1;
                }
                for (var j = 0; j <= 24; j += 8) {
                    outL <<= 1;
                    outL |= (inL >> (j + i)) & 1;
                }
            }
            for (var j = 0; j <= 24; j += 8) {
                outL <<= 1;
                outL |= (inR >> (j + i)) & 1;
            }

            // 1, 9, 17, 25, 33, 41, 49, 57
            // 2, 10, 18, 26, 34, 42, 50, 58
            // 3, 11, 19, 27, 35, 43, 51, 59
            // 36, 44, 52, 60
            for (var i = 1; i <= 3; i++) {
                for (var j = 0; j <= 24; j += 8) {
                    outR <<= 1;
                    outR |= (inR >> (j + i)) & 1;
                }
                for (var j = 0; j <= 24; j += 8) {
                    outR <<= 1;
                    outR |= (inL >> (j + i)) & 1;
                }
            }
            for (var j = 0; j <= 24; j += 8) {
                outR <<= 1;
                outR |= (inL >> (j + i)) & 1;
            }

            out[off + 0] = outL >>> 0;
            out[off + 1] = outR >>> 0;
        };

        exports.r28shl = function r28shl(num, shift) {
            return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
        };

        var pc2table = [
            // inL => outL
            14, 11, 17, 4, 27, 23, 25, 0,
            13, 22, 7, 18, 5, 9, 16, 24,
            2, 20, 12, 21, 1, 8, 15, 26,

            // inR => outR
            15, 4, 25, 19, 9, 1, 26, 16,
            5, 11, 23, 8, 12, 7, 17, 0,
            22, 3, 10, 14, 6, 20, 27, 24
        ];

        exports.pc2 = function pc2(inL, inR, out, off) {
            var outL = 0;
            var outR = 0;

            var len = pc2table.length >>> 1;
            for (var i = 0; i < len; i++) {
                outL <<= 1;
                outL |= (inL >>> pc2table[i]) & 0x1;
            }
            for (var i = len; i < pc2table.length; i++) {
                outR <<= 1;
                outR |= (inR >>> pc2table[i]) & 0x1;
            }

            out[off + 0] = outL >>> 0;
            out[off + 1] = outR >>> 0;
        };

        exports.expand = function expand(r, out, off) {
            var outL = 0;
            var outR = 0;

            outL = ((r & 1) << 5) | (r >>> 27);
            for (var i = 23; i >= 15; i -= 4) {
                outL <<= 6;
                outL |= (r >>> i) & 0x3f;
            }
            for (var i = 11; i >= 3; i -= 4) {
                outR |= (r >>> i) & 0x3f;
                outR <<= 6;
            }
            outR |= ((r & 0x1f) << 1) | (r >>> 31);

            out[off + 0] = outL >>> 0;
            out[off + 1] = outR >>> 0;
        };

        var sTable = [
            14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
            3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
            4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
            15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

            15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
            9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
            0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
            5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

            10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
            1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
            13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
            11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

            7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
            1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
            10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
            15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

            2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
            8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
            4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
            15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

            12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
            0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
            9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
            7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

            4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
            3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
            1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
            10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

            13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
            10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
            7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
            0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
        ];

        exports.substitute = function substitute(inL, inR) {
            var out = 0;
            for (var i = 0; i < 4; i++) {
                var b = (inL >>> (18 - i * 6)) & 0x3f;
                var sb = sTable[i * 0x40 + b];

                out <<= 4;
                out |= sb;
            }
            for (var i = 0; i < 4; i++) {
                var b = (inR >>> (18 - i * 6)) & 0x3f;
                var sb = sTable[4 * 0x40 + i * 0x40 + b];

                out <<= 4;
                out |= sb;
            }
            return out >>> 0;
        };

        var permuteTable = [
            16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
            30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
        ];

        exports.permute = function permute(num) {
            var out = 0;
            for (var i = 0; i < permuteTable.length; i++) {
                out <<= 1;
                out |= (num >>> permuteTable[i]) & 0x1;
            }
            return out >>> 0;
        };

        exports.padSplit = function padSplit(num, size, group) {
            var str = num.toString(2);
            while (str.length < size)
                str = '0' + str;

            var out = [];
            for (var i = 0; i < size; i += group)
                out.push(str.slice(i, i + group));
            return out.join(' ');
        };

    },{}],88:[function(require,module,exports){
        (function (Buffer){
            var generatePrime = require('./lib/generatePrime')
            var primes = require('./lib/primes.json')

            var DH = require('./lib/dh')

            function getDiffieHellman (mod) {
                var prime = new Buffer(primes[mod].prime, 'hex')
                var gen = new Buffer(primes[mod].gen, 'hex')

                return new DH(prime, gen)
            }

            var ENCODINGS = {
                'binary': true, 'hex': true, 'base64': true
            }

            function createDiffieHellman (prime, enc, generator, genc) {
                if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
                    return createDiffieHellman(prime, 'binary', enc, generator)
                }

                enc = enc || 'binary'
                genc = genc || 'binary'
                generator = generator || new Buffer([2])

                if (!Buffer.isBuffer(generator)) {
                    generator = new Buffer(generator, genc)
                }

                if (typeof prime === 'number') {
                    return new DH(generatePrime(prime, generator), generator, true)
                }

                if (!Buffer.isBuffer(prime)) {
                    prime = new Buffer(prime, enc)
                }

                return new DH(prime, generator, true)
            }

            exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
            exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman

        }).call(this,require("buffer").Buffer)
    },{"./lib/dh":89,"./lib/generatePrime":90,"./lib/primes.json":91,"buffer":68}],89:[function(require,module,exports){
        (function (Buffer){
            var BN = require('bn.js');
            var MillerRabin = require('miller-rabin');
            var millerRabin = new MillerRabin();
            var TWENTYFOUR = new BN(24);
            var ELEVEN = new BN(11);
            var TEN = new BN(10);
            var THREE = new BN(3);
            var SEVEN = new BN(7);
            var primes = require('./generatePrime');
            var randomBytes = require('randombytes');
            module.exports = DH;

            function setPublicKey(pub, enc) {
                enc = enc || 'utf8';
                if (!Buffer.isBuffer(pub)) {
                    pub = new Buffer(pub, enc);
                }
                this._pub = new BN(pub);
                return this;
            }

            function setPrivateKey(priv, enc) {
                enc = enc || 'utf8';
                if (!Buffer.isBuffer(priv)) {
                    priv = new Buffer(priv, enc);
                }
                this._priv = new BN(priv);
                return this;
            }

            var primeCache = {};
            function checkPrime(prime, generator) {
                var gen = generator.toString('hex');
                var hex = [gen, prime.toString(16)].join('_');
                if (hex in primeCache) {
                    return primeCache[hex];
                }
                var error = 0;

                if (prime.isEven() ||
                    !primes.simpleSieve ||
                    !primes.fermatTest(prime) ||
                    !millerRabin.test(prime)) {
                    //not a prime so +1
                    error += 1;

                    if (gen === '02' || gen === '05') {
                        // we'd be able to check the generator
                        // it would fail so +8
                        error += 8;
                    } else {
                        //we wouldn't be able to test the generator
                        // so +4
                        error += 4;
                    }
                    primeCache[hex] = error;
                    return error;
                }
                if (!millerRabin.test(prime.shrn(1))) {
                    //not a safe prime
                    error += 2;
                }
                var rem;
                switch (gen) {
                    case '02':
                        if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
                            // unsuidable generator
                            error += 8;
                        }
                        break;
                    case '05':
                        rem = prime.mod(TEN);
                        if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
                            // prime mod 10 needs to equal 3 or 7
                            error += 8;
                        }
                        break;
                    default:
                        error += 4;
                }
                primeCache[hex] = error;
                return error;
            }

            function DH(prime, generator, malleable) {
                this.setGenerator(generator);
                this.__prime = new BN(prime);
                this._prime = BN.mont(this.__prime);
                this._primeLen = prime.length;
                this._pub = undefined;
                this._priv = undefined;
                this._primeCode = undefined;
                if (malleable) {
                    this.setPublicKey = setPublicKey;
                    this.setPrivateKey = setPrivateKey;
                } else {
                    this._primeCode = 8;
                }
            }
            Object.defineProperty(DH.prototype, 'verifyError', {
                enumerable: true,
                get: function () {
                    if (typeof this._primeCode !== 'number') {
                        this._primeCode = checkPrime(this.__prime, this.__gen);
                    }
                    return this._primeCode;
                }
            });
            DH.prototype.generateKeys = function () {
                if (!this._priv) {
                    this._priv = new BN(randomBytes(this._primeLen));
                }
                this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
                return this.getPublicKey();
            };

            DH.prototype.computeSecret = function (other) {
                other = new BN(other);
                other = other.toRed(this._prime);
                var secret = other.redPow(this._priv).fromRed();
                var out = new Buffer(secret.toArray());
                var prime = this.getPrime();
                if (out.length < prime.length) {
                    var front = new Buffer(prime.length - out.length);
                    front.fill(0);
                    out = Buffer.concat([front, out]);
                }
                return out;
            };

            DH.prototype.getPublicKey = function getPublicKey(enc) {
                return formatReturnValue(this._pub, enc);
            };

            DH.prototype.getPrivateKey = function getPrivateKey(enc) {
                return formatReturnValue(this._priv, enc);
            };

            DH.prototype.getPrime = function (enc) {
                return formatReturnValue(this.__prime, enc);
            };

            DH.prototype.getGenerator = function (enc) {
                return formatReturnValue(this._gen, enc);
            };

            DH.prototype.setGenerator = function (gen, enc) {
                enc = enc || 'utf8';
                if (!Buffer.isBuffer(gen)) {
                    gen = new Buffer(gen, enc);
                }
                this.__gen = gen;
                this._gen = new BN(gen);
                return this;
            };

            function formatReturnValue(bn, enc) {
                var buf = new Buffer(bn.toArray());
                if (!enc) {
                    return buf;
                } else {
                    return buf.toString(enc);
                }
            }

        }).call(this,require("buffer").Buffer)
    },{"./generatePrime":90,"bn.js":22,"buffer":68,"miller-rabin":144,"randombytes":166}],90:[function(require,module,exports){
        var randomBytes = require('randombytes');
        module.exports = findPrime;
        findPrime.simpleSieve = simpleSieve;
        findPrime.fermatTest = fermatTest;
        var BN = require('bn.js');
        var TWENTYFOUR = new BN(24);
        var MillerRabin = require('miller-rabin');
        var millerRabin = new MillerRabin();
        var ONE = new BN(1);
        var TWO = new BN(2);
        var FIVE = new BN(5);
        var SIXTEEN = new BN(16);
        var EIGHT = new BN(8);
        var TEN = new BN(10);
        var THREE = new BN(3);
        var SEVEN = new BN(7);
        var ELEVEN = new BN(11);
        var FOUR = new BN(4);
        var TWELVE = new BN(12);
        var primes = null;

        function _getPrimes() {
            if (primes !== null)
                return primes;

            var limit = 0x100000;
            var res = [];
            res[0] = 2;
            for (var i = 1, k = 3; k < limit; k += 2) {
                var sqrt = Math.ceil(Math.sqrt(k));
                for (var j = 0; j < i && res[j] <= sqrt; j++)
                    if (k % res[j] === 0)
                        break;

                if (i !== j && res[j] <= sqrt)
                    continue;

                res[i++] = k;
            }
            primes = res;
            return res;
        }

        function simpleSieve(p) {
            var primes = _getPrimes();

            for (var i = 0; i < primes.length; i++)
                if (p.modn(primes[i]) === 0) {
                    if (p.cmpn(primes[i]) === 0) {
                        return true;
                    } else {
                        return false;
                    }
                }

            return true;
        }

        function fermatTest(p) {
            var red = BN.mont(p);
            return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
        }

        function findPrime(bits, gen) {
            if (bits < 16) {
                // this is what openssl does
                if (gen === 2 || gen === 5) {
                    return new BN([0x8c, 0x7b]);
                } else {
                    return new BN([0x8c, 0x27]);
                }
            }
            gen = new BN(gen);

            var num, n2;

            while (true) {
                num = new BN(randomBytes(Math.ceil(bits / 8)));
                while (num.bitLength() > bits) {
                    num.ishrn(1);
                }
                if (num.isEven()) {
                    num.iadd(ONE);
                }
                if (!num.testn(1)) {
                    num.iadd(TWO);
                }
                if (!gen.cmp(TWO)) {
                    while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
                        num.iadd(FOUR);
                    }
                } else if (!gen.cmp(FIVE)) {
                    while (num.mod(TEN).cmp(THREE)) {
                        num.iadd(FOUR);
                    }
                }
                n2 = num.shrn(1);
                if (simpleSieve(n2) && simpleSieve(num) &&
                    fermatTest(n2) && fermatTest(num) &&
                    millerRabin.test(n2) && millerRabin.test(num)) {
                    return num;
                }
            }

        }

    },{"bn.js":22,"miller-rabin":144,"randombytes":166}],91:[function(require,module,exports){
        module.exports={
            "modp1": {
                "gen": "02",
                "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
            },
            "modp2": {
                "gen": "02",
                "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
            },
            "modp5": {
                "gen": "02",
                "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
            },
            "modp14": {
                "gen": "02",
                "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
            },
            "modp15": {
                "gen": "02",
                "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
            },
            "modp16": {
                "gen": "02",
                "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
            },
            "modp17": {
                "gen": "02",
                "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
            },
            "modp18": {
                "gen": "02",
                "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
            }
        }
    },{}],92:[function(require,module,exports){
        'use strict';

        var elliptic = exports;

        elliptic.version = require('../package.json').version;
        elliptic.utils = require('./elliptic/utils');
        elliptic.rand = require('brorand');
        elliptic.curve = require('./elliptic/curve');
        elliptic.curves = require('./elliptic/curves');

// Protocols
        elliptic.ec = require('./elliptic/ec');
        elliptic.eddsa = require('./elliptic/eddsa');

    },{"../package.json":107,"./elliptic/curve":95,"./elliptic/curves":98,"./elliptic/ec":99,"./elliptic/eddsa":102,"./elliptic/utils":106,"brorand":23}],93:[function(require,module,exports){
        'use strict';

        var BN = require('bn.js');
        var utils = require('../utils');
        var getNAF = utils.getNAF;
        var getJSF = utils.getJSF;
        var assert = utils.assert;

        function BaseCurve(type, conf) {
            this.type = type;
            this.p = new BN(conf.p, 16);

            // Use Montgomery, when there is no fast reduction for the prime
            this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

            // Useful for many curves
            this.zero = new BN(0).toRed(this.red);
            this.one = new BN(1).toRed(this.red);
            this.two = new BN(2).toRed(this.red);

            // Curve configuration, optional
            this.n = conf.n && new BN(conf.n, 16);
            this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

            // Temporary arrays
            this._wnafT1 = new Array(4);
            this._wnafT2 = new Array(4);
            this._wnafT3 = new Array(4);
            this._wnafT4 = new Array(4);

            this._bitLength = this.n ? this.n.bitLength() : 0;

            // Generalized Greg Maxwell's trick
            var adjustCount = this.n && this.p.div(this.n);
            if (!adjustCount || adjustCount.cmpn(100) > 0) {
                this.redN = null;
            } else {
                this._maxwellTrick = true;
                this.redN = this.n.toRed(this.red);
            }
        }
        module.exports = BaseCurve;

        BaseCurve.prototype.point = function point() {
            throw new Error('Not implemented');
        };

        BaseCurve.prototype.validate = function validate() {
            throw new Error('Not implemented');
        };

        BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
            assert(p.precomputed);
            var doubles = p._getDoubles();

            var naf = getNAF(k, 1, this._bitLength);
            var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
            I /= 3;

            // Translate into more windowed form
            var repr = [];
            for (var j = 0; j < naf.length; j += doubles.step) {
                var nafW = 0;
                for (var k = j + doubles.step - 1; k >= j; k--)
                    nafW = (nafW << 1) + naf[k];
                repr.push(nafW);
            }

            var a = this.jpoint(null, null, null);
            var b = this.jpoint(null, null, null);
            for (var i = I; i > 0; i--) {
                for (var j = 0; j < repr.length; j++) {
                    var nafW = repr[j];
                    if (nafW === i)
                        b = b.mixedAdd(doubles.points[j]);
                    else if (nafW === -i)
                        b = b.mixedAdd(doubles.points[j].neg());
                }
                a = a.add(b);
            }
            return a.toP();
        };

        BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
            var w = 4;

            // Precompute window
            var nafPoints = p._getNAFPoints(w);
            w = nafPoints.wnd;
            var wnd = nafPoints.points;

            // Get NAF form
            var naf = getNAF(k, w, this._bitLength);

            // Add `this`*(N+1) for every w-NAF index
            var acc = this.jpoint(null, null, null);
            for (var i = naf.length - 1; i >= 0; i--) {
                // Count zeroes
                for (var k = 0; i >= 0 && naf[i] === 0; i--)
                    k++;
                if (i >= 0)
                    k++;
                acc = acc.dblp(k);

                if (i < 0)
                    break;
                var z = naf[i];
                assert(z !== 0);
                if (p.type === 'affine') {
                    // J +- P
                    if (z > 0)
                        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
                    else
                        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
                } else {
                    // J +- J
                    if (z > 0)
                        acc = acc.add(wnd[(z - 1) >> 1]);
                    else
                        acc = acc.add(wnd[(-z - 1) >> 1].neg());
                }
            }
            return p.type === 'affine' ? acc.toP() : acc;
        };

        BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                               points,
                                                               coeffs,
                                                               len,
                                                               jacobianResult) {
            var wndWidth = this._wnafT1;
            var wnd = this._wnafT2;
            var naf = this._wnafT3;

            // Fill all arrays
            var max = 0;
            for (var i = 0; i < len; i++) {
                var p = points[i];
                var nafPoints = p._getNAFPoints(defW);
                wndWidth[i] = nafPoints.wnd;
                wnd[i] = nafPoints.points;
            }

            // Comb small window NAFs
            for (var i = len - 1; i >= 1; i -= 2) {
                var a = i - 1;
                var b = i;
                if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
                    naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
                    naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
                    max = Math.max(naf[a].length, max);
                    max = Math.max(naf[b].length, max);
                    continue;
                }

                var comb = [
                    points[a], /* 1 */
                    null, /* 3 */
                    null, /* 5 */
                    points[b] /* 7 */
                ];

                // Try to avoid Projective points, if possible
                if (points[a].y.cmp(points[b].y) === 0) {
                    comb[1] = points[a].add(points[b]);
                    comb[2] = points[a].toJ().mixedAdd(points[b].neg());
                } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
                    comb[1] = points[a].toJ().mixedAdd(points[b]);
                    comb[2] = points[a].add(points[b].neg());
                } else {
                    comb[1] = points[a].toJ().mixedAdd(points[b]);
                    comb[2] = points[a].toJ().mixedAdd(points[b].neg());
                }

                var index = [
                    -3, /* -1 -1 */
                    -1, /* -1 0 */
                    -5, /* -1 1 */
                    -7, /* 0 -1 */
                    0, /* 0 0 */
                    7, /* 0 1 */
                    5, /* 1 -1 */
                    1, /* 1 0 */
                    3  /* 1 1 */
                ];

                var jsf = getJSF(coeffs[a], coeffs[b]);
                max = Math.max(jsf[0].length, max);
                naf[a] = new Array(max);
                naf[b] = new Array(max);
                for (var j = 0; j < max; j++) {
                    var ja = jsf[0][j] | 0;
                    var jb = jsf[1][j] | 0;

                    naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
                    naf[b][j] = 0;
                    wnd[a] = comb;
                }
            }

            var acc = this.jpoint(null, null, null);
            var tmp = this._wnafT4;
            for (var i = max; i >= 0; i--) {
                var k = 0;

                while (i >= 0) {
                    var zero = true;
                    for (var j = 0; j < len; j++) {
                        tmp[j] = naf[j][i] | 0;
                        if (tmp[j] !== 0)
                            zero = false;
                    }
                    if (!zero)
                        break;
                    k++;
                    i--;
                }
                if (i >= 0)
                    k++;
                acc = acc.dblp(k);
                if (i < 0)
                    break;

                for (var j = 0; j < len; j++) {
                    var z = tmp[j];
                    var p;
                    if (z === 0)
                        continue;
                    else if (z > 0)
                        p = wnd[j][(z - 1) >> 1];
                    else if (z < 0)
                        p = wnd[j][(-z - 1) >> 1].neg();

                    if (p.type === 'affine')
                        acc = acc.mixedAdd(p);
                    else
                        acc = acc.add(p);
                }
            }
            // Zeroify references
            for (var i = 0; i < len; i++)
                wnd[i] = null;

            if (jacobianResult)
                return acc;
            else
                return acc.toP();
        };

        function BasePoint(curve, type) {
            this.curve = curve;
            this.type = type;
            this.precomputed = null;
        }
        BaseCurve.BasePoint = BasePoint;

        BasePoint.prototype.eq = function eq(/*other*/) {
            throw new Error('Not implemented');
        };

        BasePoint.prototype.validate = function validate() {
            return this.curve.validate(this);
        };

        BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
            bytes = utils.toArray(bytes, enc);

            var len = this.p.byteLength();

            // uncompressed, hybrid-odd, hybrid-even
            if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
                bytes.length - 1 === 2 * len) {
                if (bytes[0] === 0x06)
                    assert(bytes[bytes.length - 1] % 2 === 0);
                else if (bytes[0] === 0x07)
                    assert(bytes[bytes.length - 1] % 2 === 1);

                var res =  this.point(bytes.slice(1, 1 + len),
                    bytes.slice(1 + len, 1 + 2 * len));

                return res;
            } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
                bytes.length - 1 === len) {
                return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
            }
            throw new Error('Unknown point format');
        };

        BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
            return this.encode(enc, true);
        };

        BasePoint.prototype._encode = function _encode(compact) {
            var len = this.curve.p.byteLength();
            var x = this.getX().toArray('be', len);

            if (compact)
                return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

            return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;
        };

        BasePoint.prototype.encode = function encode(enc, compact) {
            return utils.encode(this._encode(compact), enc);
        };

        BasePoint.prototype.precompute = function precompute(power) {
            if (this.precomputed)
                return this;

            var precomputed = {
                doubles: null,
                naf: null,
                beta: null
            };
            precomputed.naf = this._getNAFPoints(8);
            precomputed.doubles = this._getDoubles(4, power);
            precomputed.beta = this._getBeta();
            this.precomputed = precomputed;

            return this;
        };

        BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
            if (!this.precomputed)
                return false;

            var doubles = this.precomputed.doubles;
            if (!doubles)
                return false;

            return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
        };

        BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
            if (this.precomputed && this.precomputed.doubles)
                return this.precomputed.doubles;

            var doubles = [ this ];
            var acc = this;
            for (var i = 0; i < power; i += step) {
                for (var j = 0; j < step; j++)
                    acc = acc.dbl();
                doubles.push(acc);
            }
            return {
                step: step,
                points: doubles
            };
        };

        BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
            if (this.precomputed && this.precomputed.naf)
                return this.precomputed.naf;

            var res = [ this ];
            var max = (1 << wnd) - 1;
            var dbl = max === 1 ? null : this.dbl();
            for (var i = 1; i < max; i++)
                res[i] = res[i - 1].add(dbl);
            return {
                wnd: wnd,
                points: res
            };
        };

        BasePoint.prototype._getBeta = function _getBeta() {
            return null;
        };

        BasePoint.prototype.dblp = function dblp(k) {
            var r = this;
            for (var i = 0; i < k; i++)
                r = r.dbl();
            return r;
        };

    },{"../utils":106,"bn.js":22}],94:[function(require,module,exports){
        'use strict';

        var utils = require('../utils');
        var BN = require('bn.js');
        var inherits = require('inherits');
        var Base = require('./base');

        var assert = utils.assert;

        function EdwardsCurve(conf) {
            // NOTE: Important as we are creating point in Base.call()
            this.twisted = (conf.a | 0) !== 1;
            this.mOneA = this.twisted && (conf.a | 0) === -1;
            this.extended = this.mOneA;

            Base.call(this, 'edwards', conf);

            this.a = new BN(conf.a, 16).umod(this.red.m);
            this.a = this.a.toRed(this.red);
            this.c = new BN(conf.c, 16).toRed(this.red);
            this.c2 = this.c.redSqr();
            this.d = new BN(conf.d, 16).toRed(this.red);
            this.dd = this.d.redAdd(this.d);

            assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
            this.oneC = (conf.c | 0) === 1;
        }
        inherits(EdwardsCurve, Base);
        module.exports = EdwardsCurve;

        EdwardsCurve.prototype._mulA = function _mulA(num) {
            if (this.mOneA)
                return num.redNeg();
            else
                return this.a.redMul(num);
        };

        EdwardsCurve.prototype._mulC = function _mulC(num) {
            if (this.oneC)
                return num;
            else
                return this.c.redMul(num);
        };

// Just for compatibility with Short curve
        EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
            return this.point(x, y, z, t);
        };

        EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
            x = new BN(x, 16);
            if (!x.red)
                x = x.toRed(this.red);

            var x2 = x.redSqr();
            var rhs = this.c2.redSub(this.a.redMul(x2));
            var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

            var y2 = rhs.redMul(lhs.redInvm());
            var y = y2.redSqrt();
            if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
                throw new Error('invalid point');

            var isOdd = y.fromRed().isOdd();
            if (odd && !isOdd || !odd && isOdd)
                y = y.redNeg();

            return this.point(x, y);
        };

        EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
            y = new BN(y, 16);
            if (!y.red)
                y = y.toRed(this.red);

            // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)
            var y2 = y.redSqr();
            var lhs = y2.redSub(this.c2);
            var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
            var x2 = lhs.redMul(rhs.redInvm());

            if (x2.cmp(this.zero) === 0) {
                if (odd)
                    throw new Error('invalid point');
                else
                    return this.point(this.zero, y);
            }

            var x = x2.redSqrt();
            if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
                throw new Error('invalid point');

            if (x.fromRed().isOdd() !== odd)
                x = x.redNeg();

            return this.point(x, y);
        };

        EdwardsCurve.prototype.validate = function validate(point) {
            if (point.isInfinity())
                return true;

            // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
            point.normalize();

            var x2 = point.x.redSqr();
            var y2 = point.y.redSqr();
            var lhs = x2.redMul(this.a).redAdd(y2);
            var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

            return lhs.cmp(rhs) === 0;
        };

        function Point(curve, x, y, z, t) {
            Base.BasePoint.call(this, curve, 'projective');
            if (x === null && y === null && z === null) {
                this.x = this.curve.zero;
                this.y = this.curve.one;
                this.z = this.curve.one;
                this.t = this.curve.zero;
                this.zOne = true;
            } else {
                this.x = new BN(x, 16);
                this.y = new BN(y, 16);
                this.z = z ? new BN(z, 16) : this.curve.one;
                this.t = t && new BN(t, 16);
                if (!this.x.red)
                    this.x = this.x.toRed(this.curve.red);
                if (!this.y.red)
                    this.y = this.y.toRed(this.curve.red);
                if (!this.z.red)
                    this.z = this.z.toRed(this.curve.red);
                if (this.t && !this.t.red)
                    this.t = this.t.toRed(this.curve.red);
                this.zOne = this.z === this.curve.one;

                // Use extended coordinates
                if (this.curve.extended && !this.t) {
                    this.t = this.x.redMul(this.y);
                    if (!this.zOne)
                        this.t = this.t.redMul(this.z.redInvm());
                }
            }
        }
        inherits(Point, Base.BasePoint);

        EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
            return Point.fromJSON(this, obj);
        };

        EdwardsCurve.prototype.point = function point(x, y, z, t) {
            return new Point(this, x, y, z, t);
        };

        Point.fromJSON = function fromJSON(curve, obj) {
            return new Point(curve, obj[0], obj[1], obj[2]);
        };

        Point.prototype.inspect = function inspect() {
            if (this.isInfinity())
                return '<EC Point Infinity>';
            return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
                ' y: ' + this.y.fromRed().toString(16, 2) +
                ' z: ' + this.z.fromRed().toString(16, 2) + '>';
        };

        Point.prototype.isInfinity = function isInfinity() {
            // XXX This code assumes that zero is always zero in red
            return this.x.cmpn(0) === 0 &&
                (this.y.cmp(this.z) === 0 ||
                    (this.zOne && this.y.cmp(this.curve.c) === 0));
        };

        Point.prototype._extDbl = function _extDbl() {
            // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
            //     #doubling-dbl-2008-hwcd
            // 4M + 4S

            // A = X1^2
            var a = this.x.redSqr();
            // B = Y1^2
            var b = this.y.redSqr();
            // C = 2 * Z1^2
            var c = this.z.redSqr();
            c = c.redIAdd(c);
            // D = a * A
            var d = this.curve._mulA(a);
            // E = (X1 + Y1)^2 - A - B
            var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
            // G = D + B
            var g = d.redAdd(b);
            // F = G - C
            var f = g.redSub(c);
            // H = D - B
            var h = d.redSub(b);
            // X3 = E * F
            var nx = e.redMul(f);
            // Y3 = G * H
            var ny = g.redMul(h);
            // T3 = E * H
            var nt = e.redMul(h);
            // Z3 = F * G
            var nz = f.redMul(g);
            return this.curve.point(nx, ny, nz, nt);
        };

        Point.prototype._projDbl = function _projDbl() {
            // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
            //     #doubling-dbl-2008-bbjlp
            //     #doubling-dbl-2007-bl
            // and others
            // Generally 3M + 4S or 2M + 4S

            // B = (X1 + Y1)^2
            var b = this.x.redAdd(this.y).redSqr();
            // C = X1^2
            var c = this.x.redSqr();
            // D = Y1^2
            var d = this.y.redSqr();

            var nx;
            var ny;
            var nz;
            if (this.curve.twisted) {
                // E = a * C
                var e = this.curve._mulA(c);
                // F = E + D
                var f = e.redAdd(d);
                if (this.zOne) {
                    // X3 = (B - C - D) * (F - 2)
                    nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
                    // Y3 = F * (E - D)
                    ny = f.redMul(e.redSub(d));
                    // Z3 = F^2 - 2 * F
                    nz = f.redSqr().redSub(f).redSub(f);
                } else {
                    // H = Z1^2
                    var h = this.z.redSqr();
                    // J = F - 2 * H
                    var j = f.redSub(h).redISub(h);
                    // X3 = (B-C-D)*J
                    nx = b.redSub(c).redISub(d).redMul(j);
                    // Y3 = F * (E - D)
                    ny = f.redMul(e.redSub(d));
                    // Z3 = F * J
                    nz = f.redMul(j);
                }
            } else {
                // E = C + D
                var e = c.redAdd(d);
                // H = (c * Z1)^2
                var h = this.curve._mulC(this.z).redSqr();
                // J = E - 2 * H
                var j = e.redSub(h).redSub(h);
                // X3 = c * (B - E) * J
                nx = this.curve._mulC(b.redISub(e)).redMul(j);
                // Y3 = c * E * (C - D)
                ny = this.curve._mulC(e).redMul(c.redISub(d));
                // Z3 = E * J
                nz = e.redMul(j);
            }
            return this.curve.point(nx, ny, nz);
        };

        Point.prototype.dbl = function dbl() {
            if (this.isInfinity())
                return this;

            // Double in extended coordinates
            if (this.curve.extended)
                return this._extDbl();
            else
                return this._projDbl();
        };

        Point.prototype._extAdd = function _extAdd(p) {
            // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
            //     #addition-add-2008-hwcd-3
            // 8M

            // A = (Y1 - X1) * (Y2 - X2)
            var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
            // B = (Y1 + X1) * (Y2 + X2)
            var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
            // C = T1 * k * T2
            var c = this.t.redMul(this.curve.dd).redMul(p.t);
            // D = Z1 * 2 * Z2
            var d = this.z.redMul(p.z.redAdd(p.z));
            // E = B - A
            var e = b.redSub(a);
            // F = D - C
            var f = d.redSub(c);
            // G = D + C
            var g = d.redAdd(c);
            // H = B + A
            var h = b.redAdd(a);
            // X3 = E * F
            var nx = e.redMul(f);
            // Y3 = G * H
            var ny = g.redMul(h);
            // T3 = E * H
            var nt = e.redMul(h);
            // Z3 = F * G
            var nz = f.redMul(g);
            return this.curve.point(nx, ny, nz, nt);
        };

        Point.prototype._projAdd = function _projAdd(p) {
            // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
            //     #addition-add-2008-bbjlp
            //     #addition-add-2007-bl
            // 10M + 1S

            // A = Z1 * Z2
            var a = this.z.redMul(p.z);
            // B = A^2
            var b = a.redSqr();
            // C = X1 * X2
            var c = this.x.redMul(p.x);
            // D = Y1 * Y2
            var d = this.y.redMul(p.y);
            // E = d * C * D
            var e = this.curve.d.redMul(c).redMul(d);
            // F = B - E
            var f = b.redSub(e);
            // G = B + E
            var g = b.redAdd(e);
            // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
            var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
            var nx = a.redMul(f).redMul(tmp);
            var ny;
            var nz;
            if (this.curve.twisted) {
                // Y3 = A * G * (D - a * C)
                ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
                // Z3 = F * G
                nz = f.redMul(g);
            } else {
                // Y3 = A * G * (D - C)
                ny = a.redMul(g).redMul(d.redSub(c));
                // Z3 = c * F * G
                nz = this.curve._mulC(f).redMul(g);
            }
            return this.curve.point(nx, ny, nz);
        };

        Point.prototype.add = function add(p) {
            if (this.isInfinity())
                return p;
            if (p.isInfinity())
                return this;

            if (this.curve.extended)
                return this._extAdd(p);
            else
                return this._projAdd(p);
        };

        Point.prototype.mul = function mul(k) {
            if (this._hasDoubles(k))
                return this.curve._fixedNafMul(this, k);
            else
                return this.curve._wnafMul(this, k);
        };

        Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
            return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
        };

        Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
            return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
        };

        Point.prototype.normalize = function normalize() {
            if (this.zOne)
                return this;

            // Normalize coordinates
            var zi = this.z.redInvm();
            this.x = this.x.redMul(zi);
            this.y = this.y.redMul(zi);
            if (this.t)
                this.t = this.t.redMul(zi);
            this.z = this.curve.one;
            this.zOne = true;
            return this;
        };

        Point.prototype.neg = function neg() {
            return this.curve.point(this.x.redNeg(),
                this.y,
                this.z,
                this.t && this.t.redNeg());
        };

        Point.prototype.getX = function getX() {
            this.normalize();
            return this.x.fromRed();
        };

        Point.prototype.getY = function getY() {
            this.normalize();
            return this.y.fromRed();
        };

        Point.prototype.eq = function eq(other) {
            return this === other ||
                this.getX().cmp(other.getX()) === 0 &&
                this.getY().cmp(other.getY()) === 0;
        };

        Point.prototype.eqXToP = function eqXToP(x) {
            var rx = x.toRed(this.curve.red).redMul(this.z);
            if (this.x.cmp(rx) === 0)
                return true;

            var xc = x.clone();
            var t = this.curve.redN.redMul(this.z);
            for (;;) {
                xc.iadd(this.curve.n);
                if (xc.cmp(this.curve.p) >= 0)
                    return false;

                rx.redIAdd(t);
                if (this.x.cmp(rx) === 0)
                    return true;
            }
        };

// Compatibility with BaseCurve
        Point.prototype.toP = Point.prototype.normalize;
        Point.prototype.mixedAdd = Point.prototype.add;

    },{"../utils":106,"./base":93,"bn.js":22,"inherits":140}],95:[function(require,module,exports){
        'use strict';

        var curve = exports;

        curve.base = require('./base');
        curve.short = require('./short');
        curve.mont = require('./mont');
        curve.edwards = require('./edwards');

    },{"./base":93,"./edwards":94,"./mont":96,"./short":97}],96:[function(require,module,exports){
        'use strict';

        var BN = require('bn.js');
        var inherits = require('inherits');
        var Base = require('./base');

        var utils = require('../utils');

        function MontCurve(conf) {
            Base.call(this, 'mont', conf);

            this.a = new BN(conf.a, 16).toRed(this.red);
            this.b = new BN(conf.b, 16).toRed(this.red);
            this.i4 = new BN(4).toRed(this.red).redInvm();
            this.two = new BN(2).toRed(this.red);
            this.a24 = this.i4.redMul(this.a.redAdd(this.two));
        }
        inherits(MontCurve, Base);
        module.exports = MontCurve;

        MontCurve.prototype.validate = function validate(point) {
            var x = point.normalize().x;
            var x2 = x.redSqr();
            var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
            var y = rhs.redSqrt();

            return y.redSqr().cmp(rhs) === 0;
        };

        function Point(curve, x, z) {
            Base.BasePoint.call(this, curve, 'projective');
            if (x === null && z === null) {
                this.x = this.curve.one;
                this.z = this.curve.zero;
            } else {
                this.x = new BN(x, 16);
                this.z = new BN(z, 16);
                if (!this.x.red)
                    this.x = this.x.toRed(this.curve.red);
                if (!this.z.red)
                    this.z = this.z.toRed(this.curve.red);
            }
        }
        inherits(Point, Base.BasePoint);

        MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
            return this.point(utils.toArray(bytes, enc), 1);
        };

        MontCurve.prototype.point = function point(x, z) {
            return new Point(this, x, z);
        };

        MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
            return Point.fromJSON(this, obj);
        };

        Point.prototype.precompute = function precompute() {
            // No-op
        };

        Point.prototype._encode = function _encode() {
            return this.getX().toArray('be', this.curve.p.byteLength());
        };

        Point.fromJSON = function fromJSON(curve, obj) {
            return new Point(curve, obj[0], obj[1] || curve.one);
        };

        Point.prototype.inspect = function inspect() {
            if (this.isInfinity())
                return '<EC Point Infinity>';
            return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
                ' z: ' + this.z.fromRed().toString(16, 2) + '>';
        };

        Point.prototype.isInfinity = function isInfinity() {
            // XXX This code assumes that zero is always zero in red
            return this.z.cmpn(0) === 0;
        };

        Point.prototype.dbl = function dbl() {
            // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
            // 2M + 2S + 4A

            // A = X1 + Z1
            var a = this.x.redAdd(this.z);
            // AA = A^2
            var aa = a.redSqr();
            // B = X1 - Z1
            var b = this.x.redSub(this.z);
            // BB = B^2
            var bb = b.redSqr();
            // C = AA - BB
            var c = aa.redSub(bb);
            // X3 = AA * BB
            var nx = aa.redMul(bb);
            // Z3 = C * (BB + A24 * C)
            var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
            return this.curve.point(nx, nz);
        };

        Point.prototype.add = function add() {
            throw new Error('Not supported on Montgomery curve');
        };

        Point.prototype.diffAdd = function diffAdd(p, diff) {
            // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
            // 4M + 2S + 6A

            // A = X2 + Z2
            var a = this.x.redAdd(this.z);
            // B = X2 - Z2
            var b = this.x.redSub(this.z);
            // C = X3 + Z3
            var c = p.x.redAdd(p.z);
            // D = X3 - Z3
            var d = p.x.redSub(p.z);
            // DA = D * A
            var da = d.redMul(a);
            // CB = C * B
            var cb = c.redMul(b);
            // X5 = Z1 * (DA + CB)^2
            var nx = diff.z.redMul(da.redAdd(cb).redSqr());
            // Z5 = X1 * (DA - CB)^2
            var nz = diff.x.redMul(da.redISub(cb).redSqr());
            return this.curve.point(nx, nz);
        };

        Point.prototype.mul = function mul(k) {
            var t = k.clone();
            var a = this; // (N / 2) * Q + Q
            var b = this.curve.point(null, null); // (N / 2) * Q
            var c = this; // Q

            for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
                bits.push(t.andln(1));

            for (var i = bits.length - 1; i >= 0; i--) {
                if (bits[i] === 0) {
                    // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
                    a = a.diffAdd(b, c);
                    // N * Q = 2 * ((N / 2) * Q + Q))
                    b = b.dbl();
                } else {
                    // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
                    b = a.diffAdd(b, c);
                    // N * Q + Q = 2 * ((N / 2) * Q + Q)
                    a = a.dbl();
                }
            }
            return b;
        };

        Point.prototype.mulAdd = function mulAdd() {
            throw new Error('Not supported on Montgomery curve');
        };

        Point.prototype.jumlAdd = function jumlAdd() {
            throw new Error('Not supported on Montgomery curve');
        };

        Point.prototype.eq = function eq(other) {
            return this.getX().cmp(other.getX()) === 0;
        };

        Point.prototype.normalize = function normalize() {
            this.x = this.x.redMul(this.z.redInvm());
            this.z = this.curve.one;
            return this;
        };

        Point.prototype.getX = function getX() {
            // Normalize coordinates
            this.normalize();

            return this.x.fromRed();
        };

    },{"../utils":106,"./base":93,"bn.js":22,"inherits":140}],97:[function(require,module,exports){
        'use strict';

        var utils = require('../utils');
        var BN = require('bn.js');
        var inherits = require('inherits');
        var Base = require('./base');

        var assert = utils.assert;

        function ShortCurve(conf) {
            Base.call(this, 'short', conf);

            this.a = new BN(conf.a, 16).toRed(this.red);
            this.b = new BN(conf.b, 16).toRed(this.red);
            this.tinv = this.two.redInvm();

            this.zeroA = this.a.fromRed().cmpn(0) === 0;
            this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

            // If the curve is endomorphic, precalculate beta and lambda
            this.endo = this._getEndomorphism(conf);
            this._endoWnafT1 = new Array(4);
            this._endoWnafT2 = new Array(4);
        }
        inherits(ShortCurve, Base);
        module.exports = ShortCurve;

        ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
            // No efficient endomorphism
            if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
                return;

            // Compute beta and lambda, that lambda * P = (beta * Px; Py)
            var beta;
            var lambda;
            if (conf.beta) {
                beta = new BN(conf.beta, 16).toRed(this.red);
            } else {
                var betas = this._getEndoRoots(this.p);
                // Choose the smallest beta
                beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
                beta = beta.toRed(this.red);
            }
            if (conf.lambda) {
                lambda = new BN(conf.lambda, 16);
            } else {
                // Choose the lambda that is matching selected beta
                var lambdas = this._getEndoRoots(this.n);
                if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
                    lambda = lambdas[0];
                } else {
                    lambda = lambdas[1];
                    assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
                }
            }

            // Get basis vectors, used for balanced length-two representation
            var basis;
            if (conf.basis) {
                basis = conf.basis.map(function(vec) {
                    return {
                        a: new BN(vec.a, 16),
                        b: new BN(vec.b, 16)
                    };
                });
            } else {
                basis = this._getEndoBasis(lambda);
            }

            return {
                beta: beta,
                lambda: lambda,
                basis: basis
            };
        };

        ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
            // Find roots of for x^2 + x + 1 in F
            // Root = (-1 +- Sqrt(-3)) / 2
            //
            var red = num === this.p ? this.red : BN.mont(num);
            var tinv = new BN(2).toRed(red).redInvm();
            var ntinv = tinv.redNeg();

            var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

            var l1 = ntinv.redAdd(s).fromRed();
            var l2 = ntinv.redSub(s).fromRed();
            return [ l1, l2 ];
        };

        ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
            // aprxSqrt >= sqrt(this.n)
            var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

            // 3.74
            // Run EGCD, until r(L + 1) < aprxSqrt
            var u = lambda;
            var v = this.n.clone();
            var x1 = new BN(1);
            var y1 = new BN(0);
            var x2 = new BN(0);
            var y2 = new BN(1);

            // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
            var a0;
            var b0;
            // First vector
            var a1;
            var b1;
            // Second vector
            var a2;
            var b2;

            var prevR;
            var i = 0;
            var r;
            var x;
            while (u.cmpn(0) !== 0) {
                var q = v.div(u);
                r = v.sub(q.mul(u));
                x = x2.sub(q.mul(x1));
                var y = y2.sub(q.mul(y1));

                if (!a1 && r.cmp(aprxSqrt) < 0) {
                    a0 = prevR.neg();
                    b0 = x1;
                    a1 = r.neg();
                    b1 = x;
                } else if (a1 && ++i === 2) {
                    break;
                }
                prevR = r;

                v = u;
                u = r;
                x2 = x1;
                x1 = x;
                y2 = y1;
                y1 = y;
            }
            a2 = r.neg();
            b2 = x;

            var len1 = a1.sqr().add(b1.sqr());
            var len2 = a2.sqr().add(b2.sqr());
            if (len2.cmp(len1) >= 0) {
                a2 = a0;
                b2 = b0;
            }

            // Normalize signs
            if (a1.negative) {
                a1 = a1.neg();
                b1 = b1.neg();
            }
            if (a2.negative) {
                a2 = a2.neg();
                b2 = b2.neg();
            }

            return [
                { a: a1, b: b1 },
                { a: a2, b: b2 }
            ];
        };

        ShortCurve.prototype._endoSplit = function _endoSplit(k) {
            var basis = this.endo.basis;
            var v1 = basis[0];
            var v2 = basis[1];

            var c1 = v2.b.mul(k).divRound(this.n);
            var c2 = v1.b.neg().mul(k).divRound(this.n);

            var p1 = c1.mul(v1.a);
            var p2 = c2.mul(v2.a);
            var q1 = c1.mul(v1.b);
            var q2 = c2.mul(v2.b);

            // Calculate answer
            var k1 = k.sub(p1).sub(p2);
            var k2 = q1.add(q2).neg();
            return { k1: k1, k2: k2 };
        };

        ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
            x = new BN(x, 16);
            if (!x.red)
                x = x.toRed(this.red);

            var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
            var y = y2.redSqrt();
            if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
                throw new Error('invalid point');

            // XXX Is there any way to tell if the number is odd without converting it
            // to non-red form?
            var isOdd = y.fromRed().isOdd();
            if (odd && !isOdd || !odd && isOdd)
                y = y.redNeg();

            return this.point(x, y);
        };

        ShortCurve.prototype.validate = function validate(point) {
            if (point.inf)
                return true;

            var x = point.x;
            var y = point.y;

            var ax = this.a.redMul(x);
            var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
            return y.redSqr().redISub(rhs).cmpn(0) === 0;
        };

        ShortCurve.prototype._endoWnafMulAdd =
            function _endoWnafMulAdd(points, coeffs, jacobianResult) {
                var npoints = this._endoWnafT1;
                var ncoeffs = this._endoWnafT2;
                for (var i = 0; i < points.length; i++) {
                    var split = this._endoSplit(coeffs[i]);
                    var p = points[i];
                    var beta = p._getBeta();

                    if (split.k1.negative) {
                        split.k1.ineg();
                        p = p.neg(true);
                    }
                    if (split.k2.negative) {
                        split.k2.ineg();
                        beta = beta.neg(true);
                    }

                    npoints[i * 2] = p;
                    npoints[i * 2 + 1] = beta;
                    ncoeffs[i * 2] = split.k1;
                    ncoeffs[i * 2 + 1] = split.k2;
                }
                var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

                // Clean-up references to points and coefficients
                for (var j = 0; j < i * 2; j++) {
                    npoints[j] = null;
                    ncoeffs[j] = null;
                }
                return res;
            };

        function Point(curve, x, y, isRed) {
            Base.BasePoint.call(this, curve, 'affine');
            if (x === null && y === null) {
                this.x = null;
                this.y = null;
                this.inf = true;
            } else {
                this.x = new BN(x, 16);
                this.y = new BN(y, 16);
                // Force redgomery representation when loading from JSON
                if (isRed) {
                    this.x.forceRed(this.curve.red);
                    this.y.forceRed(this.curve.red);
                }
                if (!this.x.red)
                    this.x = this.x.toRed(this.curve.red);
                if (!this.y.red)
                    this.y = this.y.toRed(this.curve.red);
                this.inf = false;
            }
        }
        inherits(Point, Base.BasePoint);

        ShortCurve.prototype.point = function point(x, y, isRed) {
            return new Point(this, x, y, isRed);
        };

        ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
            return Point.fromJSON(this, obj, red);
        };

        Point.prototype._getBeta = function _getBeta() {
            if (!this.curve.endo)
                return;

            var pre = this.precomputed;
            if (pre && pre.beta)
                return pre.beta;

            var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
            if (pre) {
                var curve = this.curve;
                var endoMul = function(p) {
                    return curve.point(p.x.redMul(curve.endo.beta), p.y);
                };
                pre.beta = beta;
                beta.precomputed = {
                    beta: null,
                    naf: pre.naf && {
                        wnd: pre.naf.wnd,
                        points: pre.naf.points.map(endoMul)
                    },
                    doubles: pre.doubles && {
                        step: pre.doubles.step,
                        points: pre.doubles.points.map(endoMul)
                    }
                };
            }
            return beta;
        };

        Point.prototype.toJSON = function toJSON() {
            if (!this.precomputed)
                return [ this.x, this.y ];

            return [ this.x, this.y, this.precomputed && {
                doubles: this.precomputed.doubles && {
                    step: this.precomputed.doubles.step,
                    points: this.precomputed.doubles.points.slice(1)
                },
                naf: this.precomputed.naf && {
                    wnd: this.precomputed.naf.wnd,
                    points: this.precomputed.naf.points.slice(1)
                }
            } ];
        };

        Point.fromJSON = function fromJSON(curve, obj, red) {
            if (typeof obj === 'string')
                obj = JSON.parse(obj);
            var res = curve.point(obj[0], obj[1], red);
            if (!obj[2])
                return res;

            function obj2point(obj) {
                return curve.point(obj[0], obj[1], red);
            }

            var pre = obj[2];
            res.precomputed = {
                beta: null,
                doubles: pre.doubles && {
                    step: pre.doubles.step,
                    points: [ res ].concat(pre.doubles.points.map(obj2point))
                },
                naf: pre.naf && {
                    wnd: pre.naf.wnd,
                    points: [ res ].concat(pre.naf.points.map(obj2point))
                }
            };
            return res;
        };

        Point.prototype.inspect = function inspect() {
            if (this.isInfinity())
                return '<EC Point Infinity>';
            return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
                ' y: ' + this.y.fromRed().toString(16, 2) + '>';
        };

        Point.prototype.isInfinity = function isInfinity() {
            return this.inf;
        };

        Point.prototype.add = function add(p) {
            // O + P = P
            if (this.inf)
                return p;

            // P + O = P
            if (p.inf)
                return this;

            // P + P = 2P
            if (this.eq(p))
                return this.dbl();

            // P + (-P) = O
            if (this.neg().eq(p))
                return this.curve.point(null, null);

            // P + Q = O
            if (this.x.cmp(p.x) === 0)
                return this.curve.point(null, null);

            var c = this.y.redSub(p.y);
            if (c.cmpn(0) !== 0)
                c = c.redMul(this.x.redSub(p.x).redInvm());
            var nx = c.redSqr().redISub(this.x).redISub(p.x);
            var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
            return this.curve.point(nx, ny);
        };

        Point.prototype.dbl = function dbl() {
            if (this.inf)
                return this;

            // 2P = O
            var ys1 = this.y.redAdd(this.y);
            if (ys1.cmpn(0) === 0)
                return this.curve.point(null, null);

            var a = this.curve.a;

            var x2 = this.x.redSqr();
            var dyinv = ys1.redInvm();
            var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

            var nx = c.redSqr().redISub(this.x.redAdd(this.x));
            var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
            return this.curve.point(nx, ny);
        };

        Point.prototype.getX = function getX() {
            return this.x.fromRed();
        };

        Point.prototype.getY = function getY() {
            return this.y.fromRed();
        };

        Point.prototype.mul = function mul(k) {
            k = new BN(k, 16);
            if (this.isInfinity())
                return this;
            else if (this._hasDoubles(k))
                return this.curve._fixedNafMul(this, k);
            else if (this.curve.endo)
                return this.curve._endoWnafMulAdd([ this ], [ k ]);
            else
                return this.curve._wnafMul(this, k);
        };

        Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
            var points = [ this, p2 ];
            var coeffs = [ k1, k2 ];
            if (this.curve.endo)
                return this.curve._endoWnafMulAdd(points, coeffs);
            else
                return this.curve._wnafMulAdd(1, points, coeffs, 2);
        };

        Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
            var points = [ this, p2 ];
            var coeffs = [ k1, k2 ];
            if (this.curve.endo)
                return this.curve._endoWnafMulAdd(points, coeffs, true);
            else
                return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
        };

        Point.prototype.eq = function eq(p) {
            return this === p ||
                this.inf === p.inf &&
                (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
        };

        Point.prototype.neg = function neg(_precompute) {
            if (this.inf)
                return this;

            var res = this.curve.point(this.x, this.y.redNeg());
            if (_precompute && this.precomputed) {
                var pre = this.precomputed;
                var negate = function(p) {
                    return p.neg();
                };
                res.precomputed = {
                    naf: pre.naf && {
                        wnd: pre.naf.wnd,
                        points: pre.naf.points.map(negate)
                    },
                    doubles: pre.doubles && {
                        step: pre.doubles.step,
                        points: pre.doubles.points.map(negate)
                    }
                };
            }
            return res;
        };

        Point.prototype.toJ = function toJ() {
            if (this.inf)
                return this.curve.jpoint(null, null, null);

            var res = this.curve.jpoint(this.x, this.y, this.curve.one);
            return res;
        };

        function JPoint(curve, x, y, z) {
            Base.BasePoint.call(this, curve, 'jacobian');
            if (x === null && y === null && z === null) {
                this.x = this.curve.one;
                this.y = this.curve.one;
                this.z = new BN(0);
            } else {
                this.x = new BN(x, 16);
                this.y = new BN(y, 16);
                this.z = new BN(z, 16);
            }
            if (!this.x.red)
                this.x = this.x.toRed(this.curve.red);
            if (!this.y.red)
                this.y = this.y.toRed(this.curve.red);
            if (!this.z.red)
                this.z = this.z.toRed(this.curve.red);

            this.zOne = this.z === this.curve.one;
        }
        inherits(JPoint, Base.BasePoint);

        ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
            return new JPoint(this, x, y, z);
        };

        JPoint.prototype.toP = function toP() {
            if (this.isInfinity())
                return this.curve.point(null, null);

            var zinv = this.z.redInvm();
            var zinv2 = zinv.redSqr();
            var ax = this.x.redMul(zinv2);
            var ay = this.y.redMul(zinv2).redMul(zinv);

            return this.curve.point(ax, ay);
        };

        JPoint.prototype.neg = function neg() {
            return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
        };

        JPoint.prototype.add = function add(p) {
            // O + P = P
            if (this.isInfinity())
                return p;

            // P + O = P
            if (p.isInfinity())
                return this;

            // 12M + 4S + 7A
            var pz2 = p.z.redSqr();
            var z2 = this.z.redSqr();
            var u1 = this.x.redMul(pz2);
            var u2 = p.x.redMul(z2);
            var s1 = this.y.redMul(pz2.redMul(p.z));
            var s2 = p.y.redMul(z2.redMul(this.z));

            var h = u1.redSub(u2);
            var r = s1.redSub(s2);
            if (h.cmpn(0) === 0) {
                if (r.cmpn(0) !== 0)
                    return this.curve.jpoint(null, null, null);
                else
                    return this.dbl();
            }

            var h2 = h.redSqr();
            var h3 = h2.redMul(h);
            var v = u1.redMul(h2);

            var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
            var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
            var nz = this.z.redMul(p.z).redMul(h);

            return this.curve.jpoint(nx, ny, nz);
        };

        JPoint.prototype.mixedAdd = function mixedAdd(p) {
            // O + P = P
            if (this.isInfinity())
                return p.toJ();

            // P + O = P
            if (p.isInfinity())
                return this;

            // 8M + 3S + 7A
            var z2 = this.z.redSqr();
            var u1 = this.x;
            var u2 = p.x.redMul(z2);
            var s1 = this.y;
            var s2 = p.y.redMul(z2).redMul(this.z);

            var h = u1.redSub(u2);
            var r = s1.redSub(s2);
            if (h.cmpn(0) === 0) {
                if (r.cmpn(0) !== 0)
                    return this.curve.jpoint(null, null, null);
                else
                    return this.dbl();
            }

            var h2 = h.redSqr();
            var h3 = h2.redMul(h);
            var v = u1.redMul(h2);

            var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
            var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
            var nz = this.z.redMul(h);

            return this.curve.jpoint(nx, ny, nz);
        };

        JPoint.prototype.dblp = function dblp(pow) {
            if (pow === 0)
                return this;
            if (this.isInfinity())
                return this;
            if (!pow)
                return this.dbl();

            if (this.curve.zeroA || this.curve.threeA) {
                var r = this;
                for (var i = 0; i < pow; i++)
                    r = r.dbl();
                return r;
            }

            // 1M + 2S + 1A + N * (4S + 5M + 8A)
            // N = 1 => 6M + 6S + 9A
            var a = this.curve.a;
            var tinv = this.curve.tinv;

            var jx = this.x;
            var jy = this.y;
            var jz = this.z;
            var jz4 = jz.redSqr().redSqr();

            // Reuse results
            var jyd = jy.redAdd(jy);
            for (var i = 0; i < pow; i++) {
                var jx2 = jx.redSqr();
                var jyd2 = jyd.redSqr();
                var jyd4 = jyd2.redSqr();
                var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

                var t1 = jx.redMul(jyd2);
                var nx = c.redSqr().redISub(t1.redAdd(t1));
                var t2 = t1.redISub(nx);
                var dny = c.redMul(t2);
                dny = dny.redIAdd(dny).redISub(jyd4);
                var nz = jyd.redMul(jz);
                if (i + 1 < pow)
                    jz4 = jz4.redMul(jyd4);

                jx = nx;
                jz = nz;
                jyd = dny;
            }

            return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
        };

        JPoint.prototype.dbl = function dbl() {
            if (this.isInfinity())
                return this;

            if (this.curve.zeroA)
                return this._zeroDbl();
            else if (this.curve.threeA)
                return this._threeDbl();
            else
                return this._dbl();
        };

        JPoint.prototype._zeroDbl = function _zeroDbl() {
            var nx;
            var ny;
            var nz;
            // Z = 1
            if (this.zOne) {
                // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
                //     #doubling-mdbl-2007-bl
                // 1M + 5S + 14A

                // XX = X1^2
                var xx = this.x.redSqr();
                // YY = Y1^2
                var yy = this.y.redSqr();
                // YYYY = YY^2
                var yyyy = yy.redSqr();
                // S = 2 * ((X1 + YY)^2 - XX - YYYY)
                var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
                s = s.redIAdd(s);
                // M = 3 * XX + a; a = 0
                var m = xx.redAdd(xx).redIAdd(xx);
                // T = M ^ 2 - 2*S
                var t = m.redSqr().redISub(s).redISub(s);

                // 8 * YYYY
                var yyyy8 = yyyy.redIAdd(yyyy);
                yyyy8 = yyyy8.redIAdd(yyyy8);
                yyyy8 = yyyy8.redIAdd(yyyy8);

                // X3 = T
                nx = t;
                // Y3 = M * (S - T) - 8 * YYYY
                ny = m.redMul(s.redISub(t)).redISub(yyyy8);
                // Z3 = 2*Y1
                nz = this.y.redAdd(this.y);
            } else {
                // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
                //     #doubling-dbl-2009-l
                // 2M + 5S + 13A

                // A = X1^2
                var a = this.x.redSqr();
                // B = Y1^2
                var b = this.y.redSqr();
                // C = B^2
                var c = b.redSqr();
                // D = 2 * ((X1 + B)^2 - A - C)
                var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
                d = d.redIAdd(d);
                // E = 3 * A
                var e = a.redAdd(a).redIAdd(a);
                // F = E^2
                var f = e.redSqr();

                // 8 * C
                var c8 = c.redIAdd(c);
                c8 = c8.redIAdd(c8);
                c8 = c8.redIAdd(c8);

                // X3 = F - 2 * D
                nx = f.redISub(d).redISub(d);
                // Y3 = E * (D - X3) - 8 * C
                ny = e.redMul(d.redISub(nx)).redISub(c8);
                // Z3 = 2 * Y1 * Z1
                nz = this.y.redMul(this.z);
                nz = nz.redIAdd(nz);
            }

            return this.curve.jpoint(nx, ny, nz);
        };

        JPoint.prototype._threeDbl = function _threeDbl() {
            var nx;
            var ny;
            var nz;
            // Z = 1
            if (this.zOne) {
                // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
                //     #doubling-mdbl-2007-bl
                // 1M + 5S + 15A

                // XX = X1^2
                var xx = this.x.redSqr();
                // YY = Y1^2
                var yy = this.y.redSqr();
                // YYYY = YY^2
                var yyyy = yy.redSqr();
                // S = 2 * ((X1 + YY)^2 - XX - YYYY)
                var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
                s = s.redIAdd(s);
                // M = 3 * XX + a
                var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
                // T = M^2 - 2 * S
                var t = m.redSqr().redISub(s).redISub(s);
                // X3 = T
                nx = t;
                // Y3 = M * (S - T) - 8 * YYYY
                var yyyy8 = yyyy.redIAdd(yyyy);
                yyyy8 = yyyy8.redIAdd(yyyy8);
                yyyy8 = yyyy8.redIAdd(yyyy8);
                ny = m.redMul(s.redISub(t)).redISub(yyyy8);
                // Z3 = 2 * Y1
                nz = this.y.redAdd(this.y);
            } else {
                // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
                // 3M + 5S

                // delta = Z1^2
                var delta = this.z.redSqr();
                // gamma = Y1^2
                var gamma = this.y.redSqr();
                // beta = X1 * gamma
                var beta = this.x.redMul(gamma);
                // alpha = 3 * (X1 - delta) * (X1 + delta)
                var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
                alpha = alpha.redAdd(alpha).redIAdd(alpha);
                // X3 = alpha^2 - 8 * beta
                var beta4 = beta.redIAdd(beta);
                beta4 = beta4.redIAdd(beta4);
                var beta8 = beta4.redAdd(beta4);
                nx = alpha.redSqr().redISub(beta8);
                // Z3 = (Y1 + Z1)^2 - gamma - delta
                nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
                // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
                var ggamma8 = gamma.redSqr();
                ggamma8 = ggamma8.redIAdd(ggamma8);
                ggamma8 = ggamma8.redIAdd(ggamma8);
                ggamma8 = ggamma8.redIAdd(ggamma8);
                ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
            }

            return this.curve.jpoint(nx, ny, nz);
        };

        JPoint.prototype._dbl = function _dbl() {
            var a = this.curve.a;

            // 4M + 6S + 10A
            var jx = this.x;
            var jy = this.y;
            var jz = this.z;
            var jz4 = jz.redSqr().redSqr();

            var jx2 = jx.redSqr();
            var jy2 = jy.redSqr();

            var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

            var jxd4 = jx.redAdd(jx);
            jxd4 = jxd4.redIAdd(jxd4);
            var t1 = jxd4.redMul(jy2);
            var nx = c.redSqr().redISub(t1.redAdd(t1));
            var t2 = t1.redISub(nx);

            var jyd8 = jy2.redSqr();
            jyd8 = jyd8.redIAdd(jyd8);
            jyd8 = jyd8.redIAdd(jyd8);
            jyd8 = jyd8.redIAdd(jyd8);
            var ny = c.redMul(t2).redISub(jyd8);
            var nz = jy.redAdd(jy).redMul(jz);

            return this.curve.jpoint(nx, ny, nz);
        };

        JPoint.prototype.trpl = function trpl() {
            if (!this.curve.zeroA)
                return this.dbl().add(this);

            // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
            // 5M + 10S + ...

            // XX = X1^2
            var xx = this.x.redSqr();
            // YY = Y1^2
            var yy = this.y.redSqr();
            // ZZ = Z1^2
            var zz = this.z.redSqr();
            // YYYY = YY^2
            var yyyy = yy.redSqr();
            // M = 3 * XX + a * ZZ2; a = 0
            var m = xx.redAdd(xx).redIAdd(xx);
            // MM = M^2
            var mm = m.redSqr();
            // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
            var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
            e = e.redIAdd(e);
            e = e.redAdd(e).redIAdd(e);
            e = e.redISub(mm);
            // EE = E^2
            var ee = e.redSqr();
            // T = 16*YYYY
            var t = yyyy.redIAdd(yyyy);
            t = t.redIAdd(t);
            t = t.redIAdd(t);
            t = t.redIAdd(t);
            // U = (M + E)^2 - MM - EE - T
            var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
            // X3 = 4 * (X1 * EE - 4 * YY * U)
            var yyu4 = yy.redMul(u);
            yyu4 = yyu4.redIAdd(yyu4);
            yyu4 = yyu4.redIAdd(yyu4);
            var nx = this.x.redMul(ee).redISub(yyu4);
            nx = nx.redIAdd(nx);
            nx = nx.redIAdd(nx);
            // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
            var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
            ny = ny.redIAdd(ny);
            ny = ny.redIAdd(ny);
            ny = ny.redIAdd(ny);
            // Z3 = (Z1 + E)^2 - ZZ - EE
            var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

            return this.curve.jpoint(nx, ny, nz);
        };

        JPoint.prototype.mul = function mul(k, kbase) {
            k = new BN(k, kbase);

            return this.curve._wnafMul(this, k);
        };

        JPoint.prototype.eq = function eq(p) {
            if (p.type === 'affine')
                return this.eq(p.toJ());

            if (this === p)
                return true;

            // x1 * z2^2 == x2 * z1^2
            var z2 = this.z.redSqr();
            var pz2 = p.z.redSqr();
            if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
                return false;

            // y1 * z2^3 == y2 * z1^3
            var z3 = z2.redMul(this.z);
            var pz3 = pz2.redMul(p.z);
            return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
        };

        JPoint.prototype.eqXToP = function eqXToP(x) {
            var zs = this.z.redSqr();
            var rx = x.toRed(this.curve.red).redMul(zs);
            if (this.x.cmp(rx) === 0)
                return true;

            var xc = x.clone();
            var t = this.curve.redN.redMul(zs);
            for (;;) {
                xc.iadd(this.curve.n);
                if (xc.cmp(this.curve.p) >= 0)
                    return false;

                rx.redIAdd(t);
                if (this.x.cmp(rx) === 0)
                    return true;
            }
        };

        JPoint.prototype.inspect = function inspect() {
            if (this.isInfinity())
                return '<EC JPoint Infinity>';
            return '<EC JPoint x: ' + this.x.toString(16, 2) +
                ' y: ' + this.y.toString(16, 2) +
                ' z: ' + this.z.toString(16, 2) + '>';
        };

        JPoint.prototype.isInfinity = function isInfinity() {
            // XXX This code assumes that zero is always zero in red
            return this.z.cmpn(0) === 0;
        };

    },{"../utils":106,"./base":93,"bn.js":22,"inherits":140}],98:[function(require,module,exports){
        'use strict';

        var curves = exports;

        var hash = require('hash.js');
        var curve = require('./curve');
        var utils = require('./utils');

        var assert = utils.assert;

        function PresetCurve(options) {
            if (options.type === 'short')
                this.curve = new curve.short(options);
            else if (options.type === 'edwards')
                this.curve = new curve.edwards(options);
            else
                this.curve = new curve.mont(options);
            this.g = this.curve.g;
            this.n = this.curve.n;
            this.hash = options.hash;

            assert(this.g.validate(), 'Invalid curve');
            assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
        }
        curves.PresetCurve = PresetCurve;

        function defineCurve(name, options) {
            Object.defineProperty(curves, name, {
                configurable: true,
                enumerable: true,
                get: function() {
                    var curve = new PresetCurve(options);
                    Object.defineProperty(curves, name, {
                        configurable: true,
                        enumerable: true,
                        value: curve
                    });
                    return curve;
                }
            });
        }

        defineCurve('p192', {
            type: 'short',
            prime: 'p192',
            p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
            a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
            b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
            n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
            hash: hash.sha256,
            gRed: false,
            g: [
                '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
                '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
            ]
        });

        defineCurve('p224', {
            type: 'short',
            prime: 'p224',
            p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
            a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
            b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
            n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
            hash: hash.sha256,
            gRed: false,
            g: [
                'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
                'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
            ]
        });

        defineCurve('p256', {
            type: 'short',
            prime: null,
            p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
            a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
            b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
            n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
            hash: hash.sha256,
            gRed: false,
            g: [
                '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
                '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
            ]
        });

        defineCurve('p384', {
            type: 'short',
            prime: null,
            p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
                'fffffffe ffffffff 00000000 00000000 ffffffff',
            a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
                'fffffffe ffffffff 00000000 00000000 fffffffc',
            b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
                '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
            n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
                'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
            hash: hash.sha384,
            gRed: false,
            g: [
                'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
                '5502f25d bf55296c 3a545e38 72760ab7',
                '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
                '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'
            ]
        });

        defineCurve('p521', {
            type: 'short',
            prime: null,
            p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
                'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
                'ffffffff ffffffff ffffffff ffffffff ffffffff',
            a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
                'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
                'ffffffff ffffffff ffffffff ffffffff fffffffc',
            b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
                '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
                '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
            n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
                'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
                'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
            hash: hash.sha512,
            gRed: false,
            g: [
                '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
                '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
                'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
                '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
                '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
                '3fad0761 353c7086 a272c240 88be9476 9fd16650'
            ]
        });

        defineCurve('curve25519', {
            type: 'mont',
            prime: 'p25519',
            p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
            a: '76d06',
            b: '1',
            n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
            hash: hash.sha256,
            gRed: false,
            g: [
                '9'
            ]
        });

        defineCurve('ed25519', {
            type: 'edwards',
            prime: 'p25519',
            p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
            a: '-1',
            c: '1',
            // -121665 * (121666^(-1)) (mod P)
            d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
            n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
            hash: hash.sha256,
            gRed: false,
            g: [
                '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

                // 4/5
                '6666666666666666666666666666666666666666666666666666666666666658'
            ]
        });

        var pre;
        try {
            pre = require('./precomputed/secp256k1');
        } catch (e) {
            pre = undefined;
        }

        defineCurve('secp256k1', {
            type: 'short',
            prime: 'k256',
            p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
            a: '0',
            b: '7',
            n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
            h: '1',
            hash: hash.sha256,

            // Precomputed endomorphism
            beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
            lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
            basis: [
                {
                    a: '3086d221a7d46bcde86c90e49284eb15',
                    b: '-e4437ed6010e88286f547fa90abfe4c3'
                },
                {
                    a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
                    b: '3086d221a7d46bcde86c90e49284eb15'
                }
            ],

            gRed: false,
            g: [
                '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
                '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
                pre
            ]
        });

    },{"./curve":95,"./precomputed/secp256k1":105,"./utils":106,"hash.js":126}],99:[function(require,module,exports){
        'use strict';

        var BN = require('bn.js');
        var HmacDRBG = require('hmac-drbg');
        var utils = require('../utils');
        var curves = require('../curves');
        var rand = require('brorand');
        var assert = utils.assert;

        var KeyPair = require('./key');
        var Signature = require('./signature');

        function EC(options) {
            if (!(this instanceof EC))
                return new EC(options);

            // Shortcut `elliptic.ec(curve-name)`
            if (typeof options === 'string') {
                assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);

                options = curves[options];
            }

            // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
            if (options instanceof curves.PresetCurve)
                options = { curve: options };

            this.curve = options.curve.curve;
            this.n = this.curve.n;
            this.nh = this.n.ushrn(1);
            this.g = this.curve.g;

            // Point on curve
            this.g = options.curve.g;
            this.g.precompute(options.curve.n.bitLength() + 1);

            // Hash for function for DRBG
            this.hash = options.hash || options.curve.hash;
        }
        module.exports = EC;

        EC.prototype.keyPair = function keyPair(options) {
            return new KeyPair(this, options);
        };

        EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
            return KeyPair.fromPrivate(this, priv, enc);
        };

        EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
            return KeyPair.fromPublic(this, pub, enc);
        };

        EC.prototype.genKeyPair = function genKeyPair(options) {
            if (!options)
                options = {};

            // Instantiate Hmac_DRBG
            var drbg = new HmacDRBG({
                hash: this.hash,
                pers: options.pers,
                persEnc: options.persEnc || 'utf8',
                entropy: options.entropy || rand(this.hash.hmacStrength),
                entropyEnc: options.entropy && options.entropyEnc || 'utf8',
                nonce: this.n.toArray()
            });

            var bytes = this.n.byteLength();
            var ns2 = this.n.sub(new BN(2));
            do {
                var priv = new BN(drbg.generate(bytes));
                if (priv.cmp(ns2) > 0)
                    continue;

                priv.iaddn(1);
                return this.keyFromPrivate(priv);
            } while (true);
        };

        EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
            var delta = msg.byteLength() * 8 - this.n.bitLength();
            if (delta > 0)
                msg = msg.ushrn(delta);
            if (!truncOnly && msg.cmp(this.n) >= 0)
                return msg.sub(this.n);
            else
                return msg;
        };

        EC.prototype.sign = function sign(msg, key, enc, options) {
            if (typeof enc === 'object') {
                options = enc;
                enc = null;
            }
            if (!options)
                options = {};

            key = this.keyFromPrivate(key, enc);
            msg = this._truncateToN(new BN(msg, 16));

            // Zero-extend key to provide enough entropy
            var bytes = this.n.byteLength();
            var bkey = key.getPrivate().toArray('be', bytes);

            // Zero-extend nonce to have the same byte size as N
            var nonce = msg.toArray('be', bytes);

            // Instantiate Hmac_DRBG
            var drbg = new HmacDRBG({
                hash: this.hash,
                entropy: bkey,
                nonce: nonce,
                pers: options.pers,
                persEnc: options.persEnc || 'utf8'
            });

            // Number of bytes to generate
            var ns1 = this.n.sub(new BN(1));

            for (var iter = 0; true; iter++) {
                var k = options.k ?
                    options.k(iter) :
                    new BN(drbg.generate(this.n.byteLength()));
                k = this._truncateToN(k, true);
                if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
                    continue;

                var kp = this.g.mul(k);
                if (kp.isInfinity())
                    continue;

                var kpX = kp.getX();
                var r = kpX.umod(this.n);
                if (r.cmpn(0) === 0)
                    continue;

                var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
                s = s.umod(this.n);
                if (s.cmpn(0) === 0)
                    continue;

                var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                    (kpX.cmp(r) !== 0 ? 2 : 0);

                // Use complement of `s`, if it is > `n / 2`
                if (options.canonical && s.cmp(this.nh) > 0) {
                    s = this.n.sub(s);
                    recoveryParam ^= 1;
                }

                return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
            }
        };

        EC.prototype.verify = function verify(msg, signature, key, enc) {
            msg = this._truncateToN(new BN(msg, 16));
            key = this.keyFromPublic(key, enc);
            signature = new Signature(signature, 'hex');

            // Perform primitive values validation
            var r = signature.r;
            var s = signature.s;
            if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
                return false;
            if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
                return false;

            // Validate signature
            var sinv = s.invm(this.n);
            var u1 = sinv.mul(msg).umod(this.n);
            var u2 = sinv.mul(r).umod(this.n);

            if (!this.curve._maxwellTrick) {
                var p = this.g.mulAdd(u1, key.getPublic(), u2);
                if (p.isInfinity())
                    return false;

                return p.getX().umod(this.n).cmp(r) === 0;
            }

            // NOTE: Greg Maxwell's trick, inspired by:
            // https://git.io/vad3K

            var p = this.g.jmulAdd(u1, key.getPublic(), u2);
            if (p.isInfinity())
                return false;

            // Compare `p.x` of Jacobian point with `r`,
            // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
            // inverse of `p.z^2`
            return p.eqXToP(r);
        };

        EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
            assert((3 & j) === j, 'The recovery param is more than two bits');
            signature = new Signature(signature, enc);

            var n = this.n;
            var e = new BN(msg);
            var r = signature.r;
            var s = signature.s;

            // A set LSB signifies that the y-coordinate is odd
            var isYOdd = j & 1;
            var isSecondKey = j >> 1;
            if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
                throw new Error('Unable to find sencond key candinate');

            // 1.1. Let x = r + jn.
            if (isSecondKey)
                r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
            else
                r = this.curve.pointFromX(r, isYOdd);

            var rInv = signature.r.invm(n);
            var s1 = n.sub(e).mul(rInv).umod(n);
            var s2 = s.mul(rInv).umod(n);

            // 1.6.1 Compute Q = r^-1 (sR -  eG)
            //               Q = r^-1 (sR + -eG)
            return this.g.mulAdd(s1, r, s2);
        };

        EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
            signature = new Signature(signature, enc);
            if (signature.recoveryParam !== null)
                return signature.recoveryParam;

            for (var i = 0; i < 4; i++) {
                var Qprime;
                try {
                    Qprime = this.recoverPubKey(e, signature, i);
                } catch (e) {
                    continue;
                }

                if (Qprime.eq(Q))
                    return i;
            }
            throw new Error('Unable to find valid recovery factor');
        };

    },{"../curves":98,"../utils":106,"./key":100,"./signature":101,"bn.js":22,"brorand":23,"hmac-drbg":138}],100:[function(require,module,exports){
        'use strict';

        var BN = require('bn.js');
        var utils = require('../utils');
        var assert = utils.assert;

        function KeyPair(ec, options) {
            this.ec = ec;
            this.priv = null;
            this.pub = null;

            // KeyPair(ec, { priv: ..., pub: ... })
            if (options.priv)
                this._importPrivate(options.priv, options.privEnc);
            if (options.pub)
                this._importPublic(options.pub, options.pubEnc);
        }
        module.exports = KeyPair;

        KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
            if (pub instanceof KeyPair)
                return pub;

            return new KeyPair(ec, {
                pub: pub,
                pubEnc: enc
            });
        };

        KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
            if (priv instanceof KeyPair)
                return priv;

            return new KeyPair(ec, {
                priv: priv,
                privEnc: enc
            });
        };

        KeyPair.prototype.validate = function validate() {
            var pub = this.getPublic();

            if (pub.isInfinity())
                return { result: false, reason: 'Invalid public key' };
            if (!pub.validate())
                return { result: false, reason: 'Public key is not a point' };
            if (!pub.mul(this.ec.curve.n).isInfinity())
                return { result: false, reason: 'Public key * N != O' };

            return { result: true, reason: null };
        };

        KeyPair.prototype.getPublic = function getPublic(compact, enc) {
            // compact is optional argument
            if (typeof compact === 'string') {
                enc = compact;
                compact = null;
            }

            if (!this.pub)
                this.pub = this.ec.g.mul(this.priv);

            if (!enc)
                return this.pub;

            return this.pub.encode(enc, compact);
        };

        KeyPair.prototype.getPrivate = function getPrivate(enc) {
            if (enc === 'hex')
                return this.priv.toString(16, 2);
            else
                return this.priv;
        };

        KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
            this.priv = new BN(key, enc || 16);

            // Ensure that the priv won't be bigger than n, otherwise we may fail
            // in fixed multiplication method
            this.priv = this.priv.umod(this.ec.curve.n);
        };

        KeyPair.prototype._importPublic = function _importPublic(key, enc) {
            if (key.x || key.y) {
                // Montgomery points only have an `x` coordinate.
                // Weierstrass/Edwards points on the other hand have both `x` and
                // `y` coordinates.
                if (this.ec.curve.type === 'mont') {
                    assert(key.x, 'Need x coordinate');
                } else if (this.ec.curve.type === 'short' ||
                    this.ec.curve.type === 'edwards') {
                    assert(key.x && key.y, 'Need both x and y coordinate');
                }
                this.pub = this.ec.curve.point(key.x, key.y);
                return;
            }
            this.pub = this.ec.curve.decodePoint(key, enc);
        };

// ECDH
        KeyPair.prototype.derive = function derive(pub) {
            return pub.mul(this.priv).getX();
        };

// ECDSA
        KeyPair.prototype.sign = function sign(msg, enc, options) {
            return this.ec.sign(msg, this, enc, options);
        };

        KeyPair.prototype.verify = function verify(msg, signature) {
            return this.ec.verify(msg, signature, this);
        };

        KeyPair.prototype.inspect = function inspect() {
            return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
                ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
        };

    },{"../utils":106,"bn.js":22}],101:[function(require,module,exports){
        'use strict';

        var BN = require('bn.js');

        var utils = require('../utils');
        var assert = utils.assert;

        function Signature(options, enc) {
            if (options instanceof Signature)
                return options;

            if (this._importDER(options, enc))
                return;

            assert(options.r && options.s, 'Signature without r or s');
            this.r = new BN(options.r, 16);
            this.s = new BN(options.s, 16);
            if (options.recoveryParam === undefined)
                this.recoveryParam = null;
            else
                this.recoveryParam = options.recoveryParam;
        }
        module.exports = Signature;

        function Position() {
            this.place = 0;
        }

        function getLength(buf, p) {
            var initial = buf[p.place++];
            if (!(initial & 0x80)) {
                return initial;
            }
            var octetLen = initial & 0xf;

            // Indefinite length or overflow
            if (octetLen === 0 || octetLen > 4) {
                return false;
            }

            var val = 0;
            for (var i = 0, off = p.place; i < octetLen; i++, off++) {
                val <<= 8;
                val |= buf[off];
                val >>>= 0;
            }

            // Leading zeroes
            if (val <= 0x7f) {
                return false;
            }

            p.place = off;
            return val;
        }

        function rmPadding(buf) {
            var i = 0;
            var len = buf.length - 1;
            while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
                i++;
            }
            if (i === 0) {
                return buf;
            }
            return buf.slice(i);
        }

        Signature.prototype._importDER = function _importDER(data, enc) {
            data = utils.toArray(data, enc);
            var p = new Position();
            if (data[p.place++] !== 0x30) {
                return false;
            }
            var len = getLength(data, p);
            if (len === false) {
                return false;
            }
            if ((len + p.place) !== data.length) {
                return false;
            }
            if (data[p.place++] !== 0x02) {
                return false;
            }
            var rlen = getLength(data, p);
            if (rlen === false) {
                return false;
            }
            var r = data.slice(p.place, rlen + p.place);
            p.place += rlen;
            if (data[p.place++] !== 0x02) {
                return false;
            }
            var slen = getLength(data, p);
            if (slen === false) {
                return false;
            }
            if (data.length !== slen + p.place) {
                return false;
            }
            var s = data.slice(p.place, slen + p.place);
            if (r[0] === 0) {
                if (r[1] & 0x80) {
                    r = r.slice(1);
                } else {
                    // Leading zeroes
                    return false;
                }
            }
            if (s[0] === 0) {
                if (s[1] & 0x80) {
                    s = s.slice(1);
                } else {
                    // Leading zeroes
                    return false;
                }
            }

            this.r = new BN(r);
            this.s = new BN(s);
            this.recoveryParam = null;

            return true;
        };

        function constructLength(arr, len) {
            if (len < 0x80) {
                arr.push(len);
                return;
            }
            var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
            arr.push(octets | 0x80);
            while (--octets) {
                arr.push((len >>> (octets << 3)) & 0xff);
            }
            arr.push(len);
        }

        Signature.prototype.toDER = function toDER(enc) {
            var r = this.r.toArray();
            var s = this.s.toArray();

            // Pad values
            if (r[0] & 0x80)
                r = [ 0 ].concat(r);
            // Pad values
            if (s[0] & 0x80)
                s = [ 0 ].concat(s);

            r = rmPadding(r);
            s = rmPadding(s);

            while (!s[0] && !(s[1] & 0x80)) {
                s = s.slice(1);
            }
            var arr = [ 0x02 ];
            constructLength(arr, r.length);
            arr = arr.concat(r);
            arr.push(0x02);
            constructLength(arr, s.length);
            var backHalf = arr.concat(s);
            var res = [ 0x30 ];
            constructLength(res, backHalf.length);
            res = res.concat(backHalf);
            return utils.encode(res, enc);
        };

    },{"../utils":106,"bn.js":22}],102:[function(require,module,exports){
        'use strict';

        var hash = require('hash.js');
        var curves = require('../curves');
        var utils = require('../utils');
        var assert = utils.assert;
        var parseBytes = utils.parseBytes;
        var KeyPair = require('./key');
        var Signature = require('./signature');

        function EDDSA(curve) {
            assert(curve === 'ed25519', 'only tested with ed25519 so far');

            if (!(this instanceof EDDSA))
                return new EDDSA(curve);

            var curve = curves[curve].curve;
            this.curve = curve;
            this.g = curve.g;
            this.g.precompute(curve.n.bitLength() + 1);

            this.pointClass = curve.point().constructor;
            this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
            this.hash = hash.sha512;
        }

        module.exports = EDDSA;

        /**
         * @param {Array|String} message - message bytes
         * @param {Array|String|KeyPair} secret - secret bytes or a keypair
         * @returns {Signature} - signature
         */
        EDDSA.prototype.sign = function sign(message, secret) {
            message = parseBytes(message);
            var key = this.keyFromSecret(secret);
            var r = this.hashInt(key.messagePrefix(), message);
            var R = this.g.mul(r);
            var Rencoded = this.encodePoint(R);
            var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
                .mul(key.priv());
            var S = r.add(s_).umod(this.curve.n);
            return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
        };

        /**
         * @param {Array} message - message bytes
         * @param {Array|String|Signature} sig - sig bytes
         * @param {Array|String|Point|KeyPair} pub - public key
         * @returns {Boolean} - true if public key matches sig of message
         */
        EDDSA.prototype.verify = function verify(message, sig, pub) {
            message = parseBytes(message);
            sig = this.makeSignature(sig);
            var key = this.keyFromPublic(pub);
            var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
            var SG = this.g.mul(sig.S());
            var RplusAh = sig.R().add(key.pub().mul(h));
            return RplusAh.eq(SG);
        };

        EDDSA.prototype.hashInt = function hashInt() {
            var hash = this.hash();
            for (var i = 0; i < arguments.length; i++)
                hash.update(arguments[i]);
            return utils.intFromLE(hash.digest()).umod(this.curve.n);
        };

        EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
            return KeyPair.fromPublic(this, pub);
        };

        EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
            return KeyPair.fromSecret(this, secret);
        };

        EDDSA.prototype.makeSignature = function makeSignature(sig) {
            if (sig instanceof Signature)
                return sig;
            return new Signature(this, sig);
        };

        /**
         * * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
         *
         * EDDSA defines methods for encoding and decoding points and integers. These are
         * helper convenience methods, that pass along to utility functions implied
         * parameters.
         *
         */
        EDDSA.prototype.encodePoint = function encodePoint(point) {
            var enc = point.getY().toArray('le', this.encodingLength);
            enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
            return enc;
        };

        EDDSA.prototype.decodePoint = function decodePoint(bytes) {
            bytes = utils.parseBytes(bytes);

            var lastIx = bytes.length - 1;
            var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
            var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

            var y = utils.intFromLE(normed);
            return this.curve.pointFromY(y, xIsOdd);
        };

        EDDSA.prototype.encodeInt = function encodeInt(num) {
            return num.toArray('le', this.encodingLength);
        };

        EDDSA.prototype.decodeInt = function decodeInt(bytes) {
            return utils.intFromLE(bytes);
        };

        EDDSA.prototype.isPoint = function isPoint(val) {
            return val instanceof this.pointClass;
        };

    },{"../curves":98,"../utils":106,"./key":103,"./signature":104,"hash.js":126}],103:[function(require,module,exports){
        'use strict';

        var utils = require('../utils');
        var assert = utils.assert;
        var parseBytes = utils.parseBytes;
        var cachedProperty = utils.cachedProperty;

        /**
         * @param {EDDSA} eddsa - instance
         * @param {Object} params - public/private key parameters
         *
         * @param {Array<Byte>} [params.secret] - secret seed bytes
         * @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
         * @param {Array<Byte>} [params.pub] - public key point encoded as bytes
         *
         */
        function KeyPair(eddsa, params) {
            this.eddsa = eddsa;
            this._secret = parseBytes(params.secret);
            if (eddsa.isPoint(params.pub))
                this._pub = params.pub;
            else
                this._pubBytes = parseBytes(params.pub);
        }

        KeyPair.fromPublic = function fromPublic(eddsa, pub) {
            if (pub instanceof KeyPair)
                return pub;
            return new KeyPair(eddsa, { pub: pub });
        };

        KeyPair.fromSecret = function fromSecret(eddsa, secret) {
            if (secret instanceof KeyPair)
                return secret;
            return new KeyPair(eddsa, { secret: secret });
        };

        KeyPair.prototype.secret = function secret() {
            return this._secret;
        };

        cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
            return this.eddsa.encodePoint(this.pub());
        });

        cachedProperty(KeyPair, 'pub', function pub() {
            if (this._pubBytes)
                return this.eddsa.decodePoint(this._pubBytes);
            return this.eddsa.g.mul(this.priv());
        });

        cachedProperty(KeyPair, 'privBytes', function privBytes() {
            var eddsa = this.eddsa;
            var hash = this.hash();
            var lastIx = eddsa.encodingLength - 1;

            var a = hash.slice(0, eddsa.encodingLength);
            a[0] &= 248;
            a[lastIx] &= 127;
            a[lastIx] |= 64;

            return a;
        });

        cachedProperty(KeyPair, 'priv', function priv() {
            return this.eddsa.decodeInt(this.privBytes());
        });

        cachedProperty(KeyPair, 'hash', function hash() {
            return this.eddsa.hash().update(this.secret()).digest();
        });

        cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
            return this.hash().slice(this.eddsa.encodingLength);
        });

        KeyPair.prototype.sign = function sign(message) {
            assert(this._secret, 'KeyPair can only verify');
            return this.eddsa.sign(message, this);
        };

        KeyPair.prototype.verify = function verify(message, sig) {
            return this.eddsa.verify(message, sig, this);
        };

        KeyPair.prototype.getSecret = function getSecret(enc) {
            assert(this._secret, 'KeyPair is public only');
            return utils.encode(this.secret(), enc);
        };

        KeyPair.prototype.getPublic = function getPublic(enc) {
            return utils.encode(this.pubBytes(), enc);
        };

        module.exports = KeyPair;

    },{"../utils":106}],104:[function(require,module,exports){
        'use strict';

        var BN = require('bn.js');
        var utils = require('../utils');
        var assert = utils.assert;
        var cachedProperty = utils.cachedProperty;
        var parseBytes = utils.parseBytes;

        /**
         * @param {EDDSA} eddsa - eddsa instance
         * @param {Array<Bytes>|Object} sig -
         * @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
         * @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
         * @param {Array<Bytes>} [sig.Rencoded] - R point encoded
         * @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
         */
        function Signature(eddsa, sig) {
            this.eddsa = eddsa;

            if (typeof sig !== 'object')
                sig = parseBytes(sig);

            if (Array.isArray(sig)) {
                sig = {
                    R: sig.slice(0, eddsa.encodingLength),
                    S: sig.slice(eddsa.encodingLength)
                };
            }

            assert(sig.R && sig.S, 'Signature without R or S');

            if (eddsa.isPoint(sig.R))
                this._R = sig.R;
            if (sig.S instanceof BN)
                this._S = sig.S;

            this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
            this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
        }

        cachedProperty(Signature, 'S', function S() {
            return this.eddsa.decodeInt(this.Sencoded());
        });

        cachedProperty(Signature, 'R', function R() {
            return this.eddsa.decodePoint(this.Rencoded());
        });

        cachedProperty(Signature, 'Rencoded', function Rencoded() {
            return this.eddsa.encodePoint(this.R());
        });

        cachedProperty(Signature, 'Sencoded', function Sencoded() {
            return this.eddsa.encodeInt(this.S());
        });

        Signature.prototype.toBytes = function toBytes() {
            return this.Rencoded().concat(this.Sencoded());
        };

        Signature.prototype.toHex = function toHex() {
            return utils.encode(this.toBytes(), 'hex').toUpperCase();
        };

        module.exports = Signature;

    },{"../utils":106,"bn.js":22}],105:[function(require,module,exports){
        module.exports = {
            doubles: {
                step: 4,
                points: [
                    [
                        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
                        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'
                    ],
                    [
                        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
                        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'
                    ],
                    [
                        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
                        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'
                    ],
                    [
                        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
                        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'
                    ],
                    [
                        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
                        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'
                    ],
                    [
                        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
                        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'
                    ],
                    [
                        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
                        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'
                    ],
                    [
                        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
                        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'
                    ],
                    [
                        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
                        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'
                    ],
                    [
                        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
                        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'
                    ],
                    [
                        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
                        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'
                    ],
                    [
                        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
                        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'
                    ],
                    [
                        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
                        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'
                    ],
                    [
                        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
                        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'
                    ],
                    [
                        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
                        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'
                    ],
                    [
                        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
                        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'
                    ],
                    [
                        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
                        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'
                    ],
                    [
                        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
                        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'
                    ],
                    [
                        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
                        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'
                    ],
                    [
                        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
                        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'
                    ],
                    [
                        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
                        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'
                    ],
                    [
                        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
                        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'
                    ],
                    [
                        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
                        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'
                    ],
                    [
                        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
                        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'
                    ],
                    [
                        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
                        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'
                    ],
                    [
                        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
                        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'
                    ],
                    [
                        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
                        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'
                    ],
                    [
                        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
                        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'
                    ],
                    [
                        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
                        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'
                    ],
                    [
                        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
                        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'
                    ],
                    [
                        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
                        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'
                    ],
                    [
                        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
                        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'
                    ],
                    [
                        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
                        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'
                    ],
                    [
                        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
                        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'
                    ],
                    [
                        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
                        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'
                    ],
                    [
                        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
                        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'
                    ],
                    [
                        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
                        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'
                    ],
                    [
                        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
                        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'
                    ],
                    [
                        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
                        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'
                    ],
                    [
                        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
                        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'
                    ],
                    [
                        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
                        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'
                    ],
                    [
                        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
                        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'
                    ],
                    [
                        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
                        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'
                    ],
                    [
                        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
                        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'
                    ],
                    [
                        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
                        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'
                    ],
                    [
                        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
                        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'
                    ],
                    [
                        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
                        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'
                    ],
                    [
                        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
                        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'
                    ],
                    [
                        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
                        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'
                    ],
                    [
                        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
                        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'
                    ],
                    [
                        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
                        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'
                    ],
                    [
                        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
                        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'
                    ],
                    [
                        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
                        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'
                    ],
                    [
                        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
                        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'
                    ],
                    [
                        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
                        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'
                    ],
                    [
                        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
                        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'
                    ],
                    [
                        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
                        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'
                    ],
                    [
                        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
                        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'
                    ],
                    [
                        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
                        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'
                    ],
                    [
                        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
                        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'
                    ],
                    [
                        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
                        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'
                    ],
                    [
                        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
                        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'
                    ],
                    [
                        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
                        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'
                    ],
                    [
                        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
                        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'
                    ],
                    [
                        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
                        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'
                    ]
                ]
            },
            naf: {
                wnd: 7,
                points: [
                    [
                        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
                        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'
                    ],
                    [
                        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
                        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'
                    ],
                    [
                        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
                        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'
                    ],
                    [
                        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
                        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'
                    ],
                    [
                        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
                        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'
                    ],
                    [
                        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
                        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'
                    ],
                    [
                        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
                        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'
                    ],
                    [
                        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
                        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'
                    ],
                    [
                        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
                        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'
                    ],
                    [
                        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
                        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'
                    ],
                    [
                        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
                        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'
                    ],
                    [
                        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
                        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'
                    ],
                    [
                        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
                        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'
                    ],
                    [
                        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
                        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'
                    ],
                    [
                        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
                        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'
                    ],
                    [
                        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
                        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'
                    ],
                    [
                        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
                        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'
                    ],
                    [
                        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
                        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'
                    ],
                    [
                        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
                        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'
                    ],
                    [
                        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
                        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'
                    ],
                    [
                        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
                        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'
                    ],
                    [
                        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
                        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'
                    ],
                    [
                        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
                        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'
                    ],
                    [
                        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
                        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'
                    ],
                    [
                        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
                        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'
                    ],
                    [
                        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
                        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'
                    ],
                    [
                        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
                        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'
                    ],
                    [
                        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
                        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'
                    ],
                    [
                        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
                        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'
                    ],
                    [
                        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
                        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'
                    ],
                    [
                        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
                        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'
                    ],
                    [
                        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
                        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'
                    ],
                    [
                        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
                        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'
                    ],
                    [
                        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
                        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'
                    ],
                    [
                        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
                        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'
                    ],
                    [
                        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
                        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'
                    ],
                    [
                        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
                        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'
                    ],
                    [
                        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
                        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'
                    ],
                    [
                        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
                        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'
                    ],
                    [
                        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
                        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'
                    ],
                    [
                        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
                        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'
                    ],
                    [
                        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
                        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'
                    ],
                    [
                        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
                        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'
                    ],
                    [
                        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
                        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'
                    ],
                    [
                        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
                        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'
                    ],
                    [
                        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
                        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'
                    ],
                    [
                        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
                        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'
                    ],
                    [
                        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
                        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'
                    ],
                    [
                        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
                        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'
                    ],
                    [
                        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
                        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'
                    ],
                    [
                        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
                        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'
                    ],
                    [
                        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
                        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'
                    ],
                    [
                        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
                        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'
                    ],
                    [
                        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
                        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'
                    ],
                    [
                        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
                        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'
                    ],
                    [
                        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
                        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'
                    ],
                    [
                        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
                        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'
                    ],
                    [
                        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
                        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'
                    ],
                    [
                        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
                        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'
                    ],
                    [
                        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
                        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'
                    ],
                    [
                        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
                        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'
                    ],
                    [
                        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
                        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'
                    ],
                    [
                        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
                        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'
                    ],
                    [
                        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
                        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'
                    ],
                    [
                        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
                        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'
                    ],
                    [
                        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
                        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'
                    ],
                    [
                        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
                        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'
                    ],
                    [
                        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
                        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'
                    ],
                    [
                        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
                        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'
                    ],
                    [
                        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
                        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'
                    ],
                    [
                        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
                        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'
                    ],
                    [
                        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
                        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'
                    ],
                    [
                        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
                        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'
                    ],
                    [
                        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
                        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'
                    ],
                    [
                        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
                        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'
                    ],
                    [
                        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
                        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'
                    ],
                    [
                        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
                        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'
                    ],
                    [
                        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
                        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'
                    ],
                    [
                        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
                        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'
                    ],
                    [
                        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
                        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'
                    ],
                    [
                        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
                        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'
                    ],
                    [
                        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
                        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'
                    ],
                    [
                        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
                        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'
                    ],
                    [
                        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
                        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'
                    ],
                    [
                        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
                        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'
                    ],
                    [
                        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
                        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'
                    ],
                    [
                        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
                        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'
                    ],
                    [
                        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
                        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'
                    ],
                    [
                        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
                        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'
                    ],
                    [
                        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
                        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'
                    ],
                    [
                        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
                        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'
                    ],
                    [
                        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
                        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'
                    ],
                    [
                        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
                        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'
                    ],
                    [
                        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
                        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'
                    ],
                    [
                        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
                        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'
                    ],
                    [
                        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
                        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'
                    ],
                    [
                        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
                        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'
                    ],
                    [
                        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
                        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'
                    ],
                    [
                        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
                        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'
                    ],
                    [
                        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
                        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'
                    ],
                    [
                        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
                        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'
                    ],
                    [
                        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
                        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'
                    ],
                    [
                        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
                        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'
                    ],
                    [
                        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
                        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'
                    ],
                    [
                        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
                        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'
                    ],
                    [
                        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
                        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'
                    ],
                    [
                        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
                        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'
                    ],
                    [
                        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
                        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'
                    ],
                    [
                        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
                        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'
                    ],
                    [
                        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
                        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'
                    ],
                    [
                        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
                        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'
                    ],
                    [
                        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
                        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'
                    ],
                    [
                        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
                        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'
                    ],
                    [
                        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
                        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'
                    ],
                    [
                        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
                        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'
                    ],
                    [
                        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
                        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'
                    ],
                    [
                        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
                        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'
                    ],
                    [
                        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
                        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'
                    ],
                    [
                        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
                        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'
                    ],
                    [
                        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
                        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'
                    ],
                    [
                        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
                        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'
                    ],
                    [
                        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
                        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'
                    ],
                    [
                        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
                        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'
                    ],
                    [
                        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
                        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'
                    ],
                    [
                        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
                        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'
                    ],
                    [
                        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
                        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'
                    ],
                    [
                        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
                        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'
                    ]
                ]
            }
        };

    },{}],106:[function(require,module,exports){
        'use strict';

        var utils = exports;
        var BN = require('bn.js');
        var minAssert = require('minimalistic-assert');
        var minUtils = require('minimalistic-crypto-utils');

        utils.assert = minAssert;
        utils.toArray = minUtils.toArray;
        utils.zero2 = minUtils.zero2;
        utils.toHex = minUtils.toHex;
        utils.encode = minUtils.encode;

// Represent num in a w-NAF form
        function getNAF(num, w, bits) {
            var naf = new Array(Math.max(num.bitLength(), bits) + 1);
            naf.fill(0);

            var ws = 1 << (w + 1);
            var k = num.clone();

            for (var i = 0; i < naf.length; i++) {
                var z;
                var mod = k.andln(ws - 1);
                if (k.isOdd()) {
                    if (mod > (ws >> 1) - 1)
                        z = (ws >> 1) - mod;
                    else
                        z = mod;
                    k.isubn(z);
                } else {
                    z = 0;
                }

                naf[i] = z;
                k.iushrn(1);
            }

            return naf;
        }
        utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
        function getJSF(k1, k2) {
            var jsf = [
                [],
                []
            ];

            k1 = k1.clone();
            k2 = k2.clone();
            var d1 = 0;
            var d2 = 0;
            while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

                // First phase
                var m14 = (k1.andln(3) + d1) & 3;
                var m24 = (k2.andln(3) + d2) & 3;
                if (m14 === 3)
                    m14 = -1;
                if (m24 === 3)
                    m24 = -1;
                var u1;
                if ((m14 & 1) === 0) {
                    u1 = 0;
                } else {
                    var m8 = (k1.andln(7) + d1) & 7;
                    if ((m8 === 3 || m8 === 5) && m24 === 2)
                        u1 = -m14;
                    else
                        u1 = m14;
                }
                jsf[0].push(u1);

                var u2;
                if ((m24 & 1) === 0) {
                    u2 = 0;
                } else {
                    var m8 = (k2.andln(7) + d2) & 7;
                    if ((m8 === 3 || m8 === 5) && m14 === 2)
                        u2 = -m24;
                    else
                        u2 = m24;
                }
                jsf[1].push(u2);

                // Second phase
                if (2 * d1 === u1 + 1)
                    d1 = 1 - d1;
                if (2 * d2 === u2 + 1)
                    d2 = 1 - d2;
                k1.iushrn(1);
                k2.iushrn(1);
            }

            return jsf;
        }
        utils.getJSF = getJSF;

        function cachedProperty(obj, name, computer) {
            var key = '_' + name;
            obj.prototype[name] = function cachedProperty() {
                return this[key] !== undefined ? this[key] :
                    this[key] = computer.call(this);
            };
        }
        utils.cachedProperty = cachedProperty;

        function parseBytes(bytes) {
            return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
                bytes;
        }
        utils.parseBytes = parseBytes;

        function intFromLE(bytes) {
            return new BN(bytes, 'hex', 'le');
        }
        utils.intFromLE = intFromLE;


    },{"bn.js":22,"minimalistic-assert":145,"minimalistic-crypto-utils":146}],107:[function(require,module,exports){
        module.exports={
            "name": "elliptic",
            "version": "6.5.3",
            "description": "EC cryptography",
            "main": "lib/elliptic.js",
            "files": [
                "lib"
            ],
            "scripts": {
                "jscs": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
                "jshint": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
                "lint": "npm run jscs && npm run jshint",
                "unit": "istanbul test _mocha --reporter=spec test/index.js",
                "test": "npm run lint && npm run unit",
                "version": "grunt dist && git add dist/"
            },
            "repository": {
                "type": "git",
                "url": "git@github.com:indutny/elliptic"
            },
            "keywords": [
                "EC",
                "Elliptic",
                "curve",
                "Cryptography"
            ],
            "author": "Fedor Indutny <fedor@indutny.com>",
            "license": "MIT",
            "bugs": {
                "url": "https://github.com/indutny/elliptic/issues"
            },
            "homepage": "https://github.com/indutny/elliptic",
            "devDependencies": {
                "brfs": "^1.4.3",
                "coveralls": "^3.0.8",
                "grunt": "^1.0.4",
                "grunt-browserify": "^5.0.0",
                "grunt-cli": "^1.2.0",
                "grunt-contrib-connect": "^1.0.0",
                "grunt-contrib-copy": "^1.0.0",
                "grunt-contrib-uglify": "^1.0.1",
                "grunt-mocha-istanbul": "^3.0.1",
                "grunt-saucelabs": "^9.0.1",
                "istanbul": "^0.4.2",
                "jscs": "^3.0.7",
                "jshint": "^2.10.3",
                "mocha": "^6.2.2"
            },
            "dependencies": {
                "bn.js": "^4.4.0",
                "brorand": "^1.0.1",
                "hash.js": "^1.0.0",
                "hmac-drbg": "^1.0.0",
                "inherits": "^2.0.1",
                "minimalistic-assert": "^1.0.0",
                "minimalistic-crypto-utils": "^1.0.0"
            }
        }

    },{}],108:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

        var objectCreate = Object.create || objectCreatePolyfill
        var objectKeys = Object.keys || objectKeysPolyfill
        var bind = Function.prototype.bind || functionBindPolyfill

        function EventEmitter() {
            if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {
                this._events = objectCreate(null);
                this._eventsCount = 0;
            }

            this._maxListeners = this._maxListeners || undefined;
        }
        module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
        EventEmitter.EventEmitter = EventEmitter;

        EventEmitter.prototype._events = undefined;
        EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
        var defaultMaxListeners = 10;

        var hasDefineProperty;
        try {
            var o = {};
            if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });
            hasDefineProperty = o.x === 0;
        } catch (err) { hasDefineProperty = false }
        if (hasDefineProperty) {
            Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
                enumerable: true,
                get: function() {
                    return defaultMaxListeners;
                },
                set: function(arg) {
                    // check whether the input is a positive number (whose value is zero or
                    // greater and not a NaN).
                    if (typeof arg !== 'number' || arg < 0 || arg !== arg)
                        throw new TypeError('"defaultMaxListeners" must be a positive number');
                    defaultMaxListeners = arg;
                }
            });
        } else {
            EventEmitter.defaultMaxListeners = defaultMaxListeners;
        }

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
        EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
            if (typeof n !== 'number' || n < 0 || isNaN(n))
                throw new TypeError('"n" argument must be a positive number');
            this._maxListeners = n;
            return this;
        };

        function $getMaxListeners(that) {
            if (that._maxListeners === undefined)
                return EventEmitter.defaultMaxListeners;
            return that._maxListeners;
        }

        EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
            return $getMaxListeners(this);
        };

// These standalone emit* functions are used to optimize calling of event
// handlers for fast cases because emit() itself often has a variable number of
// arguments and can be deoptimized because of that. These functions always have
// the same number of arguments and thus do not get deoptimized, so the code
// inside them can execute faster.
        function emitNone(handler, isFn, self) {
            if (isFn)
                handler.call(self);
            else {
                var len = handler.length;
                var listeners = arrayClone(handler, len);
                for (var i = 0; i < len; ++i)
                    listeners[i].call(self);
            }
        }
        function emitOne(handler, isFn, self, arg1) {
            if (isFn)
                handler.call(self, arg1);
            else {
                var len = handler.length;
                var listeners = arrayClone(handler, len);
                for (var i = 0; i < len; ++i)
                    listeners[i].call(self, arg1);
            }
        }
        function emitTwo(handler, isFn, self, arg1, arg2) {
            if (isFn)
                handler.call(self, arg1, arg2);
            else {
                var len = handler.length;
                var listeners = arrayClone(handler, len);
                for (var i = 0; i < len; ++i)
                    listeners[i].call(self, arg1, arg2);
            }
        }
        function emitThree(handler, isFn, self, arg1, arg2, arg3) {
            if (isFn)
                handler.call(self, arg1, arg2, arg3);
            else {
                var len = handler.length;
                var listeners = arrayClone(handler, len);
                for (var i = 0; i < len; ++i)
                    listeners[i].call(self, arg1, arg2, arg3);
            }
        }

        function emitMany(handler, isFn, self, args) {
            if (isFn)
                handler.apply(self, args);
            else {
                var len = handler.length;
                var listeners = arrayClone(handler, len);
                for (var i = 0; i < len; ++i)
                    listeners[i].apply(self, args);
            }
        }

        EventEmitter.prototype.emit = function emit(type) {
            var er, handler, len, args, i, events;
            var doError = (type === 'error');

            events = this._events;
            if (events)
                doError = (doError && events.error == null);
            else if (!doError)
                return false;

            // If there is no 'error' event listener then throw.
            if (doError) {
                if (arguments.length > 1)
                    er = arguments[1];
                if (er instanceof Error) {
                    throw er; // Unhandled 'error' event
                } else {
                    // At least give some kind of context to the user
                    var err = new Error('Unhandled "error" event. (' + er + ')');
                    err.context = er;
                    throw err;
                }
                return false;
            }

            handler = events[type];

            if (!handler)
                return false;

            var isFn = typeof handler === 'function';
            len = arguments.length;
            switch (len) {
                // fast cases
                case 1:
                    emitNone(handler, isFn, this);
                    break;
                case 2:
                    emitOne(handler, isFn, this, arguments[1]);
                    break;
                case 3:
                    emitTwo(handler, isFn, this, arguments[1], arguments[2]);
                    break;
                case 4:
                    emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);
                    break;
                // slower
                default:
                    args = new Array(len - 1);
                    for (i = 1; i < len; i++)
                        args[i - 1] = arguments[i];
                    emitMany(handler, isFn, this, args);
            }

            return true;
        };

        function _addListener(target, type, listener, prepend) {
            var m;
            var events;
            var existing;

            if (typeof listener !== 'function')
                throw new TypeError('"listener" argument must be a function');

            events = target._events;
            if (!events) {
                events = target._events = objectCreate(null);
                target._eventsCount = 0;
            } else {
                // To avoid recursion in the case that type === "newListener"! Before
                // adding it to the listeners, first emit "newListener".
                if (events.newListener) {
                    target.emit('newListener', type,
                        listener.listener ? listener.listener : listener);

                    // Re-assign `events` because a newListener handler could have caused the
                    // this._events to be assigned to a new object
                    events = target._events;
                }
                existing = events[type];
            }

            if (!existing) {
                // Optimize the case of one listener. Don't need the extra array object.
                existing = events[type] = listener;
                ++target._eventsCount;
            } else {
                if (typeof existing === 'function') {
                    // Adding the second element, need to change to array.
                    existing = events[type] =
                        prepend ? [listener, existing] : [existing, listener];
                } else {
                    // If we've already got an array, just append.
                    if (prepend) {
                        existing.unshift(listener);
                    } else {
                        existing.push(listener);
                    }
                }

                // Check for listener leak
                if (!existing.warned) {
                    m = $getMaxListeners(target);
                    if (m && m > 0 && existing.length > m) {
                        existing.warned = true;
                        var w = new Error('Possible EventEmitter memory leak detected. ' +
                            existing.length + ' "' + String(type) + '" listeners ' +
                            'added. Use emitter.setMaxListeners() to ' +
                            'increase limit.');
                        w.name = 'MaxListenersExceededWarning';
                        w.emitter = target;
                        w.type = type;
                        w.count = existing.length;
                        if (typeof console === 'object' && console.warn) {
                            console.warn('%s: %s', w.name, w.message);
                        }
                    }
                }
            }

            return target;
        }

        EventEmitter.prototype.addListener = function addListener(type, listener) {
            return _addListener(this, type, listener, false);
        };

        EventEmitter.prototype.on = EventEmitter.prototype.addListener;

        EventEmitter.prototype.prependListener =
            function prependListener(type, listener) {
                return _addListener(this, type, listener, true);
            };

        function onceWrapper() {
            if (!this.fired) {
                this.target.removeListener(this.type, this.wrapFn);
                this.fired = true;
                switch (arguments.length) {
                    case 0:
                        return this.listener.call(this.target);
                    case 1:
                        return this.listener.call(this.target, arguments[0]);
                    case 2:
                        return this.listener.call(this.target, arguments[0], arguments[1]);
                    case 3:
                        return this.listener.call(this.target, arguments[0], arguments[1],
                            arguments[2]);
                    default:
                        var args = new Array(arguments.length);
                        for (var i = 0; i < args.length; ++i)
                            args[i] = arguments[i];
                        this.listener.apply(this.target, args);
                }
            }
        }

        function _onceWrap(target, type, listener) {
            var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
            var wrapped = bind.call(onceWrapper, state);
            wrapped.listener = listener;
            state.wrapFn = wrapped;
            return wrapped;
        }

        EventEmitter.prototype.once = function once(type, listener) {
            if (typeof listener !== 'function')
                throw new TypeError('"listener" argument must be a function');
            this.on(type, _onceWrap(this, type, listener));
            return this;
        };

        EventEmitter.prototype.prependOnceListener =
            function prependOnceListener(type, listener) {
                if (typeof listener !== 'function')
                    throw new TypeError('"listener" argument must be a function');
                this.prependListener(type, _onceWrap(this, type, listener));
                return this;
            };

// Emits a 'removeListener' event if and only if the listener was removed.
        EventEmitter.prototype.removeListener =
            function removeListener(type, listener) {
                var list, events, position, i, originalListener;

                if (typeof listener !== 'function')
                    throw new TypeError('"listener" argument must be a function');

                events = this._events;
                if (!events)
                    return this;

                list = events[type];
                if (!list)
                    return this;

                if (list === listener || list.listener === listener) {
                    if (--this._eventsCount === 0)
                        this._events = objectCreate(null);
                    else {
                        delete events[type];
                        if (events.removeListener)
                            this.emit('removeListener', type, list.listener || listener);
                    }
                } else if (typeof list !== 'function') {
                    position = -1;

                    for (i = list.length - 1; i >= 0; i--) {
                        if (list[i] === listener || list[i].listener === listener) {
                            originalListener = list[i].listener;
                            position = i;
                            break;
                        }
                    }

                    if (position < 0)
                        return this;

                    if (position === 0)
                        list.shift();
                    else
                        spliceOne(list, position);

                    if (list.length === 1)
                        events[type] = list[0];

                    if (events.removeListener)
                        this.emit('removeListener', type, originalListener || listener);
                }

                return this;
            };

        EventEmitter.prototype.removeAllListeners =
            function removeAllListeners(type) {
                var listeners, events, i;

                events = this._events;
                if (!events)
                    return this;

                // not listening for removeListener, no need to emit
                if (!events.removeListener) {
                    if (arguments.length === 0) {
                        this._events = objectCreate(null);
                        this._eventsCount = 0;
                    } else if (events[type]) {
                        if (--this._eventsCount === 0)
                            this._events = objectCreate(null);
                        else
                            delete events[type];
                    }
                    return this;
                }

                // emit removeListener for all listeners on all events
                if (arguments.length === 0) {
                    var keys = objectKeys(events);
                    var key;
                    for (i = 0; i < keys.length; ++i) {
                        key = keys[i];
                        if (key === 'removeListener') continue;
                        this.removeAllListeners(key);
                    }
                    this.removeAllListeners('removeListener');
                    this._events = objectCreate(null);
                    this._eventsCount = 0;
                    return this;
                }

                listeners = events[type];

                if (typeof listeners === 'function') {
                    this.removeListener(type, listeners);
                } else if (listeners) {
                    // LIFO order
                    for (i = listeners.length - 1; i >= 0; i--) {
                        this.removeListener(type, listeners[i]);
                    }
                }

                return this;
            };

        function _listeners(target, type, unwrap) {
            var events = target._events;

            if (!events)
                return [];

            var evlistener = events[type];
            if (!evlistener)
                return [];

            if (typeof evlistener === 'function')
                return unwrap ? [evlistener.listener || evlistener] : [evlistener];

            return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
        }

        EventEmitter.prototype.listeners = function listeners(type) {
            return _listeners(this, type, true);
        };

        EventEmitter.prototype.rawListeners = function rawListeners(type) {
            return _listeners(this, type, false);
        };

        EventEmitter.listenerCount = function(emitter, type) {
            if (typeof emitter.listenerCount === 'function') {
                return emitter.listenerCount(type);
            } else {
                return listenerCount.call(emitter, type);
            }
        };

        EventEmitter.prototype.listenerCount = listenerCount;
        function listenerCount(type) {
            var events = this._events;

            if (events) {
                var evlistener = events[type];

                if (typeof evlistener === 'function') {
                    return 1;
                } else if (evlistener) {
                    return evlistener.length;
                }
            }

            return 0;
        }

        EventEmitter.prototype.eventNames = function eventNames() {
            return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
        };

// About 1.5x faster than the two-arg version of Array#splice().
        function spliceOne(list, index) {
            for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)
                list[i] = list[k];
            list.pop();
        }

        function arrayClone(arr, n) {
            var copy = new Array(n);
            for (var i = 0; i < n; ++i)
                copy[i] = arr[i];
            return copy;
        }

        function unwrapListeners(arr) {
            var ret = new Array(arr.length);
            for (var i = 0; i < ret.length; ++i) {
                ret[i] = arr[i].listener || arr[i];
            }
            return ret;
        }

        function objectCreatePolyfill(proto) {
            var F = function() {};
            F.prototype = proto;
            return new F;
        }
        function objectKeysPolyfill(obj) {
            var keys = [];
            for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {
                keys.push(k);
            }
            return k;
        }
        function functionBindPolyfill(context) {
            var fn = this;
            return function () {
                return fn.apply(context, arguments);
            };
        }

    },{}],109:[function(require,module,exports){
        var Buffer = require('safe-buffer').Buffer
        var MD5 = require('md5.js')

        /* eslint-disable camelcase */
        function EVP_BytesToKey (password, salt, keyBits, ivLen) {
            if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')
            if (salt) {
                if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')
                if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')
            }

            var keyLen = keyBits / 8
            var key = Buffer.alloc(keyLen)
            var iv = Buffer.alloc(ivLen || 0)
            var tmp = Buffer.alloc(0)

            while (keyLen > 0 || ivLen > 0) {
                var hash = new MD5()
                hash.update(tmp)
                hash.update(password)
                if (salt) hash.update(salt)
                tmp = hash.digest()

                var used = 0

                if (keyLen > 0) {
                    var keyStart = key.length - keyLen
                    used = Math.min(keyLen, tmp.length)
                    tmp.copy(key, keyStart, 0, used)
                    keyLen -= used
                }

                if (used < tmp.length && ivLen > 0) {
                    var ivStart = iv.length - ivLen
                    var length = Math.min(ivLen, tmp.length - used)
                    tmp.copy(iv, ivStart, used, used + length)
                    ivLen -= length
                }
            }

            tmp.fill(0)
            return { key: key, iv: iv }
        }

        module.exports = EVP_BytesToKey

    },{"md5.js":143,"safe-buffer":184}],110:[function(require,module,exports){
        'use strict'
        var Buffer = require('safe-buffer').Buffer
        var Transform = require('readable-stream').Transform
        var inherits = require('inherits')

        function throwIfNotStringOrBuffer (val, prefix) {
            if (!Buffer.isBuffer(val) && typeof val !== 'string') {
                throw new TypeError(prefix + ' must be a string or a buffer')
            }
        }

        function HashBase (blockSize) {
            Transform.call(this)

            this._block = Buffer.allocUnsafe(blockSize)
            this._blockSize = blockSize
            this._blockOffset = 0
            this._length = [0, 0, 0, 0]

            this._finalized = false
        }

        inherits(HashBase, Transform)

        HashBase.prototype._transform = function (chunk, encoding, callback) {
            var error = null
            try {
                this.update(chunk, encoding)
            } catch (err) {
                error = err
            }

            callback(error)
        }

        HashBase.prototype._flush = function (callback) {
            var error = null
            try {
                this.push(this.digest())
            } catch (err) {
                error = err
            }

            callback(error)
        }

        HashBase.prototype.update = function (data, encoding) {
            throwIfNotStringOrBuffer(data, 'Data')
            if (this._finalized) throw new Error('Digest already called')
            if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)

            // consume data
            var block = this._block
            var offset = 0
            while (this._blockOffset + data.length - offset >= this._blockSize) {
                for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
                this._update()
                this._blockOffset = 0
            }
            while (offset < data.length) block[this._blockOffset++] = data[offset++]

            // update length
            for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
                this._length[j] += carry
                carry = (this._length[j] / 0x0100000000) | 0
                if (carry > 0) this._length[j] -= 0x0100000000 * carry
            }

            return this
        }

        HashBase.prototype._update = function () {
            throw new Error('_update is not implemented')
        }

        HashBase.prototype.digest = function (encoding) {
            if (this._finalized) throw new Error('Digest already called')
            this._finalized = true

            var digest = this._digest()
            if (encoding !== undefined) digest = digest.toString(encoding)

            // reset state
            this._block.fill(0)
            this._blockOffset = 0
            for (var i = 0; i < 4; ++i) this._length[i] = 0

            return digest
        }

        HashBase.prototype._digest = function () {
            throw new Error('_digest is not implemented')
        }

        module.exports = HashBase

    },{"inherits":140,"readable-stream":125,"safe-buffer":184}],111:[function(require,module,exports){
        arguments[4][53][0].apply(exports,arguments)
    },{"dup":53}],112:[function(require,module,exports){
        arguments[4][54][0].apply(exports,arguments)
    },{"./_stream_readable":114,"./_stream_writable":116,"_process":159,"dup":54,"inherits":140}],113:[function(require,module,exports){
        arguments[4][55][0].apply(exports,arguments)
    },{"./_stream_transform":115,"dup":55,"inherits":140}],114:[function(require,module,exports){
        arguments[4][56][0].apply(exports,arguments)
    },{"../errors":111,"./_stream_duplex":112,"./internal/streams/async_iterator":117,"./internal/streams/buffer_list":118,"./internal/streams/destroy":119,"./internal/streams/from":121,"./internal/streams/state":123,"./internal/streams/stream":124,"_process":159,"buffer":68,"dup":56,"events":108,"inherits":140,"string_decoder/":194,"util":24}],115:[function(require,module,exports){
        arguments[4][57][0].apply(exports,arguments)
    },{"../errors":111,"./_stream_duplex":112,"dup":57,"inherits":140}],116:[function(require,module,exports){
        arguments[4][58][0].apply(exports,arguments)
    },{"../errors":111,"./_stream_duplex":112,"./internal/streams/destroy":119,"./internal/streams/state":123,"./internal/streams/stream":124,"_process":159,"buffer":68,"dup":58,"inherits":140,"util-deprecate":196}],117:[function(require,module,exports){
        arguments[4][59][0].apply(exports,arguments)
    },{"./end-of-stream":120,"_process":159,"dup":59}],118:[function(require,module,exports){
        arguments[4][60][0].apply(exports,arguments)
    },{"buffer":68,"dup":60,"util":24}],119:[function(require,module,exports){
        arguments[4][61][0].apply(exports,arguments)
    },{"_process":159,"dup":61}],120:[function(require,module,exports){
        arguments[4][62][0].apply(exports,arguments)
    },{"../../../errors":111,"dup":62}],121:[function(require,module,exports){
        arguments[4][63][0].apply(exports,arguments)
    },{"dup":63}],122:[function(require,module,exports){
        arguments[4][64][0].apply(exports,arguments)
    },{"../../../errors":111,"./end-of-stream":120,"dup":64}],123:[function(require,module,exports){
        arguments[4][65][0].apply(exports,arguments)
    },{"../../../errors":111,"dup":65}],124:[function(require,module,exports){
        arguments[4][66][0].apply(exports,arguments)
    },{"dup":66,"events":108}],125:[function(require,module,exports){
        arguments[4][67][0].apply(exports,arguments)
    },{"./lib/_stream_duplex.js":112,"./lib/_stream_passthrough.js":113,"./lib/_stream_readable.js":114,"./lib/_stream_transform.js":115,"./lib/_stream_writable.js":116,"./lib/internal/streams/end-of-stream.js":120,"./lib/internal/streams/pipeline.js":122,"dup":67}],126:[function(require,module,exports){
        var hash = exports;

        hash.utils = require('./hash/utils');
        hash.common = require('./hash/common');
        hash.sha = require('./hash/sha');
        hash.ripemd = require('./hash/ripemd');
        hash.hmac = require('./hash/hmac');

// Proxy hash functions to the main object
        hash.sha1 = hash.sha.sha1;
        hash.sha256 = hash.sha.sha256;
        hash.sha224 = hash.sha.sha224;
        hash.sha384 = hash.sha.sha384;
        hash.sha512 = hash.sha.sha512;
        hash.ripemd160 = hash.ripemd.ripemd160;

    },{"./hash/common":127,"./hash/hmac":128,"./hash/ripemd":129,"./hash/sha":130,"./hash/utils":137}],127:[function(require,module,exports){
        'use strict';

        var utils = require('./utils');
        var assert = require('minimalistic-assert');

        function BlockHash() {
            this.pending = null;
            this.pendingTotal = 0;
            this.blockSize = this.constructor.blockSize;
            this.outSize = this.constructor.outSize;
            this.hmacStrength = this.constructor.hmacStrength;
            this.padLength = this.constructor.padLength / 8;
            this.endian = 'big';

            this._delta8 = this.blockSize / 8;
            this._delta32 = this.blockSize / 32;
        }
        exports.BlockHash = BlockHash;

        BlockHash.prototype.update = function update(msg, enc) {
            // Convert message to array, pad it, and join into 32bit blocks
            msg = utils.toArray(msg, enc);
            if (!this.pending)
                this.pending = msg;
            else
                this.pending = this.pending.concat(msg);
            this.pendingTotal += msg.length;

            // Enough data, try updating
            if (this.pending.length >= this._delta8) {
                msg = this.pending;

                // Process pending data in blocks
                var r = msg.length % this._delta8;
                this.pending = msg.slice(msg.length - r, msg.length);
                if (this.pending.length === 0)
                    this.pending = null;

                msg = utils.join32(msg, 0, msg.length - r, this.endian);
                for (var i = 0; i < msg.length; i += this._delta32)
                    this._update(msg, i, i + this._delta32);
            }

            return this;
        };

        BlockHash.prototype.digest = function digest(enc) {
            this.update(this._pad());
            assert(this.pending === null);

            return this._digest(enc);
        };

        BlockHash.prototype._pad = function pad() {
            var len = this.pendingTotal;
            var bytes = this._delta8;
            var k = bytes - ((len + this.padLength) % bytes);
            var res = new Array(k + this.padLength);
            res[0] = 0x80;
            for (var i = 1; i < k; i++)
                res[i] = 0;

            // Append length
            len <<= 3;
            if (this.endian === 'big') {
                for (var t = 8; t < this.padLength; t++)
                    res[i++] = 0;

                res[i++] = 0;
                res[i++] = 0;
                res[i++] = 0;
                res[i++] = 0;
                res[i++] = (len >>> 24) & 0xff;
                res[i++] = (len >>> 16) & 0xff;
                res[i++] = (len >>> 8) & 0xff;
                res[i++] = len & 0xff;
            } else {
                res[i++] = len & 0xff;
                res[i++] = (len >>> 8) & 0xff;
                res[i++] = (len >>> 16) & 0xff;
                res[i++] = (len >>> 24) & 0xff;
                res[i++] = 0;
                res[i++] = 0;
                res[i++] = 0;
                res[i++] = 0;

                for (t = 8; t < this.padLength; t++)
                    res[i++] = 0;
            }

            return res;
        };

    },{"./utils":137,"minimalistic-assert":145}],128:[function(require,module,exports){
        'use strict';

        var utils = require('./utils');
        var assert = require('minimalistic-assert');

        function Hmac(hash, key, enc) {
            if (!(this instanceof Hmac))
                return new Hmac(hash, key, enc);
            this.Hash = hash;
            this.blockSize = hash.blockSize / 8;
            this.outSize = hash.outSize / 8;
            this.inner = null;
            this.outer = null;

            this._init(utils.toArray(key, enc));
        }
        module.exports = Hmac;

        Hmac.prototype._init = function init(key) {
            // Shorten key, if needed
            if (key.length > this.blockSize)
                key = new this.Hash().update(key).digest();
            assert(key.length <= this.blockSize);

            // Add padding to key
            for (var i = key.length; i < this.blockSize; i++)
                key.push(0);

            for (i = 0; i < key.length; i++)
                key[i] ^= 0x36;
            this.inner = new this.Hash().update(key);

            // 0x36 ^ 0x5c = 0x6a
            for (i = 0; i < key.length; i++)
                key[i] ^= 0x6a;
            this.outer = new this.Hash().update(key);
        };

        Hmac.prototype.update = function update(msg, enc) {
            this.inner.update(msg, enc);
            return this;
        };

        Hmac.prototype.digest = function digest(enc) {
            this.outer.update(this.inner.digest());
            return this.outer.digest(enc);
        };

    },{"./utils":137,"minimalistic-assert":145}],129:[function(require,module,exports){
        'use strict';

        var utils = require('./utils');
        var common = require('./common');

        var rotl32 = utils.rotl32;
        var sum32 = utils.sum32;
        var sum32_3 = utils.sum32_3;
        var sum32_4 = utils.sum32_4;
        var BlockHash = common.BlockHash;

        function RIPEMD160() {
            if (!(this instanceof RIPEMD160))
                return new RIPEMD160();

            BlockHash.call(this);

            this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
            this.endian = 'little';
        }
        utils.inherits(RIPEMD160, BlockHash);
        exports.ripemd160 = RIPEMD160;

        RIPEMD160.blockSize = 512;
        RIPEMD160.outSize = 160;
        RIPEMD160.hmacStrength = 192;
        RIPEMD160.padLength = 64;

        RIPEMD160.prototype._update = function update(msg, start) {
            var A = this.h[0];
            var B = this.h[1];
            var C = this.h[2];
            var D = this.h[3];
            var E = this.h[4];
            var Ah = A;
            var Bh = B;
            var Ch = C;
            var Dh = D;
            var Eh = E;
            for (var j = 0; j < 80; j++) {
                var T = sum32(
                    rotl32(
                        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
                        s[j]),
                    E);
                A = E;
                E = D;
                D = rotl32(C, 10);
                C = B;
                B = T;
                T = sum32(
                    rotl32(
                        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
                        sh[j]),
                    Eh);
                Ah = Eh;
                Eh = Dh;
                Dh = rotl32(Ch, 10);
                Ch = Bh;
                Bh = T;
            }
            T = sum32_3(this.h[1], C, Dh);
            this.h[1] = sum32_3(this.h[2], D, Eh);
            this.h[2] = sum32_3(this.h[3], E, Ah);
            this.h[3] = sum32_3(this.h[4], A, Bh);
            this.h[4] = sum32_3(this.h[0], B, Ch);
            this.h[0] = T;
        };

        RIPEMD160.prototype._digest = function digest(enc) {
            if (enc === 'hex')
                return utils.toHex32(this.h, 'little');
            else
                return utils.split32(this.h, 'little');
        };

        function f(j, x, y, z) {
            if (j <= 15)
                return x ^ y ^ z;
            else if (j <= 31)
                return (x & y) | ((~x) & z);
            else if (j <= 47)
                return (x | (~y)) ^ z;
            else if (j <= 63)
                return (x & z) | (y & (~z));
            else
                return x ^ (y | (~z));
        }

        function K(j) {
            if (j <= 15)
                return 0x00000000;
            else if (j <= 31)
                return 0x5a827999;
            else if (j <= 47)
                return 0x6ed9eba1;
            else if (j <= 63)
                return 0x8f1bbcdc;
            else
                return 0xa953fd4e;
        }

        function Kh(j) {
            if (j <= 15)
                return 0x50a28be6;
            else if (j <= 31)
                return 0x5c4dd124;
            else if (j <= 47)
                return 0x6d703ef3;
            else if (j <= 63)
                return 0x7a6d76e9;
            else
                return 0x00000000;
        }

        var r = [
            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
            7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
            3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
            1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
            4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
        ];

        var rh = [
            5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
            6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
            15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
            8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
            12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
        ];

        var s = [
            11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
            7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
            11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
            11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
            9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
        ];

        var sh = [
            8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
            9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
            9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
            15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
            8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
        ];

    },{"./common":127,"./utils":137}],130:[function(require,module,exports){
        'use strict';

        exports.sha1 = require('./sha/1');
        exports.sha224 = require('./sha/224');
        exports.sha256 = require('./sha/256');
        exports.sha384 = require('./sha/384');
        exports.sha512 = require('./sha/512');

    },{"./sha/1":131,"./sha/224":132,"./sha/256":133,"./sha/384":134,"./sha/512":135}],131:[function(require,module,exports){
        'use strict';

        var utils = require('../utils');
        var common = require('../common');
        var shaCommon = require('./common');

        var rotl32 = utils.rotl32;
        var sum32 = utils.sum32;
        var sum32_5 = utils.sum32_5;
        var ft_1 = shaCommon.ft_1;
        var BlockHash = common.BlockHash;

        var sha1_K = [
            0x5A827999, 0x6ED9EBA1,
            0x8F1BBCDC, 0xCA62C1D6
        ];

        function SHA1() {
            if (!(this instanceof SHA1))
                return new SHA1();

            BlockHash.call(this);
            this.h = [
                0x67452301, 0xefcdab89, 0x98badcfe,
                0x10325476, 0xc3d2e1f0 ];
            this.W = new Array(80);
        }

        utils.inherits(SHA1, BlockHash);
        module.exports = SHA1;

        SHA1.blockSize = 512;
        SHA1.outSize = 160;
        SHA1.hmacStrength = 80;
        SHA1.padLength = 64;

        SHA1.prototype._update = function _update(msg, start) {
            var W = this.W;

            for (var i = 0; i < 16; i++)
                W[i] = msg[start + i];

            for(; i < W.length; i++)
                W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

            var a = this.h[0];
            var b = this.h[1];
            var c = this.h[2];
            var d = this.h[3];
            var e = this.h[4];

            for (i = 0; i < W.length; i++) {
                var s = ~~(i / 20);
                var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
                e = d;
                d = c;
                c = rotl32(b, 30);
                b = a;
                a = t;
            }

            this.h[0] = sum32(this.h[0], a);
            this.h[1] = sum32(this.h[1], b);
            this.h[2] = sum32(this.h[2], c);
            this.h[3] = sum32(this.h[3], d);
            this.h[4] = sum32(this.h[4], e);
        };

        SHA1.prototype._digest = function digest(enc) {
            if (enc === 'hex')
                return utils.toHex32(this.h, 'big');
            else
                return utils.split32(this.h, 'big');
        };

    },{"../common":127,"../utils":137,"./common":136}],132:[function(require,module,exports){
        'use strict';

        var utils = require('../utils');
        var SHA256 = require('./256');

        function SHA224() {
            if (!(this instanceof SHA224))
                return new SHA224();

            SHA256.call(this);
            this.h = [
                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
        }
        utils.inherits(SHA224, SHA256);
        module.exports = SHA224;

        SHA224.blockSize = 512;
        SHA224.outSize = 224;
        SHA224.hmacStrength = 192;
        SHA224.padLength = 64;

        SHA224.prototype._digest = function digest(enc) {
            // Just truncate output
            if (enc === 'hex')
                return utils.toHex32(this.h.slice(0, 7), 'big');
            else
                return utils.split32(this.h.slice(0, 7), 'big');
        };


    },{"../utils":137,"./256":133}],133:[function(require,module,exports){
        'use strict';

        var utils = require('../utils');
        var common = require('../common');
        var shaCommon = require('./common');
        var assert = require('minimalistic-assert');

        var sum32 = utils.sum32;
        var sum32_4 = utils.sum32_4;
        var sum32_5 = utils.sum32_5;
        var ch32 = shaCommon.ch32;
        var maj32 = shaCommon.maj32;
        var s0_256 = shaCommon.s0_256;
        var s1_256 = shaCommon.s1_256;
        var g0_256 = shaCommon.g0_256;
        var g1_256 = shaCommon.g1_256;

        var BlockHash = common.BlockHash;

        var sha256_K = [
            0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
            0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
            0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
            0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
            0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
            0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
            0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
            0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
            0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
            0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
            0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
            0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
            0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
            0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
            0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
            0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
        ];

        function SHA256() {
            if (!(this instanceof SHA256))
                return new SHA256();

            BlockHash.call(this);
            this.h = [
                0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
                0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
            ];
            this.k = sha256_K;
            this.W = new Array(64);
        }
        utils.inherits(SHA256, BlockHash);
        module.exports = SHA256;

        SHA256.blockSize = 512;
        SHA256.outSize = 256;
        SHA256.hmacStrength = 192;
        SHA256.padLength = 64;

        SHA256.prototype._update = function _update(msg, start) {
            var W = this.W;

            for (var i = 0; i < 16; i++)
                W[i] = msg[start + i];
            for (; i < W.length; i++)
                W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

            var a = this.h[0];
            var b = this.h[1];
            var c = this.h[2];
            var d = this.h[3];
            var e = this.h[4];
            var f = this.h[5];
            var g = this.h[6];
            var h = this.h[7];

            assert(this.k.length === W.length);
            for (i = 0; i < W.length; i++) {
                var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
                var T2 = sum32(s0_256(a), maj32(a, b, c));
                h = g;
                g = f;
                f = e;
                e = sum32(d, T1);
                d = c;
                c = b;
                b = a;
                a = sum32(T1, T2);
            }

            this.h[0] = sum32(this.h[0], a);
            this.h[1] = sum32(this.h[1], b);
            this.h[2] = sum32(this.h[2], c);
            this.h[3] = sum32(this.h[3], d);
            this.h[4] = sum32(this.h[4], e);
            this.h[5] = sum32(this.h[5], f);
            this.h[6] = sum32(this.h[6], g);
            this.h[7] = sum32(this.h[7], h);
        };

        SHA256.prototype._digest = function digest(enc) {
            if (enc === 'hex')
                return utils.toHex32(this.h, 'big');
            else
                return utils.split32(this.h, 'big');
        };

    },{"../common":127,"../utils":137,"./common":136,"minimalistic-assert":145}],134:[function(require,module,exports){
        'use strict';

        var utils = require('../utils');

        var SHA512 = require('./512');

        function SHA384() {
            if (!(this instanceof SHA384))
                return new SHA384();

            SHA512.call(this);
            this.h = [
                0xcbbb9d5d, 0xc1059ed8,
                0x629a292a, 0x367cd507,
                0x9159015a, 0x3070dd17,
                0x152fecd8, 0xf70e5939,
                0x67332667, 0xffc00b31,
                0x8eb44a87, 0x68581511,
                0xdb0c2e0d, 0x64f98fa7,
                0x47b5481d, 0xbefa4fa4 ];
        }
        utils.inherits(SHA384, SHA512);
        module.exports = SHA384;

        SHA384.blockSize = 1024;
        SHA384.outSize = 384;
        SHA384.hmacStrength = 192;
        SHA384.padLength = 128;

        SHA384.prototype._digest = function digest(enc) {
            if (enc === 'hex')
                return utils.toHex32(this.h.slice(0, 12), 'big');
            else
                return utils.split32(this.h.slice(0, 12), 'big');
        };

    },{"../utils":137,"./512":135}],135:[function(require,module,exports){
        'use strict';

        var utils = require('../utils');
        var common = require('../common');
        var assert = require('minimalistic-assert');

        var rotr64_hi = utils.rotr64_hi;
        var rotr64_lo = utils.rotr64_lo;
        var shr64_hi = utils.shr64_hi;
        var shr64_lo = utils.shr64_lo;
        var sum64 = utils.sum64;
        var sum64_hi = utils.sum64_hi;
        var sum64_lo = utils.sum64_lo;
        var sum64_4_hi = utils.sum64_4_hi;
        var sum64_4_lo = utils.sum64_4_lo;
        var sum64_5_hi = utils.sum64_5_hi;
        var sum64_5_lo = utils.sum64_5_lo;

        var BlockHash = common.BlockHash;

        var sha512_K = [
            0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
            0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
            0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
            0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
            0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
            0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
            0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
            0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
            0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
            0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
            0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
            0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
            0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
            0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
            0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
            0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
            0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
            0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
            0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
            0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
            0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
            0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
            0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
            0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
            0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
            0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
            0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
            0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
            0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
            0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
            0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
            0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
            0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
            0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
            0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
            0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
            0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
            0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
            0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
            0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
        ];

        function SHA512() {
            if (!(this instanceof SHA512))
                return new SHA512();

            BlockHash.call(this);
            this.h = [
                0x6a09e667, 0xf3bcc908,
                0xbb67ae85, 0x84caa73b,
                0x3c6ef372, 0xfe94f82b,
                0xa54ff53a, 0x5f1d36f1,
                0x510e527f, 0xade682d1,
                0x9b05688c, 0x2b3e6c1f,
                0x1f83d9ab, 0xfb41bd6b,
                0x5be0cd19, 0x137e2179 ];
            this.k = sha512_K;
            this.W = new Array(160);
        }
        utils.inherits(SHA512, BlockHash);
        module.exports = SHA512;

        SHA512.blockSize = 1024;
        SHA512.outSize = 512;
        SHA512.hmacStrength = 192;
        SHA512.padLength = 128;

        SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
            var W = this.W;

            // 32 x 32bit words
            for (var i = 0; i < 32; i++)
                W[i] = msg[start + i];
            for (; i < W.length; i += 2) {
                var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
                var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
                var c1_hi = W[i - 14];  // i - 7
                var c1_lo = W[i - 13];
                var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
                var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
                var c3_hi = W[i - 32];  // i - 16
                var c3_lo = W[i - 31];

                W[i] = sum64_4_hi(
                    c0_hi, c0_lo,
                    c1_hi, c1_lo,
                    c2_hi, c2_lo,
                    c3_hi, c3_lo);
                W[i + 1] = sum64_4_lo(
                    c0_hi, c0_lo,
                    c1_hi, c1_lo,
                    c2_hi, c2_lo,
                    c3_hi, c3_lo);
            }
        };

        SHA512.prototype._update = function _update(msg, start) {
            this._prepareBlock(msg, start);

            var W = this.W;

            var ah = this.h[0];
            var al = this.h[1];
            var bh = this.h[2];
            var bl = this.h[3];
            var ch = this.h[4];
            var cl = this.h[5];
            var dh = this.h[6];
            var dl = this.h[7];
            var eh = this.h[8];
            var el = this.h[9];
            var fh = this.h[10];
            var fl = this.h[11];
            var gh = this.h[12];
            var gl = this.h[13];
            var hh = this.h[14];
            var hl = this.h[15];

            assert(this.k.length === W.length);
            for (var i = 0; i < W.length; i += 2) {
                var c0_hi = hh;
                var c0_lo = hl;
                var c1_hi = s1_512_hi(eh, el);
                var c1_lo = s1_512_lo(eh, el);
                var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
                var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
                var c3_hi = this.k[i];
                var c3_lo = this.k[i + 1];
                var c4_hi = W[i];
                var c4_lo = W[i + 1];

                var T1_hi = sum64_5_hi(
                    c0_hi, c0_lo,
                    c1_hi, c1_lo,
                    c2_hi, c2_lo,
                    c3_hi, c3_lo,
                    c4_hi, c4_lo);
                var T1_lo = sum64_5_lo(
                    c0_hi, c0_lo,
                    c1_hi, c1_lo,
                    c2_hi, c2_lo,
                    c3_hi, c3_lo,
                    c4_hi, c4_lo);

                c0_hi = s0_512_hi(ah, al);
                c0_lo = s0_512_lo(ah, al);
                c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
                c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

                var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
                var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

                hh = gh;
                hl = gl;

                gh = fh;
                gl = fl;

                fh = eh;
                fl = el;

                eh = sum64_hi(dh, dl, T1_hi, T1_lo);
                el = sum64_lo(dl, dl, T1_hi, T1_lo);

                dh = ch;
                dl = cl;

                ch = bh;
                cl = bl;

                bh = ah;
                bl = al;

                ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
                al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
            }

            sum64(this.h, 0, ah, al);
            sum64(this.h, 2, bh, bl);
            sum64(this.h, 4, ch, cl);
            sum64(this.h, 6, dh, dl);
            sum64(this.h, 8, eh, el);
            sum64(this.h, 10, fh, fl);
            sum64(this.h, 12, gh, gl);
            sum64(this.h, 14, hh, hl);
        };

        SHA512.prototype._digest = function digest(enc) {
            if (enc === 'hex')
                return utils.toHex32(this.h, 'big');
            else
                return utils.split32(this.h, 'big');
        };

        function ch64_hi(xh, xl, yh, yl, zh) {
            var r = (xh & yh) ^ ((~xh) & zh);
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function ch64_lo(xh, xl, yh, yl, zh, zl) {
            var r = (xl & yl) ^ ((~xl) & zl);
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function maj64_hi(xh, xl, yh, yl, zh) {
            var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function maj64_lo(xh, xl, yh, yl, zh, zl) {
            var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function s0_512_hi(xh, xl) {
            var c0_hi = rotr64_hi(xh, xl, 28);
            var c1_hi = rotr64_hi(xl, xh, 2);  // 34
            var c2_hi = rotr64_hi(xl, xh, 7);  // 39

            var r = c0_hi ^ c1_hi ^ c2_hi;
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function s0_512_lo(xh, xl) {
            var c0_lo = rotr64_lo(xh, xl, 28);
            var c1_lo = rotr64_lo(xl, xh, 2);  // 34
            var c2_lo = rotr64_lo(xl, xh, 7);  // 39

            var r = c0_lo ^ c1_lo ^ c2_lo;
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function s1_512_hi(xh, xl) {
            var c0_hi = rotr64_hi(xh, xl, 14);
            var c1_hi = rotr64_hi(xh, xl, 18);
            var c2_hi = rotr64_hi(xl, xh, 9);  // 41

            var r = c0_hi ^ c1_hi ^ c2_hi;
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function s1_512_lo(xh, xl) {
            var c0_lo = rotr64_lo(xh, xl, 14);
            var c1_lo = rotr64_lo(xh, xl, 18);
            var c2_lo = rotr64_lo(xl, xh, 9);  // 41

            var r = c0_lo ^ c1_lo ^ c2_lo;
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function g0_512_hi(xh, xl) {
            var c0_hi = rotr64_hi(xh, xl, 1);
            var c1_hi = rotr64_hi(xh, xl, 8);
            var c2_hi = shr64_hi(xh, xl, 7);

            var r = c0_hi ^ c1_hi ^ c2_hi;
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function g0_512_lo(xh, xl) {
            var c0_lo = rotr64_lo(xh, xl, 1);
            var c1_lo = rotr64_lo(xh, xl, 8);
            var c2_lo = shr64_lo(xh, xl, 7);

            var r = c0_lo ^ c1_lo ^ c2_lo;
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function g1_512_hi(xh, xl) {
            var c0_hi = rotr64_hi(xh, xl, 19);
            var c1_hi = rotr64_hi(xl, xh, 29);  // 61
            var c2_hi = shr64_hi(xh, xl, 6);

            var r = c0_hi ^ c1_hi ^ c2_hi;
            if (r < 0)
                r += 0x100000000;
            return r;
        }

        function g1_512_lo(xh, xl) {
            var c0_lo = rotr64_lo(xh, xl, 19);
            var c1_lo = rotr64_lo(xl, xh, 29);  // 61
            var c2_lo = shr64_lo(xh, xl, 6);

            var r = c0_lo ^ c1_lo ^ c2_lo;
            if (r < 0)
                r += 0x100000000;
            return r;
        }

    },{"../common":127,"../utils":137,"minimalistic-assert":145}],136:[function(require,module,exports){
        'use strict';

        var utils = require('../utils');
        var rotr32 = utils.rotr32;

        function ft_1(s, x, y, z) {
            if (s === 0)
                return ch32(x, y, z);
            if (s === 1 || s === 3)
                return p32(x, y, z);
            if (s === 2)
                return maj32(x, y, z);
        }
        exports.ft_1 = ft_1;

        function ch32(x, y, z) {
            return (x & y) ^ ((~x) & z);
        }
        exports.ch32 = ch32;

        function maj32(x, y, z) {
            return (x & y) ^ (x & z) ^ (y & z);
        }
        exports.maj32 = maj32;

        function p32(x, y, z) {
            return x ^ y ^ z;
        }
        exports.p32 = p32;

        function s0_256(x) {
            return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
        }
        exports.s0_256 = s0_256;

        function s1_256(x) {
            return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
        }
        exports.s1_256 = s1_256;

        function g0_256(x) {
            return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
        }
        exports.g0_256 = g0_256;

        function g1_256(x) {
            return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
        }
        exports.g1_256 = g1_256;

    },{"../utils":137}],137:[function(require,module,exports){
        'use strict';

        var assert = require('minimalistic-assert');
        var inherits = require('inherits');

        exports.inherits = inherits;

        function isSurrogatePair(msg, i) {
            if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
                return false;
            }
            if (i < 0 || i + 1 >= msg.length) {
                return false;
            }
            return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
        }

        function toArray(msg, enc) {
            if (Array.isArray(msg))
                return msg.slice();
            if (!msg)
                return [];
            var res = [];
            if (typeof msg === 'string') {
                if (!enc) {
                    // Inspired by stringToUtf8ByteArray() in closure-library by Google
                    // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
                    // Apache License 2.0
                    // https://github.com/google/closure-library/blob/master/LICENSE
                    var p = 0;
                    for (var i = 0; i < msg.length; i++) {
                        var c = msg.charCodeAt(i);
                        if (c < 128) {
                            res[p++] = c;
                        } else if (c < 2048) {
                            res[p++] = (c >> 6) | 192;
                            res[p++] = (c & 63) | 128;
                        } else if (isSurrogatePair(msg, i)) {
                            c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
                            res[p++] = (c >> 18) | 240;
                            res[p++] = ((c >> 12) & 63) | 128;
                            res[p++] = ((c >> 6) & 63) | 128;
                            res[p++] = (c & 63) | 128;
                        } else {
                            res[p++] = (c >> 12) | 224;
                            res[p++] = ((c >> 6) & 63) | 128;
                            res[p++] = (c & 63) | 128;
                        }
                    }
                } else if (enc === 'hex') {
                    msg = msg.replace(/[^a-z0-9]+/ig, '');
                    if (msg.length % 2 !== 0)
                        msg = '0' + msg;
                    for (i = 0; i < msg.length; i += 2)
                        res.push(parseInt(msg[i] + msg[i + 1], 16));
                }
            } else {
                for (i = 0; i < msg.length; i++)
                    res[i] = msg[i] | 0;
            }
            return res;
        }
        exports.toArray = toArray;

        function toHex(msg) {
            var res = '';
            for (var i = 0; i < msg.length; i++)
                res += zero2(msg[i].toString(16));
            return res;
        }
        exports.toHex = toHex;

        function htonl(w) {
            var res = (w >>> 24) |
                ((w >>> 8) & 0xff00) |
                ((w << 8) & 0xff0000) |
                ((w & 0xff) << 24);
            return res >>> 0;
        }
        exports.htonl = htonl;

        function toHex32(msg, endian) {
            var res = '';
            for (var i = 0; i < msg.length; i++) {
                var w = msg[i];
                if (endian === 'little')
                    w = htonl(w);
                res += zero8(w.toString(16));
            }
            return res;
        }
        exports.toHex32 = toHex32;

        function zero2(word) {
            if (word.length === 1)
                return '0' + word;
            else
                return word;
        }
        exports.zero2 = zero2;

        function zero8(word) {
            if (word.length === 7)
                return '0' + word;
            else if (word.length === 6)
                return '00' + word;
            else if (word.length === 5)
                return '000' + word;
            else if (word.length === 4)
                return '0000' + word;
            else if (word.length === 3)
                return '00000' + word;
            else if (word.length === 2)
                return '000000' + word;
            else if (word.length === 1)
                return '0000000' + word;
            else
                return word;
        }
        exports.zero8 = zero8;

        function join32(msg, start, end, endian) {
            var len = end - start;
            assert(len % 4 === 0);
            var res = new Array(len / 4);
            for (var i = 0, k = start; i < res.length; i++, k += 4) {
                var w;
                if (endian === 'big')
                    w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
                else
                    w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
                res[i] = w >>> 0;
            }
            return res;
        }
        exports.join32 = join32;

        function split32(msg, endian) {
            var res = new Array(msg.length * 4);
            for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
                var m = msg[i];
                if (endian === 'big') {
                    res[k] = m >>> 24;
                    res[k + 1] = (m >>> 16) & 0xff;
                    res[k + 2] = (m >>> 8) & 0xff;
                    res[k + 3] = m & 0xff;
                } else {
                    res[k + 3] = m >>> 24;
                    res[k + 2] = (m >>> 16) & 0xff;
                    res[k + 1] = (m >>> 8) & 0xff;
                    res[k] = m & 0xff;
                }
            }
            return res;
        }
        exports.split32 = split32;

        function rotr32(w, b) {
            return (w >>> b) | (w << (32 - b));
        }
        exports.rotr32 = rotr32;

        function rotl32(w, b) {
            return (w << b) | (w >>> (32 - b));
        }
        exports.rotl32 = rotl32;

        function sum32(a, b) {
            return (a + b) >>> 0;
        }
        exports.sum32 = sum32;

        function sum32_3(a, b, c) {
            return (a + b + c) >>> 0;
        }
        exports.sum32_3 = sum32_3;

        function sum32_4(a, b, c, d) {
            return (a + b + c + d) >>> 0;
        }
        exports.sum32_4 = sum32_4;

        function sum32_5(a, b, c, d, e) {
            return (a + b + c + d + e) >>> 0;
        }
        exports.sum32_5 = sum32_5;

        function sum64(buf, pos, ah, al) {
            var bh = buf[pos];
            var bl = buf[pos + 1];

            var lo = (al + bl) >>> 0;
            var hi = (lo < al ? 1 : 0) + ah + bh;
            buf[pos] = hi >>> 0;
            buf[pos + 1] = lo;
        }
        exports.sum64 = sum64;

        function sum64_hi(ah, al, bh, bl) {
            var lo = (al + bl) >>> 0;
            var hi = (lo < al ? 1 : 0) + ah + bh;
            return hi >>> 0;
        }
        exports.sum64_hi = sum64_hi;

        function sum64_lo(ah, al, bh, bl) {
            var lo = al + bl;
            return lo >>> 0;
        }
        exports.sum64_lo = sum64_lo;

        function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
            var carry = 0;
            var lo = al;
            lo = (lo + bl) >>> 0;
            carry += lo < al ? 1 : 0;
            lo = (lo + cl) >>> 0;
            carry += lo < cl ? 1 : 0;
            lo = (lo + dl) >>> 0;
            carry += lo < dl ? 1 : 0;

            var hi = ah + bh + ch + dh + carry;
            return hi >>> 0;
        }
        exports.sum64_4_hi = sum64_4_hi;

        function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
            var lo = al + bl + cl + dl;
            return lo >>> 0;
        }
        exports.sum64_4_lo = sum64_4_lo;

        function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
            var carry = 0;
            var lo = al;
            lo = (lo + bl) >>> 0;
            carry += lo < al ? 1 : 0;
            lo = (lo + cl) >>> 0;
            carry += lo < cl ? 1 : 0;
            lo = (lo + dl) >>> 0;
            carry += lo < dl ? 1 : 0;
            lo = (lo + el) >>> 0;
            carry += lo < el ? 1 : 0;

            var hi = ah + bh + ch + dh + eh + carry;
            return hi >>> 0;
        }
        exports.sum64_5_hi = sum64_5_hi;

        function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
            var lo = al + bl + cl + dl + el;

            return lo >>> 0;
        }
        exports.sum64_5_lo = sum64_5_lo;

        function rotr64_hi(ah, al, num) {
            var r = (al << (32 - num)) | (ah >>> num);
            return r >>> 0;
        }
        exports.rotr64_hi = rotr64_hi;

        function rotr64_lo(ah, al, num) {
            var r = (ah << (32 - num)) | (al >>> num);
            return r >>> 0;
        }
        exports.rotr64_lo = rotr64_lo;

        function shr64_hi(ah, al, num) {
            return ah >>> num;
        }
        exports.shr64_hi = shr64_hi;

        function shr64_lo(ah, al, num) {
            var r = (ah << (32 - num)) | (al >>> num);
            return r >>> 0;
        }
        exports.shr64_lo = shr64_lo;

    },{"inherits":140,"minimalistic-assert":145}],138:[function(require,module,exports){
        'use strict';

        var hash = require('hash.js');
        var utils = require('minimalistic-crypto-utils');
        var assert = require('minimalistic-assert');

        function HmacDRBG(options) {
            if (!(this instanceof HmacDRBG))
                return new HmacDRBG(options);
            this.hash = options.hash;
            this.predResist = !!options.predResist;

            this.outLen = this.hash.outSize;
            this.minEntropy = options.minEntropy || this.hash.hmacStrength;

            this._reseed = null;
            this.reseedInterval = null;
            this.K = null;
            this.V = null;

            var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
            var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
            var pers = utils.toArray(options.pers, options.persEnc || 'hex');
            assert(entropy.length >= (this.minEntropy / 8),
                'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
            this._init(entropy, nonce, pers);
        }
        module.exports = HmacDRBG;

        HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
            var seed = entropy.concat(nonce).concat(pers);

            this.K = new Array(this.outLen / 8);
            this.V = new Array(this.outLen / 8);
            for (var i = 0; i < this.V.length; i++) {
                this.K[i] = 0x00;
                this.V[i] = 0x01;
            }

            this._update(seed);
            this._reseed = 1;
            this.reseedInterval = 0x1000000000000;  // 2^48
        };

        HmacDRBG.prototype._hmac = function hmac() {
            return new hash.hmac(this.hash, this.K);
        };

        HmacDRBG.prototype._update = function update(seed) {
            var kmac = this._hmac()
                .update(this.V)
                .update([ 0x00 ]);
            if (seed)
                kmac = kmac.update(seed);
            this.K = kmac.digest();
            this.V = this._hmac().update(this.V).digest();
            if (!seed)
                return;

            this.K = this._hmac()
                .update(this.V)
                .update([ 0x01 ])
                .update(seed)
                .digest();
            this.V = this._hmac().update(this.V).digest();
        };

        HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
            // Optional entropy enc
            if (typeof entropyEnc !== 'string') {
                addEnc = add;
                add = entropyEnc;
                entropyEnc = null;
            }

            entropy = utils.toArray(entropy, entropyEnc);
            add = utils.toArray(add, addEnc);

            assert(entropy.length >= (this.minEntropy / 8),
                'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

            this._update(entropy.concat(add || []));
            this._reseed = 1;
        };

        HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
            if (this._reseed > this.reseedInterval)
                throw new Error('Reseed is required');

            // Optional encoding
            if (typeof enc !== 'string') {
                addEnc = add;
                add = enc;
                enc = null;
            }

            // Optional additional data
            if (add) {
                add = utils.toArray(add, addEnc || 'hex');
                this._update(add);
            }

            var temp = [];
            while (temp.length < len) {
                this.V = this._hmac().update(this.V).digest();
                temp = temp.concat(this.V);
            }

            var res = temp.slice(0, len);
            this._update(add);
            this._reseed++;
            return utils.encode(res, enc);
        };

    },{"hash.js":126,"minimalistic-assert":145,"minimalistic-crypto-utils":146}],139:[function(require,module,exports){
        exports.read = function (buffer, offset, isLE, mLen, nBytes) {
            var e, m
            var eLen = (nBytes * 8) - mLen - 1
            var eMax = (1 << eLen) - 1
            var eBias = eMax >> 1
            var nBits = -7
            var i = isLE ? (nBytes - 1) : 0
            var d = isLE ? -1 : 1
            var s = buffer[offset + i]

            i += d

            e = s & ((1 << (-nBits)) - 1)
            s >>= (-nBits)
            nBits += eLen
            for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

            m = e & ((1 << (-nBits)) - 1)
            e >>= (-nBits)
            nBits += mLen
            for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

            if (e === 0) {
                e = 1 - eBias
            } else if (e === eMax) {
                return m ? NaN : ((s ? -1 : 1) * Infinity)
            } else {
                m = m + Math.pow(2, mLen)
                e = e - eBias
            }
            return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
        }

        exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
            var e, m, c
            var eLen = (nBytes * 8) - mLen - 1
            var eMax = (1 << eLen) - 1
            var eBias = eMax >> 1
            var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
            var i = isLE ? 0 : (nBytes - 1)
            var d = isLE ? 1 : -1
            var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

            value = Math.abs(value)

            if (isNaN(value) || value === Infinity) {
                m = isNaN(value) ? 1 : 0
                e = eMax
            } else {
                e = Math.floor(Math.log(value) / Math.LN2)
                if (value * (c = Math.pow(2, -e)) < 1) {
                    e--
                    c *= 2
                }
                if (e + eBias >= 1) {
                    value += rt / c
                } else {
                    value += rt * Math.pow(2, 1 - eBias)
                }
                if (value * c >= 2) {
                    e++
                    c /= 2
                }

                if (e + eBias >= eMax) {
                    m = 0
                    e = eMax
                } else if (e + eBias >= 1) {
                    m = ((value * c) - 1) * Math.pow(2, mLen)
                    e = e + eBias
                } else {
                    m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
                    e = 0
                }
            }

            for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

            e = (e << mLen) | m
            eLen += mLen
            for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

            buffer[offset + i - d] |= s * 128
        }

    },{}],140:[function(require,module,exports){
        if (typeof Object.create === 'function') {
            // implementation from standard node.js 'util' module
            module.exports = function inherits(ctor, superCtor) {
                if (superCtor) {
                    ctor.super_ = superCtor
                    ctor.prototype = Object.create(superCtor.prototype, {
                        constructor: {
                            value: ctor,
                            enumerable: false,
                            writable: true,
                            configurable: true
                        }
                    })
                }
            };
        } else {
            // old school shim for old browsers
            module.exports = function inherits(ctor, superCtor) {
                if (superCtor) {
                    ctor.super_ = superCtor
                    var TempCtor = function () {}
                    TempCtor.prototype = superCtor.prototype
                    ctor.prototype = new TempCtor()
                    ctor.prototype.constructor = ctor
                }
            }
        }

    },{}],141:[function(require,module,exports){
        /*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
        module.exports = function (obj) {
            return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
        }

        function isBuffer (obj) {
            return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
        }

// For Node v0.10 support. Remove this eventually.
        function isSlowBuffer (obj) {
            return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
        }

    },{}],142:[function(require,module,exports){
        var toString = {}.toString;

        module.exports = Array.isArray || function (arr) {
            return toString.call(arr) == '[object Array]';
        };

    },{}],143:[function(require,module,exports){
        'use strict'
        var inherits = require('inherits')
        var HashBase = require('hash-base')
        var Buffer = require('safe-buffer').Buffer

        var ARRAY16 = new Array(16)

        function MD5 () {
            HashBase.call(this, 64)

            // state
            this._a = 0x67452301
            this._b = 0xefcdab89
            this._c = 0x98badcfe
            this._d = 0x10325476
        }

        inherits(MD5, HashBase)

        MD5.prototype._update = function () {
            var M = ARRAY16
            for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)

            var a = this._a
            var b = this._b
            var c = this._c
            var d = this._d

            a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
            d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
            c = fnF(c, d, a, b, M[2], 0x242070db, 17)
            b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
            a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
            d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
            c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
            b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
            a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
            d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
            c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
            b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
            a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
            d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
            c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
            b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

            a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
            d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
            c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
            b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
            a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
            d = fnG(d, a, b, c, M[10], 0x02441453, 9)
            c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
            b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
            a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
            d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
            c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
            b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
            a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
            d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
            c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
            b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

            a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
            d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
            c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
            b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
            a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
            d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
            c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
            b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
            a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
            d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
            c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
            b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
            a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
            d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
            c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
            b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

            a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
            d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
            c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
            b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
            a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
            d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
            c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
            b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
            a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
            d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
            c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
            b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
            a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
            d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
            c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
            b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

            this._a = (this._a + a) | 0
            this._b = (this._b + b) | 0
            this._c = (this._c + c) | 0
            this._d = (this._d + d) | 0
        }

        MD5.prototype._digest = function () {
            // create padding and handle blocks
            this._block[this._blockOffset++] = 0x80
            if (this._blockOffset > 56) {
                this._block.fill(0, this._blockOffset, 64)
                this._update()
                this._blockOffset = 0
            }

            this._block.fill(0, this._blockOffset, 56)
            this._block.writeUInt32LE(this._length[0], 56)
            this._block.writeUInt32LE(this._length[1], 60)
            this._update()

            // produce result
            var buffer = Buffer.allocUnsafe(16)
            buffer.writeInt32LE(this._a, 0)
            buffer.writeInt32LE(this._b, 4)
            buffer.writeInt32LE(this._c, 8)
            buffer.writeInt32LE(this._d, 12)
            return buffer
        }

        function rotl (x, n) {
            return (x << n) | (x >>> (32 - n))
        }

        function fnF (a, b, c, d, m, k, s) {
            return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
        }

        function fnG (a, b, c, d, m, k, s) {
            return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
        }

        function fnH (a, b, c, d, m, k, s) {
            return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
        }

        function fnI (a, b, c, d, m, k, s) {
            return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
        }

        module.exports = MD5

    },{"hash-base":110,"inherits":140,"safe-buffer":184}],144:[function(require,module,exports){
        var bn = require('bn.js');
        var brorand = require('brorand');

        function MillerRabin(rand) {
            this.rand = rand || new brorand.Rand();
        }
        module.exports = MillerRabin;

        MillerRabin.create = function create(rand) {
            return new MillerRabin(rand);
        };

        MillerRabin.prototype._randbelow = function _randbelow(n) {
            var len = n.bitLength();
            var min_bytes = Math.ceil(len / 8);

            // Generage random bytes until a number less than n is found.
            // This ensures that 0..n-1 have an equal probability of being selected.
            do
                var a = new bn(this.rand.generate(min_bytes));
            while (a.cmp(n) >= 0);

            return a;
        };

        MillerRabin.prototype._randrange = function _randrange(start, stop) {
            // Generate a random number greater than or equal to start and less than stop.
            var size = stop.sub(start);
            return start.add(this._randbelow(size));
        };

        MillerRabin.prototype.test = function test(n, k, cb) {
            var len = n.bitLength();
            var red = bn.mont(n);
            var rone = new bn(1).toRed(red);

            if (!k)
                k = Math.max(1, (len / 48) | 0);

            // Find d and s, (n - 1) = (2 ^ s) * d;
            var n1 = n.subn(1);
            for (var s = 0; !n1.testn(s); s++) {}
            var d = n.shrn(s);

            var rn1 = n1.toRed(red);

            var prime = true;
            for (; k > 0; k--) {
                var a = this._randrange(new bn(2), n1);
                if (cb)
                    cb(a);

                var x = a.toRed(red).redPow(d);
                if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
                    continue;

                for (var i = 1; i < s; i++) {
                    x = x.redSqr();

                    if (x.cmp(rone) === 0)
                        return false;
                    if (x.cmp(rn1) === 0)
                        break;
                }

                if (i === s)
                    return false;
            }

            return prime;
        };

        MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
            var len = n.bitLength();
            var red = bn.mont(n);
            var rone = new bn(1).toRed(red);

            if (!k)
                k = Math.max(1, (len / 48) | 0);

            // Find d and s, (n - 1) = (2 ^ s) * d;
            var n1 = n.subn(1);
            for (var s = 0; !n1.testn(s); s++) {}
            var d = n.shrn(s);

            var rn1 = n1.toRed(red);

            for (; k > 0; k--) {
                var a = this._randrange(new bn(2), n1);

                var g = n.gcd(a);
                if (g.cmpn(1) !== 0)
                    return g;

                var x = a.toRed(red).redPow(d);
                if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
                    continue;

                for (var i = 1; i < s; i++) {
                    x = x.redSqr();

                    if (x.cmp(rone) === 0)
                        return x.fromRed().subn(1).gcd(n);
                    if (x.cmp(rn1) === 0)
                        break;
                }

                if (i === s) {
                    x = x.redSqr();
                    return x.fromRed().subn(1).gcd(n);
                }
            }

            return false;
        };

    },{"bn.js":22,"brorand":23}],145:[function(require,module,exports){
        module.exports = assert;

        function assert(val, msg) {
            if (!val)
                throw new Error(msg || 'Assertion failed');
        }

        assert.equal = function assertEqual(l, r, msg) {
            if (l != r)
                throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
        };

    },{}],146:[function(require,module,exports){
        'use strict';

        var utils = exports;

        function toArray(msg, enc) {
            if (Array.isArray(msg))
                return msg.slice();
            if (!msg)
                return [];
            var res = [];
            if (typeof msg !== 'string') {
                for (var i = 0; i < msg.length; i++)
                    res[i] = msg[i] | 0;
                return res;
            }
            if (enc === 'hex') {
                msg = msg.replace(/[^a-z0-9]+/ig, '');
                if (msg.length % 2 !== 0)
                    msg = '0' + msg;
                for (var i = 0; i < msg.length; i += 2)
                    res.push(parseInt(msg[i] + msg[i + 1], 16));
            } else {
                for (var i = 0; i < msg.length; i++) {
                    var c = msg.charCodeAt(i);
                    var hi = c >> 8;
                    var lo = c & 0xff;
                    if (hi)
                        res.push(hi, lo);
                    else
                        res.push(lo);
                }
            }
            return res;
        }
        utils.toArray = toArray;

        function zero2(word) {
            if (word.length === 1)
                return '0' + word;
            else
                return word;
        }
        utils.zero2 = zero2;

        function toHex(msg) {
            var res = '';
            for (var i = 0; i < msg.length; i++)
                res += zero2(msg[i].toString(16));
            return res;
        }
        utils.toHex = toHex;

        utils.encode = function encode(arr, enc) {
            if (enc === 'hex')
                return toHex(arr);
            else
                return arr;
        };

    },{}],147:[function(require,module,exports){
        module.exports={"2.16.840.1.101.3.4.1.1": "aes-128-ecb",
            "2.16.840.1.101.3.4.1.2": "aes-128-cbc",
            "2.16.840.1.101.3.4.1.3": "aes-128-ofb",
            "2.16.840.1.101.3.4.1.4": "aes-128-cfb",
            "2.16.840.1.101.3.4.1.21": "aes-192-ecb",
            "2.16.840.1.101.3.4.1.22": "aes-192-cbc",
            "2.16.840.1.101.3.4.1.23": "aes-192-ofb",
            "2.16.840.1.101.3.4.1.24": "aes-192-cfb",
            "2.16.840.1.101.3.4.1.41": "aes-256-ecb",
            "2.16.840.1.101.3.4.1.42": "aes-256-cbc",
            "2.16.840.1.101.3.4.1.43": "aes-256-ofb",
            "2.16.840.1.101.3.4.1.44": "aes-256-cfb"
        }
    },{}],148:[function(require,module,exports){
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.
        'use strict'

        var asn1 = require('asn1.js')

        exports.certificate = require('./certificate')

        var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
            this.seq().obj(
                this.key('version').int(),
                this.key('modulus').int(),
                this.key('publicExponent').int(),
                this.key('privateExponent').int(),
                this.key('prime1').int(),
                this.key('prime2').int(),
                this.key('exponent1').int(),
                this.key('exponent2').int(),
                this.key('coefficient').int()
            )
        })
        exports.RSAPrivateKey = RSAPrivateKey

        var RSAPublicKey = asn1.define('RSAPublicKey', function () {
            this.seq().obj(
                this.key('modulus').int(),
                this.key('publicExponent').int()
            )
        })
        exports.RSAPublicKey = RSAPublicKey

        var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
            this.seq().obj(
                this.key('algorithm').use(AlgorithmIdentifier),
                this.key('subjectPublicKey').bitstr()
            )
        })
        exports.PublicKey = PublicKey

        var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
            this.seq().obj(
                this.key('algorithm').objid(),
                this.key('none').null_().optional(),
                this.key('curve').objid().optional(),
                this.key('params').seq().obj(
                    this.key('p').int(),
                    this.key('q').int(),
                    this.key('g').int()
                ).optional()
            )
        })

        var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
            this.seq().obj(
                this.key('version').int(),
                this.key('algorithm').use(AlgorithmIdentifier),
                this.key('subjectPrivateKey').octstr()
            )
        })
        exports.PrivateKey = PrivateKeyInfo
        var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
            this.seq().obj(
                this.key('algorithm').seq().obj(
                    this.key('id').objid(),
                    this.key('decrypt').seq().obj(
                        this.key('kde').seq().obj(
                            this.key('id').objid(),
                            this.key('kdeparams').seq().obj(
                                this.key('salt').octstr(),
                                this.key('iters').int()
                            )
                        ),
                        this.key('cipher').seq().obj(
                            this.key('algo').objid(),
                            this.key('iv').octstr()
                        )
                    )
                ),
                this.key('subjectPrivateKey').octstr()
            )
        })

        exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

        var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
            this.seq().obj(
                this.key('version').int(),
                this.key('p').int(),
                this.key('q').int(),
                this.key('g').int(),
                this.key('pub_key').int(),
                this.key('priv_key').int()
            )
        })
        exports.DSAPrivateKey = DSAPrivateKey

        exports.DSAparam = asn1.define('DSAparam', function () {
            this.int()
        })

        var ECPrivateKey = asn1.define('ECPrivateKey', function () {
            this.seq().obj(
                this.key('version').int(),
                this.key('privateKey').octstr(),
                this.key('parameters').optional().explicit(0).use(ECParameters),
                this.key('publicKey').optional().explicit(1).bitstr()
            )
        })
        exports.ECPrivateKey = ECPrivateKey

        var ECParameters = asn1.define('ECParameters', function () {
            this.choice({
                namedCurve: this.objid()
            })
        })

        exports.signature = asn1.define('signature', function () {
            this.seq().obj(
                this.key('r').int(),
                this.key('s').int()
            )
        })

    },{"./certificate":149,"asn1.js":7}],149:[function(require,module,exports){
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen

        'use strict'

        var asn = require('asn1.js')

        var Time = asn.define('Time', function () {
            this.choice({
                utcTime: this.utctime(),
                generalTime: this.gentime()
            })
        })

        var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
            this.seq().obj(
                this.key('type').objid(),
                this.key('value').any()
            )
        })

        var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {
            this.seq().obj(
                this.key('algorithm').objid(),
                this.key('parameters').optional(),
                this.key('curve').objid().optional()
            )
        })

        var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {
            this.seq().obj(
                this.key('algorithm').use(AlgorithmIdentifier),
                this.key('subjectPublicKey').bitstr()
            )
        })

        var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {
            this.setof(AttributeTypeValue)
        })

        var RDNSequence = asn.define('RDNSequence', function () {
            this.seqof(RelativeDistinguishedName)
        })

        var Name = asn.define('Name', function () {
            this.choice({
                rdnSequence: this.use(RDNSequence)
            })
        })

        var Validity = asn.define('Validity', function () {
            this.seq().obj(
                this.key('notBefore').use(Time),
                this.key('notAfter').use(Time)
            )
        })

        var Extension = asn.define('Extension', function () {
            this.seq().obj(
                this.key('extnID').objid(),
                this.key('critical').bool().def(false),
                this.key('extnValue').octstr()
            )
        })

        var TBSCertificate = asn.define('TBSCertificate', function () {
            this.seq().obj(
                this.key('version').explicit(0).int().optional(),
                this.key('serialNumber').int(),
                this.key('signature').use(AlgorithmIdentifier),
                this.key('issuer').use(Name),
                this.key('validity').use(Validity),
                this.key('subject').use(Name),
                this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
                this.key('issuerUniqueID').implicit(1).bitstr().optional(),
                this.key('subjectUniqueID').implicit(2).bitstr().optional(),
                this.key('extensions').explicit(3).seqof(Extension).optional()
            )
        })

        var X509Certificate = asn.define('X509Certificate', function () {
            this.seq().obj(
                this.key('tbsCertificate').use(TBSCertificate),
                this.key('signatureAlgorithm').use(AlgorithmIdentifier),
                this.key('signatureValue').bitstr()
            )
        })

        module.exports = X509Certificate

    },{"asn1.js":7}],150:[function(require,module,exports){
// adapted from https://github.com/apatil/pemstrip
        var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m
        var startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m
        var fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m
        var evp = require('evp_bytestokey')
        var ciphers = require('browserify-aes')
        var Buffer = require('safe-buffer').Buffer
        module.exports = function (okey, password) {
            var key = okey.toString()
            var match = key.match(findProc)
            var decrypted
            if (!match) {
                var match2 = key.match(fullRegex)
                decrypted = new Buffer(match2[2].replace(/[\r\n]/g, ''), 'base64')
            } else {
                var suite = 'aes' + match[1]
                var iv = Buffer.from(match[2], 'hex')
                var cipherText = Buffer.from(match[3].replace(/[\r\n]/g, ''), 'base64')
                var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
                var out = []
                var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
                out.push(cipher.update(cipherText))
                out.push(cipher.final())
                decrypted = Buffer.concat(out)
            }
            var tag = key.match(startRegex)[1]
            return {
                tag: tag,
                data: decrypted
            }
        }

    },{"browserify-aes":27,"evp_bytestokey":109,"safe-buffer":184}],151:[function(require,module,exports){
        var asn1 = require('./asn1')
        var aesid = require('./aesid.json')
        var fixProc = require('./fixProc')
        var ciphers = require('browserify-aes')
        var compat = require('pbkdf2')
        var Buffer = require('safe-buffer').Buffer
        module.exports = parseKeys

        function parseKeys (buffer) {
            var password
            if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
                password = buffer.passphrase
                buffer = buffer.key
            }
            if (typeof buffer === 'string') {
                buffer = Buffer.from(buffer)
            }

            var stripped = fixProc(buffer, password)

            var type = stripped.tag
            var data = stripped.data
            var subtype, ndata
            switch (type) {
                case 'CERTIFICATE':
                    ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo
                // falls through
                case 'PUBLIC KEY':
                    if (!ndata) {
                        ndata = asn1.PublicKey.decode(data, 'der')
                    }
                    subtype = ndata.algorithm.algorithm.join('.')
                    switch (subtype) {
                        case '1.2.840.113549.1.1.1':
                            return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
                        case '1.2.840.10045.2.1':
                            ndata.subjectPrivateKey = ndata.subjectPublicKey
                            return {
                                type: 'ec',
                                data: ndata
                            }
                        case '1.2.840.10040.4.1':
                            ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
                            return {
                                type: 'dsa',
                                data: ndata.algorithm.params
                            }
                        default: throw new Error('unknown key id ' + subtype)
                    }
                    throw new Error('unknown key type ' + type)
                case 'ENCRYPTED PRIVATE KEY':
                    data = asn1.EncryptedPrivateKey.decode(data, 'der')
                    data = decrypt(data, password)
                // falls through
                case 'PRIVATE KEY':
                    ndata = asn1.PrivateKey.decode(data, 'der')
                    subtype = ndata.algorithm.algorithm.join('.')
                    switch (subtype) {
                        case '1.2.840.113549.1.1.1':
                            return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
                        case '1.2.840.10045.2.1':
                            return {
                                curve: ndata.algorithm.curve,
                                privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
                            }
                        case '1.2.840.10040.4.1':
                            ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
                            return {
                                type: 'dsa',
                                params: ndata.algorithm.params
                            }
                        default: throw new Error('unknown key id ' + subtype)
                    }
                    throw new Error('unknown key type ' + type)
                case 'RSA PUBLIC KEY':
                    return asn1.RSAPublicKey.decode(data, 'der')
                case 'RSA PRIVATE KEY':
                    return asn1.RSAPrivateKey.decode(data, 'der')
                case 'DSA PRIVATE KEY':
                    return {
                        type: 'dsa',
                        params: asn1.DSAPrivateKey.decode(data, 'der')
                    }
                case 'EC PRIVATE KEY':
                    data = asn1.ECPrivateKey.decode(data, 'der')
                    return {
                        curve: data.parameters.value,
                        privateKey: data.privateKey
                    }
                default: throw new Error('unknown key type ' + type)
            }
        }
        parseKeys.signature = asn1.signature
        function decrypt (data, password) {
            var salt = data.algorithm.decrypt.kde.kdeparams.salt
            var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
            var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
            var iv = data.algorithm.decrypt.cipher.iv
            var cipherText = data.subjectPrivateKey
            var keylen = parseInt(algo.split('-')[1], 10) / 8
            var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')
            var cipher = ciphers.createDecipheriv(algo, key, iv)
            var out = []
            out.push(cipher.update(cipherText))
            out.push(cipher.final())
            return Buffer.concat(out)
        }

    },{"./aesid.json":147,"./asn1":148,"./fixProc":150,"browserify-aes":27,"pbkdf2":152,"safe-buffer":184}],152:[function(require,module,exports){
        exports.pbkdf2 = require('./lib/async')
        exports.pbkdf2Sync = require('./lib/sync')

    },{"./lib/async":153,"./lib/sync":156}],153:[function(require,module,exports){
        (function (process,global){
            var Buffer = require('safe-buffer').Buffer

            var checkParameters = require('./precondition')
            var defaultEncoding = require('./default-encoding')
            var sync = require('./sync')
            var toBuffer = require('./to-buffer')

            var ZERO_BUF
            var subtle = global.crypto && global.crypto.subtle
            var toBrowser = {
                sha: 'SHA-1',
                'sha-1': 'SHA-1',
                sha1: 'SHA-1',
                sha256: 'SHA-256',
                'sha-256': 'SHA-256',
                sha384: 'SHA-384',
                'sha-384': 'SHA-384',
                'sha-512': 'SHA-512',
                sha512: 'SHA-512'
            }
            var checks = []
            function checkNative (algo) {
                if (global.process && !global.process.browser) {
                    return Promise.resolve(false)
                }
                if (!subtle || !subtle.importKey || !subtle.deriveBits) {
                    return Promise.resolve(false)
                }
                if (checks[algo] !== undefined) {
                    return checks[algo]
                }
                ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
                var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
                    .then(function () {
                        return true
                    }).catch(function () {
                        return false
                    })
                checks[algo] = prom
                return prom
            }

            function browserPbkdf2 (password, salt, iterations, length, algo) {
                return subtle.importKey(
                    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']
                ).then(function (key) {
                    return subtle.deriveBits({
                        name: 'PBKDF2',
                        salt: salt,
                        iterations: iterations,
                        hash: {
                            name: algo
                        }
                    }, key, length << 3)
                }).then(function (res) {
                    return Buffer.from(res)
                })
            }

            function resolvePromise (promise, callback) {
                promise.then(function (out) {
                    process.nextTick(function () {
                        callback(null, out)
                    })
                }, function (e) {
                    process.nextTick(function () {
                        callback(e)
                    })
                })
            }
            module.exports = function (password, salt, iterations, keylen, digest, callback) {
                if (typeof digest === 'function') {
                    callback = digest
                    digest = undefined
                }

                digest = digest || 'sha1'
                var algo = toBrowser[digest.toLowerCase()]

                if (!algo || typeof global.Promise !== 'function') {
                    return process.nextTick(function () {
                        var out
                        try {
                            out = sync(password, salt, iterations, keylen, digest)
                        } catch (e) {
                            return callback(e)
                        }
                        callback(null, out)
                    })
                }

                checkParameters(iterations, keylen)
                password = toBuffer(password, defaultEncoding, 'Password')
                salt = toBuffer(salt, defaultEncoding, 'Salt')
                if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')

                resolvePromise(checkNative(algo).then(function (resp) {
                    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)

                    return sync(password, salt, iterations, keylen, digest)
                }), callback)
            }

        }).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    },{"./default-encoding":154,"./precondition":155,"./sync":156,"./to-buffer":157,"_process":159,"safe-buffer":184}],154:[function(require,module,exports){
        (function (process){
            var defaultEncoding
            /* istanbul ignore next */
            if (process.browser) {
                defaultEncoding = 'utf-8'
            } else if (process.version) {
                var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

                defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
            } else {
                defaultEncoding = 'utf-8'
            }
            module.exports = defaultEncoding

        }).call(this,require('_process'))
    },{"_process":159}],155:[function(require,module,exports){
        var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs

        module.exports = function (iterations, keylen) {
            if (typeof iterations !== 'number') {
                throw new TypeError('Iterations not a number')
            }

            if (iterations < 0) {
                throw new TypeError('Bad iterations')
            }

            if (typeof keylen !== 'number') {
                throw new TypeError('Key length not a number')
            }

            if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
                throw new TypeError('Bad key length')
            }
        }

    },{}],156:[function(require,module,exports){
        var md5 = require('create-hash/md5')
        var RIPEMD160 = require('ripemd160')
        var sha = require('sha.js')
        var Buffer = require('safe-buffer').Buffer

        var checkParameters = require('./precondition')
        var defaultEncoding = require('./default-encoding')
        var toBuffer = require('./to-buffer')

        var ZEROS = Buffer.alloc(128)
        var sizes = {
            md5: 16,
            sha1: 20,
            sha224: 28,
            sha256: 32,
            sha384: 48,
            sha512: 64,
            rmd160: 20,
            ripemd160: 20
        }

        function Hmac (alg, key, saltLen) {
            var hash = getDigest(alg)
            var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

            if (key.length > blocksize) {
                key = hash(key)
            } else if (key.length < blocksize) {
                key = Buffer.concat([key, ZEROS], blocksize)
            }

            var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
            var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
            for (var i = 0; i < blocksize; i++) {
                ipad[i] = key[i] ^ 0x36
                opad[i] = key[i] ^ 0x5C
            }

            var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
            ipad.copy(ipad1, 0, 0, blocksize)
            this.ipad1 = ipad1
            this.ipad2 = ipad
            this.opad = opad
            this.alg = alg
            this.blocksize = blocksize
            this.hash = hash
            this.size = sizes[alg]
        }

        Hmac.prototype.run = function (data, ipad) {
            data.copy(ipad, this.blocksize)
            var h = this.hash(ipad)
            h.copy(this.opad, this.blocksize)
            return this.hash(this.opad)
        }

        function getDigest (alg) {
            function shaFunc (data) {
                return sha(alg).update(data).digest()
            }
            function rmd160Func (data) {
                return new RIPEMD160().update(data).digest()
            }

            if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func
            if (alg === 'md5') return md5
            return shaFunc
        }

        function pbkdf2 (password, salt, iterations, keylen, digest) {
            checkParameters(iterations, keylen)
            password = toBuffer(password, defaultEncoding, 'Password')
            salt = toBuffer(salt, defaultEncoding, 'Salt')

            digest = digest || 'sha1'

            var hmac = new Hmac(digest, password, salt.length)

            var DK = Buffer.allocUnsafe(keylen)
            var block1 = Buffer.allocUnsafe(salt.length + 4)
            salt.copy(block1, 0, 0, salt.length)

            var destPos = 0
            var hLen = sizes[digest]
            var l = Math.ceil(keylen / hLen)

            for (var i = 1; i <= l; i++) {
                block1.writeUInt32BE(i, salt.length)

                var T = hmac.run(block1, hmac.ipad1)
                var U = T

                for (var j = 1; j < iterations; j++) {
                    U = hmac.run(U, hmac.ipad2)
                    for (var k = 0; k < hLen; k++) T[k] ^= U[k]
                }

                T.copy(DK, destPos)
                destPos += hLen
            }

            return DK
        }

        module.exports = pbkdf2

    },{"./default-encoding":154,"./precondition":155,"./to-buffer":157,"create-hash/md5":75,"ripemd160":183,"safe-buffer":184,"sha.js":186}],157:[function(require,module,exports){
        var Buffer = require('safe-buffer').Buffer

        module.exports = function (thing, encoding, name) {
            if (Buffer.isBuffer(thing)) {
                return thing
            } else if (typeof thing === 'string') {
                return Buffer.from(thing, encoding)
            } else if (ArrayBuffer.isView(thing)) {
                return Buffer.from(thing.buffer)
            } else {
                throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')
            }
        }

    },{"safe-buffer":184}],158:[function(require,module,exports){
        (function (process){
            'use strict';

            if (typeof process === 'undefined' ||
                !process.version ||
                process.version.indexOf('v0.') === 0 ||
                process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
                module.exports = { nextTick: nextTick };
            } else {
                module.exports = process
            }

            function nextTick(fn, arg1, arg2, arg3) {
                if (typeof fn !== 'function') {
                    throw new TypeError('"callback" argument must be a function');
                }
                var len = arguments.length;
                var args, i;
                switch (len) {
                    case 0:
                    case 1:
                        return process.nextTick(fn);
                    case 2:
                        return process.nextTick(function afterTickOne() {
                            fn.call(null, arg1);
                        });
                    case 3:
                        return process.nextTick(function afterTickTwo() {
                            fn.call(null, arg1, arg2);
                        });
                    case 4:
                        return process.nextTick(function afterTickThree() {
                            fn.call(null, arg1, arg2, arg3);
                        });
                    default:
                        args = new Array(len - 1);
                        i = 0;
                        while (i < args.length) {
                            args[i++] = arguments[i];
                        }
                        return process.nextTick(function afterTick() {
                            fn.apply(null, args);
                        });
                }
            }


        }).call(this,require('_process'))
    },{"_process":159}],159:[function(require,module,exports){
// shim for using process in browser
        var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

        var cachedSetTimeout;
        var cachedClearTimeout;

        function defaultSetTimout() {
            throw new Error('setTimeout has not been defined');
        }
        function defaultClearTimeout () {
            throw new Error('clearTimeout has not been defined');
        }
        (function () {
            try {
                if (typeof setTimeout === 'function') {
                    cachedSetTimeout = setTimeout;
                } else {
                    cachedSetTimeout = defaultSetTimout;
                }
            } catch (e) {
                cachedSetTimeout = defaultSetTimout;
            }
            try {
                if (typeof clearTimeout === 'function') {
                    cachedClearTimeout = clearTimeout;
                } else {
                    cachedClearTimeout = defaultClearTimeout;
                }
            } catch (e) {
                cachedClearTimeout = defaultClearTimeout;
            }
        } ())
        function runTimeout(fun) {
            if (cachedSetTimeout === setTimeout) {
                //normal enviroments in sane situations
                return setTimeout(fun, 0);
            }
            // if setTimeout wasn't available but was latter defined
            if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
                cachedSetTimeout = setTimeout;
                return setTimeout(fun, 0);
            }
            try {
                // when when somebody has screwed with setTimeout but no I.E. maddness
                return cachedSetTimeout(fun, 0);
            } catch(e){
                try {
                    // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                    return cachedSetTimeout.call(null, fun, 0);
                } catch(e){
                    // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                    return cachedSetTimeout.call(this, fun, 0);
                }
            }


        }
        function runClearTimeout(marker) {
            if (cachedClearTimeout === clearTimeout) {
                //normal enviroments in sane situations
                return clearTimeout(marker);
            }
            // if clearTimeout wasn't available but was latter defined
            if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
                cachedClearTimeout = clearTimeout;
                return clearTimeout(marker);
            }
            try {
                // when when somebody has screwed with setTimeout but no I.E. maddness
                return cachedClearTimeout(marker);
            } catch (e){
                try {
                    // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                    return cachedClearTimeout.call(null, marker);
                } catch (e){
                    // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                    // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                    return cachedClearTimeout.call(this, marker);
                }
            }



        }
        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;

        function cleanUpNextTick() {
            if (!draining || !currentQueue) {
                return;
            }
            draining = false;
            if (currentQueue.length) {
                queue = currentQueue.concat(queue);
            } else {
                queueIndex = -1;
            }
            if (queue.length) {
                drainQueue();
            }
        }

        function drainQueue() {
            if (draining) {
                return;
            }
            var timeout = runTimeout(cleanUpNextTick);
            draining = true;

            var len = queue.length;
            while(len) {
                currentQueue = queue;
                queue = [];
                while (++queueIndex < len) {
                    if (currentQueue) {
                        currentQueue[queueIndex].run();
                    }
                }
                queueIndex = -1;
                len = queue.length;
            }
            currentQueue = null;
            draining = false;
            runClearTimeout(timeout);
        }

        process.nextTick = function (fun) {
            var args = new Array(arguments.length - 1);
            if (arguments.length > 1) {
                for (var i = 1; i < arguments.length; i++) {
                    args[i - 1] = arguments[i];
                }
            }
            queue.push(new Item(fun, args));
            if (queue.length === 1 && !draining) {
                runTimeout(drainQueue);
            }
        };

// v8 likes predictible objects
        function Item(fun, array) {
            this.fun = fun;
            this.array = array;
        }
        Item.prototype.run = function () {
            this.fun.apply(null, this.array);
        };
        process.title = 'browser';
        process.browser = true;
        process.env = {};
        process.argv = [];
        process.version = ''; // empty string to avoid regexp issues
        process.versions = {};

        function noop() {}

        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;
        process.prependListener = noop;
        process.prependOnceListener = noop;

        process.listeners = function (name) { return [] }

        process.binding = function (name) {
            throw new Error('process.binding is not supported');
        };

        process.cwd = function () { return '/' };
        process.chdir = function (dir) {
            throw new Error('process.chdir is not supported');
        };
        process.umask = function() { return 0; };

    },{}],160:[function(require,module,exports){
        exports.publicEncrypt = require('./publicEncrypt')
        exports.privateDecrypt = require('./privateDecrypt')

        exports.privateEncrypt = function privateEncrypt (key, buf) {
            return exports.publicEncrypt(key, buf, true)
        }

        exports.publicDecrypt = function publicDecrypt (key, buf) {
            return exports.privateDecrypt(key, buf, true)
        }

    },{"./privateDecrypt":162,"./publicEncrypt":163}],161:[function(require,module,exports){
        var createHash = require('create-hash')
        var Buffer = require('safe-buffer').Buffer

        module.exports = function (seed, len) {
            var t = Buffer.alloc(0)
            var i = 0
            var c
            while (t.length < len) {
                c = i2ops(i++)
                t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])
            }
            return t.slice(0, len)
        }

        function i2ops (c) {
            var out = Buffer.allocUnsafe(4)
            out.writeUInt32BE(c, 0)
            return out
        }

    },{"create-hash":74,"safe-buffer":184}],162:[function(require,module,exports){
        var parseKeys = require('parse-asn1')
        var mgf = require('./mgf')
        var xor = require('./xor')
        var BN = require('bn.js')
        var crt = require('browserify-rsa')
        var createHash = require('create-hash')
        var withPublic = require('./withPublic')
        var Buffer = require('safe-buffer').Buffer

        module.exports = function privateDecrypt (privateKey, enc, reverse) {
            var padding
            if (privateKey.padding) {
                padding = privateKey.padding
            } else if (reverse) {
                padding = 1
            } else {
                padding = 4
            }

            var key = parseKeys(privateKey)
            var k = key.modulus.byteLength()
            if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {
                throw new Error('decryption error')
            }
            var msg
            if (reverse) {
                msg = withPublic(new BN(enc), key)
            } else {
                msg = crt(enc, key)
            }
            var zBuffer = Buffer.alloc(k - msg.length)
            msg = Buffer.concat([zBuffer, msg], k)
            if (padding === 4) {
                return oaep(key, msg)
            } else if (padding === 1) {
                return pkcs1(key, msg, reverse)
            } else if (padding === 3) {
                return msg
            } else {
                throw new Error('unknown padding')
            }
        }

        function oaep (key, msg) {
            var k = key.modulus.byteLength()
            var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
            var hLen = iHash.length
            if (msg[0] !== 0) {
                throw new Error('decryption error')
            }
            var maskedSeed = msg.slice(1, hLen + 1)
            var maskedDb = msg.slice(hLen + 1)
            var seed = xor(maskedSeed, mgf(maskedDb, hLen))
            var db = xor(maskedDb, mgf(seed, k - hLen - 1))
            if (compare(iHash, db.slice(0, hLen))) {
                throw new Error('decryption error')
            }
            var i = hLen
            while (db[i] === 0) {
                i++
            }
            if (db[i++] !== 1) {
                throw new Error('decryption error')
            }
            return db.slice(i)
        }

        function pkcs1 (key, msg, reverse) {
            var p1 = msg.slice(0, 2)
            var i = 2
            var status = 0
            while (msg[i++] !== 0) {
                if (i >= msg.length) {
                    status++
                    break
                }
            }
            var ps = msg.slice(2, i - 1)

            if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {
                status++
            }
            if (ps.length < 8) {
                status++
            }
            if (status) {
                throw new Error('decryption error')
            }
            return msg.slice(i)
        }
        function compare (a, b) {
            a = Buffer.from(a)
            b = Buffer.from(b)
            var dif = 0
            var len = a.length
            if (a.length !== b.length) {
                dif++
                len = Math.min(a.length, b.length)
            }
            var i = -1
            while (++i < len) {
                dif += (a[i] ^ b[i])
            }
            return dif
        }

    },{"./mgf":161,"./withPublic":164,"./xor":165,"bn.js":22,"browserify-rsa":45,"create-hash":74,"parse-asn1":151,"safe-buffer":184}],163:[function(require,module,exports){
        var parseKeys = require('parse-asn1')
        var randomBytes = require('randombytes')
        var createHash = require('create-hash')
        var mgf = require('./mgf')
        var xor = require('./xor')
        var BN = require('bn.js')
        var withPublic = require('./withPublic')
        var crt = require('browserify-rsa')
        var Buffer = require('safe-buffer').Buffer

        module.exports = function publicEncrypt (publicKey, msg, reverse) {
            var padding
            if (publicKey.padding) {
                padding = publicKey.padding
            } else if (reverse) {
                padding = 1
            } else {
                padding = 4
            }
            var key = parseKeys(publicKey)
            var paddedMsg
            if (padding === 4) {
                paddedMsg = oaep(key, msg)
            } else if (padding === 1) {
                paddedMsg = pkcs1(key, msg, reverse)
            } else if (padding === 3) {
                paddedMsg = new BN(msg)
                if (paddedMsg.cmp(key.modulus) >= 0) {
                    throw new Error('data too long for modulus')
                }
            } else {
                throw new Error('unknown padding')
            }
            if (reverse) {
                return crt(paddedMsg, key)
            } else {
                return withPublic(paddedMsg, key)
            }
        }

        function oaep (key, msg) {
            var k = key.modulus.byteLength()
            var mLen = msg.length
            var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()
            var hLen = iHash.length
            var hLen2 = 2 * hLen
            if (mLen > k - hLen2 - 2) {
                throw new Error('message too long')
            }
            var ps = Buffer.alloc(k - mLen - hLen2 - 2)
            var dblen = k - hLen - 1
            var seed = randomBytes(hLen)
            var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))
            var maskedSeed = xor(seed, mgf(maskedDb, hLen))
            return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))
        }
        function pkcs1 (key, msg, reverse) {
            var mLen = msg.length
            var k = key.modulus.byteLength()
            if (mLen > k - 11) {
                throw new Error('message too long')
            }
            var ps
            if (reverse) {
                ps = Buffer.alloc(k - mLen - 3, 0xff)
            } else {
                ps = nonZero(k - mLen - 3)
            }
            return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))
        }
        function nonZero (len) {
            var out = Buffer.allocUnsafe(len)
            var i = 0
            var cache = randomBytes(len * 2)
            var cur = 0
            var num
            while (i < len) {
                if (cur === cache.length) {
                    cache = randomBytes(len * 2)
                    cur = 0
                }
                num = cache[cur++]
                if (num) {
                    out[i++] = num
                }
            }
            return out
        }

    },{"./mgf":161,"./withPublic":164,"./xor":165,"bn.js":22,"browserify-rsa":45,"create-hash":74,"parse-asn1":151,"randombytes":166,"safe-buffer":184}],164:[function(require,module,exports){
        var BN = require('bn.js')
        var Buffer = require('safe-buffer').Buffer

        function withPublic (paddedMsg, key) {
            return Buffer.from(paddedMsg
                .toRed(BN.mont(key.modulus))
                .redPow(new BN(key.publicExponent))
                .fromRed()
                .toArray())
        }

        module.exports = withPublic

    },{"bn.js":22,"safe-buffer":184}],165:[function(require,module,exports){
        module.exports = function xor (a, b) {
            var len = a.length
            var i = -1
            while (++i < len) {
                a[i] ^= b[i]
            }
            return a
        }

    },{}],166:[function(require,module,exports){
        (function (process,global){
            'use strict'

// limit of Crypto.getRandomValues()
// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues
            var MAX_BYTES = 65536

// Node supports requesting up to this number of bytes
// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48
            var MAX_UINT32 = 4294967295

            function oldBrowser () {
                throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11')
            }

            var Buffer = require('safe-buffer').Buffer
            var crypto = global.crypto || global.msCrypto

            if (crypto && crypto.getRandomValues) {
                module.exports = randomBytes
            } else {
                module.exports = oldBrowser
            }

            function randomBytes (size, cb) {
                // phantomjs needs to throw
                if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')

                var bytes = Buffer.allocUnsafe(size)

                if (size > 0) {  // getRandomValues fails on IE if size == 0
                    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues
                        // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
                        for (var generated = 0; generated < size; generated += MAX_BYTES) {
                            // buffer.slice automatically checks if the end is past the end of
                            // the buffer so we don't have to here
                            crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))
                        }
                    } else {
                        crypto.getRandomValues(bytes)
                    }
                }

                if (typeof cb === 'function') {
                    return process.nextTick(function () {
                        cb(null, bytes)
                    })
                }

                return bytes
            }

        }).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    },{"_process":159,"safe-buffer":184}],167:[function(require,module,exports){
        (function (process,global){
            'use strict'

            function oldBrowser () {
                throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
            }
            var safeBuffer = require('safe-buffer')
            var randombytes = require('randombytes')
            var Buffer = safeBuffer.Buffer
            var kBufferMaxLength = safeBuffer.kMaxLength
            var crypto = global.crypto || global.msCrypto
            var kMaxUint32 = Math.pow(2, 32) - 1
            function assertOffset (offset, length) {
                if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare
                    throw new TypeError('offset must be a number')
                }

                if (offset > kMaxUint32 || offset < 0) {
                    throw new TypeError('offset must be a uint32')
                }

                if (offset > kBufferMaxLength || offset > length) {
                    throw new RangeError('offset out of range')
                }
            }

            function assertSize (size, offset, length) {
                if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare
                    throw new TypeError('size must be a number')
                }

                if (size > kMaxUint32 || size < 0) {
                    throw new TypeError('size must be a uint32')
                }

                if (size + offset > length || size > kBufferMaxLength) {
                    throw new RangeError('buffer too small')
                }
            }
            if ((crypto && crypto.getRandomValues) || !process.browser) {
                exports.randomFill = randomFill
                exports.randomFillSync = randomFillSync
            } else {
                exports.randomFill = oldBrowser
                exports.randomFillSync = oldBrowser
            }
            function randomFill (buf, offset, size, cb) {
                if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
                    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
                }

                if (typeof offset === 'function') {
                    cb = offset
                    offset = 0
                    size = buf.length
                } else if (typeof size === 'function') {
                    cb = size
                    size = buf.length - offset
                } else if (typeof cb !== 'function') {
                    throw new TypeError('"cb" argument must be a function')
                }
                assertOffset(offset, buf.length)
                assertSize(size, offset, buf.length)
                return actualFill(buf, offset, size, cb)
            }

            function actualFill (buf, offset, size, cb) {
                if (process.browser) {
                    var ourBuf = buf.buffer
                    var uint = new Uint8Array(ourBuf, offset, size)
                    crypto.getRandomValues(uint)
                    if (cb) {
                        process.nextTick(function () {
                            cb(null, buf)
                        })
                        return
                    }
                    return buf
                }
                if (cb) {
                    randombytes(size, function (err, bytes) {
                        if (err) {
                            return cb(err)
                        }
                        bytes.copy(buf, offset)
                        cb(null, buf)
                    })
                    return
                }
                var bytes = randombytes(size)
                bytes.copy(buf, offset)
                return buf
            }
            function randomFillSync (buf, offset, size) {
                if (typeof offset === 'undefined') {
                    offset = 0
                }
                if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
                    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
                }

                assertOffset(offset, buf.length)

                if (size === undefined) size = buf.length - offset

                assertSize(size, offset, buf.length)

                return actualFill(buf, offset, size)
            }

        }).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    },{"_process":159,"randombytes":166,"safe-buffer":184}],168:[function(require,module,exports){
        module.exports = require('./lib/_stream_duplex.js');

    },{"./lib/_stream_duplex.js":169}],169:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

        'use strict';

        /*<replacement>*/

        var pna = require('process-nextick-args');
        /*</replacement>*/

        /*<replacement>*/
        var objectKeys = Object.keys || function (obj) {
            var keys = [];
            for (var key in obj) {
                keys.push(key);
            }return keys;
        };
        /*</replacement>*/

        module.exports = Duplex;

        /*<replacement>*/
        var util = Object.create(require('core-util-is'));
        util.inherits = require('inherits');
        /*</replacement>*/

        var Readable = require('./_stream_readable');
        var Writable = require('./_stream_writable');

        util.inherits(Duplex, Readable);

        {
            // avoid scope creep, the keys array can then be collected
            var keys = objectKeys(Writable.prototype);
            for (var v = 0; v < keys.length; v++) {
                var method = keys[v];
                if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
            }
        }

        function Duplex(options) {
            if (!(this instanceof Duplex)) return new Duplex(options);

            Readable.call(this, options);
            Writable.call(this, options);

            if (options && options.readable === false) this.readable = false;

            if (options && options.writable === false) this.writable = false;

            this.allowHalfOpen = true;
            if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

            this.once('end', onend);
        }

        Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function () {
                return this._writableState.highWaterMark;
            }
        });

// the no-half-open enforcer
        function onend() {
            // if we allow half-open state, or if the writable side ended,
            // then we're ok.
            if (this.allowHalfOpen || this._writableState.ended) return;

            // no more data can be written.
            // But allow more writes to happen in this tick.
            pna.nextTick(onEndNT, this);
        }

        function onEndNT(self) {
            self.end();
        }

        Object.defineProperty(Duplex.prototype, 'destroyed', {
            get: function () {
                if (this._readableState === undefined || this._writableState === undefined) {
                    return false;
                }
                return this._readableState.destroyed && this._writableState.destroyed;
            },
            set: function (value) {
                // we ignore the value if the stream
                // has not been initialized yet
                if (this._readableState === undefined || this._writableState === undefined) {
                    return;
                }

                // backward compatibility, the user is explicitly
                // managing destroyed
                this._readableState.destroyed = value;
                this._writableState.destroyed = value;
            }
        });

        Duplex.prototype._destroy = function (err, cb) {
            this.push(null);
            this.end();

            pna.nextTick(cb, err);
        };
    },{"./_stream_readable":171,"./_stream_writable":173,"core-util-is":71,"inherits":140,"process-nextick-args":158}],170:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

        'use strict';

        module.exports = PassThrough;

        var Transform = require('./_stream_transform');

        /*<replacement>*/
        var util = Object.create(require('core-util-is'));
        util.inherits = require('inherits');
        /*</replacement>*/

        util.inherits(PassThrough, Transform);

        function PassThrough(options) {
            if (!(this instanceof PassThrough)) return new PassThrough(options);

            Transform.call(this, options);
        }

        PassThrough.prototype._transform = function (chunk, encoding, cb) {
            cb(null, chunk);
        };
    },{"./_stream_transform":172,"core-util-is":71,"inherits":140}],171:[function(require,module,exports){
        (function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

            'use strict';

            /*<replacement>*/

            var pna = require('process-nextick-args');
            /*</replacement>*/

            module.exports = Readable;

            /*<replacement>*/
            var isArray = require('isarray');
            /*</replacement>*/

            /*<replacement>*/
            var Duplex;
            /*</replacement>*/

            Readable.ReadableState = ReadableState;

            /*<replacement>*/
            var EE = require('events').EventEmitter;

            var EElistenerCount = function (emitter, type) {
                return emitter.listeners(type).length;
            };
            /*</replacement>*/

            /*<replacement>*/
            var Stream = require('./internal/streams/stream');
            /*</replacement>*/

            /*<replacement>*/

            var Buffer = require('safe-buffer').Buffer;
            var OurUint8Array = global.Uint8Array || function () {};
            function _uint8ArrayToBuffer(chunk) {
                return Buffer.from(chunk);
            }
            function _isUint8Array(obj) {
                return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
            }

            /*</replacement>*/

            /*<replacement>*/
            var util = Object.create(require('core-util-is'));
            util.inherits = require('inherits');
            /*</replacement>*/

            /*<replacement>*/
            var debugUtil = require('util');
            var debug = void 0;
            if (debugUtil && debugUtil.debuglog) {
                debug = debugUtil.debuglog('stream');
            } else {
                debug = function () {};
            }
            /*</replacement>*/

            var BufferList = require('./internal/streams/BufferList');
            var destroyImpl = require('./internal/streams/destroy');
            var StringDecoder;

            util.inherits(Readable, Stream);

            var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

            function prependListener(emitter, event, fn) {
                // Sadly this is not cacheable as some libraries bundle their own
                // event emitter implementation with them.
                if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

                // This is a hack to make sure that our error handler is attached before any
                // userland ones.  NEVER DO THIS. This is here only because this code needs
                // to continue to work with older versions of Node.js that do not include
                // the prependListener() method. The goal is to eventually remove this hack.
                if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
            }

            function ReadableState(options, stream) {
                Duplex = Duplex || require('./_stream_duplex');

                options = options || {};

                // Duplex streams are both readable and writable, but share
                // the same options object.
                // However, some cases require setting options to different
                // values for the readable and the writable sides of the duplex stream.
                // These options can be provided separately as readableXXX and writableXXX.
                var isDuplex = stream instanceof Duplex;

                // object stream flag. Used to make read(n) ignore n and to
                // make all the buffer merging and length checks go away
                this.objectMode = !!options.objectMode;

                if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

                // the point at which it stops calling _read() to fill the buffer
                // Note: 0 is a valid value, means "don't call _read preemptively ever"
                var hwm = options.highWaterMark;
                var readableHwm = options.readableHighWaterMark;
                var defaultHwm = this.objectMode ? 16 : 16 * 1024;

                if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

                // cast to ints.
                this.highWaterMark = Math.floor(this.highWaterMark);

                // A linked list is used to store data chunks instead of an array because the
                // linked list can remove elements from the beginning faster than
                // array.shift()
                this.buffer = new BufferList();
                this.length = 0;
                this.pipes = null;
                this.pipesCount = 0;
                this.flowing = null;
                this.ended = false;
                this.endEmitted = false;
                this.reading = false;

                // a flag to be able to tell if the event 'readable'/'data' is emitted
                // immediately, or on a later tick.  We set this to true at first, because
                // any actions that shouldn't happen until "later" should generally also
                // not happen before the first read call.
                this.sync = true;

                // whenever we return null, then we set a flag to say
                // that we're awaiting a 'readable' event emission.
                this.needReadable = false;
                this.emittedReadable = false;
                this.readableListening = false;
                this.resumeScheduled = false;

                // has it been destroyed
                this.destroyed = false;

                // Crypto is kind of old and crusty.  Historically, its default string
                // encoding is 'binary' so we have to make this configurable.
                // Everything else in the universe uses 'utf8', though.
                this.defaultEncoding = options.defaultEncoding || 'utf8';

                // the number of writers that are awaiting a drain event in .pipe()s
                this.awaitDrain = 0;

                // if true, a maybeReadMore has been scheduled
                this.readingMore = false;

                this.decoder = null;
                this.encoding = null;
                if (options.encoding) {
                    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
                    this.decoder = new StringDecoder(options.encoding);
                    this.encoding = options.encoding;
                }
            }

            function Readable(options) {
                Duplex = Duplex || require('./_stream_duplex');

                if (!(this instanceof Readable)) return new Readable(options);

                this._readableState = new ReadableState(options, this);

                // legacy
                this.readable = true;

                if (options) {
                    if (typeof options.read === 'function') this._read = options.read;

                    if (typeof options.destroy === 'function') this._destroy = options.destroy;
                }

                Stream.call(this);
            }

            Object.defineProperty(Readable.prototype, 'destroyed', {
                get: function () {
                    if (this._readableState === undefined) {
                        return false;
                    }
                    return this._readableState.destroyed;
                },
                set: function (value) {
                    // we ignore the value if the stream
                    // has not been initialized yet
                    if (!this._readableState) {
                        return;
                    }

                    // backward compatibility, the user is explicitly
                    // managing destroyed
                    this._readableState.destroyed = value;
                }
            });

            Readable.prototype.destroy = destroyImpl.destroy;
            Readable.prototype._undestroy = destroyImpl.undestroy;
            Readable.prototype._destroy = function (err, cb) {
                this.push(null);
                cb(err);
            };

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
            Readable.prototype.push = function (chunk, encoding) {
                var state = this._readableState;
                var skipChunkCheck;

                if (!state.objectMode) {
                    if (typeof chunk === 'string') {
                        encoding = encoding || state.defaultEncoding;
                        if (encoding !== state.encoding) {
                            chunk = Buffer.from(chunk, encoding);
                            encoding = '';
                        }
                        skipChunkCheck = true;
                    }
                } else {
                    skipChunkCheck = true;
                }

                return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
            };

// Unshift should *always* be something directly out of read()
            Readable.prototype.unshift = function (chunk) {
                return readableAddChunk(this, chunk, null, true, false);
            };

            function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
                var state = stream._readableState;
                if (chunk === null) {
                    state.reading = false;
                    onEofChunk(stream, state);
                } else {
                    var er;
                    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
                    if (er) {
                        stream.emit('error', er);
                    } else if (state.objectMode || chunk && chunk.length > 0) {
                        if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
                            chunk = _uint8ArrayToBuffer(chunk);
                        }

                        if (addToFront) {
                            if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
                        } else if (state.ended) {
                            stream.emit('error', new Error('stream.push() after EOF'));
                        } else {
                            state.reading = false;
                            if (state.decoder && !encoding) {
                                chunk = state.decoder.write(chunk);
                                if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
                            } else {
                                addChunk(stream, state, chunk, false);
                            }
                        }
                    } else if (!addToFront) {
                        state.reading = false;
                    }
                }

                return needMoreData(state);
            }

            function addChunk(stream, state, chunk, addToFront) {
                if (state.flowing && state.length === 0 && !state.sync) {
                    stream.emit('data', chunk);
                    stream.read(0);
                } else {
                    // update the buffer info.
                    state.length += state.objectMode ? 1 : chunk.length;
                    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

                    if (state.needReadable) emitReadable(stream);
                }
                maybeReadMore(stream, state);
            }

            function chunkInvalid(state, chunk) {
                var er;
                if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
                    er = new TypeError('Invalid non-string/buffer chunk');
                }
                return er;
            }

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
            function needMoreData(state) {
                return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
            }

            Readable.prototype.isPaused = function () {
                return this._readableState.flowing === false;
            };

// backwards compatibility.
            Readable.prototype.setEncoding = function (enc) {
                if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
                this._readableState.decoder = new StringDecoder(enc);
                this._readableState.encoding = enc;
                return this;
            };

// Don't raise the hwm > 8MB
            var MAX_HWM = 0x800000;
            function computeNewHighWaterMark(n) {
                if (n >= MAX_HWM) {
                    n = MAX_HWM;
                } else {
                    // Get the next highest power of 2 to prevent increasing hwm excessively in
                    // tiny amounts
                    n--;
                    n |= n >>> 1;
                    n |= n >>> 2;
                    n |= n >>> 4;
                    n |= n >>> 8;
                    n |= n >>> 16;
                    n++;
                }
                return n;
            }

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
            function howMuchToRead(n, state) {
                if (n <= 0 || state.length === 0 && state.ended) return 0;
                if (state.objectMode) return 1;
                if (n !== n) {
                    // Only flow one buffer at a time
                    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
                }
                // If we're asking for more than the current hwm, then raise the hwm.
                if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
                if (n <= state.length) return n;
                // Don't have enough
                if (!state.ended) {
                    state.needReadable = true;
                    return 0;
                }
                return state.length;
            }

// you can override either this method, or the async _read(n) below.
            Readable.prototype.read = function (n) {
                debug('read', n);
                n = parseInt(n, 10);
                var state = this._readableState;
                var nOrig = n;

                if (n !== 0) state.emittedReadable = false;

                // if we're doing read(0) to trigger a readable event, but we
                // already have a bunch of data in the buffer, then just trigger
                // the 'readable' event and move on.
                if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
                    debug('read: emitReadable', state.length, state.ended);
                    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
                    return null;
                }

                n = howMuchToRead(n, state);

                // if we've ended, and we're now clear, then finish it up.
                if (n === 0 && state.ended) {
                    if (state.length === 0) endReadable(this);
                    return null;
                }

                // All the actual chunk generation logic needs to be
                // *below* the call to _read.  The reason is that in certain
                // synthetic stream cases, such as passthrough streams, _read
                // may be a completely synchronous operation which may change
                // the state of the read buffer, providing enough data when
                // before there was *not* enough.
                //
                // So, the steps are:
                // 1. Figure out what the state of things will be after we do
                // a read from the buffer.
                //
                // 2. If that resulting state will trigger a _read, then call _read.
                // Note that this may be asynchronous, or synchronous.  Yes, it is
                // deeply ugly to write APIs this way, but that still doesn't mean
                // that the Readable class should behave improperly, as streams are
                // designed to be sync/async agnostic.
                // Take note if the _read call is sync or async (ie, if the read call
                // has returned yet), so that we know whether or not it's safe to emit
                // 'readable' etc.
                //
                // 3. Actually pull the requested chunks out of the buffer and return.

                // if we need a readable event, then we need to do some reading.
                var doRead = state.needReadable;
                debug('need readable', doRead);

                // if we currently have less than the highWaterMark, then also read some
                if (state.length === 0 || state.length - n < state.highWaterMark) {
                    doRead = true;
                    debug('length less than watermark', doRead);
                }

                // however, if we've ended, then there's no point, and if we're already
                // reading, then it's unnecessary.
                if (state.ended || state.reading) {
                    doRead = false;
                    debug('reading or ended', doRead);
                } else if (doRead) {
                    debug('do read');
                    state.reading = true;
                    state.sync = true;
                    // if the length is currently zero, then we *need* a readable event.
                    if (state.length === 0) state.needReadable = true;
                    // call internal read method
                    this._read(state.highWaterMark);
                    state.sync = false;
                    // If _read pushed data synchronously, then `reading` will be false,
                    // and we need to re-evaluate how much data we can return to the user.
                    if (!state.reading) n = howMuchToRead(nOrig, state);
                }

                var ret;
                if (n > 0) ret = fromList(n, state);else ret = null;

                if (ret === null) {
                    state.needReadable = true;
                    n = 0;
                } else {
                    state.length -= n;
                }

                if (state.length === 0) {
                    // If we have nothing in the buffer, then we want to know
                    // as soon as we *do* get something into the buffer.
                    if (!state.ended) state.needReadable = true;

                    // If we tried to read() past the EOF, then emit end on the next tick.
                    if (nOrig !== n && state.ended) endReadable(this);
                }

                if (ret !== null) this.emit('data', ret);

                return ret;
            };

            function onEofChunk(stream, state) {
                if (state.ended) return;
                if (state.decoder) {
                    var chunk = state.decoder.end();
                    if (chunk && chunk.length) {
                        state.buffer.push(chunk);
                        state.length += state.objectMode ? 1 : chunk.length;
                    }
                }
                state.ended = true;

                // emit 'readable' now to make sure it gets picked up.
                emitReadable(stream);
            }

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
            function emitReadable(stream) {
                var state = stream._readableState;
                state.needReadable = false;
                if (!state.emittedReadable) {
                    debug('emitReadable', state.flowing);
                    state.emittedReadable = true;
                    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);
                }
            }

            function emitReadable_(stream) {
                debug('emit readable');
                stream.emit('readable');
                flow(stream);
            }

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
            function maybeReadMore(stream, state) {
                if (!state.readingMore) {
                    state.readingMore = true;
                    pna.nextTick(maybeReadMore_, stream, state);
                }
            }

            function maybeReadMore_(stream, state) {
                var len = state.length;
                while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
                    debug('maybeReadMore read 0');
                    stream.read(0);
                    if (len === state.length)
                        // didn't get any data, stop spinning.
                        break;else len = state.length;
                }
                state.readingMore = false;
            }

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
            Readable.prototype._read = function (n) {
                this.emit('error', new Error('_read() is not implemented'));
            };

            Readable.prototype.pipe = function (dest, pipeOpts) {
                var src = this;
                var state = this._readableState;

                switch (state.pipesCount) {
                    case 0:
                        state.pipes = dest;
                        break;
                    case 1:
                        state.pipes = [state.pipes, dest];
                        break;
                    default:
                        state.pipes.push(dest);
                        break;
                }
                state.pipesCount += 1;
                debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

                var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

                var endFn = doEnd ? onend : unpipe;
                if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);

                dest.on('unpipe', onunpipe);
                function onunpipe(readable, unpipeInfo) {
                    debug('onunpipe');
                    if (readable === src) {
                        if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
                            unpipeInfo.hasUnpiped = true;
                            cleanup();
                        }
                    }
                }

                function onend() {
                    debug('onend');
                    dest.end();
                }

                // when the dest drains, it reduces the awaitDrain counter
                // on the source.  This would be more elegant with a .once()
                // handler in flow(), but adding and removing repeatedly is
                // too slow.
                var ondrain = pipeOnDrain(src);
                dest.on('drain', ondrain);

                var cleanedUp = false;
                function cleanup() {
                    debug('cleanup');
                    // cleanup event handlers once the pipe is broken
                    dest.removeListener('close', onclose);
                    dest.removeListener('finish', onfinish);
                    dest.removeListener('drain', ondrain);
                    dest.removeListener('error', onerror);
                    dest.removeListener('unpipe', onunpipe);
                    src.removeListener('end', onend);
                    src.removeListener('end', unpipe);
                    src.removeListener('data', ondata);

                    cleanedUp = true;

                    // if the reader is waiting for a drain event from this
                    // specific writer, then it would cause it to never start
                    // flowing again.
                    // So, if this is awaiting a drain, then we just call it now.
                    // If we don't know, then assume that we are waiting for one.
                    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
                }

                // If the user pushes more data while we're writing to dest then we'll end up
                // in ondata again. However, we only want to increase awaitDrain once because
                // dest will only emit one 'drain' event for the multiple writes.
                // => Introduce a guard on increasing awaitDrain.
                var increasedAwaitDrain = false;
                src.on('data', ondata);
                function ondata(chunk) {
                    debug('ondata');
                    increasedAwaitDrain = false;
                    var ret = dest.write(chunk);
                    if (false === ret && !increasedAwaitDrain) {
                        // If the user unpiped during `dest.write()`, it is possible
                        // to get stuck in a permanently paused state if that write
                        // also returned false.
                        // => Check whether `dest` is still a piping destination.
                        if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
                            debug('false write response, pause', src._readableState.awaitDrain);
                            src._readableState.awaitDrain++;
                            increasedAwaitDrain = true;
                        }
                        src.pause();
                    }
                }

                // if the dest has an error, then stop piping into it.
                // however, don't suppress the throwing behavior for this.
                function onerror(er) {
                    debug('onerror', er);
                    unpipe();
                    dest.removeListener('error', onerror);
                    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
                }

                // Make sure our error handler is attached before userland ones.
                prependListener(dest, 'error', onerror);

                // Both close and finish should trigger unpipe, but only once.
                function onclose() {
                    dest.removeListener('finish', onfinish);
                    unpipe();
                }
                dest.once('close', onclose);
                function onfinish() {
                    debug('onfinish');
                    dest.removeListener('close', onclose);
                    unpipe();
                }
                dest.once('finish', onfinish);

                function unpipe() {
                    debug('unpipe');
                    src.unpipe(dest);
                }

                // tell the dest that it's being piped to
                dest.emit('pipe', src);

                // start the flow if it hasn't been started already.
                if (!state.flowing) {
                    debug('pipe resume');
                    src.resume();
                }

                return dest;
            };

            function pipeOnDrain(src) {
                return function () {
                    var state = src._readableState;
                    debug('pipeOnDrain', state.awaitDrain);
                    if (state.awaitDrain) state.awaitDrain--;
                    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
                        state.flowing = true;
                        flow(src);
                    }
                };
            }

            Readable.prototype.unpipe = function (dest) {
                var state = this._readableState;
                var unpipeInfo = { hasUnpiped: false };

                // if we're not piping anywhere, then do nothing.
                if (state.pipesCount === 0) return this;

                // just one destination.  most common case.
                if (state.pipesCount === 1) {
                    // passed in one, but it's not the right one.
                    if (dest && dest !== state.pipes) return this;

                    if (!dest) dest = state.pipes;

                    // got a match.
                    state.pipes = null;
                    state.pipesCount = 0;
                    state.flowing = false;
                    if (dest) dest.emit('unpipe', this, unpipeInfo);
                    return this;
                }

                // slow case. multiple pipe destinations.

                if (!dest) {
                    // remove all.
                    var dests = state.pipes;
                    var len = state.pipesCount;
                    state.pipes = null;
                    state.pipesCount = 0;
                    state.flowing = false;

                    for (var i = 0; i < len; i++) {
                        dests[i].emit('unpipe', this, unpipeInfo);
                    }return this;
                }

                // try to find the right one.
                var index = indexOf(state.pipes, dest);
                if (index === -1) return this;

                state.pipes.splice(index, 1);
                state.pipesCount -= 1;
                if (state.pipesCount === 1) state.pipes = state.pipes[0];

                dest.emit('unpipe', this, unpipeInfo);

                return this;
            };

// set up data events if they are asked for
// Ensure readable listeners eventually get something
            Readable.prototype.on = function (ev, fn) {
                var res = Stream.prototype.on.call(this, ev, fn);

                if (ev === 'data') {
                    // Start flowing on next tick if stream isn't explicitly paused
                    if (this._readableState.flowing !== false) this.resume();
                } else if (ev === 'readable') {
                    var state = this._readableState;
                    if (!state.endEmitted && !state.readableListening) {
                        state.readableListening = state.needReadable = true;
                        state.emittedReadable = false;
                        if (!state.reading) {
                            pna.nextTick(nReadingNextTick, this);
                        } else if (state.length) {
                            emitReadable(this);
                        }
                    }
                }

                return res;
            };
            Readable.prototype.addListener = Readable.prototype.on;

            function nReadingNextTick(self) {
                debug('readable nexttick read 0');
                self.read(0);
            }

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
            Readable.prototype.resume = function () {
                var state = this._readableState;
                if (!state.flowing) {
                    debug('resume');
                    state.flowing = true;
                    resume(this, state);
                }
                return this;
            };

            function resume(stream, state) {
                if (!state.resumeScheduled) {
                    state.resumeScheduled = true;
                    pna.nextTick(resume_, stream, state);
                }
            }

            function resume_(stream, state) {
                if (!state.reading) {
                    debug('resume read 0');
                    stream.read(0);
                }

                state.resumeScheduled = false;
                state.awaitDrain = 0;
                stream.emit('resume');
                flow(stream);
                if (state.flowing && !state.reading) stream.read(0);
            }

            Readable.prototype.pause = function () {
                debug('call pause flowing=%j', this._readableState.flowing);
                if (false !== this._readableState.flowing) {
                    debug('pause');
                    this._readableState.flowing = false;
                    this.emit('pause');
                }
                return this;
            };

            function flow(stream) {
                var state = stream._readableState;
                debug('flow', state.flowing);
                while (state.flowing && stream.read() !== null) {}
            }

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
            Readable.prototype.wrap = function (stream) {
                var _this = this;

                var state = this._readableState;
                var paused = false;

                stream.on('end', function () {
                    debug('wrapped end');
                    if (state.decoder && !state.ended) {
                        var chunk = state.decoder.end();
                        if (chunk && chunk.length) _this.push(chunk);
                    }

                    _this.push(null);
                });

                stream.on('data', function (chunk) {
                    debug('wrapped data');
                    if (state.decoder) chunk = state.decoder.write(chunk);

                    // don't skip over falsy values in objectMode
                    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

                    var ret = _this.push(chunk);
                    if (!ret) {
                        paused = true;
                        stream.pause();
                    }
                });

                // proxy all the other methods.
                // important when wrapping filters and duplexes.
                for (var i in stream) {
                    if (this[i] === undefined && typeof stream[i] === 'function') {
                        this[i] = function (method) {
                            return function () {
                                return stream[method].apply(stream, arguments);
                            };
                        }(i);
                    }
                }

                // proxy certain important events.
                for (var n = 0; n < kProxyEvents.length; n++) {
                    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
                }

                // when we try to consume some more bytes, simply unpause the
                // underlying stream.
                this._read = function (n) {
                    debug('wrapped _read', n);
                    if (paused) {
                        paused = false;
                        stream.resume();
                    }
                };

                return this;
            };

            Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function () {
                    return this._readableState.highWaterMark;
                }
            });

// exposed for testing purposes only.
            Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
            function fromList(n, state) {
                // nothing buffered
                if (state.length === 0) return null;

                var ret;
                if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
                    // read it all, truncate the list
                    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
                    state.buffer.clear();
                } else {
                    // read part of list
                    ret = fromListPartial(n, state.buffer, state.decoder);
                }

                return ret;
            }

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
            function fromListPartial(n, list, hasStrings) {
                var ret;
                if (n < list.head.data.length) {
                    // slice is the same for buffers and strings
                    ret = list.head.data.slice(0, n);
                    list.head.data = list.head.data.slice(n);
                } else if (n === list.head.data.length) {
                    // first chunk is a perfect match
                    ret = list.shift();
                } else {
                    // result spans more than one buffer
                    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
                }
                return ret;
            }

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
            function copyFromBufferString(n, list) {
                var p = list.head;
                var c = 1;
                var ret = p.data;
                n -= ret.length;
                while (p = p.next) {
                    var str = p.data;
                    var nb = n > str.length ? str.length : n;
                    if (nb === str.length) ret += str;else ret += str.slice(0, n);
                    n -= nb;
                    if (n === 0) {
                        if (nb === str.length) {
                            ++c;
                            if (p.next) list.head = p.next;else list.head = list.tail = null;
                        } else {
                            list.head = p;
                            p.data = str.slice(nb);
                        }
                        break;
                    }
                    ++c;
                }
                list.length -= c;
                return ret;
            }

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
            function copyFromBuffer(n, list) {
                var ret = Buffer.allocUnsafe(n);
                var p = list.head;
                var c = 1;
                p.data.copy(ret);
                n -= p.data.length;
                while (p = p.next) {
                    var buf = p.data;
                    var nb = n > buf.length ? buf.length : n;
                    buf.copy(ret, ret.length - n, 0, nb);
                    n -= nb;
                    if (n === 0) {
                        if (nb === buf.length) {
                            ++c;
                            if (p.next) list.head = p.next;else list.head = list.tail = null;
                        } else {
                            list.head = p;
                            p.data = buf.slice(nb);
                        }
                        break;
                    }
                    ++c;
                }
                list.length -= c;
                return ret;
            }

            function endReadable(stream) {
                var state = stream._readableState;

                // If we get here before consuming all the bytes, then that is a
                // bug in node.  Should never happen.
                if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

                if (!state.endEmitted) {
                    state.ended = true;
                    pna.nextTick(endReadableNT, state, stream);
                }
            }

            function endReadableNT(state, stream) {
                // Check that we didn't get one last unshift.
                if (!state.endEmitted && state.length === 0) {
                    state.endEmitted = true;
                    stream.readable = false;
                    stream.emit('end');
                }
            }

            function indexOf(xs, x) {
                for (var i = 0, l = xs.length; i < l; i++) {
                    if (xs[i] === x) return i;
                }
                return -1;
            }
        }).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    },{"./_stream_duplex":169,"./internal/streams/BufferList":174,"./internal/streams/destroy":175,"./internal/streams/stream":176,"_process":159,"core-util-is":71,"events":108,"inherits":140,"isarray":142,"process-nextick-args":158,"safe-buffer":177,"string_decoder/":178,"util":24}],172:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

        'use strict';

        module.exports = Transform;

        var Duplex = require('./_stream_duplex');

        /*<replacement>*/
        var util = Object.create(require('core-util-is'));
        util.inherits = require('inherits');
        /*</replacement>*/

        util.inherits(Transform, Duplex);

        function afterTransform(er, data) {
            var ts = this._transformState;
            ts.transforming = false;

            var cb = ts.writecb;

            if (!cb) {
                return this.emit('error', new Error('write callback called multiple times'));
            }

            ts.writechunk = null;
            ts.writecb = null;

            if (data != null) // single equals check for both `null` and `undefined`
                this.push(data);

            cb(er);

            var rs = this._readableState;
            rs.reading = false;
            if (rs.needReadable || rs.length < rs.highWaterMark) {
                this._read(rs.highWaterMark);
            }
        }

        function Transform(options) {
            if (!(this instanceof Transform)) return new Transform(options);

            Duplex.call(this, options);

            this._transformState = {
                afterTransform: afterTransform.bind(this),
                needTransform: false,
                transforming: false,
                writecb: null,
                writechunk: null,
                writeencoding: null
            };

            // start out asking for a readable event once data is transformed.
            this._readableState.needReadable = true;

            // we have implemented the _read method, and done the other things
            // that Readable wants before the first _read call, so unset the
            // sync guard flag.
            this._readableState.sync = false;

            if (options) {
                if (typeof options.transform === 'function') this._transform = options.transform;

                if (typeof options.flush === 'function') this._flush = options.flush;
            }

            // When the writable side finishes, then flush out anything remaining.
            this.on('prefinish', prefinish);
        }

        function prefinish() {
            var _this = this;

            if (typeof this._flush === 'function') {
                this._flush(function (er, data) {
                    done(_this, er, data);
                });
            } else {
                done(this, null, null);
            }
        }

        Transform.prototype.push = function (chunk, encoding) {
            this._transformState.needTransform = false;
            return Duplex.prototype.push.call(this, chunk, encoding);
        };

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
        Transform.prototype._transform = function (chunk, encoding, cb) {
            throw new Error('_transform() is not implemented');
        };

        Transform.prototype._write = function (chunk, encoding, cb) {
            var ts = this._transformState;
            ts.writecb = cb;
            ts.writechunk = chunk;
            ts.writeencoding = encoding;
            if (!ts.transforming) {
                var rs = this._readableState;
                if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
            }
        };

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
        Transform.prototype._read = function (n) {
            var ts = this._transformState;

            if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
                ts.transforming = true;
                this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
            } else {
                // mark that we need a transform, so that any data that comes in
                // will get processed, now that we've asked for it.
                ts.needTransform = true;
            }
        };

        Transform.prototype._destroy = function (err, cb) {
            var _this2 = this;

            Duplex.prototype._destroy.call(this, err, function (err2) {
                cb(err2);
                _this2.emit('close');
            });
        };

        function done(stream, er, data) {
            if (er) return stream.emit('error', er);

            if (data != null) // single equals check for both `null` and `undefined`
                stream.push(data);

            // if there's nothing in the write buffer, then that means
            // that nothing more will ever be provided
            if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

            if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

            return stream.push(null);
        }
    },{"./_stream_duplex":169,"core-util-is":71,"inherits":140}],173:[function(require,module,exports){
        (function (process,global,setImmediate){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.

            'use strict';

            /*<replacement>*/

            var pna = require('process-nextick-args');
            /*</replacement>*/

            module.exports = Writable;

            /* <replacement> */
            function WriteReq(chunk, encoding, cb) {
                this.chunk = chunk;
                this.encoding = encoding;
                this.callback = cb;
                this.next = null;
            }

// It seems a linked list but it is not
// there will be only 2 of these for each stream
            function CorkedRequest(state) {
                var _this = this;

                this.next = null;
                this.entry = null;
                this.finish = function () {
                    onCorkedFinish(_this, state);
                };
            }
            /* </replacement> */

            /*<replacement>*/
            var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
            /*</replacement>*/

            /*<replacement>*/
            var Duplex;
            /*</replacement>*/

            Writable.WritableState = WritableState;

            /*<replacement>*/
            var util = Object.create(require('core-util-is'));
            util.inherits = require('inherits');
            /*</replacement>*/

            /*<replacement>*/
            var internalUtil = {
                deprecate: require('util-deprecate')
            };
            /*</replacement>*/

            /*<replacement>*/
            var Stream = require('./internal/streams/stream');
            /*</replacement>*/

            /*<replacement>*/

            var Buffer = require('safe-buffer').Buffer;
            var OurUint8Array = global.Uint8Array || function () {};
            function _uint8ArrayToBuffer(chunk) {
                return Buffer.from(chunk);
            }
            function _isUint8Array(obj) {
                return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
            }

            /*</replacement>*/

            var destroyImpl = require('./internal/streams/destroy');

            util.inherits(Writable, Stream);

            function nop() {}

            function WritableState(options, stream) {
                Duplex = Duplex || require('./_stream_duplex');

                options = options || {};

                // Duplex streams are both readable and writable, but share
                // the same options object.
                // However, some cases require setting options to different
                // values for the readable and the writable sides of the duplex stream.
                // These options can be provided separately as readableXXX and writableXXX.
                var isDuplex = stream instanceof Duplex;

                // object stream flag to indicate whether or not this stream
                // contains buffers or objects.
                this.objectMode = !!options.objectMode;

                if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

                // the point at which write() starts returning false
                // Note: 0 is a valid value, means that we always return false if
                // the entire buffer is not flushed immediately on write()
                var hwm = options.highWaterMark;
                var writableHwm = options.writableHighWaterMark;
                var defaultHwm = this.objectMode ? 16 : 16 * 1024;

                if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;

                // cast to ints.
                this.highWaterMark = Math.floor(this.highWaterMark);

                // if _final has been called
                this.finalCalled = false;

                // drain event flag.
                this.needDrain = false;
                // at the start of calling end()
                this.ending = false;
                // when end() has been called, and returned
                this.ended = false;
                // when 'finish' is emitted
                this.finished = false;

                // has it been destroyed
                this.destroyed = false;

                // should we decode strings into buffers before passing to _write?
                // this is here so that some node-core streams can optimize string
                // handling at a lower level.
                var noDecode = options.decodeStrings === false;
                this.decodeStrings = !noDecode;

                // Crypto is kind of old and crusty.  Historically, its default string
                // encoding is 'binary' so we have to make this configurable.
                // Everything else in the universe uses 'utf8', though.
                this.defaultEncoding = options.defaultEncoding || 'utf8';

                // not an actual buffer we keep track of, but a measurement
                // of how much we're waiting to get pushed to some underlying
                // socket or file.
                this.length = 0;

                // a flag to see when we're in the middle of a write.
                this.writing = false;

                // when true all writes will be buffered until .uncork() call
                this.corked = 0;

                // a flag to be able to tell if the onwrite cb is called immediately,
                // or on a later tick.  We set this to true at first, because any
                // actions that shouldn't happen until "later" should generally also
                // not happen before the first write call.
                this.sync = true;

                // a flag to know if we're processing previously buffered items, which
                // may call the _write() callback in the same tick, so that we don't
                // end up in an overlapped onwrite situation.
                this.bufferProcessing = false;

                // the callback that's passed to _write(chunk,cb)
                this.onwrite = function (er) {
                    onwrite(stream, er);
                };

                // the callback that the user supplies to write(chunk,encoding,cb)
                this.writecb = null;

                // the amount that is being written when _write is called.
                this.writelen = 0;

                this.bufferedRequest = null;
                this.lastBufferedRequest = null;

                // number of pending user-supplied write callbacks
                // this must be 0 before 'finish' can be emitted
                this.pendingcb = 0;

                // emit prefinish if the only thing we're waiting for is _write cbs
                // This is relevant for synchronous Transform streams
                this.prefinished = false;

                // True if the error was already emitted and should not be thrown again
                this.errorEmitted = false;

                // count buffered requests
                this.bufferedRequestCount = 0;

                // allocate the first CorkedRequest, there is always
                // one allocated and free to use, and we maintain at most two
                this.corkedRequestsFree = new CorkedRequest(this);
            }

            WritableState.prototype.getBuffer = function getBuffer() {
                var current = this.bufferedRequest;
                var out = [];
                while (current) {
                    out.push(current);
                    current = current.next;
                }
                return out;
            };

            (function () {
                try {
                    Object.defineProperty(WritableState.prototype, 'buffer', {
                        get: internalUtil.deprecate(function () {
                            return this.getBuffer();
                        }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
                    });
                } catch (_) {}
            })();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
            var realHasInstance;
            if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
                realHasInstance = Function.prototype[Symbol.hasInstance];
                Object.defineProperty(Writable, Symbol.hasInstance, {
                    value: function (object) {
                        if (realHasInstance.call(this, object)) return true;
                        if (this !== Writable) return false;

                        return object && object._writableState instanceof WritableState;
                    }
                });
            } else {
                realHasInstance = function (object) {
                    return object instanceof this;
                };
            }

            function Writable(options) {
                Duplex = Duplex || require('./_stream_duplex');

                // Writable ctor is applied to Duplexes, too.
                // `realHasInstance` is necessary because using plain `instanceof`
                // would return false, as no `_writableState` property is attached.

                // Trying to use the custom `instanceof` for Writable here will also break the
                // Node.js LazyTransform implementation, which has a non-trivial getter for
                // `_writableState` that would lead to infinite recursion.
                if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
                    return new Writable(options);
                }

                this._writableState = new WritableState(options, this);

                // legacy.
                this.writable = true;

                if (options) {
                    if (typeof options.write === 'function') this._write = options.write;

                    if (typeof options.writev === 'function') this._writev = options.writev;

                    if (typeof options.destroy === 'function') this._destroy = options.destroy;

                    if (typeof options.final === 'function') this._final = options.final;
                }

                Stream.call(this);
            }

// Otherwise people can pipe Writable streams, which is just wrong.
            Writable.prototype.pipe = function () {
                this.emit('error', new Error('Cannot pipe, not readable'));
            };

            function writeAfterEnd(stream, cb) {
                var er = new Error('write after end');
                // TODO: defer error events consistently everywhere, not just the cb
                stream.emit('error', er);
                pna.nextTick(cb, er);
            }

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
            function validChunk(stream, state, chunk, cb) {
                var valid = true;
                var er = false;

                if (chunk === null) {
                    er = new TypeError('May not write null values to stream');
                } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
                    er = new TypeError('Invalid non-string/buffer chunk');
                }
                if (er) {
                    stream.emit('error', er);
                    pna.nextTick(cb, er);
                    valid = false;
                }
                return valid;
            }

            Writable.prototype.write = function (chunk, encoding, cb) {
                var state = this._writableState;
                var ret = false;
                var isBuf = !state.objectMode && _isUint8Array(chunk);

                if (isBuf && !Buffer.isBuffer(chunk)) {
                    chunk = _uint8ArrayToBuffer(chunk);
                }

                if (typeof encoding === 'function') {
                    cb = encoding;
                    encoding = null;
                }

                if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

                if (typeof cb !== 'function') cb = nop;

                if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
                    state.pendingcb++;
                    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
                }

                return ret;
            };

            Writable.prototype.cork = function () {
                var state = this._writableState;

                state.corked++;
            };

            Writable.prototype.uncork = function () {
                var state = this._writableState;

                if (state.corked) {
                    state.corked--;

                    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
                }
            };

            Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
                // node::ParseEncoding() requires lower case.
                if (typeof encoding === 'string') encoding = encoding.toLowerCase();
                if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
                this._writableState.defaultEncoding = encoding;
                return this;
            };

            function decodeChunk(state, chunk, encoding) {
                if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
                    chunk = Buffer.from(chunk, encoding);
                }
                return chunk;
            }

            Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: false,
                get: function () {
                    return this._writableState.highWaterMark;
                }
            });

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
            function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
                if (!isBuf) {
                    var newChunk = decodeChunk(state, chunk, encoding);
                    if (chunk !== newChunk) {
                        isBuf = true;
                        encoding = 'buffer';
                        chunk = newChunk;
                    }
                }
                var len = state.objectMode ? 1 : chunk.length;

                state.length += len;

                var ret = state.length < state.highWaterMark;
                // we must ensure that previous needDrain will not be reset to false.
                if (!ret) state.needDrain = true;

                if (state.writing || state.corked) {
                    var last = state.lastBufferedRequest;
                    state.lastBufferedRequest = {
                        chunk: chunk,
                        encoding: encoding,
                        isBuf: isBuf,
                        callback: cb,
                        next: null
                    };
                    if (last) {
                        last.next = state.lastBufferedRequest;
                    } else {
                        state.bufferedRequest = state.lastBufferedRequest;
                    }
                    state.bufferedRequestCount += 1;
                } else {
                    doWrite(stream, state, false, len, chunk, encoding, cb);
                }

                return ret;
            }

            function doWrite(stream, state, writev, len, chunk, encoding, cb) {
                state.writelen = len;
                state.writecb = cb;
                state.writing = true;
                state.sync = true;
                if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
                state.sync = false;
            }

            function onwriteError(stream, state, sync, er, cb) {
                --state.pendingcb;

                if (sync) {
                    // defer the callback if we are being called synchronously
                    // to avoid piling up things on the stack
                    pna.nextTick(cb, er);
                    // this can emit finish, and it will always happen
                    // after error
                    pna.nextTick(finishMaybe, stream, state);
                    stream._writableState.errorEmitted = true;
                    stream.emit('error', er);
                } else {
                    // the caller expect this to happen before if
                    // it is async
                    cb(er);
                    stream._writableState.errorEmitted = true;
                    stream.emit('error', er);
                    // this can emit finish, but finish must
                    // always follow error
                    finishMaybe(stream, state);
                }
            }

            function onwriteStateUpdate(state) {
                state.writing = false;
                state.writecb = null;
                state.length -= state.writelen;
                state.writelen = 0;
            }

            function onwrite(stream, er) {
                var state = stream._writableState;
                var sync = state.sync;
                var cb = state.writecb;

                onwriteStateUpdate(state);

                if (er) onwriteError(stream, state, sync, er, cb);else {
                    // Check if we're actually ready to finish, but don't emit yet
                    var finished = needFinish(state);

                    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
                        clearBuffer(stream, state);
                    }

                    if (sync) {
                        /*<replacement>*/
                        asyncWrite(afterWrite, stream, state, finished, cb);
                        /*</replacement>*/
                    } else {
                        afterWrite(stream, state, finished, cb);
                    }
                }
            }

            function afterWrite(stream, state, finished, cb) {
                if (!finished) onwriteDrain(stream, state);
                state.pendingcb--;
                cb();
                finishMaybe(stream, state);
            }

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
            function onwriteDrain(stream, state) {
                if (state.length === 0 && state.needDrain) {
                    state.needDrain = false;
                    stream.emit('drain');
                }
            }

// if there's something in the buffer waiting, then process it
            function clearBuffer(stream, state) {
                state.bufferProcessing = true;
                var entry = state.bufferedRequest;

                if (stream._writev && entry && entry.next) {
                    // Fast case, write everything using _writev()
                    var l = state.bufferedRequestCount;
                    var buffer = new Array(l);
                    var holder = state.corkedRequestsFree;
                    holder.entry = entry;

                    var count = 0;
                    var allBuffers = true;
                    while (entry) {
                        buffer[count] = entry;
                        if (!entry.isBuf) allBuffers = false;
                        entry = entry.next;
                        count += 1;
                    }
                    buffer.allBuffers = allBuffers;

                    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

                    // doWrite is almost always async, defer these to save a bit of time
                    // as the hot path ends with doWrite
                    state.pendingcb++;
                    state.lastBufferedRequest = null;
                    if (holder.next) {
                        state.corkedRequestsFree = holder.next;
                        holder.next = null;
                    } else {
                        state.corkedRequestsFree = new CorkedRequest(state);
                    }
                    state.bufferedRequestCount = 0;
                } else {
                    // Slow case, write chunks one-by-one
                    while (entry) {
                        var chunk = entry.chunk;
                        var encoding = entry.encoding;
                        var cb = entry.callback;
                        var len = state.objectMode ? 1 : chunk.length;

                        doWrite(stream, state, false, len, chunk, encoding, cb);
                        entry = entry.next;
                        state.bufferedRequestCount--;
                        // if we didn't call the onwrite immediately, then
                        // it means that we need to wait until it does.
                        // also, that means that the chunk and cb are currently
                        // being processed, so move the buffer counter past them.
                        if (state.writing) {
                            break;
                        }
                    }

                    if (entry === null) state.lastBufferedRequest = null;
                }

                state.bufferedRequest = entry;
                state.bufferProcessing = false;
            }

            Writable.prototype._write = function (chunk, encoding, cb) {
                cb(new Error('_write() is not implemented'));
            };

            Writable.prototype._writev = null;

            Writable.prototype.end = function (chunk, encoding, cb) {
                var state = this._writableState;

                if (typeof chunk === 'function') {
                    cb = chunk;
                    chunk = null;
                    encoding = null;
                } else if (typeof encoding === 'function') {
                    cb = encoding;
                    encoding = null;
                }

                if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

                // .end() fully uncorks
                if (state.corked) {
                    state.corked = 1;
                    this.uncork();
                }

                // ignore unnecessary end() calls.
                if (!state.ending && !state.finished) endWritable(this, state, cb);
            };

            function needFinish(state) {
                return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
            }
            function callFinal(stream, state) {
                stream._final(function (err) {
                    state.pendingcb--;
                    if (err) {
                        stream.emit('error', err);
                    }
                    state.prefinished = true;
                    stream.emit('prefinish');
                    finishMaybe(stream, state);
                });
            }
            function prefinish(stream, state) {
                if (!state.prefinished && !state.finalCalled) {
                    if (typeof stream._final === 'function') {
                        state.pendingcb++;
                        state.finalCalled = true;
                        pna.nextTick(callFinal, stream, state);
                    } else {
                        state.prefinished = true;
                        stream.emit('prefinish');
                    }
                }
            }

            function finishMaybe(stream, state) {
                var need = needFinish(state);
                if (need) {
                    prefinish(stream, state);
                    if (state.pendingcb === 0) {
                        state.finished = true;
                        stream.emit('finish');
                    }
                }
                return need;
            }

            function endWritable(stream, state, cb) {
                state.ending = true;
                finishMaybe(stream, state);
                if (cb) {
                    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);
                }
                state.ended = true;
                stream.writable = false;
            }

            function onCorkedFinish(corkReq, state, err) {
                var entry = corkReq.entry;
                corkReq.entry = null;
                while (entry) {
                    var cb = entry.callback;
                    state.pendingcb--;
                    cb(err);
                    entry = entry.next;
                }
                if (state.corkedRequestsFree) {
                    state.corkedRequestsFree.next = corkReq;
                } else {
                    state.corkedRequestsFree = corkReq;
                }
            }

            Object.defineProperty(Writable.prototype, 'destroyed', {
                get: function () {
                    if (this._writableState === undefined) {
                        return false;
                    }
                    return this._writableState.destroyed;
                },
                set: function (value) {
                    // we ignore the value if the stream
                    // has not been initialized yet
                    if (!this._writableState) {
                        return;
                    }

                    // backward compatibility, the user is explicitly
                    // managing destroyed
                    this._writableState.destroyed = value;
                }
            });

            Writable.prototype.destroy = destroyImpl.destroy;
            Writable.prototype._undestroy = destroyImpl.undestroy;
            Writable.prototype._destroy = function (err, cb) {
                this.end();
                cb(err);
            };
        }).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("timers").setImmediate)
    },{"./_stream_duplex":169,"./internal/streams/destroy":175,"./internal/streams/stream":176,"_process":159,"core-util-is":71,"inherits":140,"process-nextick-args":158,"safe-buffer":177,"timers":195,"util-deprecate":196}],174:[function(require,module,exports){
        'use strict';

        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

        var Buffer = require('safe-buffer').Buffer;
        var util = require('util');

        function copyBuffer(src, target, offset) {
            src.copy(target, offset);
        }

        module.exports = function () {
            function BufferList() {
                _classCallCheck(this, BufferList);

                this.head = null;
                this.tail = null;
                this.length = 0;
            }

            BufferList.prototype.push = function push(v) {
                var entry = { data: v, next: null };
                if (this.length > 0) this.tail.next = entry;else this.head = entry;
                this.tail = entry;
                ++this.length;
            };

            BufferList.prototype.unshift = function unshift(v) {
                var entry = { data: v, next: this.head };
                if (this.length === 0) this.tail = entry;
                this.head = entry;
                ++this.length;
            };

            BufferList.prototype.shift = function shift() {
                if (this.length === 0) return;
                var ret = this.head.data;
                if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
                --this.length;
                return ret;
            };

            BufferList.prototype.clear = function clear() {
                this.head = this.tail = null;
                this.length = 0;
            };

            BufferList.prototype.join = function join(s) {
                if (this.length === 0) return '';
                var p = this.head;
                var ret = '' + p.data;
                while (p = p.next) {
                    ret += s + p.data;
                }return ret;
            };

            BufferList.prototype.concat = function concat(n) {
                if (this.length === 0) return Buffer.alloc(0);
                if (this.length === 1) return this.head.data;
                var ret = Buffer.allocUnsafe(n >>> 0);
                var p = this.head;
                var i = 0;
                while (p) {
                    copyBuffer(p.data, ret, i);
                    i += p.data.length;
                    p = p.next;
                }
                return ret;
            };

            return BufferList;
        }();

        if (util && util.inspect && util.inspect.custom) {
            module.exports.prototype[util.inspect.custom] = function () {
                var obj = util.inspect({ length: this.length });
                return this.constructor.name + ' ' + obj;
            };
        }
    },{"safe-buffer":177,"util":24}],175:[function(require,module,exports){
        'use strict';

        /*<replacement>*/

        var pna = require('process-nextick-args');
        /*</replacement>*/

// undocumented cb() API, needed for core, not for public API
        function destroy(err, cb) {
            var _this = this;

            var readableDestroyed = this._readableState && this._readableState.destroyed;
            var writableDestroyed = this._writableState && this._writableState.destroyed;

            if (readableDestroyed || writableDestroyed) {
                if (cb) {
                    cb(err);
                } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
                    pna.nextTick(emitErrorNT, this, err);
                }
                return this;
            }

            // we set destroyed to true before firing error callbacks in order
            // to make it re-entrance safe in case destroy() is called within callbacks

            if (this._readableState) {
                this._readableState.destroyed = true;
            }

            // if this is a duplex stream mark the writable part as destroyed as well
            if (this._writableState) {
                this._writableState.destroyed = true;
            }

            this._destroy(err || null, function (err) {
                if (!cb && err) {
                    pna.nextTick(emitErrorNT, _this, err);
                    if (_this._writableState) {
                        _this._writableState.errorEmitted = true;
                    }
                } else if (cb) {
                    cb(err);
                }
            });

            return this;
        }

        function undestroy() {
            if (this._readableState) {
                this._readableState.destroyed = false;
                this._readableState.reading = false;
                this._readableState.ended = false;
                this._readableState.endEmitted = false;
            }

            if (this._writableState) {
                this._writableState.destroyed = false;
                this._writableState.ended = false;
                this._writableState.ending = false;
                this._writableState.finished = false;
                this._writableState.errorEmitted = false;
            }
        }

        function emitErrorNT(self, err) {
            self.emit('error', err);
        }

        module.exports = {
            destroy: destroy,
            undestroy: undestroy
        };
    },{"process-nextick-args":158}],176:[function(require,module,exports){
        arguments[4][66][0].apply(exports,arguments)
    },{"dup":66,"events":108}],177:[function(require,module,exports){
        /* eslint-disable node/no-deprecated-api */
        var buffer = require('buffer')
        var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
        function copyProps (src, dst) {
            for (var key in src) {
                dst[key] = src[key]
            }
        }
        if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
            module.exports = buffer
        } else {
            // Copy properties from require('buffer')
            copyProps(buffer, exports)
            exports.Buffer = SafeBuffer
        }

        function SafeBuffer (arg, encodingOrOffset, length) {
            return Buffer(arg, encodingOrOffset, length)
        }

// Copy static methods from Buffer
        copyProps(Buffer, SafeBuffer)

        SafeBuffer.from = function (arg, encodingOrOffset, length) {
            if (typeof arg === 'number') {
                throw new TypeError('Argument must not be a number')
            }
            return Buffer(arg, encodingOrOffset, length)
        }

        SafeBuffer.alloc = function (size, fill, encoding) {
            if (typeof size !== 'number') {
                throw new TypeError('Argument must be a number')
            }
            var buf = Buffer(size)
            if (fill !== undefined) {
                if (typeof encoding === 'string') {
                    buf.fill(fill, encoding)
                } else {
                    buf.fill(fill)
                }
            } else {
                buf.fill(0)
            }
            return buf
        }

        SafeBuffer.allocUnsafe = function (size) {
            if (typeof size !== 'number') {
                throw new TypeError('Argument must be a number')
            }
            return Buffer(size)
        }

        SafeBuffer.allocUnsafeSlow = function (size) {
            if (typeof size !== 'number') {
                throw new TypeError('Argument must be a number')
            }
            return buffer.SlowBuffer(size)
        }

    },{"buffer":68}],178:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

        'use strict';

        /*<replacement>*/

        var Buffer = require('safe-buffer').Buffer;
        /*</replacement>*/

        var isEncoding = Buffer.isEncoding || function (encoding) {
            encoding = '' + encoding;
            switch (encoding && encoding.toLowerCase()) {
                case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
                    return true;
                default:
                    return false;
            }
        };

        function _normalizeEncoding(enc) {
            if (!enc) return 'utf8';
            var retried;
            while (true) {
                switch (enc) {
                    case 'utf8':
                    case 'utf-8':
                        return 'utf8';
                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                        return 'utf16le';
                    case 'latin1':
                    case 'binary':
                        return 'latin1';
                    case 'base64':
                    case 'ascii':
                    case 'hex':
                        return enc;
                    default:
                        if (retried) return; // undefined
                        enc = ('' + enc).toLowerCase();
                        retried = true;
                }
            }
        };

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
        function normalizeEncoding(enc) {
            var nenc = _normalizeEncoding(enc);
            if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
            return nenc || enc;
        }

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
        exports.StringDecoder = StringDecoder;
        function StringDecoder(encoding) {
            this.encoding = normalizeEncoding(encoding);
            var nb;
            switch (this.encoding) {
                case 'utf16le':
                    this.text = utf16Text;
                    this.end = utf16End;
                    nb = 4;
                    break;
                case 'utf8':
                    this.fillLast = utf8FillLast;
                    nb = 4;
                    break;
                case 'base64':
                    this.text = base64Text;
                    this.end = base64End;
                    nb = 3;
                    break;
                default:
                    this.write = simpleWrite;
                    this.end = simpleEnd;
                    return;
            }
            this.lastNeed = 0;
            this.lastTotal = 0;
            this.lastChar = Buffer.allocUnsafe(nb);
        }

        StringDecoder.prototype.write = function (buf) {
            if (buf.length === 0) return '';
            var r;
            var i;
            if (this.lastNeed) {
                r = this.fillLast(buf);
                if (r === undefined) return '';
                i = this.lastNeed;
                this.lastNeed = 0;
            } else {
                i = 0;
            }
            if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
            return r || '';
        };

        StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
        StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
        StringDecoder.prototype.fillLast = function (buf) {
            if (this.lastNeed <= buf.length) {
                buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
                return this.lastChar.toString(this.encoding, 0, this.lastTotal);
            }
            buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
            this.lastNeed -= buf.length;
        };

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
        function utf8CheckByte(byte) {
            if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
            return byte >> 6 === 0x02 ? -1 : -2;
        }

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
        function utf8CheckIncomplete(self, buf, i) {
            var j = buf.length - 1;
            if (j < i) return 0;
            var nb = utf8CheckByte(buf[j]);
            if (nb >= 0) {
                if (nb > 0) self.lastNeed = nb - 1;
                return nb;
            }
            if (--j < i || nb === -2) return 0;
            nb = utf8CheckByte(buf[j]);
            if (nb >= 0) {
                if (nb > 0) self.lastNeed = nb - 2;
                return nb;
            }
            if (--j < i || nb === -2) return 0;
            nb = utf8CheckByte(buf[j]);
            if (nb >= 0) {
                if (nb > 0) {
                    if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
                }
                return nb;
            }
            return 0;
        }

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
        function utf8CheckExtraBytes(self, buf, p) {
            if ((buf[0] & 0xC0) !== 0x80) {
                self.lastNeed = 0;
                return '\ufffd';
            }
            if (self.lastNeed > 1 && buf.length > 1) {
                if ((buf[1] & 0xC0) !== 0x80) {
                    self.lastNeed = 1;
                    return '\ufffd';
                }
                if (self.lastNeed > 2 && buf.length > 2) {
                    if ((buf[2] & 0xC0) !== 0x80) {
                        self.lastNeed = 2;
                        return '\ufffd';
                    }
                }
            }
        }

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
        function utf8FillLast(buf) {
            var p = this.lastTotal - this.lastNeed;
            var r = utf8CheckExtraBytes(this, buf, p);
            if (r !== undefined) return r;
            if (this.lastNeed <= buf.length) {
                buf.copy(this.lastChar, p, 0, this.lastNeed);
                return this.lastChar.toString(this.encoding, 0, this.lastTotal);
            }
            buf.copy(this.lastChar, p, 0, buf.length);
            this.lastNeed -= buf.length;
        }

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
        function utf8Text(buf, i) {
            var total = utf8CheckIncomplete(this, buf, i);
            if (!this.lastNeed) return buf.toString('utf8', i);
            this.lastTotal = total;
            var end = buf.length - (total - this.lastNeed);
            buf.copy(this.lastChar, 0, end);
            return buf.toString('utf8', i, end);
        }

// For UTF-8, a replacement character is added when ending on a partial
// character.
        function utf8End(buf) {
            var r = buf && buf.length ? this.write(buf) : '';
            if (this.lastNeed) return r + '\ufffd';
            return r;
        }

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
        function utf16Text(buf, i) {
            if ((buf.length - i) % 2 === 0) {
                var r = buf.toString('utf16le', i);
                if (r) {
                    var c = r.charCodeAt(r.length - 1);
                    if (c >= 0xD800 && c <= 0xDBFF) {
                        this.lastNeed = 2;
                        this.lastTotal = 4;
                        this.lastChar[0] = buf[buf.length - 2];
                        this.lastChar[1] = buf[buf.length - 1];
                        return r.slice(0, -1);
                    }
                }
                return r;
            }
            this.lastNeed = 1;
            this.lastTotal = 2;
            this.lastChar[0] = buf[buf.length - 1];
            return buf.toString('utf16le', i, buf.length - 1);
        }

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
        function utf16End(buf) {
            var r = buf && buf.length ? this.write(buf) : '';
            if (this.lastNeed) {
                var end = this.lastTotal - this.lastNeed;
                return r + this.lastChar.toString('utf16le', 0, end);
            }
            return r;
        }

        function base64Text(buf, i) {
            var n = (buf.length - i) % 3;
            if (n === 0) return buf.toString('base64', i);
            this.lastNeed = 3 - n;
            this.lastTotal = 3;
            if (n === 1) {
                this.lastChar[0] = buf[buf.length - 1];
            } else {
                this.lastChar[0] = buf[buf.length - 2];
                this.lastChar[1] = buf[buf.length - 1];
            }
            return buf.toString('base64', i, buf.length - n);
        }

        function base64End(buf) {
            var r = buf && buf.length ? this.write(buf) : '';
            if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
            return r;
        }

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
        function simpleWrite(buf) {
            return buf.toString(this.encoding);
        }

        function simpleEnd(buf) {
            return buf && buf.length ? this.write(buf) : '';
        }
    },{"safe-buffer":177}],179:[function(require,module,exports){
        module.exports = require('./readable').PassThrough

    },{"./readable":180}],180:[function(require,module,exports){
        exports = module.exports = require('./lib/_stream_readable.js');
        exports.Stream = exports;
        exports.Readable = exports;
        exports.Writable = require('./lib/_stream_writable.js');
        exports.Duplex = require('./lib/_stream_duplex.js');
        exports.Transform = require('./lib/_stream_transform.js');
        exports.PassThrough = require('./lib/_stream_passthrough.js');

    },{"./lib/_stream_duplex.js":169,"./lib/_stream_passthrough.js":170,"./lib/_stream_readable.js":171,"./lib/_stream_transform.js":172,"./lib/_stream_writable.js":173}],181:[function(require,module,exports){
        module.exports = require('./readable').Transform

    },{"./readable":180}],182:[function(require,module,exports){
        module.exports = require('./lib/_stream_writable.js');

    },{"./lib/_stream_writable.js":173}],183:[function(require,module,exports){
        'use strict'
        var Buffer = require('buffer').Buffer
        var inherits = require('inherits')
        var HashBase = require('hash-base')

        var ARRAY16 = new Array(16)

        var zl = [
            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
            7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
            3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
            1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
            4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
        ]

        var zr = [
            5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
            6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
            15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
            8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
            12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
        ]

        var sl = [
            11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
            7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
            11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
            11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
            9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
        ]

        var sr = [
            8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
            9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
            9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
            15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
            8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
        ]

        var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]
        var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]

        function RIPEMD160 () {
            HashBase.call(this, 64)

            // state
            this._a = 0x67452301
            this._b = 0xefcdab89
            this._c = 0x98badcfe
            this._d = 0x10325476
            this._e = 0xc3d2e1f0
        }

        inherits(RIPEMD160, HashBase)

        RIPEMD160.prototype._update = function () {
            var words = ARRAY16
            for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)

            var al = this._a | 0
            var bl = this._b | 0
            var cl = this._c | 0
            var dl = this._d | 0
            var el = this._e | 0

            var ar = this._a | 0
            var br = this._b | 0
            var cr = this._c | 0
            var dr = this._d | 0
            var er = this._e | 0

            // computation
            for (var i = 0; i < 80; i += 1) {
                var tl
                var tr
                if (i < 16) {
                    tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])
                    tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])
                } else if (i < 32) {
                    tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])
                    tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])
                } else if (i < 48) {
                    tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])
                    tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])
                } else if (i < 64) {
                    tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])
                    tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])
                } else { // if (i<80) {
                    tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])
                    tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])
                }

                al = el
                el = dl
                dl = rotl(cl, 10)
                cl = bl
                bl = tl

                ar = er
                er = dr
                dr = rotl(cr, 10)
                cr = br
                br = tr
            }

            // update state
            var t = (this._b + cl + dr) | 0
            this._b = (this._c + dl + er) | 0
            this._c = (this._d + el + ar) | 0
            this._d = (this._e + al + br) | 0
            this._e = (this._a + bl + cr) | 0
            this._a = t
        }

        RIPEMD160.prototype._digest = function () {
            // create padding and handle blocks
            this._block[this._blockOffset++] = 0x80
            if (this._blockOffset > 56) {
                this._block.fill(0, this._blockOffset, 64)
                this._update()
                this._blockOffset = 0
            }

            this._block.fill(0, this._blockOffset, 56)
            this._block.writeUInt32LE(this._length[0], 56)
            this._block.writeUInt32LE(this._length[1], 60)
            this._update()

            // produce result
            var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)
            buffer.writeInt32LE(this._a, 0)
            buffer.writeInt32LE(this._b, 4)
            buffer.writeInt32LE(this._c, 8)
            buffer.writeInt32LE(this._d, 12)
            buffer.writeInt32LE(this._e, 16)
            return buffer
        }

        function rotl (x, n) {
            return (x << n) | (x >>> (32 - n))
        }

        function fn1 (a, b, c, d, e, m, k, s) {
            return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
        }

        function fn2 (a, b, c, d, e, m, k, s) {
            return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
        }

        function fn3 (a, b, c, d, e, m, k, s) {
            return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
        }

        function fn4 (a, b, c, d, e, m, k, s) {
            return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
        }

        function fn5 (a, b, c, d, e, m, k, s) {
            return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
        }

        module.exports = RIPEMD160

    },{"buffer":68,"hash-base":110,"inherits":140}],184:[function(require,module,exports){
        /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
        /* eslint-disable node/no-deprecated-api */
        var buffer = require('buffer')
        var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
        function copyProps (src, dst) {
            for (var key in src) {
                dst[key] = src[key]
            }
        }
        if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
            module.exports = buffer
        } else {
            // Copy properties from require('buffer')
            copyProps(buffer, exports)
            exports.Buffer = SafeBuffer
        }

        function SafeBuffer (arg, encodingOrOffset, length) {
            return Buffer(arg, encodingOrOffset, length)
        }

        SafeBuffer.prototype = Object.create(Buffer.prototype)

// Copy static methods from Buffer
        copyProps(Buffer, SafeBuffer)

        SafeBuffer.from = function (arg, encodingOrOffset, length) {
            if (typeof arg === 'number') {
                throw new TypeError('Argument must not be a number')
            }
            return Buffer(arg, encodingOrOffset, length)
        }

        SafeBuffer.alloc = function (size, fill, encoding) {
            if (typeof size !== 'number') {
                throw new TypeError('Argument must be a number')
            }
            var buf = Buffer(size)
            if (fill !== undefined) {
                if (typeof encoding === 'string') {
                    buf.fill(fill, encoding)
                } else {
                    buf.fill(fill)
                }
            } else {
                buf.fill(0)
            }
            return buf
        }

        SafeBuffer.allocUnsafe = function (size) {
            if (typeof size !== 'number') {
                throw new TypeError('Argument must be a number')
            }
            return Buffer(size)
        }

        SafeBuffer.allocUnsafeSlow = function (size) {
            if (typeof size !== 'number') {
                throw new TypeError('Argument must be a number')
            }
            return buffer.SlowBuffer(size)
        }

    },{"buffer":68}],185:[function(require,module,exports){
        var Buffer = require('safe-buffer').Buffer

// prototype class for hash functions
        function Hash (blockSize, finalSize) {
            this._block = Buffer.alloc(blockSize)
            this._finalSize = finalSize
            this._blockSize = blockSize
            this._len = 0
        }

        Hash.prototype.update = function (data, enc) {
            if (typeof data === 'string') {
                enc = enc || 'utf8'
                data = Buffer.from(data, enc)
            }

            var block = this._block
            var blockSize = this._blockSize
            var length = data.length
            var accum = this._len

            for (var offset = 0; offset < length;) {
                var assigned = accum % blockSize
                var remainder = Math.min(length - offset, blockSize - assigned)

                for (var i = 0; i < remainder; i++) {
                    block[assigned + i] = data[offset + i]
                }

                accum += remainder
                offset += remainder

                if ((accum % blockSize) === 0) {
                    this._update(block)
                }
            }

            this._len += length
            return this
        }

        Hash.prototype.digest = function (enc) {
            var rem = this._len % this._blockSize

            this._block[rem] = 0x80

            // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
            // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
            this._block.fill(0, rem + 1)

            if (rem >= this._finalSize) {
                this._update(this._block)
                this._block.fill(0)
            }

            var bits = this._len * 8

            // uint32
            if (bits <= 0xffffffff) {
                this._block.writeUInt32BE(bits, this._blockSize - 4)

                // uint64
            } else {
                var lowBits = (bits & 0xffffffff) >>> 0
                var highBits = (bits - lowBits) / 0x100000000

                this._block.writeUInt32BE(highBits, this._blockSize - 8)
                this._block.writeUInt32BE(lowBits, this._blockSize - 4)
            }

            this._update(this._block)
            var hash = this._hash()

            return enc ? hash.toString(enc) : hash
        }

        Hash.prototype._update = function () {
            throw new Error('_update must be implemented by subclass')
        }

        module.exports = Hash

    },{"safe-buffer":184}],186:[function(require,module,exports){
        var exports = module.exports = function SHA (algorithm) {
            algorithm = algorithm.toLowerCase()

            var Algorithm = exports[algorithm]
            if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

            return new Algorithm()
        }

        exports.sha = require('./sha')
        exports.sha1 = require('./sha1')
        exports.sha224 = require('./sha224')
        exports.sha256 = require('./sha256')
        exports.sha384 = require('./sha384')
        exports.sha512 = require('./sha512')

    },{"./sha":187,"./sha1":188,"./sha224":189,"./sha256":190,"./sha384":191,"./sha512":192}],187:[function(require,module,exports){
        /*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

        var inherits = require('inherits')
        var Hash = require('./hash')
        var Buffer = require('safe-buffer').Buffer

        var K = [
            0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
        ]

        var W = new Array(80)

        function Sha () {
            this.init()
            this._w = W

            Hash.call(this, 64, 56)
        }

        inherits(Sha, Hash)

        Sha.prototype.init = function () {
            this._a = 0x67452301
            this._b = 0xefcdab89
            this._c = 0x98badcfe
            this._d = 0x10325476
            this._e = 0xc3d2e1f0

            return this
        }

        function rotl5 (num) {
            return (num << 5) | (num >>> 27)
        }

        function rotl30 (num) {
            return (num << 30) | (num >>> 2)
        }

        function ft (s, b, c, d) {
            if (s === 0) return (b & c) | ((~b) & d)
            if (s === 2) return (b & c) | (b & d) | (c & d)
            return b ^ c ^ d
        }

        Sha.prototype._update = function (M) {
            var W = this._w

            var a = this._a | 0
            var b = this._b | 0
            var c = this._c | 0
            var d = this._d | 0
            var e = this._e | 0

            for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
            for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

            for (var j = 0; j < 80; ++j) {
                var s = ~~(j / 20)
                var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

                e = d
                d = c
                c = rotl30(b)
                b = a
                a = t
            }

            this._a = (a + this._a) | 0
            this._b = (b + this._b) | 0
            this._c = (c + this._c) | 0
            this._d = (d + this._d) | 0
            this._e = (e + this._e) | 0
        }

        Sha.prototype._hash = function () {
            var H = Buffer.allocUnsafe(20)

            H.writeInt32BE(this._a | 0, 0)
            H.writeInt32BE(this._b | 0, 4)
            H.writeInt32BE(this._c | 0, 8)
            H.writeInt32BE(this._d | 0, 12)
            H.writeInt32BE(this._e | 0, 16)

            return H
        }

        module.exports = Sha

    },{"./hash":185,"inherits":140,"safe-buffer":184}],188:[function(require,module,exports){
        /*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

        var inherits = require('inherits')
        var Hash = require('./hash')
        var Buffer = require('safe-buffer').Buffer

        var K = [
            0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
        ]

        var W = new Array(80)

        function Sha1 () {
            this.init()
            this._w = W

            Hash.call(this, 64, 56)
        }

        inherits(Sha1, Hash)

        Sha1.prototype.init = function () {
            this._a = 0x67452301
            this._b = 0xefcdab89
            this._c = 0x98badcfe
            this._d = 0x10325476
            this._e = 0xc3d2e1f0

            return this
        }

        function rotl1 (num) {
            return (num << 1) | (num >>> 31)
        }

        function rotl5 (num) {
            return (num << 5) | (num >>> 27)
        }

        function rotl30 (num) {
            return (num << 30) | (num >>> 2)
        }

        function ft (s, b, c, d) {
            if (s === 0) return (b & c) | ((~b) & d)
            if (s === 2) return (b & c) | (b & d) | (c & d)
            return b ^ c ^ d
        }

        Sha1.prototype._update = function (M) {
            var W = this._w

            var a = this._a | 0
            var b = this._b | 0
            var c = this._c | 0
            var d = this._d | 0
            var e = this._e | 0

            for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
            for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

            for (var j = 0; j < 80; ++j) {
                var s = ~~(j / 20)
                var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

                e = d
                d = c
                c = rotl30(b)
                b = a
                a = t
            }

            this._a = (a + this._a) | 0
            this._b = (b + this._b) | 0
            this._c = (c + this._c) | 0
            this._d = (d + this._d) | 0
            this._e = (e + this._e) | 0
        }

        Sha1.prototype._hash = function () {
            var H = Buffer.allocUnsafe(20)

            H.writeInt32BE(this._a | 0, 0)
            H.writeInt32BE(this._b | 0, 4)
            H.writeInt32BE(this._c | 0, 8)
            H.writeInt32BE(this._d | 0, 12)
            H.writeInt32BE(this._e | 0, 16)

            return H
        }

        module.exports = Sha1

    },{"./hash":185,"inherits":140,"safe-buffer":184}],189:[function(require,module,exports){
        /**
         * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
         * in FIPS 180-2
         * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
         * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
         *
         */

        var inherits = require('inherits')
        var Sha256 = require('./sha256')
        var Hash = require('./hash')
        var Buffer = require('safe-buffer').Buffer

        var W = new Array(64)

        function Sha224 () {
            this.init()

            this._w = W // new Array(64)

            Hash.call(this, 64, 56)
        }

        inherits(Sha224, Sha256)

        Sha224.prototype.init = function () {
            this._a = 0xc1059ed8
            this._b = 0x367cd507
            this._c = 0x3070dd17
            this._d = 0xf70e5939
            this._e = 0xffc00b31
            this._f = 0x68581511
            this._g = 0x64f98fa7
            this._h = 0xbefa4fa4

            return this
        }

        Sha224.prototype._hash = function () {
            var H = Buffer.allocUnsafe(28)

            H.writeInt32BE(this._a, 0)
            H.writeInt32BE(this._b, 4)
            H.writeInt32BE(this._c, 8)
            H.writeInt32BE(this._d, 12)
            H.writeInt32BE(this._e, 16)
            H.writeInt32BE(this._f, 20)
            H.writeInt32BE(this._g, 24)

            return H
        }

        module.exports = Sha224

    },{"./hash":185,"./sha256":190,"inherits":140,"safe-buffer":184}],190:[function(require,module,exports){
        /**
         * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
         * in FIPS 180-2
         * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
         * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
         *
         */

        var inherits = require('inherits')
        var Hash = require('./hash')
        var Buffer = require('safe-buffer').Buffer

        var K = [
            0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
            0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
            0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
            0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
            0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
            0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
            0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
            0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
            0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
            0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
            0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
            0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
            0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
            0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
            0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
            0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
        ]

        var W = new Array(64)

        function Sha256 () {
            this.init()

            this._w = W // new Array(64)

            Hash.call(this, 64, 56)
        }

        inherits(Sha256, Hash)

        Sha256.prototype.init = function () {
            this._a = 0x6a09e667
            this._b = 0xbb67ae85
            this._c = 0x3c6ef372
            this._d = 0xa54ff53a
            this._e = 0x510e527f
            this._f = 0x9b05688c
            this._g = 0x1f83d9ab
            this._h = 0x5be0cd19

            return this
        }

        function ch (x, y, z) {
            return z ^ (x & (y ^ z))
        }

        function maj (x, y, z) {
            return (x & y) | (z & (x | y))
        }

        function sigma0 (x) {
            return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
        }

        function sigma1 (x) {
            return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
        }

        function gamma0 (x) {
            return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
        }

        function gamma1 (x) {
            return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
        }

        Sha256.prototype._update = function (M) {
            var W = this._w

            var a = this._a | 0
            var b = this._b | 0
            var c = this._c | 0
            var d = this._d | 0
            var e = this._e | 0
            var f = this._f | 0
            var g = this._g | 0
            var h = this._h | 0

            for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
            for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

            for (var j = 0; j < 64; ++j) {
                var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
                var T2 = (sigma0(a) + maj(a, b, c)) | 0

                h = g
                g = f
                f = e
                e = (d + T1) | 0
                d = c
                c = b
                b = a
                a = (T1 + T2) | 0
            }

            this._a = (a + this._a) | 0
            this._b = (b + this._b) | 0
            this._c = (c + this._c) | 0
            this._d = (d + this._d) | 0
            this._e = (e + this._e) | 0
            this._f = (f + this._f) | 0
            this._g = (g + this._g) | 0
            this._h = (h + this._h) | 0
        }

        Sha256.prototype._hash = function () {
            var H = Buffer.allocUnsafe(32)

            H.writeInt32BE(this._a, 0)
            H.writeInt32BE(this._b, 4)
            H.writeInt32BE(this._c, 8)
            H.writeInt32BE(this._d, 12)
            H.writeInt32BE(this._e, 16)
            H.writeInt32BE(this._f, 20)
            H.writeInt32BE(this._g, 24)
            H.writeInt32BE(this._h, 28)

            return H
        }

        module.exports = Sha256

    },{"./hash":185,"inherits":140,"safe-buffer":184}],191:[function(require,module,exports){
        var inherits = require('inherits')
        var SHA512 = require('./sha512')
        var Hash = require('./hash')
        var Buffer = require('safe-buffer').Buffer

        var W = new Array(160)

        function Sha384 () {
            this.init()
            this._w = W

            Hash.call(this, 128, 112)
        }

        inherits(Sha384, SHA512)

        Sha384.prototype.init = function () {
            this._ah = 0xcbbb9d5d
            this._bh = 0x629a292a
            this._ch = 0x9159015a
            this._dh = 0x152fecd8
            this._eh = 0x67332667
            this._fh = 0x8eb44a87
            this._gh = 0xdb0c2e0d
            this._hh = 0x47b5481d

            this._al = 0xc1059ed8
            this._bl = 0x367cd507
            this._cl = 0x3070dd17
            this._dl = 0xf70e5939
            this._el = 0xffc00b31
            this._fl = 0x68581511
            this._gl = 0x64f98fa7
            this._hl = 0xbefa4fa4

            return this
        }

        Sha384.prototype._hash = function () {
            var H = Buffer.allocUnsafe(48)

            function writeInt64BE (h, l, offset) {
                H.writeInt32BE(h, offset)
                H.writeInt32BE(l, offset + 4)
            }

            writeInt64BE(this._ah, this._al, 0)
            writeInt64BE(this._bh, this._bl, 8)
            writeInt64BE(this._ch, this._cl, 16)
            writeInt64BE(this._dh, this._dl, 24)
            writeInt64BE(this._eh, this._el, 32)
            writeInt64BE(this._fh, this._fl, 40)

            return H
        }

        module.exports = Sha384

    },{"./hash":185,"./sha512":192,"inherits":140,"safe-buffer":184}],192:[function(require,module,exports){
        var inherits = require('inherits')
        var Hash = require('./hash')
        var Buffer = require('safe-buffer').Buffer

        var K = [
            0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
            0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
            0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
            0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
            0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
            0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
            0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
            0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
            0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
            0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
            0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
            0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
            0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
            0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
            0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
            0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
            0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
            0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
            0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
            0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
            0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
            0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
            0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
            0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
            0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
            0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
            0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
            0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
            0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
            0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
            0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
            0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
            0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
            0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
            0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
            0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
            0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
            0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
            0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
            0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
        ]

        var W = new Array(160)

        function Sha512 () {
            this.init()
            this._w = W

            Hash.call(this, 128, 112)
        }

        inherits(Sha512, Hash)

        Sha512.prototype.init = function () {
            this._ah = 0x6a09e667
            this._bh = 0xbb67ae85
            this._ch = 0x3c6ef372
            this._dh = 0xa54ff53a
            this._eh = 0x510e527f
            this._fh = 0x9b05688c
            this._gh = 0x1f83d9ab
            this._hh = 0x5be0cd19

            this._al = 0xf3bcc908
            this._bl = 0x84caa73b
            this._cl = 0xfe94f82b
            this._dl = 0x5f1d36f1
            this._el = 0xade682d1
            this._fl = 0x2b3e6c1f
            this._gl = 0xfb41bd6b
            this._hl = 0x137e2179

            return this
        }

        function Ch (x, y, z) {
            return z ^ (x & (y ^ z))
        }

        function maj (x, y, z) {
            return (x & y) | (z & (x | y))
        }

        function sigma0 (x, xl) {
            return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
        }

        function sigma1 (x, xl) {
            return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
        }

        function Gamma0 (x, xl) {
            return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
        }

        function Gamma0l (x, xl) {
            return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
        }

        function Gamma1 (x, xl) {
            return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
        }

        function Gamma1l (x, xl) {
            return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
        }

        function getCarry (a, b) {
            return (a >>> 0) < (b >>> 0) ? 1 : 0
        }

        Sha512.prototype._update = function (M) {
            var W = this._w

            var ah = this._ah | 0
            var bh = this._bh | 0
            var ch = this._ch | 0
            var dh = this._dh | 0
            var eh = this._eh | 0
            var fh = this._fh | 0
            var gh = this._gh | 0
            var hh = this._hh | 0

            var al = this._al | 0
            var bl = this._bl | 0
            var cl = this._cl | 0
            var dl = this._dl | 0
            var el = this._el | 0
            var fl = this._fl | 0
            var gl = this._gl | 0
            var hl = this._hl | 0

            for (var i = 0; i < 32; i += 2) {
                W[i] = M.readInt32BE(i * 4)
                W[i + 1] = M.readInt32BE(i * 4 + 4)
            }
            for (; i < 160; i += 2) {
                var xh = W[i - 15 * 2]
                var xl = W[i - 15 * 2 + 1]
                var gamma0 = Gamma0(xh, xl)
                var gamma0l = Gamma0l(xl, xh)

                xh = W[i - 2 * 2]
                xl = W[i - 2 * 2 + 1]
                var gamma1 = Gamma1(xh, xl)
                var gamma1l = Gamma1l(xl, xh)

                // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
                var Wi7h = W[i - 7 * 2]
                var Wi7l = W[i - 7 * 2 + 1]

                var Wi16h = W[i - 16 * 2]
                var Wi16l = W[i - 16 * 2 + 1]

                var Wil = (gamma0l + Wi7l) | 0
                var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
                Wil = (Wil + gamma1l) | 0
                Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
                Wil = (Wil + Wi16l) | 0
                Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

                W[i] = Wih
                W[i + 1] = Wil
            }

            for (var j = 0; j < 160; j += 2) {
                Wih = W[j]
                Wil = W[j + 1]

                var majh = maj(ah, bh, ch)
                var majl = maj(al, bl, cl)

                var sigma0h = sigma0(ah, al)
                var sigma0l = sigma0(al, ah)
                var sigma1h = sigma1(eh, el)
                var sigma1l = sigma1(el, eh)

                // t1 = h + sigma1 + ch + K[j] + W[j]
                var Kih = K[j]
                var Kil = K[j + 1]

                var chh = Ch(eh, fh, gh)
                var chl = Ch(el, fl, gl)

                var t1l = (hl + sigma1l) | 0
                var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
                t1l = (t1l + chl) | 0
                t1h = (t1h + chh + getCarry(t1l, chl)) | 0
                t1l = (t1l + Kil) | 0
                t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
                t1l = (t1l + Wil) | 0
                t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

                // t2 = sigma0 + maj
                var t2l = (sigma0l + majl) | 0
                var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

                hh = gh
                hl = gl
                gh = fh
                gl = fl
                fh = eh
                fl = el
                el = (dl + t1l) | 0
                eh = (dh + t1h + getCarry(el, dl)) | 0
                dh = ch
                dl = cl
                ch = bh
                cl = bl
                bh = ah
                bl = al
                al = (t1l + t2l) | 0
                ah = (t1h + t2h + getCarry(al, t1l)) | 0
            }

            this._al = (this._al + al) | 0
            this._bl = (this._bl + bl) | 0
            this._cl = (this._cl + cl) | 0
            this._dl = (this._dl + dl) | 0
            this._el = (this._el + el) | 0
            this._fl = (this._fl + fl) | 0
            this._gl = (this._gl + gl) | 0
            this._hl = (this._hl + hl) | 0

            this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
            this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
            this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
            this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
            this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
            this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
            this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
            this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
        }

        Sha512.prototype._hash = function () {
            var H = Buffer.allocUnsafe(64)

            function writeInt64BE (h, l, offset) {
                H.writeInt32BE(h, offset)
                H.writeInt32BE(l, offset + 4)
            }

            writeInt64BE(this._ah, this._al, 0)
            writeInt64BE(this._bh, this._bl, 8)
            writeInt64BE(this._ch, this._cl, 16)
            writeInt64BE(this._dh, this._dl, 24)
            writeInt64BE(this._eh, this._el, 32)
            writeInt64BE(this._fh, this._fl, 40)
            writeInt64BE(this._gh, this._gl, 48)
            writeInt64BE(this._hh, this._hl, 56)

            return H
        }

        module.exports = Sha512

    },{"./hash":185,"inherits":140,"safe-buffer":184}],193:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

        module.exports = Stream;

        var EE = require('events').EventEmitter;
        var inherits = require('inherits');

        inherits(Stream, EE);
        Stream.Readable = require('readable-stream/readable.js');
        Stream.Writable = require('readable-stream/writable.js');
        Stream.Duplex = require('readable-stream/duplex.js');
        Stream.Transform = require('readable-stream/transform.js');
        Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
        Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

        function Stream() {
            EE.call(this);
        }

        Stream.prototype.pipe = function(dest, options) {
            var source = this;

            function ondata(chunk) {
                if (dest.writable) {
                    if (false === dest.write(chunk) && source.pause) {
                        source.pause();
                    }
                }
            }

            source.on('data', ondata);

            function ondrain() {
                if (source.readable && source.resume) {
                    source.resume();
                }
            }

            dest.on('drain', ondrain);

            // If the 'end' option is not supplied, dest.end() will be called when
            // source gets the 'end' or 'close' events.  Only dest.end() once.
            if (!dest._isStdio && (!options || options.end !== false)) {
                source.on('end', onend);
                source.on('close', onclose);
            }

            var didOnEnd = false;
            function onend() {
                if (didOnEnd) return;
                didOnEnd = true;

                dest.end();
            }


            function onclose() {
                if (didOnEnd) return;
                didOnEnd = true;

                if (typeof dest.destroy === 'function') dest.destroy();
            }

            // don't leave dangling pipes when there are errors.
            function onerror(er) {
                cleanup();
                if (EE.listenerCount(this, 'error') === 0) {
                    throw er; // Unhandled stream error in pipe.
                }
            }

            source.on('error', onerror);
            dest.on('error', onerror);

            // remove all the event listeners that were added.
            function cleanup() {
                source.removeListener('data', ondata);
                dest.removeListener('drain', ondrain);

                source.removeListener('end', onend);
                source.removeListener('close', onclose);

                source.removeListener('error', onerror);
                dest.removeListener('error', onerror);

                source.removeListener('end', cleanup);
                source.removeListener('close', cleanup);

                dest.removeListener('close', cleanup);
            }

            source.on('end', cleanup);
            source.on('close', cleanup);

            dest.on('close', cleanup);

            dest.emit('pipe', source);

            // Allow for unix-like usage: A.pipe(B).pipe(C)
            return dest;
        };

    },{"events":108,"inherits":140,"readable-stream/duplex.js":168,"readable-stream/passthrough.js":179,"readable-stream/readable.js":180,"readable-stream/transform.js":181,"readable-stream/writable.js":182}],194:[function(require,module,exports){
        arguments[4][178][0].apply(exports,arguments)
    },{"dup":178,"safe-buffer":184}],195:[function(require,module,exports){
        (function (setImmediate,clearImmediate){
            var nextTick = require('process/browser.js').nextTick;
            var apply = Function.prototype.apply;
            var slice = Array.prototype.slice;
            var immediateIds = {};
            var nextImmediateId = 0;

// DOM APIs, for completeness

            exports.setTimeout = function() {
                return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
            };
            exports.setInterval = function() {
                return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
            };
            exports.clearTimeout =
                exports.clearInterval = function(timeout) { timeout.close(); };

            function Timeout(id, clearFn) {
                this._id = id;
                this._clearFn = clearFn;
            }
            Timeout.prototype.unref = Timeout.prototype.ref = function() {};
            Timeout.prototype.close = function() {
                this._clearFn.call(window, this._id);
            };

// Does not start the time, just sets up the members needed.
            exports.enroll = function(item, msecs) {
                clearTimeout(item._idleTimeoutId);
                item._idleTimeout = msecs;
            };

            exports.unenroll = function(item) {
                clearTimeout(item._idleTimeoutId);
                item._idleTimeout = -1;
            };

            exports._unrefActive = exports.active = function(item) {
                clearTimeout(item._idleTimeoutId);

                var msecs = item._idleTimeout;
                if (msecs >= 0) {
                    item._idleTimeoutId = setTimeout(function onTimeout() {
                        if (item._onTimeout)
                            item._onTimeout();
                    }, msecs);
                }
            };

// That's not how node.js implements it but the exposed api is the same.
            exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
                var id = nextImmediateId++;
                var args = arguments.length < 2 ? false : slice.call(arguments, 1);

                immediateIds[id] = true;

                nextTick(function onNextTick() {
                    if (immediateIds[id]) {
                        // fn.call() is faster so we optimize for the common use-case
                        // @see http://jsperf.com/call-apply-segu
                        if (args) {
                            fn.apply(null, args);
                        } else {
                            fn.call(null);
                        }
                        // Prevent ids from leaking
                        exports.clearImmediate(id);
                    }
                });

                return id;
            };

            exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
                delete immediateIds[id];
            };
        }).call(this,require("timers").setImmediate,require("timers").clearImmediate)
    },{"process/browser.js":159,"timers":195}],196:[function(require,module,exports){
        (function (global){

            /**
             * Module exports.
             */

            module.exports = deprecate;

            /**
             * Mark that a method should not be used.
             * Returns a modified function which warns once by default.
             *
             * If `localStorage.noDeprecation = true` is set, then it is a no-op.
             *
             * If `localStorage.throwDeprecation = true` is set, then deprecated functions
             * will throw an Error when invoked.
             *
             * If `localStorage.traceDeprecation = true` is set, then deprecated functions
             * will invoke `console.trace()` instead of `console.error()`.
             *
             * @param {Function} fn - the function to deprecate
             * @param {String} msg - the string to print to the console when `fn` is invoked
             * @returns {Function} a new "deprecated" version of `fn`
             * @api public
             */

            function deprecate (fn, msg) {
                if (config('noDeprecation')) {
                    return fn;
                }

                var warned = false;
                function deprecated() {
                    if (!warned) {
                        if (config('throwDeprecation')) {
                            throw new Error(msg);
                        } else if (config('traceDeprecation')) {
                            console.trace(msg);
                        } else {
                            console.warn(msg);
                        }
                        warned = true;
                    }
                    return fn.apply(this, arguments);
                }

                return deprecated;
            }

            /**
             * Checks `localStorage` for boolean values for the given `name`.
             *
             * @param {String} name
             * @returns {Boolean}
             * @api private
             */

            function config (name) {
                // accessing global.localStorage can trigger a DOMException in sandboxed iframes
                try {
                    if (!global.localStorage) return false;
                } catch (_) {
                    return false;
                }
                var val = global.localStorage[name];
                if (null == val) return false;
                return String(val).toLowerCase() === 'true';
            }

        }).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
    },{}],197:[function(require,module,exports){
        var indexOf = function (xs, item) {
            if (xs.indexOf) return xs.indexOf(item);
            else for (var i = 0; i < xs.length; i++) {
                if (xs[i] === item) return i;
            }
            return -1;
        };
        var Object_keys = function (obj) {
            if (Object.keys) return Object.keys(obj)
            else {
                var res = [];
                for (var key in obj) res.push(key)
                return res;
            }
        };

        var forEach = function (xs, fn) {
            if (xs.forEach) return xs.forEach(fn)
            else for (var i = 0; i < xs.length; i++) {
                fn(xs[i], i, xs);
            }
        };

        var defineProp = (function() {
            try {
                Object.defineProperty({}, '_', {});
                return function(obj, name, value) {
                    Object.defineProperty(obj, name, {
                        writable: true,
                        enumerable: false,
                        configurable: true,
                        value: value
                    })
                };
            } catch(e) {
                return function(obj, name, value) {
                    obj[name] = value;
                };
            }
        }());

        var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',
            'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',
            'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',
            'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',
            'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

        function Context() {}
        Context.prototype = {};

        var Script = exports.Script = function NodeScript (code) {
            if (!(this instanceof Script)) return new Script(code);
            this.code = code;
        };

        Script.prototype.runInContext = function (context) {
            if (!(context instanceof Context)) {
                throw new TypeError("needs a 'context' argument.");
            }

            var iframe = document.createElement('iframe');
            if (!iframe.style) iframe.style = {};
            iframe.style.display = 'none';

            document.body.appendChild(iframe);

            var win = iframe.contentWindow;
            var wEval = win.eval, wExecScript = win.execScript;

            if (!wEval && wExecScript) {
                // win.eval() magically appears when this is called in IE:
                wExecScript.call(win, 'null');
                wEval = win.eval;
            }

            forEach(Object_keys(context), function (key) {
                win[key] = context[key];
            });
            forEach(globals, function (key) {
                if (context[key]) {
                    win[key] = context[key];
                }
            });

            var winKeys = Object_keys(win);

            var res = wEval.call(win, this.code);

            forEach(Object_keys(win), function (key) {
                // Avoid copying circular objects like `top` and `window` by only
                // updating existing context properties or new properties in the `win`
                // that was only introduced after the eval.
                if (key in context || indexOf(winKeys, key) === -1) {
                    context[key] = win[key];
                }
            });

            forEach(globals, function (key) {
                if (!(key in context)) {
                    defineProp(context, key, win[key]);
                }
            });

            document.body.removeChild(iframe);

            return res;
        };

        Script.prototype.runInThisContext = function () {
            return eval(this.code); // maybe...
        };

        Script.prototype.runInNewContext = function (context) {
            var ctx = Script.createContext(context);
            var res = this.runInContext(ctx);

            if (context) {
                forEach(Object_keys(ctx), function (key) {
                    context[key] = ctx[key];
                });
            }

            return res;
        };

        forEach(Object_keys(Script.prototype), function (name) {
            exports[name] = Script[name] = function (code) {
                var s = Script(code);
                return s[name].apply(s, [].slice.call(arguments, 1));
            };
        });

        exports.isContext = function (context) {
            return context instanceof Context;
        };

        exports.createScript = function (code) {
            return exports.Script(code);
        };

        exports.createContext = Script.createContext = function (context) {
            var copy = new Context();
            if(typeof context === 'object') {
                forEach(Object_keys(context), function (key) {
                    copy[key] = context[key];
                });
            }
            return copy;
        };

    },{}],198:[function(require,module,exports){
        const AgoraRTC = require("agora-rtc-sdk-ng");
        const {getAgoraToken} = require("../functions/get-token/get-agora-token");



        const params = new URLSearchParams(window.location.search);
// Generate temp tokens matching channel in the agora console
        const channel = "default";
        const start = async () => {
            const token = await getAgoraToken(channel, "264801");
            console.log("muly:testCreateToken", {token});
            console.log("muly:testCreateToken", {token});
            console.log("muly:testCreateToken", {token});

            // rtc object
            const rtc = {
                client: null,
                joined: false,
                published: false,
                localStream: null,
                remoteStreams: [],
                params: {
                    audio: false,
                    video: false,
                    screen: true
                },
            };

            let localStreams = []

            // Options for joining a channel
            const options = {
                appID: "b798315d974c40e380ae6b8550f40e08",
                channel,
                uid: null,
                // Tokens
                token,
            };

            console.log(`AgoraRTC.createClient  ${channel} ${token}`);

            // Create a client
            rtc.client = AgoraRTC.createClient({mode: "rtc", codec: "vp8"});

            // Create a Screen share Client
            var screenClient = AgoraRTC.createClient({mode: "rtc", codec: "vp8"});


            rtc.client.on("user-published", async (remoteUser, mediaType) => {
                const answer = await rtc.client.subscribe(remoteUser, mediaType);
                if (mediaType === "video") {
                    const id = remoteUser.uid;

                    if (localStreams.includes(id)) return true

                    console.log(`muly:subscribe video success ${id}`, {
                        remoteUser,
                        mediaType,
                        answer,
                    });
                    // Add a view for the remote stream.
                    addView(id);
                    // Play the remote stream.
                    remoteUser.videoTrack.play("remote-" + id);

                    console.log("stream-subscribed remote-uid: ", id);
                }
                if (mediaType === "audio") {
                    console.log("subscribe audio success");
                    remoteUser.audioTrack.play();
                }
            });

            // Does not work? Maybe because remote leaves hard.
            rtc.client.on("user-unpublished", function (user, _mediaType) {
                const id = user.uid;
                console.log(`muly:user-unpublished ${uid}`);
                // Stop playing the remote stream.
                removeView(id);
                console.log("stream-removed remote-uid: ", id);
            });

            // Initialize the client
            const uid = await rtc.client.join(
                options.appID,
                options.channel,
                options.token,
                null
            );
            console.log("join channel: " + options.channel + " success, uid: " + uid);
            rtc.params.uid = uid;

            const uid1 = await screenClient.join(
                options.appID,
                options.channel,
                options.token,
                null
            );


            localStreams.push(uid1)

            const localAudio = await AgoraRTC.createMicrophoneAudioTrack();
            const localVideo = await AgoraRTC.createCameraVideoTrack();
            console.log("create local audio/video track success");

            localVideo.play("localVideoContainer");

            // await rtc.client.setClientRole("host");
            await rtc.client.publish([localAudio, localVideo]);
            console.log("publish success");

            // Trigger Screen Share Popup
            document.getElementById('screenshareButton').addEventListener('click', async () => {
                const screenVideo = await AgoraRTC.createScreenVideoTrack({
                    encoderConfig: "1080p_1",
                }).then(async localScreenTrack => {
                    localScreenTrack.play('localScreenContainer')
                    await screenClient.publish(localScreenTrack);
                });
            })


            // We use the default dual stream settings
            // https://docs.agora.io/en/Video/API%20Reference/web/interfaces/agorartc.client.html#setlowstreamparameter
            await rtc.client.enableDualStream();
            await screenClient.enableDualStream();
            console.log("enabled dual stream");

            function addView(id) {
                const container = document.createElement("div");
                container.id = "remote-" + id;
                container.className = "video-view";
                document.getElementById("remotes").appendChild(container);

                const placeholder = document.createElement("div");
                placeholder.id = "placeholder-" + id;
                placeholder.className = "video-view";
                container.appendChild(placeholder);

                const profile = document.createElement("div");
                profile.id = "profile-" + id;
                profile.className = "video-profile";
                container.appendChild(profile);

                const autoplay = document.createElement("div");
                autoplay.id = "autoplay-" + id;
                autoplay.classList.add("autoplay-fallback");
                autoplay.classList.add("hide");
                container.appendChild(autoplay);
            }

            function removeView(id) {
                document.getElementById("remote-" + id).remove();
            }

            async function leave() {
                // Leave the channel
                await rtc.client.leave();
                // Leave the channel
                await screenClient.leave();
                /*
          function () {
            // Stop playing the local stream
            rtc.localStream.stop();
            // Close the local stream
            rtc.localStream.close();
            // Stop playing the remote streams and remove the views
            while (rtc.remoteStreams.length > 0) {
              var stream = rtc.remoteStreams.shift();
              var id = stream.getId();
              stream.stop();
              //removeView(id);
            }
            console.log("client leaves channel success");
          },
          function (err) {
            console.log("channel leave failed");
            console.error(err);
          }
        );
         */
            }

            window.addEventListener("beforeunload", () => {
                leave().catch(console);
            });
        };

        start().catch(console.error);


    },{"../functions/get-token/get-agora-token":1,"agora-rtc-sdk-ng":6}]},{},[198]);
